digraph {
21 [style = filled, label = "props.put(ConnectorConfig.NAME_CONFIG,CONNECTOR_ID)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "worker = new Worker(WORKER_ID,new MockTime(),plugins,config,offsetBackingStore)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "connector.stop()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "worker.startConnector(CONNECTOR_ID,props,ctx,connectorStatusListener,TargetState.STARTED)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "expectedTaskProps.put(\"foo\",\"bar\")@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "List<Map<String,String>> taskConfigs = worker.connectorTaskConfigs(CONNECTOR_ID,2,Arrays.asList(\"foo\",\"bar\"))@@@47@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Map<String,String> taskProps = new HashMap<>()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "expectedTaskProps.put(\"foo\",\"bar\")@@@49@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "Connector connector = PowerMock.createMock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertStatistics(worker,0,0)@@@65@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "EasyMock.expect(connector.taskClass()).andReturn()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "List<Map<String,String>> taskConfigs = worker.connectorTaskConfigs(CONNECTOR_ID,connConfig)@@@50@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "props.put(ConnectorConfig.TASKS_MAX_CONFIG,\"1\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "ConnectorConfig connConfig = new SinkConnectorConfig(plugins,connProps)@@@49@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "EasyMock.expect(plugins.newConnector(.getName())).andReturn(connector)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "EasyMock.expect(plugins.compareAndSwapLoaders(connector)).andReturn(delegatingLoader).times(3)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(delegatingLoader)).andReturn(pluginLoader).times(3)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "{}@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertStatistics(worker,0,0)@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(delegatingLoader)).andReturn(pluginLoader).times(2)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(Collections.emptySet(),worker.connectorNames())@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertStatistics(worker,1,0)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "EasyMock.expectLastCall()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "EasyMock.expectLastCall()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "connector.initialize(EasyMock.anyObject())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expectConverters()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Map<String,String> expectedTaskProps = new HashMap<>()@@@48@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "PowerMock.replayAll()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "taskProps.put(\"foo\",\"bar\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "testReconfigureConnectorTasks['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "expectedTaskProps.put(TaskConfig.TASK_CLASS_CONFIG,.getName())@@@50@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "EasyMock.expect(plugins.currentThreadLoader()).andReturn(delegatingLoader).times(2)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "EasyMock.expect(plugins.compareAndSwapLoaders(connector)).andReturn(delegatingLoader).times(2)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "PowerMock.verifyAll()@@@45@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "worker.stop()@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "props.put(SinkConnectorConfig.TOPICS_CONFIG,\"foo,bar\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "EasyMock.expect(plugins.newConnector(\"WorkerTestConnector\")).andReturn(connector)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "EasyMock.expect(connector.version()).andReturn(\"1.0\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "worker.stopConnector(CONNECTOR_ID)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "EasyMock.expectLastCall()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "fail(\"Should have thrown exception when trying to add connector with same name.\")@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "EasyMock.expectLastCall()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "EasyMock.expect(connector.version()).andReturn(\"1.0\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "connProps.put(ConnectorConfig.TASKS_MAX_CONFIG,\"2\")@@@48@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertStartupStatistics(worker,1,0,0,0)@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ConnectException e@@@45@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertStatistics(worker,1,0)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(CONNECTOR_ID)),worker.connectorNames())@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(Collections.emptySet(),worker.connectorNames())@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assertStartupStatistics(worker,1,0,0,0)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "worker.start()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "worker.startConnector(CONNECTOR_ID,props,ctx,connectorStatusListener,TargetState.STARTED)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "testAddConnectorByAlias['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Map<String,String> props = new HashMap<>()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "EasyMock.expect(connector.taskConfigs(2)).andReturn(Arrays.asList(taskProps,taskProps))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertStartupStatistics(worker,1,0,0,0)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "connectorStatusListener.onStartup(CONNECTOR_ID)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "props.put(ConnectorConfig.CONNECTOR_CLASS_CONFIG,.getName())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertStatistics(worker,0,0)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testReconfigureConnectorTasks['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "expectedTaskProps.put(SinkTask.TOPICS_CONFIG,\"foo,bar\")@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "expectStartStorage()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "expectedTaskProps.put(TaskConfig.TASK_CLASS_CONFIG,.getName())@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "EasyMock.expect(plugins.currentThreadLoader()).andReturn(delegatingLoader).times(3)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "expectStopStorage()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Map<String,String> expectedTaskProps = new HashMap<>()@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertStatistics(worker,0,0)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "ConnectException e@@@45@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
63 [style = filled, label = "worker.stop()@@@64@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
67 [style = filled, label = "Map<String,String> connProps = new HashMap<>(props)@@@47@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
73 [style = filled, label = "props.put(ConnectorConfig.CONNECTOR_CLASS_CONFIG,\"WorkerTestConnector\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "connector.start(props)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "connectorStatusListener.onShutdown(CONNECTOR_ID)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "PowerMock.verifyAll()@@@66@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "ConnectorContext ctx = PowerMock.createMock()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "EasyMock.expectLastCall()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->25 [style = bold, label=""];
60->64 [style = bold, label=""];
11->46 [style = bold, label=""];
36->72 [style = bold, label=""];
24->51 [style = bold, label=""];
40->74 [style = bold, label=""];
4->70 [style = solid, label="worker"];
57->35 [style = bold, label=""];
17->70 [style = bold, label=""];
13->6 [style = bold, label=""];
4->17 [style = solid, label="worker"];
62->66 [style = bold, label=""];
21->73 [style = bold, label=""];
27->53 [style = bold, label=""];
6->19 [style = bold, label=""];
74->22 [style = bold, label=""];
2->17 [style = bold, label=""];
53->33 [style = bold, label=""];
4->43 [style = solid, label="worker"];
1->67 [style = bold, label=""];
46->67 [style = bold, label=""];
56->42 [style = bold, label=""];
18->67 [style = solid, label="props"];
46->38 [style = bold, label=""];
51->12 [style = bold, label=""];
33->23 [style = bold, label=""];
35->9 [style = solid, label="ctx"];
30->4 [style = bold, label=""];
71->69 [style = bold, label=""];
52->43 [style = bold, label=""];
18->45 [style = solid, label="props"];
49->2 [style = bold, label=""];
29->63 [style = bold, label=""];
21->44 [style = bold, label=""];
4->60 [style = solid, label="worker"];
54->74 [style = dashed, label="0"];
35->48 [style = bold, label=""];
66->68 [style = solid, label="connConfig"];
26->21 [style = bold, label=""];
35->50 [style = solid, label="ctx"];
65->5 [style = bold, label=""];
39->69 [style = dashed, label="0"];
75->5 [style = bold, label=""];
39->16 [style = bold, label=""];
47->7 [style = bold, label=""];
3->30 [style = bold, label=""];
44->73 [style = dashed, label="0"];
38->24 [style = bold, label=""];
58->26 [style = bold, label=""];
37->5 [style = bold, label=""];
50->1 [style = bold, label=""];
4->10 [style = solid, label="worker"];
69->16 [style = bold, label=""];
67->66 [style = solid, label="connProps"];
8->49 [style = bold, label=""];
24->59 [style = solid, label="expectedTaskProps"];
41->14 [style = bold, label=""];
67->62 [style = bold, label=""];
9->10 [style = bold, label=""];
44->40 [style = bold, label=""];
70->29 [style = bold, label=""];
42->28 [style = bold, label=""];
28->52 [style = bold, label=""];
54->22 [style = bold, label=""];
18->50 [style = solid, label="props"];
25->28 [style = solid, label="expectedTaskProps"];
72->34 [style = bold, label=""];
15->45 [style = bold, label=""];
32->42 [style = bold, label=""];
7->3 [style = bold, label=""];
9->56 [style = bold, label=""];
19->47 [style = bold, label=""];
57->39 [style = solid, label="connector"];
23->13 [style = bold, label=""];
25->52 [style = solid, label="expectedTaskProps"];
4->2 [style = solid, label="worker"];
36->0 [style = bold, label=""];
25->31 [style = bold, label=""];
27->6 [style = bold, label=""];
20->9 [style = bold, label=""];
66->68 [style = bold, label=""];
43->8 [style = bold, label=""];
17->29 [style = bold, label=""];
4->42 [style = solid, label="worker"];
56->50 [style = bold, label=""];
40->54 [style = bold, label=""];
4->8 [style = solid, label="worker"];
73->40 [style = bold, label=""];
16->18 [style = bold, label=""];
4->28 [style = solid, label="worker"];
31->59 [style = bold, label=""];
48->39 [style = bold, label=""];
22->15 [style = bold, label=""];
18->9 [style = solid, label="props"];
24->32 [style = solid, label="expectedTaskProps"];
57->69 [style = solid, label="connector"];
55->57 [style = bold, label=""];
45->36 [style = bold, label=""];
4->41 [style = bold, label=""];
61->46 [style = bold, label=""];
0->72 [style = dashed, label="0"];
4->14 [style = solid, label="worker"];
35->71 [style = bold, label=""];
10->56 [style = bold, label=""];
1->38 [style = bold, label=""];
33->13 [style = solid, label="taskProps"];
5->55 [style = bold, label=""];
48->71 [style = dashed, label="0"];
0->34 [style = bold, label=""];
59->32 [style = bold, label=""];
18->58 [style = bold, label=""];
63->60 [style = bold, label=""];
14->20 [style = bold, label=""];
68->25 [style = bold, label=""];
34->27 [style = bold, label=""];
}
