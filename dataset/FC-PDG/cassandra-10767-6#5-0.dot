digraph {
12 [style = filled, label = "assertEquals(stats.transKeys,0)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertOnDiskState(store,10)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ColumnFamilyStore store = prepareColumnFamilyStore()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(stats.unrepairedKeys,60)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Keyspace keyspace = Keyspace.open(KEYSPACE1)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "antiCompactTenFull['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "table < 10@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(stats.transKeys,4)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "generateSStable(store,Integer.toString(table))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(stats.unrepairedKeys,6)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "SSTableStats stats = antiCompactRanges(store,atEndpoint(NO_RANGES,range(0,4)))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "table++@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "antiCompactTenFull['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "assertEquals(stats.pendingKeys,0)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(2,stats.numLiveSSTables)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "antiCompactOneTransOnly['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(stats.pendingKeys,40)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ColumnFamilyStore store = keyspace.getColumnFamilyStore(CF)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(10,stats.numLiveSSTables)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertOnDiskState(store,2)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "int table = 0@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "SSTableStats stats = antiCompactRanges(store,atEndpoint(range(0,4),NO_RANGES))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "store.disableAutoCompaction()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->11 [style = bold, label=""];
10->3 [style = dotted, label="true"];
8->12 [style = bold, label=""];
0->3 [style = solid, label="table"];
17->19 [style = bold, label=""];
21->16 [style = bold, label=""];
6->0 [style = bold, label=""];
14->9 [style = bold, label=""];
4->3 [style = solid, label="table"];
22->15 [style = bold, label=""];
11->6 [style = bold, label=""];
5->9 [style = bold, label=""];
7->2 [style = bold, label=""];
10->3 [style = bold, label=""];
2->8 [style = bold, label=""];
12->13 [style = bold, label=""];
0->10 [style = bold, label=""];
11->3 [style = solid, label="store"];
15->17 [style = solid, label="store"];
10->7 [style = bold, label=""];
11->1 [style = solid, label="store"];
10->4 [style = dotted, label="true"];
11->7 [style = solid, label="store"];
18->21 [style = bold, label=""];
4->10 [style = bold, label=""];
13->1 [style = bold, label=""];
16->20 [style = bold, label=""];
0->4 [style = solid, label="table"];
4->10 [style = solid, label="table"];
0->10 [style = solid, label="table"];
19->18 [style = bold, label=""];
3->4 [style = bold, label=""];
15->20 [style = solid, label="store"];
15->17 [style = bold, label=""];
}
