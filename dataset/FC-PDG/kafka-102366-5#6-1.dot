digraph {
14 [style = filled, label = "final String descriptionOfRate@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final String descriptionOfCount = \"The total number of skipped idempotent updates\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "shouldGetIdempotentUpdateSkipSensor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final String descriptionOfRate = \"The average number of skipped idempotent updates per second\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "StreamsMetricsImpl.addInvocationRateAndCountToSensor(expectedSensor,PROCESSOR_NODE_LEVEL_GROUP,tagMap,metricNamePrefix,descriptionOfRate,descriptionOfCount)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "expect(streamsMetrics.nodeLevelSensor(THREAD_ID,TASK_ID,PROCESSOR_NODE_ID,metricNamePrefix,recordingLevel,parentSensors)).andReturn(expectedSensor)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final Sensor parentSensors@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "expect(streamsMetrics.nodeLevelTagMap(THREAD_ID,TASK_ID,PROCESSOR_NODE_ID)).andReturn(tagMap)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "when(streamsMetrics.nodeLevelSensor(THREAD_ID,TASK_ID,PROCESSOR_NODE_ID,metricNamePrefix,RecordingLevel.DEBUG)).thenReturn(expectedSensor)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "when(streamsMetrics.nodeLevelTagMap(THREAD_ID,TASK_ID,PROCESSOR_NODE_ID)).thenReturn(tagMap)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "final RecordingLevel recordingLevel@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "expect(streamsMetrics.nodeLevelSensor(THREAD_ID,TASK_ID,PROCESSOR_NODE_ID,metricNamePrefix,RecordingLevel.DEBUG)).andReturn(expectedSensor)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "shouldGetIdempotentUpdateSkipSensor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "expect(streamsMetrics.nodeLevelTagMap(THREAD_ID,TASK_ID,PROCESSOR_NODE_ID)).andReturn(tagMap)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "verifySensor(null)@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final String descriptionOfCount@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "setUpThroughputSensor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final String metricNamePrefix = \"idempotent-update-skip\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "StreamsMetricsImpl.addInvocationRateAndCountToSensor(expectedSensor,PROCESSOR_NODE_LEVEL_GROUP,tagMap,metricNamePrefix,descriptionOfRate,descriptionOfCount)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final String metricNamePrefix@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
13->16 [style = dotted, label="true"];
13->17 [style = dotted, label="true"];
5->12 [style = dashed, label="0"];
0->6 [style = bold, label=""];
5->1 [style = solid, label="metricNamePrefix"];
12->11 [style = bold, label=""];
13->19 [style = dotted, label="true"];
7->0 [style = bold, label=""];
9->10 [style = bold, label=""];
11->18 [style = bold, label=""];
6->10 [style = dashed, label="0"];
7->9 [style = bold, label=""];
6->1 [style = bold, label=""];
7->1 [style = solid, label="descriptionOfRate"];
13->12 [style = bold, label=""];
8->5 [style = bold, label=""];
3->1 [style = solid, label="descriptionOfCount"];
3->7 [style = bold, label=""];
16->18 [style = solid, label="metricNamePrefix"];
13->15 [style = dotted, label="true"];
1->2 [style = bold, label=""];
0->9 [style = dashed, label="0"];
14->18 [style = solid, label="descriptionOfRate"];
10->1 [style = bold, label=""];
13->14 [style = dotted, label="true"];
17->18 [style = solid, label="descriptionOfCount"];
4->5 [style = bold, label=""];
}
