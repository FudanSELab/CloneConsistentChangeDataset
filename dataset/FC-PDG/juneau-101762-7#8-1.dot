digraph {
2 [style = filled, label = "x12.assertString().is(\"foo\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "HttpResource x1 = stringResource(\"foo\").build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "client().build().post(\"/\",x2).run().assertHeader(\"X-Content-Length\").asInteger().is(3).assertHeader(\"X-Content-Encoding\").is(\"identity\").assertHeader(\"X-Content-Type\").is(\"text/plain\").assertHeader(\"X-Transfer-Encoding\").doesNotExist()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "client().build().post(\"/\",x1).run().assertHeader(\"X-Content-Length\").asInteger().is(3).assertHeader(\"X-Content-Encoding\").isNull().assertHeader(\"X-Content-Type\").isNull().assertHeader(\"X-Transfer-Encoding\").isNull()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "HttpResource x5 = stringResource(\"foo\").header(\"Foo\",\"bar\").header(header(\"Baz\",\"qux\")).build()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "client().build().post(\"/\",x3).run().assertHeader(\"X-Content-Length\").isNull().assertHeader(\"X-Content-Encoding\").is(\"identity\").assertHeader(\"X-Content-Type\").is(\"text/plain\").assertHeader(\"X-Transfer-Encoding\").is(\"chunked\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "client().build().post(\"/\",x3).run().assertHeader(\"X-Content-Length\").doesNotExist().assertHeader(\"X-Content-Encoding\").is(\"identity\").assertHeader(\"X-Content-Type\").is(\"text/plain\").assertHeader(\"X-Transfer-Encoding\").is(\"chunked\")@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "client().build().post(\"/\",x1).run().assertHeader(\"X-Content-Length\").asInteger().is(3).assertHeader(\"X-Content-Encoding\").doesNotExist().assertHeader(\"X-Content-Type\").doesNotExist().assertHeader(\"X-Transfer-Encoding\").doesNotExist()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "HttpEntity x2 = stringEntity(\"foo\").contentType(\"text/plain\").contentEncoding(\"identity\").build()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "client().build().post(\"/\",x9).run().assertBody().isEmpty()@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "a01_BasicHttpResource['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "client().build().post(\"/\",x4).run().assertHeader(\"X-Content-Length\").asInteger().is(3).assertHeader(\"X-Content-Encoding\").is(\"identity\").assertHeader(\"X-Content-Type\").is(\"text/plain\").assertHeader(\"X-Transfer-Encoding\").doesNotExist()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "HttpEntity x9 = readerEntity(null).build()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "client().build().post(\"/\",x4).run().assertHeader(\"X-Content-Length\").asInteger().is(3).assertHeader(\"X-Content-Encoding\").is(\"identity\").assertHeader(\"X-Content-Type\").is(\"text/plain\").assertHeader(\"X-Transfer-Encoding\").isNull()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "HttpResource x6 = stringResource(\"foo\").headers(Arrays.asList(header(\"Foo\",\"bar\"),header(\"Baz\",\"qux\"))).build()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "client().build().post(\"/\",x6).run().assertHeader(\"X-Foo\").is(\"bar\").assertHeader(\"X-Baz\").is(\"qux\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "BasicHttpEntity x12 = stringEntity(\"foo\").build()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "HttpResource x4 = stringResource(\"foo\",contentType(\"text/plain\")).contentEncoding(\"identity\").build()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "HttpResource x9 = readerResource(null).build()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "a02_StringEntity['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "HttpEntity x7 = readerEntity(new StringReader(\"foo\")).build()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "HttpResource x2 = stringResource(\"foo\").contentType(\"text/plain\").contentEncoding(\"identity\").build()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "client().build().post(\"/\",x5).run().assertHeader(\"X-Foo\").is(\"bar\").assertHeader(\"X-Baz\").is(\"qux\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "x12.assertBytes().asString().is(\"foo\")@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "HttpEntity x4 = stringEntity(\"foo\",contentType(\"text/plain\")).contentEncoding(\"identity\").build()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "a01_BasicHttpResource['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "client().build().post(\"/\",x8).run().assertBody().is(\"foo\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "HttpEntity x3 = stringEntity(\"foo\").contentType(contentType(\"text/plain\")).contentEncoding(contentEncoding(\"identity\")).chunked().build()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "client().build().post(\"/\",x7).run().assertBody().is(\"foo\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "HttpEntity x1 = stringEntity(\"foo\").build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "client().build().post(\"/\",x2).run().assertHeader(\"X-Content-Length\").asInteger().is(3).assertHeader(\"X-Content-Encoding\").is(\"identity\").assertHeader(\"X-Content-Type\").is(\"text/plain\").assertHeader(\"X-Transfer-Encoding\").isNull()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "client().build().post(\"/\",x8).run().assertBody().is(\"foo\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "client().build().post(\"/\",x9).run().assertBody().isEmpty()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "HttpResource x8 = readerResource(new StringReader(\"foo\")).cached().build()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "HttpResource x3 = stringResource(\"foo\").contentType(contentType(\"text/plain\")).contentEncoding(contentEncoding(\"identity\")).chunked().build()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "HttpEntity x8 = readerEntity(new StringReader(\"foo\")).cached().build()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "HttpResource x7 = readerResource(new StringReader(\"foo\")).build()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->22 [style = bold, label=""];
16->0 [style = bold, label=""];
27->32 [style = bold, label=""];
10->21 [style = dashed, label="0"];
30->13 [style = bold, label=""];
28->10 [style = bold, label=""];
0->19 [style = bold, label=""];
19->31 [style = bold, label=""];
24->0 [style = bold, label=""];
6->21 [style = bold, label=""];
32->12 [style = bold, label=""];
16->24 [style = dashed, label="0"];
1->34 [style = dashed, label="0"];
11->4 [style = bold, label=""];
8->3 [style = bold, label=""];
12->17 [style = bold, label=""];
5->15 [style = bold, label=""];
8->12 [style = dashed, label="0"];
16->25 [style = bold, label=""];
4->18 [style = bold, label=""];
12->30 [style = bold, label=""];
20->1 [style = bold, label=""];
9->7 [style = bold, label=""];
36->33 [style = bold, label=""];
31->7 [style = bold, label=""];
14->1 [style = bold, label=""];
10->36 [style = bold, label=""];
33->26 [style = bold, label=""];
6->28 [style = dashed, label="0"];
26->27 [style = bold, label=""];
0->23 [style = bold, label=""];
19->23 [style = dashed, label="0"];
7->28 [style = bold, label=""];
0->25 [style = dashed, label="0"];
19->9 [style = bold, label=""];
21->11 [style = bold, label=""];
9->31 [style = dashed, label="0"];
1->16 [style = bold, label=""];
1->24 [style = bold, label=""];
18->5 [style = bold, label=""];
6->10 [style = bold, label=""];
34->16 [style = bold, label=""];
7->6 [style = bold, label=""];
25->19 [style = bold, label=""];
17->26 [style = dashed, label="0"];
15->12 [style = bold, label=""];
17->13 [style = bold, label=""];
35->34 [style = bold, label=""];
2->29 [style = bold, label=""];
23->9 [style = bold, label=""];
7->22 [style = dashed, label="0"];
2->8 [style = bold, label=""];
22->6 [style = bold, label=""];
13->2 [style = bold, label=""];
10->11 [style = bold, label=""];
}
