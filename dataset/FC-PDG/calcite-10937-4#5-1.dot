digraph {
1 [style = filled, label = "Connection connection = DriverManager.getConnection(\"jdbc:calcite:\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "SchemaPlus rootSchema = calciteConnection.getRootSchema()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "sql = \"select *\" + \"from table(\"s\".\"Maze\"(5, 3, 1)) as t(s)\"@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "schema.add(\"Solve\",table2)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "checkMazeTableFunction['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "sql = \"select *\" + \"from table(\"s\".\"Solve\"(5, 3, 1)) as t(s)\"@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "b.append(resultSet.getString(1)).append(\"\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final TableFunction table2 = TableFunctionImpl.create(SOLVE_METHOD)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "getConnectionWithMultiplyFunction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "Boolean solution@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "solution@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "SchemaPlus schema = rootSchema.add(\"s\",new AbstractSchema())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ResultSet resultSet = connection.createStatement().executeQuery(sql)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "schema.add(\"multiplication\",table)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final String sql@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final StringBuilder b = new StringBuilder()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final TableFunction table = TableFunctionImpl.create(Smalls.MULTIPLICATION_TABLE_METHOD)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final TableFunction table = TableFunctionImpl.create(MAZE_METHOD)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "getConnectionWithMultiplyFunction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "resultSet.next()@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "schema.add(\"Maze\",table)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "String maze@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "return connection@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "CalciteConnection calciteConnection = connection.unwrap()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(b.toString(),is(maze))@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23->19 [style = solid, label="sql"];
16->10 [style = dotted, label="false"];
11->20 [style = bold, label=""];
13->24 [style = bold, label=""];
6->5 [style = solid, label="table"];
0->6 [style = bold, label=""];
16->10 [style = bold, label=""];
15->21 [style = bold, label=""];
10->19 [style = bold, label=""];
2->3 [style = bold, label=""];
6->11 [style = dashed, label="0"];
17->14 [style = solid, label="maze"];
0->11 [style = bold, label=""];
16->23 [style = bold, label=""];
16->23 [style = dotted, label="true"];
3->0 [style = bold, label=""];
5->20 [style = dashed, label="0"];
1->7 [style = solid, label="connection"];
8->1 [style = bold, label=""];
12->13 [style = bold, label=""];
24->16 [style = bold, label=""];
6->5 [style = bold, label=""];
22->16 [style = solid, label="solution"];
21->9 [style = bold, label=""];
21->9 [style = dotted, label="true"];
12->13 [style = solid, label="table2"];
18->1 [style = bold, label=""];
11->20 [style = solid, label="table"];
23->19 [style = bold, label=""];
20->12 [style = bold, label=""];
9->21 [style = bold, label=""];
7->12 [style = dashed, label="0"];
5->7 [style = bold, label=""];
1->2 [style = bold, label=""];
4->1 [style = bold, label=""];
18->17 [style = dotted, label="true"];
19->15 [style = bold, label=""];
10->19 [style = solid, label="sql"];
21->14 [style = bold, label=""];
18->22 [style = dotted, label="true"];
}
