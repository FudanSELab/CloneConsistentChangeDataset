digraph {
11 [style = filled, label = "return true@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "StreamExpression expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return (StreamEvaluator)createInstance(functionNames.get(function),new Class((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@f9c603,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@f9c608)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "String function = expression.getFunctionName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = ".isAssignableFrom(clazz) && .isAssignableFrom(clazz)@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return (org.apache.solr.client.solrj.io.eval.StreamEvaluator)createInstance(functionNames.get(function),new Class((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@f9c64d,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@f9c652)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "StreamExpression expression@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "functionNames.containsKey(function)@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Class<? extends Expressible> clazz = functionNames.get(function)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "isStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "constructEvaluator['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return false@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = ".isAssignableFrom(clazz) && .isAssignableFrom(clazz)@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "constructEvaluator['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid evaluator expression %s - function '%s' is unknown (not mapped to a valid StreamEvaluator)\",expression,expression.getFunctionName()))@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "StreamExpression expression@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
1->5 [style = bold, label=""];
7->5 [style = solid, label="expression"];
4->14 [style = bold, label=""];
15->2 [style = bold, label=""];
3->7 [style = dotted, label="true"];
1->8 [style = bold, label=""];
2->8 [style = solid, label="function"];
4->14 [style = solid, label="clazz"];
7->6 [style = solid, label="expression"];
1->14 [style = dashed, label="0"];
0->6 [style = bold, label=""];
9->6 [style = solid, label="expression"];
0->12 [style = bold, label=""];
0->4 [style = dotted, label="true"];
9->8 [style = solid, label="expression"];
8->6 [style = bold, label=""];
11->12 [style = bold, label=""];
2->0 [style = solid, label="function"];
10->9 [style = dotted, label="true"];
15->13 [style = dotted, label="true"];
2->5 [style = solid, label="function"];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
5->6 [style = bold, label=""];
3->2 [style = bold, label=""];
0->4 [style = bold, label=""];
7->9 [style = dashed, label="0"];
4->1 [style = solid, label="clazz"];
2->4 [style = solid, label="function"];
14->12 [style = bold, label=""];
1->8 [style = dotted, label="true"];
7->13 [style = dashed, label="0"];
5->8 [style = dashed, label="0"];
14->11 [style = dotted, label="true"];
0->14 [style = dotted, label="true"];
10->2 [style = bold, label=""];
4->1 [style = bold, label=""];
14->11 [style = bold, label=""];
1->5 [style = dotted, label="true"];
0->1 [style = dotted, label="true"];
}
