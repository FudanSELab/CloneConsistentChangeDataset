digraph {
0 [style = filled, label = "TestAllTypes message = TestAllTypes.newBuilder().setOptionalForeignMessage(ForeignMessage.newBuilder().setC(123)).build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(expectedMessage.toString(),message.toString())@@@5@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TestAllTypes expectedMessage = TestAllTypes.newBuilder().addRepeatedForeignMessage(ForeignMessage.newBuilder().setC(456).build()).build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(message.toString()).isEqualTo(expectedMessage.toString())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "TestAllTypes expectedMessage = TestAllTypes.newBuilder().setOptionalForeignMessage(ForeignMessage.newBuilder().setC(123).build()).build()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "TestAllTypes message = TestAllTypes.newBuilder().addRepeatedForeignMessage(ForeignMessage.newBuilder().setC(456)).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testSettingForeignMessageUsingBuilder['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testSettingForeignMessageUsingBuilder['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "testSettingRepeatedForeignMessageUsingBuilder['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->3 [style = bold, label=""];
1->5 [style = bold, label=""];
3->5 [style = dashed, label="0"];
1->8 [style = dashed, label="0"];
2->0 [style = bold, label=""];
7->6 [style = bold, label=""];
0->1 [style = bold, label=""];
6->8 [style = bold, label=""];
4->0 [style = bold, label=""];
0->6 [style = dashed, label="0"];
8->3 [style = bold, label=""];
}
