digraph {
13 [style = filled, label = "rm.drainEvents()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(\"h3\",event.getContainer().getNodeId().getHost())@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ContainerRequestEvent event1 = createReq(jobId,1,1024,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e913c)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "Assert.assertEquals(\"No of assignments must be 0\",0,assigned.size())@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "testMapReduceScheduling['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "MockNM nodeManager3 = rm.registerNode(\"h3:1234\",1536)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "MockNM nodeManager1 = rm.registerNode(\"h1:1234\",3072)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "ContainerRequestEvent event3 = createReq(jobId,3,2048,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e93ec,false,false)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "testMapNodeLocality['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "MyResourceManager rm = new MyResourceManager(conf)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "ContainerRequestEvent event1 = ContainerRequestCreator.createRequest(jobId,1,Resource.newInstance(1024,1),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e927a)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "rm.drainEvents()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Assert.assertFalse(\"Assigned count not correct\",\"h1\".equals(assig.getContainer().getNodeId().getHost()))@@@48@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "MockNM amNodeManager = rm.registerNode(\"amNM:1234\",2048)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "MyContainerAllocator allocator = new MyContainerAllocator(rm,conf,appAttemptId,mockJob)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "ContainerRequestEvent event3 = ContainerRequestCreator.createRequest(jobId,3,Resource.newInstance(1024,1),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e92a8)@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "testMapNodeLocality['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Configuration conf = new Configuration()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "rm.registerNode(\"h2:1234\",10240)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "MockNM nodeManager2 = rm.registerNode(\"h2:1234\",10240)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "amNodeManager.nodeHeartbeat(true)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ApplicationAttemptId appAttemptId = app.getCurrentAppAttempt().getAppAttemptId()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "allocator.sendRequest(event3)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "checkAssignments(new ContainerRequestEvent((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e930d,assigned,true)@@@53@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "ContainerRequestEvent event2 = createReq(jobId,2,1024,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e914e)@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "nodeManager1.nodeHeartbeat(true)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "ContainerRequestEvent event1 = createReq(jobId,1,2048,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e93c3,true,false)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "MyContainerAllocator allocator = new MyContainerAllocator(rm,conf,appAttemptId,mockJob,SystemClock.getInstance())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "ContainerRequestEvent event2 = ContainerRequestCreator.createRequest(jobId,2,Resource.newInstance(1024,1),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e9291)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "rm.drainEvents()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "MockNM nodeManager3 = rm.registerNode(\"h3:1234\",10240)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assigned.remove(event)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "nodeManager3.nodeHeartbeat(true)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assigned = allocator.schedule()@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "rm.drainEvents()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "nodeManager3.nodeHeartbeat(true)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Job mockJob = mock()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "LOG.info(\"Running testMapReduceScheduling\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "rm.drainEvents()@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "allocator.sendRequest(event1)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "JobId jobId = MRBuilderUtils.newJobId(appAttemptId.getApplicationId(),0)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "rm.start()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "MockNM nodeManager1 = rm.registerNode(\"h1:1234\",1024)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "when(mockJob.getReport()).thenReturn(MRBuilderUtils.newJobReport(jobId,\"job\",\"user\",JobState.RUNNING,0,0,0,0,0,0,0,\"jobfile\",null,false,\"\"))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "rm.drainEvents()@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "event.getTaskAttemptID().equals(event3.getAttemptID())@@@47@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "allocator.sendRequest(event2)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "ContainerRequestEvent event2 = createReq(jobId,2,3000,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e93d8,false,true)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "LOG.info(\"Running testMapNodeLocality\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "List<TaskAttemptContainerAssignedEvent> assigned = allocator.schedule()@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "nodeManager2.nodeHeartbeat(true)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "rm.sendAMLaunched(appAttemptId)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "checkAssignments(new ContainerRequestEvent((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e942c,assigned,false)@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "ContainerRequestEvent event3 = createReq(jobId,3,1024,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e9160)@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "RMApp app = rm.submitApp(1024)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "rm.drainEvents()@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25->1 [style = bold, label=""];
30->44 [style = dashed, label="0"];
20->9 [style = bold, label=""];
24->32 [style = bold, label=""];
44->19 [style = bold, label=""];
46->31 [style = bold, label=""];
18->44 [style = solid, label="jobId"];
6->26 [style = solid, label="event1"];
18->5 [style = solid, label="jobId"];
18->46 [style = solid, label="jobId"];
30->19 [style = solid, label="event3"];
22->4 [style = bold, label=""];
43->19 [style = bold, label=""];
49->55 [style = bold, label=""];
33->18 [style = bold, label=""];
28->46 [style = dashed, label="0"];
3->16 [style = solid, label="rm"];
2->15 [style = bold, label=""];
31->30 [style = bold, label=""];
6->17 [style = solid, label="event1"];
6->14 [style = solid, label="event1"];
35->38 [style = bold, label=""];
40->31 [style = bold, label=""];
27->5 [style = bold, label=""];
45->17 [style = bold, label=""];
25->55 [style = dashed, label="0"];
23->50 [style = dashed, label="0"];
10->48 [style = solid, label="appAttemptId"];
29->36 [style = bold, label=""];
54->52 [style = bold, label=""];
1->3 [style = solid, label="conf"];
10->21 [style = solid, label="appAttemptId"];
3->48 [style = solid, label="rm"];
19->34 [style = bold, label=""];
43->14 [style = solid, label="event3"];
15->13 [style = bold, label=""];
18->30 [style = solid, label="jobId"];
44->14 [style = solid, label="event3"];
35->54 [style = bold, label=""];
29->26 [style = solid, label="assigned"];
48->50 [style = bold, label=""];
28->26 [style = solid, label="event2"];
6->42 [style = dashed, label="0"];
18->6 [style = solid, label="jobId"];
10->21 [style = bold, label=""];
18->42 [style = solid, label="jobId"];
23->8 [style = bold, label=""];
42->17 [style = solid, label="event1"];
36->14 [style = bold, label=""];
32->26 [style = bold, label=""];
8->22 [style = bold, label=""];
4->45 [style = bold, label=""];
30->19 [style = bold, label=""];
18->40 [style = solid, label="jobId"];
16->48 [style = dashed, label="0"];
12->32 [style = dotted, label="true"];
3->2 [style = bold, label=""];
6->45 [style = dashed, label="0"];
28->14 [style = solid, label="event2"];
39->35 [style = bold, label=""];
10->16 [style = solid, label="appAttemptId"];
1->16 [style = solid, label="conf"];
6->17 [style = bold, label=""];
17->46 [style = bold, label=""];
46->31 [style = solid, label="event2"];
51->4 [style = bold, label=""];
42->14 [style = solid, label="event1"];
28->40 [style = dashed, label="0"];
28->31 [style = bold, label=""];
37->25 [style = bold, label=""];
1->3 [style = bold, label=""];
27->48 [style = solid, label="mockJob"];
17->40 [style = bold, label=""];
29->14 [style = solid, label="assigned"];
16->23 [style = bold, label=""];
12->24 [style = bold, label=""];
18->45 [style = solid, label="jobId"];
5->16 [style = bold, label=""];
31->44 [style = bold, label=""];
43->19 [style = solid, label="event3"];
7->39 [style = bold, label=""];
12->24 [style = dotted, label="true"];
14->47 [style = bold, label=""];
1->48 [style = solid, label="conf"];
31->43 [style = bold, label=""];
30->14 [style = solid, label="event3"];
44->19 [style = solid, label="event3"];
9->0 [style = bold, label=""];
53->51 [style = bold, label=""];
4->6 [style = bold, label=""];
21->33 [style = bold, label=""];
38->29 [style = bold, label=""];
42->17 [style = bold, label=""];
40->31 [style = solid, label="event2"];
4->42 [style = bold, label=""];
34->7 [style = bold, label=""];
52->38 [style = bold, label=""];
8->53 [style = dashed, label="0"];
12->26 [style = bold, label=""];
39->11 [style = bold, label=""];
30->43 [style = dashed, label="0"];
11->35 [style = bold, label=""];
45->17 [style = solid, label="event1"];
18->28 [style = solid, label="jobId"];
0->10 [style = bold, label=""];
17->28 [style = bold, label=""];
18->43 [style = solid, label="jobId"];
18->27 [style = bold, label=""];
55->1 [style = bold, label=""];
14->12 [style = bold, label=""];
5->48 [style = bold, label=""];
28->31 [style = solid, label="event2"];
27->16 [style = solid, label="mockJob"];
45->14 [style = solid, label="event1"];
41->25 [style = bold, label=""];
42->26 [style = solid, label="event1"];
40->14 [style = solid, label="event2"];
40->26 [style = solid, label="event2"];
50->53 [style = bold, label=""];
22->51 [style = dashed, label="0"];
13->20 [style = bold, label=""];
}
