digraph {
12 [style = filled, label = "XYSeriesCollection<String> c1 = new XYSeriesCollection<>()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "XYSeriesCollection<String> c2 = CloneUtils.clone(c1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertTrue(c1.getClass() == c2.getClass())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertTrue(c1 != c2)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "VectorSeries s1 = new VectorSeries(\"Series\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "s1.add(1.0,1.1,1.2,1.3)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "s1.add(1.0,1.1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "XYSeries s1 = new XYSeries(\"Series\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "VectorSeriesCollection c1 = new VectorSeriesCollection()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "VectorSeriesCollection c2 = CloneUtils.clone(c1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(c1,c2)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertSame(c1.getClass(),c2.getClass())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(c1.equals(c2))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "XYSeriesCollection c2 = CloneUtils.clone(c1)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertFalse(c1.equals(c2))@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "XYSeries<String> s1 = new XYSeries<>(\"Series\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "XYSeriesCollection c1 = new XYSeriesCollection()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "s1.setDescription(\"XYZ\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "c1.addSeries(s1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertNotSame(c1,c2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21->18 [style = solid, label="c2"];
0->3 [style = bold, label=""];
14->3 [style = bold, label=""];
16->15 [style = bold, label=""];
12->14 [style = solid, label="c1"];
19->18 [style = bold, label=""];
3->17 [style = dashed, label="0"];
1->3 [style = solid, label="c1"];
0->6 [style = solid, label="c2"];
1->0 [style = solid, label="c1"];
1->6 [style = solid, label="c1"];
7->0 [style = bold, label=""];
4->2 [style = bold, label=""];
12->6 [style = solid, label="c1"];
0->3 [style = solid, label="c2"];
21->8 [style = solid, label="c2"];
1->7 [style = bold, label=""];
13->11 [style = bold, label=""];
22->7 [style = bold, label=""];
12->7 [style = bold, label=""];
17->19 [style = bold, label=""];
1->22 [style = dashed, label="0"];
9->6 [style = bold, label=""];
20->22 [style = bold, label=""];
11->7 [style = solid, label="s1"];
7->14 [style = bold, label=""];
14->3 [style = solid, label="c2"];
2->15 [style = dashed, label="0"];
3->9 [style = bold, label=""];
0->14 [style = dashed, label="0"];
1->12 [style = dashed, label="0"];
5->1 [style = bold, label=""];
11->5 [style = bold, label=""];
9->19 [style = dashed, label="0"];
22->21 [style = solid, label="c1"];
5->20 [style = dashed, label="0"];
10->8 [style = bold, label=""];
18->10 [style = bold, label=""];
5->12 [style = bold, label=""];
0->21 [style = dashed, label="0"];
0->8 [style = solid, label="c2"];
15->20 [style = bold, label=""];
6->10 [style = bold, label=""];
12->3 [style = solid, label="c1"];
7->21 [style = bold, label=""];
2->11 [style = dashed, label="0"];
15->7 [style = solid, label="s1"];
6->18 [style = dashed, label="0"];
21->17 [style = solid, label="c2"];
21->17 [style = bold, label=""];
22->17 [style = solid, label="c1"];
2->7 [style = solid, label="s1"];
14->6 [style = solid, label="c2"];
2->5 [style = bold, label=""];
14->8 [style = solid, label="c2"];
}
