digraph {
153 [style = filled, label = "assertNotNull(\"Expcting PorterStemFilter analysis breakdown\",tokenList)@@@123@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "assertToken(tokenList.get(9),new TokenInfo(\"dogs\",null,\"word\",45,49,10,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece567,null,false))@@@278@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
166 [style = filled, label = "assertToken(tokenList.get(7),new TokenInfo(\"dog\",null,\"<ALPHANUM>\",45,49,10,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece1f3,null,false))@@@146@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "assertToken(tokenList.get(7),new TokenInfo(\"lazy\",null,\"word\",34,38,8,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdbaf,null,false))@@@205@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"fox\",null,\"word\",0,3,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece5a8,null,false))@@@287@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
246 [style = filled, label = "request.addFieldType(\"charfilthtmlmap\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
159 [style = filled, label = "assertNotNull(\"expecting only MockTokenizer to be applied\",tokenList)@@@249@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
126 [style = filled, label = "assertEquals(tokenList.size(),8)@@@97@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
157 [style = filled, label = "assertNotNull(\"field_nameds should never be null\",fieldNames)@@@240@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
219 [style = filled, label = "assertEquals(10,tokenList.size())@@@197@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
253 [style = filled, label = "assertEquals(\"whatever\",indexPart.get(\"org.apache.lucene.analysis.charfilter.MappingCharFilter\"))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
123 [style = filled, label = "assertEquals(tokenList.size(),8)@@@124@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
129 [style = filled, label = "queryPart = nameTextType.get(\"query\")@@@228@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "tokenList = indexPart.get(\"org.apache.lucene.analysis.core.StopFilter\")@@@85@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
259 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"whatever\",null,\"word\",12,20,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece6de,null,false))@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
88 [style = filled, label = "assertToken(tokenList.get(7),new TokenInfo(\"dogs\",null,\"<ALPHANUM>\",45,49,10,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd8eb,null,false))@@@109@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "NamedList<List<NamedList>> indexPart = textType.get(\"index\")@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertToken(tokenList.get(1),new TokenInfo(\"quick\",null,\"word\",4,9,2,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdb31,null,false))@@@187@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
142 [style = filled, label = "assertToken(tokenList.get(6),new TokenInfo(\"the\",null,\"word\",30,33,7,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece528,null,false))@@@269@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
243 [style = filled, label = "assertNotNull(\"Expcting LowerCaseFilter analysis breakdown\",tokenList)@@@63@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
75 [style = filled, label = "request.setFieldValue(\"the quick red fox jumped over the lazy brown dogs\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
230 [style = filled, label = "tokenList = indexPart.get(\"org.apache.lucene.analysis.core.StopFilter\")@@@95@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
90 [style = filled, label = "assertEquals(\"expecting MockTokenizer to produce 10 tokens\",10,tokenList.size())@@@232@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertToken(tokenList.get(6),new TokenInfo(\"the\",null,\"<ALPHANUM>\",30,33,7,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd6f2,null,false))@@@40@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
150 [style = filled, label = "assertToken(tokenList.get(8),new TokenInfo(\"brown\",null,\"<ALPHANUM>\",39,44,9,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd71c,null,true))@@@46@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
235 [style = filled, label = "assertToken(tokenList.get(1),new TokenInfo(\"brown\",null,\"word\",4,9,2,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece44f,null,false))@@@234@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
242 [style = filled, label = "assertToken(tokenList.get(2),new TokenInfo(\"fox\",null,\"<ALPHANUM>\",14,17,4,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece17b,null,true))@@@131@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"fox\",null,\"<ALPHANUM>\",0,3,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece271,null,false))@@@165@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertToken(tokenList.get(2),new TokenInfo(\"red\",null,\"word\",10,13,3,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece4d4,null,false))@@@257@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"the\",null,\"<ALPHANUM>\",0,3,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd75a,null,false))@@@55@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
147 [style = filled, label = "assertToken(tokenList.get(6),new TokenInfo(\"the\",null,\"word\",30,33,7,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdb9a,null,false))@@@202@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "assertToken(tokenList.get(5),new TokenInfo(\"over\",null,\"<ALPHANUM>\",25,29,6,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd6dd,null,false))@@@37@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
252 [style = filled, label = "NamedList<NamedList> fieldTypes = result.get(\"field_types\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
209 [style = filled, label = "assertToken(tokenList.get(9),new TokenInfo(\"dogs\",null,\"<ALPHANUM>\",45,49,10,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdf66,null,false))@@@59@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "NamedList indexPart = textType.get(\"index\")@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertToken(tokenList.get(2),new TokenInfo(\"red\",null,\"word\",10,13,3,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdc9f,null,false))@@@239@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(\"expecting only MockTokenizer to be applied\",1,queryPart.size())@@@265@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
199 [style = filled, label = "assertToken(tokenList.get(5),new TokenInfo(\"over\",null,\"<ALPHANUM>\",25,29,6,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdf12,null,false))@@@47@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
144 [style = filled, label = "request.setQuery(\"fox brown\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
214 [style = filled, label = "assertNotNull(\"expecting result for field 'whitetok'\",whitetok)@@@244@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
185 [style = filled, label = "@SuppressWarnings({\"rawtypes\"}) NamedList<NamedList> textType = fieldTypes.get(\"text\")@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
236 [style = filled, label = "assertNotNull(\"expecting an index token analysis for field 'whitetok'\",indexPart)@@@246@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
99 [style = filled, label = "assertEquals(2,tokenList.size())@@@170@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertToken(tokenList.get(2),new TokenInfo(\"red\",null,\"<ALPHANUM>\",10,13,3,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd69e,null,false))@@@28@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(\"expecting MockTokenizer to produce 2 tokens\",2,tokenList.size())@@@268@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
183 [style = filled, label = "assertNotNull(\"expecting an index token analysis for field type 'nametext'\",indexPart)@@@194@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
162 [style = filled, label = "assertToken(tokenList.get(9),new TokenInfo(\"dogs\",null,\"<ALPHANUM>\",45,49,10,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece055,null,false))@@@92@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "assertToken(tokenList.get(6),new TokenInfo(\"the\",null,\"word\",30,33,7,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece3cf,null,false))@@@216@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
175 [style = filled, label = "assertNotNull(\"expecting an index token analysis for field 'keywordtok'\",indexPart)@@@298@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
135 [style = filled, label = "assertToken(tokenList.get(1),new TokenInfo(\"quick\",null,\"<ALPHANUM>\",4,9,2,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd689,null,false))@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertNotNull(\"expecting a query token analysis for field type 'nametext'\",queryPart)@@@229@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
197 [style = filled, label = "assertEquals(\"expecting only MockTokenizer to be applied\",1,queryPart.size())@@@308@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
96 [style = filled, label = "assertNotNull(\"Expcting WhitespaceTokenizer analysis breakdown\",tokenList)@@@196@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "request.addFieldType(\"text\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertToken(tokenList.get(1),new TokenInfo(\"brown\",null,\"<ALPHANUM>\",4,9,2,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece287,null,false))@@@168@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
171 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"the\",null,\"<ALPHANUM>\",0,3,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdf8f,null,false))@@@65@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertToken(tokenList.get(1),new TokenInfo(\"quick\",null,\"word\",4,9,2,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece4bf,null,false))@@@254@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
164 [style = filled, label = "assertEquals(\"expecting MockTokenizer to produce 1 token\",1,tokenList.size())@@@311@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
110 [style = filled, label = "assertNotNull(\"expecting only MockTokenizer to be applied\",tokenList)@@@267@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
124 [style = filled, label = "assertToken(tokenList.get(1),new TokenInfo(\"red\",null,\"<ALPHANUM>\",10,13,3,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd92e,null,false))@@@118@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
212 [style = filled, label = "tokenList = indexPart.get(\"org.apache.lucene.analysis.en.PorterStemFilter\")@@@122@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
247 [style = filled, label = "NamedList<NamedList> result = handler.handleAnalysisRequest(request,h.getCore().getLatestSchema())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
229 [style = filled, label = "assertNotNull(\"expecting a query token analysis for field 'keywordtok'\",queryPart)@@@307@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "indexPart = nameTextType.get(\"index\")@@@193@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
179 [style = filled, label = "assertEquals(\"Expecting StandardTokenizer to produce 2 tokens from '\" + request.getQuery() + \"'\",2,tokenList.size())@@@155@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
241 [style = filled, label = "assertToken(tokenList.get(3),new TokenInfo(\"jumped\",null,\"<ALPHANUM>\",18,24,5,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece0c4,null,false))@@@107@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
130 [style = filled, label = "assertNotNull(\"expecting a query token analysis for field 'whitetok'\",queryPart)@@@282@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
152 [style = filled, label = "assertToken(tokenList.get(6),new TokenInfo(\"brown\",null,\"<ALPHANUM>\",39,44,9,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd8d4,null,true))@@@106@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
169 [style = filled, label = "assertNotNull(\"Expcting StopFilter analysis breakdown\",tokenList)@@@172@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
116 [style = filled, label = "assertEquals(2,tokenList.size())@@@161@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
257 [style = filled, label = "assertNotNull(\"field_types should never be null\",fieldTypes)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
220 [style = filled, label = "assertEquals(\"expecting MockTokenizer to produce 1 token\",1,tokenList.size())@@@302@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
186 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"the\",null,\"<ALPHANUM>\",0,3,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdea9,null,false))@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
68 [style = filled, label = "tokenList = queryPart.get(\"org.apache.lucene.analysis.standard.StandardTokenizer\")@@@141@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
146 [style = filled, label = "tokenList = queryPart.get(\"org.apache.lucene.analysis.core.LowerCaseFilter\")@@@162@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
148 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"fox\",null,\"<ALPHANUM>\",0,3,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd9fe,null,false))@@@144@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertToken(tokenList.get(2),new TokenInfo(\"fox\",null,\"<ALPHANUM>\",14,17,4,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd878,null,true))@@@94@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertToken(tokenList.get(6),new TokenInfo(\"brown\",null,\"<ALPHANUM>\",39,44,9,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece1db,null,true))@@@143@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "indexPart = nameTextType.get(\"index\")@@@179@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
170 [style = filled, label = "assertToken(tokenList.get(6),new TokenInfo(\"brown\",null,\"<ALPHANUM>\",39,44,9,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece109,null,true))@@@116@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
121 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"the\",null,\"word\",0,3,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdb1c,null,false))@@@184@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
140 [style = filled, label = "assertToken(tokenList.get(7),new TokenInfo(\"dog\",null,\"<ALPHANUM>\",45,49,10,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd9be,null,false))@@@136@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "assertEquals(\"expecting MockTokenizer to produce 1 token\",1,tokenList.size())@@@291@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
233 [style = filled, label = "assertToken(tokenList.get(4),new TokenInfo(\"jumped\",null,\"<ALPHANUM>\",18,24,5,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdfe7,null,false))@@@77@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
113 [style = filled, label = "NamedList<NamedList> textType = fieldTypes.get(\"charfilthtmlmap\")@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(\"expecting only MockTokenizer to be applied\",1,queryPart.size())@@@288@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertToken(tokenList.get(3),new TokenInfo(\"fox\",null,\"word\",14,17,4,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece4e9,null,true))@@@260@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "tokenList = queryPart.get(\"org.apache.lucene.analysis.core.StopFilter\")@@@171@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertToken(tokenList.get(5),new TokenInfo(\"lazi\",null,\"<ALPHANUM>\",34,38,8,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece1c3,null,false))@@@140@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertToken(tokenList.get(7),new TokenInfo(\"lazy\",null,\"<ALPHANUM>\",34,38,8,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece029,null,false))@@@86@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "assertToken(tokenList.get(2),new TokenInfo(\"red\",null,\"<ALPHANUM>\",10,13,3,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd786,null,false))@@@61@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "request.addFieldType(\"nametext\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
248 [style = filled, label = "request.setShowMatch(false)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "tokenList = queryPart.get(.getName())@@@230@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"fox\",null,\"<ALPHANUM>\",0,3,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece233,null,false))@@@156@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
222 [style = filled, label = "assertNotNull(\"Expcting StandardTokenizer analysis breakdown\",tokenList)@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
237 [style = filled, label = "assertToken(tokenList.get(1),new TokenInfo(\"red\",null,\"<ALPHANUM>\",10,13,3,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece096,null,false))@@@101@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
87 [style = filled, label = "assertToken(tokenList.get(1),new TokenInfo(\"brown\",null,\"word\",4,9,2,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece5bd,null,false))@@@290@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
210 [style = filled, label = "assertToken(tokenList.get(4),new TokenInfo(\"jumped\",null,\"<ALPHANUM>\",18,24,5,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdefd,null,false))@@@44@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
198 [style = filled, label = "assertToken(tokenList.get(6),new TokenInfo(\"the\",null,\"<ALPHANUM>\",30,33,7,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdf27,null,false))@@@50@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
206 [style = filled, label = "assertToken(tokenList.get(1),new TokenInfo(\"quick\",null,\"<ALPHANUM>\",4,9,2,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdebe,null,false))@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
177 [style = filled, label = "tokenList = indexPart.get(\"org.apache.lucene.analysis.core.LowerCaseFilter\")@@@62@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
61 [style = filled, label = "assertEquals(tokenList.size(),8)@@@114@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
176 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"quick\",null,\"<ALPHANUM>\",4,9,2,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece07f,null,false))@@@98@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
258 [style = filled, label = "testCharFilterAnalysis['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertToken(tokenList.get(5),new TokenInfo(\"over\",null,\"<ALPHANUM>\",25,29,6,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd7c8,null,false))@@@70@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(2,tokenList.size())@@@182@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertEquals(tokenList.size(),10)@@@54@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
138 [style = filled, label = "assertNotNull(\"Expecting StandardTokenizer analysis breakdown\",tokenList)@@@142@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
127 [style = filled, label = "assertToken(tokenList.get(1),new TokenInfo(\"brown\",null,\"word\",4,9,2,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdc1a,null,false))@@@220@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
163 [style = filled, label = "assertToken(tokenList.get(2),new TokenInfo(\"red\",null,\"word\",10,13,3,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece37b,null,false))@@@204@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "request.addFieldName(\"whitetok\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
202 [style = filled, label = "@SuppressWarnings({\"rawtypes\"}) NamedList<NamedList> nameTextType = fieldTypes.get(\"nametext\")@@@189@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
227 [style = filled, label = "assertToken(tokenList.get(3),new TokenInfo(\"fox\",null,\"<ALPHANUM>\",14,17,4,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdfd1,null,true))@@@74@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
208 [style = filled, label = "assertToken(tokenList.get(1),new TokenInfo(\"red\",null,\"<ALPHANUM>\",10,13,3,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece163,null,false))@@@128@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
63 [style = filled, label = "tokenList = indexPart.get(.getName())@@@248@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertNotNull(\"field_types should never be null\",fieldTypes)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
196 [style = filled, label = "assertToken(tokenList.get(2),new TokenInfo(\"red\",null,\"<ALPHANUM>\",10,13,3,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecded3,null,false))@@@38@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
255 [style = filled, label = "List<NamedList> tokenList = (List<NamedList>)indexPart.get(.getName())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "tokenList = queryPart.get(.getName())@@@289@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
200 [style = filled, label = "assertEquals(\"expecting only MockTokenizer to be applied\",1,indexPart.size())@@@299@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
244 [style = filled, label = "assertToken(tokenList.get(5),new TokenInfo(\"over\",null,\"<ALPHANUM>\",25,29,6,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdffd,null,false))@@@80@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
178 [style = filled, label = "assertToken(tokenList.get(2),new TokenInfo(\"fox\",null,\"<ALPHANUM>\",14,17,4,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece0ad,null,true))@@@104@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
145 [style = filled, label = "assertToken(tokenList.get(9),new TokenInfo(\"dogs\",null,\"<ALPHANUM>\",45,49,10,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd820,null,false))@@@82@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
205 [style = filled, label = "assertToken(tokenList.get(3),new TokenInfo(\"fox\",null,\"<ALPHANUM>\",14,17,4,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdee8,null,true))@@@41@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
77 [style = filled, label = "assertEquals(\"expecting MockTokenizer to produce 2 tokens\",2,tokenList.size())@@@286@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
165 [style = filled, label = "indexPart = keywordtok.get(\"index\")@@@297@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertNotNull(\"field_nameds should never be null\",fieldNames)@@@224@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "assertNotNull(\"expecting result for field type 'text'\",textType)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertToken(tokenList.get(7),new TokenInfo(\"lazy\",null,\"<ALPHANUM>\",34,38,8,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd707,null,false))@@@43@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
225 [style = filled, label = "@SuppressWarnings({\"rawtypes\"}) NamedList<List<NamedList>> indexPart = textType.get(\"index\")@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "request.setShowMatch(true)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
232 [style = filled, label = "tokenList = queryPart.get(.getName())@@@284@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
107 [style = filled, label = "assertEquals(tokenList.size(),10)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
250 [style = filled, label = "assertNotNull(\"Expecting MockTokenizer analysis breakdown\",tokenList)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
105 [style = filled, label = "queryPart = whitetok.get(\"query\")@@@281@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "assertToken(tokenList.get(7),new TokenInfo(\"lazy\",null,\"<ALPHANUM>\",34,38,8,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd7f4,null,false))@@@76@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertToken(tokenList.get(1),new TokenInfo(\"red\",null,\"<ALPHANUM>\",10,13,3,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd861,null,false))@@@91@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertToken(tokenList.get(5),new TokenInfo(\"over\",null,\"word\",25,29,6,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece513,null,false))@@@266@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertToken(tokenList.get(6),new TokenInfo(\"brown\",null,\"<ALPHANUM>\",39,44,9,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd9a6,null,true))@@@133@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
195 [style = filled, label = "@SuppressWarnings({\"rawtypes\"}) NamedList<NamedList> fieldTypes = result.get(\"field_types\")@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
224 [style = filled, label = "assertNotNull(\"Expcting StopFilter analysis breakdown\",tokenList)@@@96@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
184 [style = filled, label = "tokenList = indexPart.get(\"org.apache.lucene.analysis.core.WhitespaceTokenizer\")@@@195@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
69 [style = filled, label = "assertToken(tokenList.get(1),new TokenInfo(\"brown\",null,\"<ALPHANUM>\",4,9,2,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece2c8,null,false))@@@177@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
187 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"fox brown\",null,\"word\",0,9,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece64c,null,false))@@@312@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
251 [style = filled, label = "assertTrue(\"result is null and it shouldn't be\",result != null)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"fox\",null,\"<ALPHANUM>\",0,3,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece2b1,null,false))@@@174@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
154 [style = filled, label = "assertToken(tokenList.get(2),new TokenInfo(\"red\",null,\"<ALPHANUM>\",10,13,3,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdfbb,null,false))@@@71@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
102 [style = filled, label = "assertToken(tokenList.get(4),new TokenInfo(\"over\",null,\"<ALPHANUM>\",25,29,6,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd976,null,false))@@@127@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
239 [style = filled, label = "assertNotNull(\"expecting result for field type 'nametext'\",nameTextType)@@@192@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
86 [style = filled, label = "assertToken(tokenList.get(5),new TokenInfo(\"lazy\",null,\"<ALPHANUM>\",34,38,8,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece0f2,null,false))@@@113@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
125 [style = filled, label = "assertNotNull(\"Expcting LowerCaseFilter analysis breakdown\",tokenList)@@@151@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "tokenList = queryPart.get(\"org.apache.lucene.analysis.standard.StandardTokenizer\")@@@153@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
137 [style = filled, label = "assertToken(tokenList.get(8),new TokenInfo(\"brown\",null,\"<ALPHANUM>\",39,44,9,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd80a,null,true))@@@79@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
191 [style = filled, label = "@SuppressWarnings({\"rawtypes\"}) NamedList<NamedList> fieldNames = result.get(\"field_names\")@@@237@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
204 [style = filled, label = "assertToken(tokenList.get(6),new TokenInfo(\"the\",null,\"<ALPHANUM>\",30,33,7,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece013,null,false))@@@83@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
122 [style = filled, label = "indexPart = whitetok.get(\"index\")@@@245@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
226 [style = filled, label = "assertToken(tokenList.get(8),new TokenInfo(\"brown\",null,\"<ALPHANUM>\",39,44,9,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdf51,null,true))@@@56@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
149 [style = filled, label = "NamedList<NamedList> textType = fieldTypes.get(\"text\")@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
115 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"fox\",null,\"<ALPHANUM>\",0,3,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece2f3,null,false))@@@183@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
133 [style = filled, label = "tokenList = indexPart.get(\"org.apache.lucene.analysis.en.PorterStemFilter\")@@@112@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
160 [style = filled, label = "assertNotNull(\"expecting only MockTokenizer to be applied\",tokenList)@@@301@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
83 [style = filled, label = "assertToken(tokenList.get(5),new TokenInfo(\"lazy\",null,\"<ALPHANUM>\",34,38,8,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd8bd,null,false))@@@103@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"quick\",null,\"<ALPHANUM>\",4,9,2,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd84a,null,false))@@@88@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
134 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"the\",null,\"word\",0,3,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdc75,null,false))@@@233@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
172 [style = filled, label = "@SuppressWarnings({\"rawtypes\"}) List<NamedList> tokenList = indexPart.get(\"org.apache.lucene.analysis.standard.StandardTokenizer\")@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
234 [style = filled, label = "tokenList = indexPart.get(.getName())@@@300@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
240 [style = filled, label = "queryPart = keywordtok.get(\"query\")@@@306@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"fox brown\",null,\"word\",0,9,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecde17,null,false))@@@292@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"quick\",null,\"<ALPHANUM>\",4,9,2,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd916,null,false))@@@115@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "request.addFieldName(\"keywordtok\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "assertToken(tokenList.get(9),new TokenInfo(\"dogs\",null,\"word\",45,49,10,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece40e,null,false))@@@225@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertToken(tokenList.get(9),new TokenInfo(\"dogs\",null,\"word\",45,49,10,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdbd9,null,false))@@@211@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "assertEquals(tokenList.size(),8)@@@87@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(tokenList.size(),10)@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "indexPart = keywordtok.get(\"index\")@@@277@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
141 [style = filled, label = "assertNotNull(\"expecting result for field type 'nametext'\",nameTextType)@@@178@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertNotNull(\"expecting result for field type 'charfilthtmlmap'\",textType)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
180 [style = filled, label = "assertToken(tokenList.get(4),new TokenInfo(\"over\",null,\"<ALPHANUM>\",25,29,6,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece1ab,null,false))@@@137@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "queryPart = nameTextType.get(\"query\")@@@214@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
188 [style = filled, label = "assertToken(tokenList.get(7),new TokenInfo(\"dogs\",null,\"<ALPHANUM>\",45,49,10,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece120,null,false))@@@119@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
89 [style = filled, label = "indexPart = whitetok.get(\"index\")@@@227@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
143 [style = filled, label = "assertToken(tokenList.get(8),new TokenInfo(\"brown\",null,\"word\",39,44,9,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdbc4,null,true))@@@208@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertNotNull(\"Expcting StopFilter analysis breakdown\",tokenList)@@@160@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
211 [style = filled, label = "assertNotNull(\"Expecting StandardTokenizer analysis breakdown\",tokenList)@@@154@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
108 [style = filled, label = "assertToken(tokenList.get(1),new TokenInfo(\"brown\",null,\"<ALPHANUM>\",4,9,2,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece248,null,false))@@@159@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "List<NamedList> tokenList = indexPart.get(\"org.apache.lucene.analysis.standard.StandardTokenizer\")@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
139 [style = filled, label = "assertEquals(\"expecting only MockTokenizer to be applied\",1,indexPart.size())@@@279@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "assertEquals(tokenList.size(),10)@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
249 [style = filled, label = "assertEquals(tokenList.size(),1)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertNotNull(\"expecting a query token analysis for field type 'nametext'\",queryPart)@@@215@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "testHandleAnalysisRequest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertNotNull(\"Expcting StandardTokenizer analysis breakdown\",tokenList)@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
161 [style = filled, label = "tokenList = queryPart.get(.getName())@@@309@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "assertToken(tokenList.get(4),new TokenInfo(\"jumped\",null,\"<ALPHANUM>\",18,24,5,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd7b2,null,false))@@@67@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
167 [style = filled, label = "assertToken(tokenList.get(5),new TokenInfo(\"over\",null,\"word\",25,29,6,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece3ba,null,false))@@@213@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
155 [style = filled, label = "assertNotNull(\"expecting an index token analysis for field type 'text'\",indexPart)@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
158 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"quick\",null,\"<ALPHANUM>\",4,9,2,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece14b,null,false))@@@125@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
174 [style = filled, label = "assertNotNull(\"expecting result for field 'keywordtok'\",keywordtok)@@@296@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
193 [style = filled, label = "assertToken(tokenList.get(4),new TokenInfo(\"over\",null,\"<ALPHANUM>\",25,29,6,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece0db,null,false))@@@110@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
213 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"the quick red fox jumped over the lazy brown dogs\",null,\"word\",0,49,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece60b,null,false))@@@303@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
203 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"the\",null,\"word\",0,3,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece351,null,false))@@@198@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
207 [style = filled, label = "assertToken(tokenList.get(8),new TokenInfo(\"brown\",null,\"<ALPHANUM>\",39,44,9,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece03f,null,true))@@@89@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
223 [style = filled, label = "assertEquals(\"expecting MockTokenizer to produce 10 tokens\",10,tokenList.size())@@@250@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assertToken(tokenList.get(5),new TokenInfo(\"lazi\",null,\"<ALPHANUM>\",34,38,8,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd98e,null,false))@@@130@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
156 [style = filled, label = "assertToken(tokenList.get(3),new TokenInfo(\"jump\",null,\"<ALPHANUM>\",18,24,5,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece193,null,false))@@@134@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
217 [style = filled, label = "assertNotNull(\"expecting only MockTokenizer to be applied\",tokenList)@@@310@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
136 [style = filled, label = "assertToken(tokenList.get(5),new TokenInfo(\"over\",null,\"word\",25,29,6,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdb85,null,false))@@@199@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertNotNull(\"expecting result for field 'whitetok'\",whitetok)@@@226@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
254 [style = filled, label = "assertEquals(\"wh鐃緒申鐃緒申鐃緒申t鐃緒申鐃緒申鐃緒申v鐃緒申鐃緒申鐃緒申r\",indexPart.get(\"org.apache.lucene.analysis.charfilter.HTMLStripCharFilter\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertToken(tokenList.get(9),new TokenInfo(\"dogs\",null,\"<ALPHANUM>\",45,49,10,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd731,null,false))@@@49@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "assertNotNull(\"expecting result for field type 'text'\",textType)@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
119 [style = filled, label = "assertNotNull(\"Expcting PorterStemFilter analysis breakdown\",tokenList)@@@181@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
132 [style = filled, label = "assertToken(tokenList.get(4),new TokenInfo(\"jumped\",null,\"word\",18,24,5,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece4fe,null,false))@@@263@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
131 [style = filled, label = "tokenList = queryPart.get(\"org.apache.lucene.analysis.core.LowerCaseFilter\")@@@150@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertToken(tokenList.get(1),new TokenInfo(\"quick\",null,\"<ALPHANUM>\",4,9,2,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd770,null,false))@@@58@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertNotNull(\"expecting a query token analysis for field type 'text'\",queryPart)@@@152@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertNotNull(\"expecting an index token analysis for field type 'charfilthtmlmap'\",indexPart)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"fox\",null,\"word\",0,3,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece43a,null,false))@@@231@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "tokenList = queryPart.get(\"org.apache.lucene.analysis.en.PorterStemFilter\")@@@180@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"fox\",null,\"word\",0,3,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdc05,null,false))@@@217@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
112 [style = filled, label = "assertToken(tokenList.get(2),new TokenInfo(\"fox\",null,\"<ALPHANUM>\",14,17,4,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd946,null,true))@@@121@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
168 [style = filled, label = "assertEquals(\"expecting only MockTokenizer to be applied\",1,indexPart.size())@@@247@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
194 [style = filled, label = "assertToken(tokenList.get(3),new TokenInfo(\"fox\",null,\"word\",14,17,4,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece390,null,true))@@@207@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
231 [style = filled, label = "testHandleAnalysisRequest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
60 [style = filled, label = "assertToken(tokenList.get(6),new TokenInfo(\"the\",null,\"<ALPHANUM>\",30,33,7,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd7de,null,false))@@@73@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
221 [style = filled, label = "@SuppressWarnings({\"rawtypes\"}) NamedList<NamedList> result = handler.handleAnalysisRequest(request,h.getCore().getLatestSchema())@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
218 [style = filled, label = "assertToken(tokenList.get(1),new TokenInfo(\"quick\",null,\"<ALPHANUM>\",4,9,2,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdfa5,null,false))@@@68@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
238 [style = filled, label = "@SuppressWarnings({\"rawtypes\"}) NamedList<NamedList> whitetok = fieldNames.get(\"whitetok\")@@@241@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
182 [style = filled, label = "assertToken(tokenList.get(4),new TokenInfo(\"jumped\",null,\"word\",18,24,5,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece3a5,null,false))@@@210@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
97 [style = filled, label = "NamedList<NamedList> fieldNames = result.get(\"field_names\")@@@223@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
256 [style = filled, label = "request.setFieldValue(\"<html><body>wh鐃緒申鐃緒申鐃緒申t鐃緒申鐃緒申鐃緒申v鐃緒申鐃緒申鐃緒申r</body></html>\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "assertToken(tokenList.get(7),new TokenInfo(\"lazy\",null,\"<ALPHANUM>\",34,38,8,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdf3c,null,false))@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "tokenList = indexPart.get(\"org.apache.lucene.analysis.core.LowerCaseFilter\")@@@52@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
181 [style = filled, label = "assertToken(tokenList.get(1),new TokenInfo(\"brown\",null,\"<ALPHANUM>\",4,9,2,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece30b,null,false))@@@186@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
128 [style = filled, label = "assertNotNull(\"Expcting PorterStemFilter analysis breakdown\",tokenList)@@@169@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "NamedList<List<NamedList>> queryPart = textType.get(\"query\")@@@139@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"the\",null,\"word\",0,3,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece4aa,null,false))@@@251@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
216 [style = filled, label = "assertToken(tokenList.get(8),new TokenInfo(\"brown\",null,\"word\",39,44,9,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece3f9,null,true))@@@222@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
52 [style = filled, label = "assertToken(tokenList.get(4),new TokenInfo(\"jumped\",null,\"<ALPHANUM>\",18,24,5,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd6c8,null,false))@@@34@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertNotNull(\"expecting result for field 'keywordtok'\",keywordtok)@@@276@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
228 [style = filled, label = "assertEquals(2,tokenList.size())@@@164@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
71 [style = filled, label = "assertToken(tokenList.get(8),new TokenInfo(\"brown\",null,\"word\",39,44,9,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece552,null,true))@@@275@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertToken(tokenList.get(1),new TokenInfo(\"quick\",null,\"word\",4,9,2,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdc8a,null,false))@@@236@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
151 [style = filled, label = "tokenList = indexPart.get(.getName())@@@280@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertToken(tokenList.get(2),new TokenInfo(\"red\",null,\"word\",10,13,3,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdb46,null,false))@@@190@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "FieldAnalysisRequest request = new FieldAnalysisRequest()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertToken(tokenList.get(1),new TokenInfo(\"brown\",null,\"<ALPHANUM>\",4,9,2,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecda13,null,false))@@@147@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertToken(tokenList.get(4),new TokenInfo(\"over\",null,\"<ALPHANUM>\",25,29,6,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecd8a6,null,false))@@@100@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "assertEquals(\"expecting only MockTokenizer to be applied\",1,queryPart.size())@@@283@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
245 [style = filled, label = "assertToken(tokenList.get(7),new TokenInfo(\"lazy\",null,\"word\",34,38,8,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece3e4,null,false))@@@219@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
190 [style = filled, label = "@SuppressWarnings({\"rawtypes\"}) NamedList<NamedList> keywordtok = fieldNames.get(\"keywordtok\")@@@293@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
201 [style = filled, label = "assertEquals(2,tokenList.size())@@@173@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
111 [style = filled, label = "assertToken(tokenList.get(3),new TokenInfo(\"fox\",null,\"word\",14,17,4,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ecdcb4,null,true))@@@242@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
215 [style = filled, label = "assertNotNull(\"Expcting LowerCaseFilter analysis breakdown\",tokenList)@@@163@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
117 [style = filled, label = "assertToken(tokenList.get(7),new TokenInfo(\"lazy\",null,\"word\",34,38,8,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece53d,null,false))@@@272@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
192 [style = filled, label = "assertToken(tokenList.get(1),new TokenInfo(\"quick\",null,\"word\",4,9,2,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ece366,null,false))@@@201@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
189 [style = filled, label = "assertNotNull(\"expecting only MockTokenizer to be applied\",tokenList)@@@285@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertNotNull(\"expecting a query token analysis for field 'whitetok'\",queryPart)@@@264@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
173 [style = filled, label = "@SuppressWarnings({\"rawtypes\"}) NamedList<List<NamedList>> queryPart = textType.get(\"query\")@@@149@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
50->148 [style = bold, label=""];
82->211 [style = solid, label="tokenList"];
35->255 [style = dashed, label="0"];
8->128 [style = bold, label=""];
244->204 [style = bold, label=""];
134->26 [style = bold, label=""];
44->256 [style = dashed, label="0"];
51->111 [style = bold, label=""];
78->75 [style = bold, label=""];
202->239 [style = bold, label=""];
24->68 [style = bold, label=""];
126->176 [style = bold, label=""];
64->207 [style = bold, label=""];
71->65 [style = solid, label="keywordtok"];
63->159 [style = bold, label=""];
37->139 [style = bold, label=""];
165->175 [style = solid, label="indexPart"];
81->137 [style = bold, label=""];
138->50 [style = bold, label=""];
41->49 [style = bold, label=""];
31->142 [style = bold, label=""];
174->165 [style = bold, label=""];
217->164 [style = bold, label=""];
124->112 [style = bold, label=""];
37->105 [style = bold, label=""];
104->135 [style = bold, label=""];
76->87 [style = bold, label=""];
23->29 [style = bold, label=""];
231->62 [style = bold, label=""];
39->33 [style = bold, label=""];
118->22 [style = bold, label=""];
28->115 [style = bold, label=""];
132->9 [style = bold, label=""];
86->61 [style = bold, label=""];
225->155 [style = solid, label="indexPart"];
63->84 [style = bold, label=""];
104->225 [style = bold, label=""];
253->255 [style = bold, label=""];
66->195 [style = bold, label=""];
200->234 [style = bold, label=""];
43->66 [style = dashed, label="0"];
96->136 [style = bold, label=""];
35->104 [style = bold, label=""];
220->213 [style = bold, label=""];
72->55 [style = bold, label=""];
27->140 [style = bold, label=""];
68->138 [style = bold, label=""];
53->24 [style = bold, label=""];
251->252 [style = bold, label=""];
94->129 [style = bold, label=""];
5->64 [style = bold, label=""];
103->232 [style = bold, label=""];
123->102 [style = bold, label=""];
122->63 [style = bold, label=""];
119->28 [style = bold, label=""];
10->44 [style = bold, label=""];
107->186 [style = bold, label=""];
71->37 [style = bold, label=""];
227->233 [style = bold, label=""];
91->72 [style = bold, label=""];
197->161 [style = bold, label=""];
151->105 [style = bold, label=""];
123->158 [style = bold, label=""];
98->100 [style = bold, label=""];
131->125 [style = bold, label=""];
181->202 [style = bold, label=""];
19->73 [style = bold, label=""];
77->95 [style = bold, label=""];
21->1 [style = bold, label=""];
113->11 [style = solid, label="result"];
55->47 [style = bold, label=""];
169->201 [style = bold, label=""];
218->154 [style = bold, label=""];
85->23 [style = bold, label=""];
226->209 [style = bold, label=""];
4->45 [style = solid, label="queryPart"];
130->103 [style = bold, label=""];
121->39 [style = bold, label=""];
183->184 [style = bold, label=""];
156->180 [style = bold, label=""];
228->7 [style = bold, label=""];
213->240 [style = bold, label=""];
179->79 [style = bold, label=""];
189->77 [style = bold, label=""];
69->114 [style = bold, label=""];
76->87 [style = solid, label="tokenList"];
125->18 [style = bold, label=""];
54->126 [style = bold, label=""];
122->236 [style = solid, label="indexPart"];
148->74 [style = bold, label=""];
108->146 [style = bold, label=""];
192->163 [style = bold, label=""];
118->11 [style = dashed, label="0"];
93->248 [style = dashed, label="0"];
146->215 [style = bold, label=""];
62->113 [style = solid, label="request"];
116->146 [style = bold, label=""];
48->66 [style = solid, label="indexPart"];
133->86 [style = solid, label="tokenList"];
2->4 [style = bold, label=""];
240->229 [style = solid, label="queryPart"];
95->12 [style = bold, label=""];
233->244 [style = bold, label=""];
182->167 [style = bold, label=""];
113->11 [style = solid, label="textType"];
3->127 [style = bold, label=""];
191->157 [style = bold, label=""];
25->96 [style = bold, label=""];
97->15 [style = solid, label="fieldNames"];
43->185 [style = bold, label=""];
68->138 [style = solid, label="tokenList"];
56->83 [style = bold, label=""];
100->30 [style = bold, label=""];
225->155 [style = bold, label=""];
67->91 [style = bold, label=""];
32->254 [style = dashed, label="0"];
168->63 [style = bold, label=""];
163->194 [style = bold, label=""];
191->157 [style = solid, label="fieldNames"];
212->153 [style = solid, label="tokenList"];
247->251 [style = solid, label="result"];
221->66 [style = solid, label="result"];
153->123 [style = bold, label=""];
157->238 [style = bold, label=""];
113->11 [style = bold, label=""];
1->90 [style = bold, label=""];
62->10 [style = bold, label=""];
101->85 [style = bold, label=""];
241->193 [style = bold, label=""];
235->191 [style = bold, label=""];
122->236 [style = bold, label=""];
120->114 [style = bold, label=""];
66->254 [style = bold, label=""];
82->211 [style = bold, label=""];
175->200 [style = bold, label=""];
22->48 [style = dashed, label="0"];
109->37 [style = solid, label="indexPart"];
7->8 [style = bold, label=""];
87->92 [style = bold, label=""];
256->248 [style = bold, label=""];
132->31 [style = bold, label=""];
158->208 [style = bold, label=""];
107->52 [style = bold, label=""];
240->229 [style = bold, label=""];
215->228 [style = bold, label=""];
178->241 [style = bold, label=""];
238->214 [style = bold, label=""];
82->79 [style = bold, label=""];
147->20 [style = bold, label=""];
195->43 [style = solid, label="fieldTypes"];
190->174 [style = solid, label="keywordtok"];
159->223 [style = bold, label=""];
141->120 [style = bold, label=""];
105->130 [style = bold, label=""];
133->86 [style = bold, label=""];
243->85 [style = bold, label=""];
193->86 [style = bold, label=""];
1->235 [style = bold, label=""];
234->160 [style = bold, label=""];
31->110 [style = solid, label="tokenList"];
42->31 [style = bold, label=""];
185->104 [style = bold, label=""];
114->119 [style = solid, label="tokenList"];
67->91 [style = solid, label="tokenList"];
221->66 [style = bold, label=""];
206->196 [style = bold, label=""];
207->162 [style = bold, label=""];
119->28 [style = solid, label="tokenList"];
63->159 [style = solid, label="tokenList"];
12->76 [style = bold, label=""];
152->88 [style = bold, label=""];
36->245 [style = bold, label=""];
46->62 [style = bold, label=""];
160->220 [style = bold, label=""];
49->150 [style = bold, label=""];
151->105 [style = solid, label="tokenList"];
129->13 [style = solid, label="queryPart"];
140->53 [style = bold, label=""];
127->97 [style = bold, label=""];
246->256 [style = bold, label=""];
198->91 [style = bold, label=""];
115->121 [style = bold, label=""];
173->18 [style = solid, label="queryPart"];
245->216 [style = bold, label=""];
33->25 [style = bold, label=""];
161->217 [style = bold, label=""];
258->62 [style = bold, label=""];
13->21 [style = bold, label=""];
172->222 [style = solid, label="tokenList"];
93->78 [style = bold, label=""];
15->94 [style = bold, label=""];
144->6 [style = bold, label=""];
97->15 [style = bold, label=""];
62->246 [style = bold, label=""];
38->142 [style = bold, label=""];
20->143 [style = bold, label=""];
89->129 [style = solid, label="indexPart"];
4->45 [style = bold, label=""];
184->96 [style = solid, label="tokenList"];
184->96 [style = bold, label=""];
135->40 [style = bold, label=""];
248->247 [style = bold, label=""];
145->5 [style = bold, label=""];
149->118 [style = solid, label="textType"];
149->118 [style = bold, label=""];
209->177 [style = bold, label=""];
238->214 [style = solid, label="whitetok"];
50->166 [style = bold, label=""];
83->152 [style = bold, label=""];
161->217 [style = solid, label="tokenList"];
74->131 [style = bold, label=""];
106->70 [style = bold, label=""];
24->50 [style = bold, label=""];
8->106 [style = bold, label=""];
30->54 [style = bold, label=""];
17->27 [style = bold, label=""];
167->36 [style = bold, label=""];
62->221 [style = solid, label="request"];
79->108 [style = bold, label=""];
219->203 [style = bold, label=""];
65->109 [style = bold, label=""];
136->147 [style = bold, label=""];
188->212 [style = bold, label=""];
94->57 [style = bold, label=""];
232->189 [style = bold, label=""];
61->0 [style = bold, label=""];
242->156 [style = bold, label=""];
59->67 [style = bold, label=""];
96->219 [style = bold, label=""];
62->247 [style = solid, label="request"];
88->133 [style = bold, label=""];
103->77 [style = bold, label=""];
22->43 [style = bold, label=""];
137->145 [style = bold, label=""];
48->66 [style = bold, label=""];
250->249 [style = bold, label=""];
109->37 [style = bold, label=""];
171->218 [style = bold, label=""];
58->35 [style = bold, label=""];
47->101 [style = bold, label=""];
177->243 [style = bold, label=""];
6->113 [style = bold, label=""];
77->95 [style = solid, label="queryPart"];
247->251 [style = bold, label=""];
254->253 [style = bold, label=""];
43->32 [style = bold, label=""];
214->122 [style = bold, label=""];
21->1 [style = solid, label="tokenList"];
177->243 [style = solid, label="tokenList"];
205->210 [style = bold, label=""];
69->141 [style = bold, label=""];
210->199 [style = bold, label=""];
91->226 [style = bold, label=""];
66->149 [style = bold, label=""];
32->58 [style = bold, label=""];
106->169 [style = solid, label="tokenList"];
229->197 [style = bold, label=""];
202->239 [style = solid, label="nameTextType"];
94->57 [style = solid, label="whitetok"];
128->99 [style = bold, label=""];
32->58 [style = solid, label="tokenList"];
230->224 [style = solid, label="tokenList"];
170->188 [style = bold, label=""];
232->189 [style = solid, label="tokenList"];
11->48 [style = bold, label=""];
64->98 [style = bold, label=""];
31->110 [style = bold, label=""];
22->43 [style = solid, label="indexPart"];
211->179 [style = bold, label=""];
45->36 [style = bold, label=""];
120->114 [style = solid, label="indexPart"];
155->172 [style = bold, label=""];
185->104 [style = solid, label="textType"];
208->242 [style = bold, label=""];
194->182 [style = bold, label=""];
111->122 [style = bold, label=""];
230->224 [style = bold, label=""];
71->65 [style = bold, label=""];
117->71 [style = bold, label=""];
223->84 [style = bold, label=""];
102->17 [style = bold, label=""];
70->69 [style = bold, label=""];
25->183 [style = solid, label="indexPart"];
201->70 [style = bold, label=""];
69->141 [style = solid, label="nameTextType"];
237->178 [style = bold, label=""];
150->59 [style = bold, label=""];
236->168 [style = bold, label=""];
73->34 [style = bold, label=""];
84->19 [style = bold, label=""];
52->80 [style = bold, label=""];
166->173 [style = bold, label=""];
257->113 [style = bold, label=""];
149->113 [style = dashed, label="0"];
0->124 [style = bold, label=""];
199->198 [style = bold, label=""];
60->81 [style = bold, label=""];
203->192 [style = bold, label=""];
29->60 [style = bold, label=""];
26->51 [style = bold, label=""];
164->187 [style = bold, label=""];
252->257 [style = bold, label=""];
9->42 [style = bold, label=""];
40->107 [style = bold, label=""];
234->160 [style = solid, label="tokenList"];
239->25 [style = bold, label=""];
143->2 [style = bold, label=""];
36->3 [style = bold, label=""];
252->257 [style = solid, label="fieldTypes"];
95->87 [style = bold, label=""];
176->237 [style = bold, label=""];
216->94 [style = bold, label=""];
34->132 [style = bold, label=""];
44->93 [style = bold, label=""];
131->125 [style = solid, label="tokenList"];
224->126 [style = bold, label=""];
154->227 [style = bold, label=""];
10->246 [style = dashed, label="0"];
14->116 [style = bold, label=""];
106->169 [style = bold, label=""];
6->221 [style = bold, label=""];
57->89 [style = bold, label=""];
90->134 [style = bold, label=""];
99->106 [style = bold, label=""];
186->206 [style = bold, label=""];
53->24 [style = solid, label="queryPart"];
5->64 [style = solid, label="tokenList"];
146->7 [style = bold, label=""];
173->18 [style = bold, label=""];
89->129 [style = bold, label=""];
75->144 [style = bold, label=""];
249->259 [style = bold, label=""];
108->14 [style = bold, label=""];
195->43 [style = bold, label=""];
139->151 [style = bold, label=""];
86->170 [style = bold, label=""];
255->250 [style = solid, label="tokenList"];
146->215 [style = solid, label="tokenList"];
212->153 [style = bold, label=""];
114->119 [style = bold, label=""];
129->13 [style = bold, label=""];
8->128 [style = solid, label="tokenList"];
222->107 [style = bold, label=""];
105->130 [style = solid, label="queryPart"];
80->41 [style = bold, label=""];
25->183 [style = bold, label=""];
142->117 [style = bold, label=""];
162->230 [style = bold, label=""];
110->38 [style = bold, label=""];
108->14 [style = solid, label="tokenList"];
18->82 [style = bold, label=""];
85->171 [style = bold, label=""];
112->123 [style = bold, label=""];
190->174 [style = bold, label=""];
92->16 [style = bold, label=""];
165->175 [style = bold, label=""];
132->9 [style = solid, label="queryPart"];
172->222 [style = bold, label=""];
126->56 [style = bold, label=""];
255->250 [style = bold, label=""];
180->24 [style = bold, label=""];
87->190 [style = bold, label=""];
196->205 [style = bold, label=""];
48->66 [style = solid, label="fieldTypes"];
204->64 [style = bold, label=""];
115->181 [style = bold, label=""];
}
