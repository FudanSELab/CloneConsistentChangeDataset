digraph {
10 [style = filled, label = "Assert.assertTrue(Functions.all(empty,Functions.falsePredicate1()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertFalse(Functions.exists(ints,null))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "final List<Integer> ints = Arrays.asList(1,10,2)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertFalse(Functions.exists(ints,null))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Assert.assertFalse(Functions.exists(empty,Functions.truePredicate1()))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "testExists['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertFalse(Functions.exists(empty,Functions.truePredicate1()))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "final List<Integer> empty = Collections.emptyList()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testExists['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertFalse(Functions.all(ints,null))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertFalse(Functions.all(ints,null))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertFalse(Functions.exists(empty,Functions.falsePredicate1()))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "Assert.assertTrue(Functions.all(ints,null))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertTrue(Functions.all(empty,Functions.truePredicate1()))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testAll['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertFalse(Functions.exists(empty,Functions.falsePredicate1()))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5->13 [style = dashed, label="0"];
13->10 [style = bold, label=""];
6->3 [style = bold, label=""];
0->7 [style = solid, label="empty"];
10->15 [style = bold, label=""];
0->10 [style = solid, label="empty"];
0->12 [style = bold, label=""];
0->2 [style = bold, label=""];
0->15 [style = solid, label="empty"];
1->3 [style = bold, label=""];
5->9 [style = dashed, label="0"];
0->4 [style = solid, label="empty"];
2->4 [style = bold, label=""];
2->8 [style = dashed, label="0"];
3->0 [style = bold, label=""];
8->7 [style = bold, label=""];
7->9 [style = bold, label=""];
2->12 [style = dashed, label="0"];
3->2 [style = solid, label="ints"];
0->5 [style = solid, label="empty"];
11->3 [style = bold, label=""];
4->7 [style = dashed, label="0"];
3->13 [style = solid, label="ints"];
12->14 [style = bold, label=""];
0->8 [style = bold, label=""];
3->14 [style = solid, label="ints"];
14->13 [style = bold, label=""];
4->5 [style = bold, label=""];
3->8 [style = solid, label="ints"];
3->12 [style = solid, label="ints"];
0->9 [style = solid, label="empty"];
}
