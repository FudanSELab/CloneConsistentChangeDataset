digraph {
1 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "DefaultKeyedValue<String> v2 = (DefaultKeyedValue)v1.clone()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "v1.addValue(\"Key 2\",null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "DefaultKeyedValue<String> v1 = new DefaultKeyedValue<>(\"Test\",45.5)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertTrue(v1.equals(v2))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "v1.addValue(\"Key 1\",23)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertFalse(v1.equals(v2))@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "DefaultKeyedValue<String> v2 = CloneUtils.clone(v1)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "v1.addValue(\"Key 3\",42)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertTrue(v1.getClass() == v2.getClass())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "DefaultKeyedValues<String> v2 = (DefaultKeyedValues)TestUtils.serialised(v1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "v2.setValue(12.3)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "DefaultKeyedValues<String> v1 = new DefaultKeyedValues<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(v1 != v2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(v1,v2)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3->4 [style = solid, label="v2"];
6->3 [style = bold, label=""];
9->0 [style = solid, label="v2"];
15->10 [style = bold, label=""];
9->0 [style = bold, label=""];
6->9 [style = solid, label="v1"];
9->4 [style = solid, label="v2"];
15->12 [style = solid, label="v1"];
3->2 [style = solid, label="v2"];
8->6 [style = bold, label=""];
3->0 [style = solid, label="v2"];
7->4 [style = bold, label=""];
11->15 [style = bold, label=""];
3->0 [style = bold, label=""];
15->13 [style = solid, label="v1"];
12->13 [style = bold, label=""];
5->2 [style = bold, label=""];
1->6 [style = bold, label=""];
10->16 [style = bold, label=""];
3->9 [style = dashed, label="0"];
6->15 [style = dashed, label="0"];
9->2 [style = solid, label="v2"];
14->12 [style = bold, label=""];
16->14 [style = bold, label=""];
12->13 [style = solid, label="v2"];
2->7 [style = bold, label=""];
6->9 [style = bold, label=""];
6->0 [style = solid, label="v1"];
0->5 [style = bold, label=""];
}
