digraph {
4 [style = filled, label = "assertThat(iterator.hasNext()).isFalse()@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "MockPropertySource secondPropertySource = new MockPropertySource()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Map<ConfigDataResource,ConfigData> secondImported = new LinkedHashMap<>()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "List<ConfigDataLocation> secondLocations = Arrays.asList(LOCATION_2)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "secondImported.put(new TestConfigDataLocation(\"b\"),new ConfigData(Arrays.asList(secondPropertySource)))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "MockPropertySource initialPropertySource = new MockPropertySource()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Iterator<ConfigDataEnvironmentContributor> iterator = withProcessedImports.iterator()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "imported.put(new TestConfigDataLocation(\"a\"),new ConfigData(Arrays.asList(propertySource)))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "ConfigDataEnvironmentContributors contributors = new ConfigDataEnvironmentContributors(this.logFactory,this.bootstrapContext,Arrays.asList(contributor))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "List<ConfigDataLocation> initialLocations = Arrays.asList(LOCATION_1)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "secondImported.put(new TestConfigDataResource(\"b\"),new ConfigData(Arrays.asList(secondPropertySource)))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "withProcessedImportsProvidesLocationResolverContextWithAccessToParent['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "withProcessedImportsResolvesAndLoads['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "initialPropertySource.setProperty(\"spring.config.import\",\"location2\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "initialImported.put(new TestConfigDataResource(\"a\"),new ConfigData(Arrays.asList(initialPropertySource)))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Map<ConfigDataLocation,ConfigData> secondImported = new LinkedHashMap<>()@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "List<String> secondLocations = Arrays.asList(\"secondimport\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "given(this.importer.resolveAndLoad(eq(this.activationContext),any(),any(),eq(locations))).willReturn(imported)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "withProcessedImportsProvidesLocationResolverContextWithAccessToParent['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertThat(iterator.next().getPropertySource()).isSameAs(propertySource)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "List<String> locations = Arrays.asList(\"testimport\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(context.getParent()).hasToString(\"a\")@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "initialImported.put(new TestConfigDataLocation(\"a\"),new ConfigData(Arrays.asList(initialPropertySource)))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "ConfigDataEnvironmentContributor contributor = ConfigDataEnvironmentContributor.ofInitialImport(\"testimport\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "ConfigDataEnvironmentContributor contributor = ConfigDataEnvironmentContributor.ofInitialImport(LOCATION_1)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "List<String> initialLocations = Arrays.asList(\"initialimport\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "ConfigDataEnvironmentContributor contributor = ConfigDataEnvironmentContributor.ofInitialImport(\"initialimport\")@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "given(this.importer.resolveAndLoad(eq(this.activationContext),any(),any(),eq(initialLocations))).willReturn(initialImported)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "MockPropertySource propertySource = new MockPropertySource()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "this.importer = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "given(this.importer.resolveAndLoad(eq(this.activationContext),any(),any(),eq(secondLocations))).willReturn(secondImported)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Map<ConfigDataResource,ConfigData> initialImported = new LinkedHashMap<>()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "ConfigDataEnvironmentContributors withProcessedImports = contributors.withProcessedImports(this.importer,this.activationContext)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "initialPropertySource.setProperty(\"spring.config.import\",\"secondimport\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "assertThat(iterator.next().getKind()).isEqualTo(Kind.ROOT)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "verify(this.importer).resolveAndLoad(any(),this.locationResolverContext.capture(),any(),eq(secondLocations))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ConfigDataLocationResolverContext context = this.locationResolverContext.getValue()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertThat(iterator.next().getKind()).isEqualTo(Kind.INITIAL_IMPORT)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "contributors.withProcessedImports(this.importer,this.activationContext)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Map<ConfigDataLocation,ConfigData> initialImported = new LinkedHashMap<>()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "Map<ConfigDataLocation,ConfigData> imported = new LinkedHashMap<>()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->21 [style = dashed, label="0"];
15->10 [style = bold, label=""];
2->19 [style = dashed, label="0"];
16->11 [style = bold, label=""];
40->35 [style = bold, label=""];
12->5 [style = bold, label=""];
35->32 [style = solid, label="propertySource"];
13->36 [style = dashed, label="0"];
9->2 [style = bold, label=""];
29->39 [style = bold, label=""];
6->4 [style = solid, label="contributor"];
16->35 [style = dashed, label="0"];
0->32 [style = dashed, label="0"];
17->9 [style = bold, label=""];
33->28 [style = bold, label=""];
4->13 [style = bold, label=""];
8->3 [style = bold, label=""];
18->15 [style = bold, label=""];
14->22 [style = bold, label=""];
16->26 [style = bold, label=""];
22->9 [style = bold, label=""];
34->33 [style = bold, label=""];
15->13 [style = solid, label="importer"];
11->26 [style = dashed, label="0"];
3->6 [style = bold, label=""];
14->17 [style = bold, label=""];
17->22 [style = dashed, label="0"];
20->14 [style = bold, label=""];
23->3 [style = bold, label=""];
29->39 [style = solid, label="contributor"];
0->27 [style = dashed, label="0"];
19->3 [style = solid, label="secondImported"];
32->30 [style = bold, label=""];
9->8 [style = solid, label="secondPropertySource"];
31->15 [style = bold, label=""];
30->29 [style = bold, label=""];
37->30 [style = solid, label="imported"];
22->12 [style = solid, label="secondLocations"];
1->20 [style = dashed, label="0"];
24->16 [style = bold, label=""];
6->4 [style = bold, label=""];
26->27 [style = bold, label=""];
28->4 [style = bold, label=""];
11->0 [style = bold, label=""];
13->12 [style = bold, label=""];
10->40 [style = dashed, label="0"];
10->16 [style = bold, label=""];
35->37 [style = bold, label=""];
8->23 [style = dashed, label="0"];
0->1 [style = bold, label=""];
19->23 [style = bold, label=""];
15->24 [style = bold, label=""];
0->14 [style = solid, label="initialImported"];
38->34 [style = bold, label=""];
27->14 [style = solid, label="initialImported"];
9->23 [style = solid, label="secondPropertySource"];
25->15 [style = bold, label=""];
9->19 [style = bold, label=""];
37->32 [style = bold, label=""];
5->7 [style = bold, label=""];
3->21 [style = bold, label=""];
15->40 [style = bold, label=""];
1->14 [style = bold, label=""];
15->36 [style = solid, label="importer"];
21->4 [style = solid, label="contributor"];
7->33 [style = dashed, label="0"];
36->38 [style = bold, label=""];
16->1 [style = solid, label="initialPropertySource"];
39->36 [style = bold, label=""];
27->20 [style = bold, label=""];
10->24 [style = dashed, label="0"];
2->3 [style = solid, label="secondImported"];
2->8 [style = bold, label=""];
17->12 [style = solid, label="secondLocations"];
21->4 [style = bold, label=""];
35->34 [style = solid, label="propertySource"];
16->20 [style = solid, label="initialPropertySource"];
}
