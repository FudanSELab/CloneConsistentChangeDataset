digraph {
5 [style = filled, label = "testComplexQueryRegex['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "TextFlowEqualityHelper.assertEquals(expectedTexts,description)@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "TextFlow description = createDescription(query,EnumSet.of(SearchRules.SearchFlags.REGULAR_EXPRESSION))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "testComplexQueryRegex['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TextFlow description = createDescription(query,true,true)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testComplexQueryCaseSensitiveRegex['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "TextFlow description = createDescription(query,false,true)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "List<Text> expectedTexts = Arrays.asList(TooltipTextUtil.createText(\"This search contains entries in which \"),TooltipTextUtil.createText(\"not \"),TooltipTextUtil.createText(\"the field \"),TooltipTextUtil.createText(\"a\",TooltipTextUtil.TextType.BOLD),TooltipTextUtil.createText(\" contains the regular expression \"),TooltipTextUtil.createText(\"b\",TooltipTextUtil.TextType.BOLD),TooltipTextUtil.createText(\" and \"),TooltipTextUtil.createText(\"the field \"),TooltipTextUtil.createText(\"c\",TooltipTextUtil.TextType.BOLD),TooltipTextUtil.createText(\" contains the regular expression \"),TooltipTextUtil.createText(\"e\",TooltipTextUtil.TextType.BOLD),TooltipTextUtil.createText(\" or \"),TooltipTextUtil.createText(\"the field \"),TooltipTextUtil.createText(\"e\",TooltipTextUtil.TextType.BOLD),TooltipTextUtil.createText(\" contains the regular expression \"),TooltipTextUtil.createText(\"x\",TooltipTextUtil.TextType.BOLD),TooltipTextUtil.createText(\". \"),TooltipTextUtil.createText(\"The search is case sensitive.\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "String query = \"not a=b and c=e or e=\"x\"\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "List<Text> expectedTexts = Arrays.asList(TooltipTextUtil.createText(\"This search contains entries in which \"),TooltipTextUtil.createText(\"not \"),TooltipTextUtil.createText(\"the field \"),TooltipTextUtil.createText(\"a\",TooltipTextUtil.TextType.BOLD),TooltipTextUtil.createText(\" contains the regular expression \"),TooltipTextUtil.createText(\"b\",TooltipTextUtil.TextType.BOLD),TooltipTextUtil.createText(\" and \"),TooltipTextUtil.createText(\"the field \"),TooltipTextUtil.createText(\"c\",TooltipTextUtil.TextType.BOLD),TooltipTextUtil.createText(\" contains the regular expression \"),TooltipTextUtil.createText(\"e\",TooltipTextUtil.TextType.BOLD),TooltipTextUtil.createText(\" or \"),TooltipTextUtil.createText(\"the field \"),TooltipTextUtil.createText(\"e\",TooltipTextUtil.TextType.BOLD),TooltipTextUtil.createText(\" contains the regular expression \"),TooltipTextUtil.createText(\"x\",TooltipTextUtil.TextType.BOLD),TooltipTextUtil.createText(\". \"),TooltipTextUtil.createText(\"The search is case insensitive.\"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
4->3 [style = bold, label=""];
1->4 [style = bold, label=""];
2->9 [style = solid, label="query"];
7->3 [style = solid, label="expectedTexts"];
2->1 [style = bold, label=""];
0->2 [style = bold, label=""];
2->4 [style = solid, label="query"];
4->6 [style = dashed, label="0"];
2->6 [style = solid, label="query"];
7->9 [style = bold, label=""];
4->9 [style = dashed, label="0"];
5->2 [style = bold, label=""];
1->6 [style = bold, label=""];
9->3 [style = solid, label="description"];
8->2 [style = bold, label=""];
4->3 [style = solid, label="description"];
1->3 [style = solid, label="expectedTexts"];
9->3 [style = bold, label=""];
6->3 [style = solid, label="description"];
2->7 [style = bold, label=""];
1->7 [style = dashed, label="0"];
}
