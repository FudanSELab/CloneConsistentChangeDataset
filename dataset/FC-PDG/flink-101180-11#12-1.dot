digraph {
1 [style = filled, label = "testRestart['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(55,sum)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "executeAndRunAssertions(env)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "env.setParallelism(4)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "sum += l@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "{FailingMapper2.failuresBeforeSuccess = 1}@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "testRestartMultipleTimes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<Long> resultCollection = new ArrayList<>()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "long sum = 0@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "sum += l@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "List<Long> resultCollection = env.generateSequence(1,10).rebalance().map(new FailingMapper2<>()).reduce(null).collect()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "env.setRestartStrategy(RestartStrategies.fixedDelayRestart(5,100))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "executeAndRunAssertions(env)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertEquals(55,sum)@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testRestart['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "{FailingMapper2.failuresBeforeSuccess = 1}@@@15@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "env.generateSequence(1,10).rebalance().map(new FailingMapper2<>()).reduce(null).output(new LocalCollectionOutputFormat<>(resultCollection))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "env.generateSequence(1,10).rebalance().map(new FailingMapper3<>()).reduce(null).output(new LocalCollectionOutputFormat<>(resultCollection))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "sum += l@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "{FailingMapper3.failuresBeforeSuccess = 3}@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(55,sum)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "long sum = 0@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9->22 [style = bold, label=""];
4->9 [style = bold, label=""];
5->8 [style = bold, label=""];
18->3 [style = bold, label=""];
11->12 [style = solid, label="sum"];
22->19 [style = bold, label=""];
20->9 [style = bold, label=""];
1->3 [style = bold, label=""];
11->12 [style = bold, label=""];
6->0 [style = bold, label=""];
16->17 [style = bold, label=""];
9->7 [style = bold, label=""];
2->4 [style = solid, label="env"];
19->16 [style = bold, label=""];
7->6 [style = solid, label="sum"];
8->13 [style = dashed, label="0"];
5->21 [style = bold, label=""];
12->10 [style = bold, label=""];
21->20 [style = bold, label=""];
15->11 [style = bold, label=""];
3->2 [style = bold, label=""];
2->9 [style = solid, label="env"];
3->20 [style = solid, label="resultCollection"];
5->13 [style = bold, label=""];
3->8 [style = solid, label="resultCollection"];
7->6 [style = bold, label=""];
19->16 [style = solid, label="sum"];
14->2 [style = bold, label=""];
13->15 [style = bold, label=""];
8->4 [style = bold, label=""];
2->5 [style = bold, label=""];
}
