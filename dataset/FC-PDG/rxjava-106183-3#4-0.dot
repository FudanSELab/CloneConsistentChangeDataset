digraph {
0 [style = filled, label = "final TestSubscriber<Integer> ts = new TestSubscriber<Integer>(2L)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "conditionalCancel2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "TestSubscriber<Integer> ts = new TestSubscriber<Integer>(2L){@Override public void onNext(Integer t){super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1777a2btif (t == 2) {cancel()onComplete()}}}@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final TestSubscriber<Integer> ts = new TestSubscriber<>(2L)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "ts.assertResult(1,2)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "syncFusedCancelAfterRequestConditional2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ts.awaitDone(5,TimeUnit.SECONDS).assertResult(1,2)@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Flowable.range(1,2).filter(Functions.alwaysTrue()).subscribe(ts)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Flowable.range(1,2).observeOn(Schedulers.single()).filter(Functions.alwaysTrue()).subscribe(ts)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "syncFusedCancelAfterRequestConditional2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0->3 [style = bold, label=""];
5->3 [style = bold, label=""];
9->6 [style = solid, label="ts"];
0->3 [style = solid, label="ts"];
2->0 [style = bold, label=""];
0->9 [style = dashed, label="0"];
5->3 [style = solid, label="ts"];
6->7 [style = bold, label=""];
3->1 [style = bold, label=""];
0->5 [style = dashed, label="0"];
4->5 [style = bold, label=""];
9->6 [style = bold, label=""];
8->9 [style = bold, label=""];
}
