digraph {
17 [style = filled, label = "final JobID wrongJobId = new JobID()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Exception f@@@37@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "unknownJobFuture.get(deadline.timeLeft().toMillis(),TimeUnit.MILLISECONDS)@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(JobStatus.RUNNING,jobStatus.state())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "Assert.assertTrue(\"GOT: \" + e.getCause().getMessage(),e.getCause() instanceof RuntimeException)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "env.setStateBackend(stateBackend)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final Deadline deadline = Deadline.now().plus(TEST_TIMEOUT)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "testWrongJobIdAndWrongQueryableStateName['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "env.setParallelism(maxParallelism)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "fail()@@@39@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(JobStatus.RUNNING,jobStatusFuture.get(deadline.timeLeft().toMillis(),TimeUnit.MILLISECONDS))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "Assert.assertTrue(\"GOT: \" + e.getCause().getMessage(),e.getCause().getMessage().contains(\"FlinkJobNotFoundException: Could not find Flink job (\" + wrongJobId + \")\"))@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "fail()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "CompletableFuture<TestingJobManagerMessages.JobStatusIs> runningFuture = notifyWhenJobStatusIs(closableJobGraph.getJobId(),JobStatus.RUNNING,deadline)@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testWrongJobIdAndWrongQueryableStateName['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "final JobID jobId = autoCancellableJob.getJobId()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "env.setRestartStrategy(RestartStrategies.fixedDelayRestart(Integer.MAX_VALUE,1000L))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testValueState['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "source.keyBy(new KeySelector<Tuple2<Integer,Long>,Integer>(){@Override public Integer getKey(Tuple2<Integer,Long> value){return value.f0}}).asQueryableState(\"hakuna\",valueState)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final Deadline deadline = TEST_TIMEOUT.fromNow()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "unknownQSName.get(deadline.timeLeft().toMillis(),TimeUnit.MILLISECONDS)@@@42@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "clusterClient.setDetached(true)@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "unknownJobFuture.get(deadline.timeLeft().toMillis(),TimeUnit.MILLISECONDS)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "CompletableFuture<ValueState<Tuple2<Integer,Long>>> unknownQSName = client.getKvState(closableJobGraph.getJobId(),\"wrong-hakuna\",0,BasicTypeInfo.INT_TYPE_INFO,valueState)@@@36@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "DataStream<Tuple2<Integer,Long>> source = env.addSource(new TestAscendingValueSource(numElements))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "CompletableFuture<ValueState<Tuple2<Integer,Long>>> unknownJobFuture = client.getKvState(wrongJobId,\"hakuna\",0,BasicTypeInfo.INT_TYPE_INFO,valueState)@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "fail(\"Unexpected type of exception: \" + f.getMessage())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ValueStateDescriptor<Tuple2<Integer,Long>> valueState = new ValueStateDescriptor<>(\"any\",source.getType())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "fail()@@@43@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "final JobID wrongJobId = new JobID()@@@23@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "CompletableFuture<JobStatus> jobStatusFuture = clusterClient.getJobStatus(closableJobGraph.getJobId())@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "clusterClient.submitJob(closableJobGraph.getJobGraph(),.getClassLoader())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "ExecutionException e@@@33@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final long numElements = 1024L@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "jobStatusFuture = clusterClient.getJobStatus(closableJobGraph.getJobId())@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "CompletableFuture<ValueState<Tuple2<Integer,Long>>> unknownQSName = client.getKvState(closableJobGraph.getJobId(),\"wrong-hakuna\",0,BasicTypeInfo.INT_TYPE_INFO,valueState)@@@40@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "Thread.sleep(50)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "cluster.submitJobDetached(jobGraph)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "executeValueQuery(deadline,client,jobId,\"hakuna\",valueState,numElements)@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "deadline.hasTimeLeft() && !jobStatusFuture.get(deadline.timeLeft().toMillis(),TimeUnit.MILLISECONDS).equals(JobStatus.RUNNING)@@@22@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "cluster.submitJobDetached(closableJobGraph.getJobGraph())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "CompletableFuture<ValueState<Tuple2<Integer,Long>>> unknownJobFuture = client.getKvState(wrongJobId,\"hakuna\",0,BasicTypeInfo.INT_TYPE_INFO,valueState)@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "TestingJobManagerMessages.JobStatusIs jobStatus = runningFuture.get(deadline.timeLeft().toMillis(),TimeUnit.MILLISECONDS)@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final JobGraph jobGraph = autoCancellableJob.getJobGraph()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "ExecutionException e@@@29@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39->37 [style = bold, label=""];
19->42 [style = bold, label=""];
17->25 [style = bold, label=""];
14->24 [style = bold, label=""];
18->45 [style = solid, label="valueState"];
35->27 [style = bold, label=""];
16->37 [style = bold, label=""];
27->36 [style = bold, label=""];
44->21 [style = bold, label=""];
42->43 [style = bold, label=""];
8->15 [style = bold, label=""];
12->5 [style = bold, label=""];
3->37 [style = bold, label=""];
11->45 [style = solid, label="numElements"];
26->17 [style = bold, label=""];
21->34 [style = dashed, label="0"];
33->15 [style = bold, label=""];
9->2 [style = bold, label=""];
7->10 [style = bold, label=""];
21->9 [style = solid, label="deadline"];
0->17 [style = bold, label=""];
6->21 [style = bold, label=""];
11->23 [style = solid, label="numElements"];
14->24 [style = dotted, label="true"];
18->10 [style = solid, label="valueState"];
29->31 [style = bold, label=""];
11->4 [style = bold, label=""];
25->3 [style = bold, label=""];
30->26 [style = bold, label=""];
18->19 [style = solid, label="valueState"];
18->19 [style = bold, label=""];
24->39 [style = bold, label=""];
37->29 [style = bold, label=""];
8->15 [style = dotted, label="true"];
8->16 [style = dotted, label="true"];
2->27 [style = dashed, label="0"];
16->25 [style = bold, label=""];
17->33 [style = bold, label=""];
15->16 [style = bold, label=""];
3->22 [style = bold, label=""];
32->30 [style = bold, label=""];
30->40 [style = dotted, label="true"];
34->11 [style = bold, label=""];
1->23 [style = bold, label=""];
2->13 [style = bold, label=""];
2->43 [style = dashed, label="0"];
5->1 [style = bold, label=""];
36->30 [style = bold, label=""];
18->25 [style = solid, label="valueState"];
21->11 [style = bold, label=""];
19->9 [style = bold, label=""];
7->10 [style = solid, label="wrongJobId"];
21->45 [style = solid, label="deadline"];
24->25 [style = bold, label=""];
43->41 [style = solid, label="jobGraph"];
19->35 [style = bold, label=""];
28->3 [style = dotted, label="true"];
10->0 [style = bold, label=""];
42->45 [style = solid, label="jobId"];
14->39 [style = dotted, label="true"];
20->30 [style = dashed, label="0"];
38->34 [style = bold, label=""];
40->32 [style = bold, label=""];
18->33 [style = solid, label="valueState"];
30->32 [style = dotted, label="true"];
4->12 [style = bold, label=""];
18->37 [style = solid, label="valueState"];
30->40 [style = bold, label=""];
43->41 [style = bold, label=""];
41->45 [style = bold, label=""];
17->33 [style = solid, label="wrongJobId"];
28->3 [style = bold, label=""];
20->7 [style = bold, label=""];
23->18 [style = bold, label=""];
13->20 [style = bold, label=""];
}
