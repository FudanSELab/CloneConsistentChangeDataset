digraph {
12 [style = filled, label = "throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final JsonRepresentation selfLink = linkBuilder.withArguments(arguments).build()@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final String url = \"domain-types/\" + domainType + \"/type-actions/isSupertypeOf/invoke\"@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "val domainTypeSpec = getSpecificationLoader().specForLogicalTypeName(domainType).orElse(null)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final TypeActionResultReprRenderer renderer = new TypeActionResultReprRenderer(resourceContext,null,JsonRepresentation.newMap())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "@QueryParam(\"supertype\") final String superTypeStr@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "@QueryParam(\"args\") final String argsUrlEncoded@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "@PathParam(\"domainType\") final String domainType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "domainTypeIsSupertypeOf['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final String subtype = domainTypeFor(subTypeStr,argsUrlEncoded,\"subtype\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final String supertype = domainTypeFor(superTypeStr,argsUrlEncoded,\"supertype\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "@QueryParam(\"args\") final String argsUrlEncoded@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "final String url = \"domain-types/\" + domainType + \"/type-actions/isSubtypeOf/invoke\"@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "domainTypeSpec == null || supertypeSpec == null@@@7@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "domainTypeSpec == null || subtypeSpec == null@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "renderer.with(domainTypeSpec).withSelf(selfLink).withValue(value)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final LinkBuilder linkBuilder = LinkBuilder.newBuilder(resourceContext,Rel.SELF.getName(),RepresentationType.TYPE_ACTION_RESULT,url)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "domainTypeIsSubtypeOf['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "@PathParam(\"domainType\") final String domainType@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "@QueryParam(\"subtype\") final String subTypeStr@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final boolean value = domainTypeSpec.isOfType(supertypeSpec)@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "@PathParam(\"domainType\") final String domainType@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final boolean value = subtypeSpec.isOfType(domainTypeSpec)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "domainTypeIsSubtypeOf['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "val resourceContext = createResourceContext(ResourceDescriptor.generic(Where.ANYWHERE,RepresentationService.Intent.NOT_APPLICABLE))@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "val supertypeSpec = getSpecificationLoader().specForLogicalTypeName(supertype).orElse(null)@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "val subtypeSpec = getSpecificationLoader().specForLogicalTypeName(subtype).orElse(null)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final JsonRepresentation arguments = DomainTypeReprRenderer.argumentsTo(resourceContext,\"supertype\",supertypeSpec)@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return Responses.ofOk(renderer,Caching.ONE_DAY).build()@@@17@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final JsonRepresentation arguments = DomainTypeReprRenderer.argumentsTo(resourceContext,\"subtype\",subtypeSpec)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "@QueryParam(\"supertype\") final String superTypeStr@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13->25 [style = bold, label=""];
19->14 [style = dotted, label="true"];
13->7 [style = solid, label="resourceContext"];
3->4 [style = solid, label="value"];
16->30 [style = solid, label="domainTypeSpec"];
9->12 [style = dotted, label="true"];
11->15 [style = solid, label="superTypeStr"];
10->28 [style = bold, label=""];
13->0 [style = solid, label="resourceContext"];
14->15 [style = solid, label="argsUrlEncoded"];
19->20 [style = dotted, label="true"];
16->6 [style = bold, label=""];
16->24 [style = bold, label=""];
3->27 [style = dashed, label="0"];
22->25 [style = solid, label="argsUrlEncoded"];
1->27 [style = bold, label=""];
19->18 [style = dotted, label="true"];
1->3 [style = bold, label=""];
23->28 [style = solid, label="domainType"];
28->7 [style = bold, label=""];
30->12 [style = dotted, label="true"];
10->17 [style = bold, label=""];
6->3 [style = solid, label="supertypeSpec"];
7->0 [style = bold, label=""];
29->23 [style = dotted, label="true"];
27->4 [style = solid, label="value"];
9->10 [style = bold, label=""];
13->10 [style = solid, label="resourceContext"];
15->16 [style = bold, label=""];
25->16 [style = bold, label=""];
29->26 [style = dotted, label="true"];
3->4 [style = bold, label=""];
13->21 [style = solid, label="resourceContext"];
14->26 [style = dashed, label="0"];
24->30 [style = bold, label=""];
2->13 [style = bold, label=""];
28->7 [style = solid, label="url"];
2->11 [style = dotted, label="true"];
17->7 [style = bold, label=""];
17->28 [style = dashed, label="0"];
6->0 [style = solid, label="supertypeSpec"];
29->22 [style = dotted, label="true"];
27->4 [style = bold, label=""];
15->25 [style = dashed, label="0"];
12->10 [style = bold, label=""];
6->9 [style = solid, label="supertypeSpec"];
30->12 [style = bold, label=""];
16->27 [style = solid, label="domainTypeSpec"];
24->21 [style = solid, label="subtypeSpec"];
0->21 [style = dashed, label="0"];
6->24 [style = dashed, label="0"];
0->1 [style = bold, label=""];
21->1 [style = bold, label=""];
30->10 [style = bold, label=""];
17->7 [style = solid, label="url"];
26->25 [style = solid, label="subTypeStr"];
16->9 [style = solid, label="domainTypeSpec"];
7->21 [style = bold, label=""];
2->14 [style = dotted, label="true"];
13->15 [style = bold, label=""];
24->30 [style = solid, label="subtypeSpec"];
9->12 [style = bold, label=""];
6->9 [style = bold, label=""];
8->17 [style = solid, label="domainType"];
4->5 [style = bold, label=""];
9->30 [style = dashed, label="0"];
2->8 [style = dotted, label="true"];
29->13 [style = bold, label=""];
}
