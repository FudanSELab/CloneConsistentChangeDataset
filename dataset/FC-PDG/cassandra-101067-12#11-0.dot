digraph {
3 [style = filled, label = "writer.sync()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final long minToken@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "final SortedMap<Long,LongSet> toks = new TreeMap<Long,LongSet>(){}@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "generateTree['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "builder.finish()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "builder.write(writer)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return new TokenTree(new MappedBuffer(reader))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "reader = RandomAccessReader.open(treeFile)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "RandomAccessReader reader = null@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final File treeFile = FileUtils.createTempFile(\"token-tree-\",\"db\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final TokenTreeBuilder builder = isStatic? new StaticTokenTreeBuilder(new FakeCombinedTerm(toks)): new DynamicTokenTreeBuilder(toks)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "builder.write(writer)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "writer.sync()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "{FileUtils.closeQuietly(reader)}@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "boolean isStatic@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final File treeFile = FileUtils.createTempFile(\"token-tree-get-test\",\"tt\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "boolean isStatic@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final RandomAccessReader reader = RandomAccessReader.open(treeFile)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "TokenTreeBuilder builder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "return new TokenTree(new MappedBuffer(reader))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "treeFile.deleteOnExit()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final long maxToken@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "buildTree['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "treeFile.deleteOnExit()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final long maxToken@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "builder.finish()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "generateTree['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13->5 [style = solid, label="reader"];
25->24 [style = solid, label="reader"];
1->25 [style = dashed, label="0"];
26->18 [style = bold, label=""];
10->2 [style = bold, label=""];
8->5 [style = bold, label=""];
13->8 [style = solid, label="reader"];
11->12 [style = dotted, label="true"];
12->23 [style = dashed, label="0"];
12->2 [style = solid, label="isStatic"];
25->24 [style = bold, label=""];
19->22 [style = bold, label=""];
11->0 [style = dotted, label="true"];
22->20 [style = bold, label=""];
16->15 [style = dotted, label="true"];
16->10 [style = bold, label=""];
3->1 [style = bold, label=""];
7->3 [style = bold, label=""];
19->23 [style = dotted, label="true"];
21->25 [style = bold, label=""];
16->12 [style = dotted, label="true"];
11->10 [style = bold, label=""];
4->9 [style = bold, label=""];
11->6 [style = dotted, label="true"];
20->25 [style = solid, label="treeFile"];
6->2 [style = solid, label="isStatic"];
18->21 [style = bold, label=""];
2->14 [style = bold, label=""];
4->20 [style = dashed, label="0"];
13->8 [style = bold, label=""];
14->4 [style = bold, label=""];
4->13 [style = solid, label="treeFile"];
16->17 [style = dotted, label="true"];
20->26 [style = bold, label=""];
10->2 [style = solid, label="toks"];
1->13 [style = bold, label=""];
9->7 [style = bold, label=""];
}
