digraph {
19 [style = filled, label = "AggregationContext context = createAggregationContext(indexSearcher,new MatchAllDocsQuery(),fieldType)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertTrue(queryShardContext.isCacheable())@@@16@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "context = createAggregationContext(indexSearcher,new MatchAllDocsQuery(),fieldType)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "assertTrue(AggregationInspectionHelper.hasValue(min))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertFalse(queryShardContext.isCacheable())@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "IndexSearcher indexSearcher = newSearcher(indexReader,true,true)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "MinAggregationBuilder aggregationBuilder = new MinAggregationBuilder(\"min\").field(\"number\").script(new Script(ScriptType.INLINE,MockScriptEngine.NAME,INVERT_SCRIPT,Collections.emptyMap()))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "createAggregator(nonDeterministicAggregationBuilder,context)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "indexWriter.close()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(\"number\",NumberFieldMapper.NumberType.INTEGER)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(2.0,min.getValue(),0)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testScriptCaching['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertTrue(queryShardContext.isCacheable())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "InternalMin min = searchAndReduce(indexSearcher,new MatchAllDocsQuery(),aggregationBuilder,fieldType)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(min.getValue() >= 0.0 && min.getValue() <= 1.0)@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "indexWriter.close()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testCaching['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertTrue(AggregationInspectionHelper.hasValue(min))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "MinAggregationBuilder nonDeterministicAggregationBuilder = new MinAggregationBuilder(\"min\").field(\"number\").script(new Script(ScriptType.INLINE,MockScriptEngine.NAME,RANDOM_SCRIPT,Collections.emptyMap()))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "RandomIndexWriter indexWriter = new RandomIndexWriter(random(),directory)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertTrue(context.isCacheable())@@@19@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "testScriptCaching['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "createAggregator(aggregationBuilder,context)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "InternalMin min = searchAndReduce(indexSearcher,new MatchAllDocsQuery(),nonDeterministicAggregationBuilder,fieldType)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "assertFalse(context.isCacheable())@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "indexWriter.addDocument(singleton(new NumericDocValuesField(\"number\",2)))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "indexWriter.addDocument(singleton(new NumericDocValuesField(\"number\",3)))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(-7.0,min.getValue(),0)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "MinAggregationBuilder aggregationBuilder = new MinAggregationBuilder(\"min\").field(\"number\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "indexWriter.addDocument(singleton(new NumericDocValuesField(\"number\",7)))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "indexSearcher = newSearcher(indexReader,true,true)@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "min = searchAndReduce(indexSearcher,new MatchAllDocsQuery(),aggregationBuilder,fieldType)@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
14->16 [style = bold, label=""];
4->10 [style = bold, label=""];
2->17 [style = bold, label=""];
16->13 [style = bold, label=""];
11->15 [style = solid, label="aggregationBuilder"];
28->18 [style = bold, label=""];
16->28 [style = solid, label="min"];
5->9 [style = bold, label=""];
17->16 [style = solid, label="fieldType"];
29->30 [style = bold, label=""];
10->14 [style = bold, label=""];
19->20 [style = solid, label="context"];
8->18 [style = bold, label=""];
19->20 [style = bold, label=""];
17->23 [style = solid, label="fieldType"];
13->18 [style = solid, label="min"];
22->21 [style = bold, label=""];
16->23 [style = solid, label="indexSearcher"];
11->29 [style = dashed, label="0"];
11->22 [style = solid, label="aggregationBuilder"];
3->6 [style = bold, label=""];
17->15 [style = solid, label="fieldType"];
11->12 [style = bold, label=""];
7->0 [style = bold, label=""];
10->26 [style = bold, label=""];
13->19 [style = dashed, label="0"];
16->19 [style = bold, label=""];
24->23 [style = bold, label=""];
25->17 [style = bold, label=""];
17->19 [style = solid, label="fieldType"];
17->11 [style = bold, label=""];
0->15 [style = bold, label=""];
15->5 [style = solid, label="min"];
12->20 [style = solid, label="nonDeterministicAggregationBuilder"];
29->16 [style = solid, label="aggregationBuilder"];
16->13 [style = solid, label="indexSearcher"];
26->16 [style = bold, label=""];
6->4 [style = bold, label=""];
12->13 [style = solid, label="nonDeterministicAggregationBuilder"];
23->22 [style = bold, label=""];
30->3 [style = bold, label=""];
0->15 [style = solid, label="indexSearcher"];
16->31 [style = bold, label=""];
26->16 [style = solid, label="indexSearcher"];
27->17 [style = bold, label=""];
12->3 [style = bold, label=""];
17->13 [style = solid, label="fieldType"];
31->28 [style = bold, label=""];
8->31 [style = dashed, label="0"];
13->8 [style = bold, label=""];
18->7 [style = bold, label=""];
20->24 [style = bold, label=""];
17->29 [style = bold, label=""];
23->22 [style = solid, label="context"];
16->19 [style = solid, label="indexSearcher"];
13->16 [style = dashed, label="0"];
15->1 [style = bold, label=""];
}
