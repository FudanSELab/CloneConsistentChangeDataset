digraph {
2 [style = filled, label = "assertU(commit())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "clearIndex()@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "SolrCore core = h.getCore()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "args.put(CommonParams.Q,\"text_en:functionality\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "args.put(CommonParams.Q,\"title:test\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertQ(\"dynamic destination\",req,\"//*(@numFound='1'(\",\"//result/doc(1(/int(@name='id'((.='10'(\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "args = new HashMap<>()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "args.put(CommonParams.Q,\"dynamic_aaa:aaa\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "args.put(CommonParams.Q,\"highlight:functionality\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "args.put(CommonParams.Q,\"highlight:simple\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "req = new LocalSolrQueryRequest(core,new MapSolrParams(args))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertQ(\"dynamic source\",req,\"//*(@numFound='1'(\",\"//result/doc(1(/int(@name='id'((.='10'(\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Map<String,String> args = new HashMap<>()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "args = new HashMap<String,String>()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "args.put(CommonParams.Q,\"aaa_dynamic:aaa\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertQ(\"Make sure they got in\",req,\"//*(@numFound='1'(\",\"//result/doc(1(/int(@name='id'((.='10'(\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testDynamicCopy['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "args.put(\"indent\",\"true\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertU(adoc(\"id\",\"10\",\"title\",\"test\",\"aaa_dynamic\",\"aaa\"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertQ(\"dynamic source\",req,\"//*(@numFound='0'(\")@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "args = new HashMap<String,String>()@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "args.put(CommonParams.Q,\"text_en:simple\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "testCopyFieldFunctionality['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertQ(\"Make sure they got in\",req,\"//*(@numFound='1'(\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "args.put(\"indent\",\"true\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "args.put(\"indent\",\"true\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "args.put(\"indent\",\"true\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "req = new LocalSolrQueryRequest(core,new MapSolrParams(args))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertQ(\"dynamic source\",req,\"//*(@numFound='1'(\",\"//result/doc(1(/int(@name='id'((.='10'(\",\"//result/doc(1(/arr(@name='highlight'(/str(.='this is a simple test of '(\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Map<String,String> args = new HashMap<String,String>()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "args = new HashMap<String,String>()@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "req = new LocalSolrQueryRequest(core,new MapSolrParams(args))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertU(adoc(\"id\",\"10\",\"title\",\"test copy field\",\"text_en\",\"this is a simple test of the copy field functionality\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "SolrQueryRequest req = new LocalSolrQueryRequest(core,new MapSolrParams(args))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testDynamicCopy['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "args = new HashMap<>()@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17->10 [style = bold, label=""];
32->35 [style = bold, label=""];
0->16 [style = bold, label=""];
16->17 [style = solid, label="req"];
4->14 [style = bold, label=""];
19->18 [style = bold, label=""];
7->19 [style = solid, label="args"];
7->21 [style = dashed, label="0"];
3->26 [style = dashed, label="0"];
4->16 [style = solid, label="core"];
27->0 [style = bold, label=""];
16->28 [style = solid, label="req"];
11->1 [style = bold, label=""];
21->19 [style = solid, label="args"];
21->15 [style = bold, label=""];
33->25 [style = solid, label="args"];
1->3 [style = bold, label=""];
26->9 [style = bold, label=""];
10->33 [style = dashed, label="0"];
15->29 [style = dashed, label="0"];
16->17 [style = bold, label=""];
23->8 [style = bold, label=""];
1->26 [style = bold, label=""];
9->8 [style = bold, label=""];
22->5 [style = bold, label=""];
9->23 [style = dashed, label="0"];
31->11 [style = bold, label=""];
6->22 [style = dashed, label="0"];
19->18 [style = solid, label="req"];
20->4 [style = bold, label=""];
6->1 [style = solid, label="args"];
35->25 [style = bold, label=""];
9->27 [style = bold, label=""];
8->0 [style = bold, label=""];
3->9 [style = bold, label=""];
17->28 [style = dashed, label="0"];
4->25 [style = solid, label="core"];
25->24 [style = bold, label=""];
6->5 [style = bold, label=""];
3->23 [style = bold, label=""];
4->1 [style = solid, label="core"];
29->12 [style = bold, label=""];
18->22 [style = bold, label=""];
6->31 [style = bold, label=""];
4->30 [style = bold, label=""];
16->28 [style = bold, label=""];
28->33 [style = bold, label=""];
23->16 [style = solid, label="args"];
18->6 [style = bold, label=""];
2->21 [style = bold, label=""];
14->30 [style = dashed, label="0"];
25->24 [style = solid, label="req"];
7->29 [style = bold, label=""];
9->16 [style = solid, label="args"];
5->31 [style = dashed, label="0"];
34->4 [style = bold, label=""];
7->15 [style = bold, label=""];
33->32 [style = bold, label=""];
4->19 [style = solid, label="core"];
8->27 [style = dashed, label="0"];
14->2 [style = bold, label=""];
15->12 [style = bold, label=""];
5->11 [style = bold, label=""];
2->7 [style = bold, label=""];
30->2 [style = bold, label=""];
12->19 [style = bold, label=""];
22->1 [style = solid, label="args"];
1->3 [style = solid, label="req"];
13->4 [style = bold, label=""];
1->26 [style = solid, label="req"];
}
