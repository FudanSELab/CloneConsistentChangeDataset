digraph {
48 [style = filled, label = "assertTrue(reader.hasPrev(),\"Third block should be available\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "List<IndexedRecord> records1 = SchemaTestUtil.generateTestRecords(0,100)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "HoodieDataBlock dataBlockRead = (HoodieDataBlock)prevBlock@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "HoodieDataBlock dataBlockRead = (HoodieDataBlock)prevBlock@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertTrue(reader.hasPrev(),\"First block should be available\")@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(copyOfRecords1,dataBlockRead.getRecords(),\"Both records lists should be the same. (ordering guaranteed)\")@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Schema schema = getSimpleSchema()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "boolean readBlocksLazily@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "writer = HoodieLogFormat.newWriterBuilder().onParentPath(partitionPath).withFileExtension(HoodieLogFile.DELTA_EXTENSION).withFileId(\"test-fileid1\").overBaseCommit(\"100\").withFs(fs).build()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "dataBlockRead = (HoodieDataBlock)prevBlock@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "prevBlock = reader.prev()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "header.put(HoodieLogBlock.HeaderMetadataType.SCHEMA,schema.toString())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testBasicAppendAndReadInReverse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "header.put(HoodieLogBlock.HeaderMetadataType.INSTANT_TIME,\"100\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "HoodieLogFileReader reader = new HoodieLogFileReader(fs,writer.getLogFile(),SchemaTestUtil.getSimpleSchema(),bufferSize,readBlocksLazily,true)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertFalse(reader.hasPrev())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "writer.appendBlock(dataBlock)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "List<IndexedRecord> records2 = SchemaTestUtil.generateTestRecords(0,100)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "prevBlock = reader.prev()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(reader.hasPrev(),\"Last block should be available\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(copyOfRecords1,dataBlockRead.getRecords(),\"Both records lists should be the same. (ordering guaranteed)\")@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "HoodieLogBlock prevBlock = reader.prev()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertFalse(reader.hasPrev())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "dataBlock = getDataBlock(records2,header)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "writer.close()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "reader.close()@@@43@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "dataBlockRead = (HoodieDataBlock)prevBlock@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Map<HoodieLogBlock.HeaderMetadataType,String> header = new HashMap<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "reader.close()@@@34@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "testBasicAppendAndTraverseInReverse['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "FileCreateUtils.createDeltaCommit(basePath,\"100\",fs)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "reader.moveToPrev()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "dataBlock = getDataBlock(records3,header)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "List<IndexedRecord> copyOfRecords2 = records2.stream().map(null).collect(Collectors.toList())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(copyOfRecords1.size(),dataBlockRead.getRecords().size(),\"Read records size should be equal to the written records size\")@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "writer.close()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testBasicAppendAndReadInReverse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "writer = HoodieLogFormat.newWriterBuilder().onParentPath(partitionPath).withFileExtension(HoodieLogFile.DELTA_EXTENSION).withFileId(\"test-fileid1\").overBaseCommit(\"100\").withFs(fs).build()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "boolean readBlocksLazily@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "HoodieLogBlock prevBlock = reader.prev()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "List<IndexedRecord> copyOfRecords1 = records1.stream().map(null).collect(Collectors.toList())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(copyOfRecords3.size(),dataBlockRead.getRecords().size(),\"Third records size should be equal to the written records size\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "writer.close()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "List<IndexedRecord> records3 = SchemaTestUtil.generateTestRecords(0,100)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "List<IndexedRecord> copyOfRecords3 = records3.stream().map(null).collect(Collectors.toList())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Writer writer = HoodieLogFormat.newWriterBuilder().onParentPath(partitionPath).withFileExtension(HoodieLogFile.DELTA_EXTENSION).withFileId(\"test-fileid1\").overBaseCommit(\"100\").withFs(fs).build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "writer.appendBlock(dataBlock)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "HoodieDataBlock dataBlock = getDataBlock(records1,header)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(copyOfRecords2.size(),dataBlockRead.getRecords().size(),\"Read records size should be equal to the written records size\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "reader.moveToPrev()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(copyOfRecords3,dataBlockRead.getRecords(),\"Both records lists should be the same. (ordering guaranteed)\")@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(copyOfRecords1.size(),dataBlockRead.getRecords().size(),\"Read records size should be equal to the written records size\")@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertTrue(reader.hasPrev(),\"Second block should be available\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(copyOfRecords2,dataBlockRead.getRecords(),\"Both records lists should be the same. (ordering guaranteed)\")@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "writer.appendBlock(dataBlock)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->35 [style = bold, label=""];
3->25 [style = solid, label="dataBlock"];
23->47 [style = solid, label="copyOfRecords1"];
30->38 [style = bold, label=""];
42->18 [style = bold, label=""];
10->9 [style = solid, label="prevBlock"];
21->42 [style = bold, label=""];
37->28 [style = bold, label=""];
37->16 [style = solid, label="records2"];
26->17 [style = bold, label=""];
5->39 [style = bold, label=""];
51->54 [style = bold, label=""];
3->25 [style = bold, label=""];
45->49 [style = bold, label=""];
31->13 [style = bold, label=""];
44->35 [style = bold, label=""];
15->3 [style = solid, label="header"];
18->11 [style = bold, label=""];
49->44 [style = bold, label=""];
35->19 [style = bold, label=""];
23->15 [style = bold, label=""];
39->8 [style = bold, label=""];
30->6 [style = dotted, label="true"];
19->49 [style = dashed, label="0"];
43->6 [style = dotted, label="true"];
7->26 [style = solid, label="dataBlock"];
53->18 [style = solid, label="readBlocksLazily"];
38->41 [style = bold, label=""];
41->1 [style = bold, label=""];
40->20 [style = bold, label=""];
6->53 [style = dashed, label="0"];
28->16 [style = bold, label=""];
12->37 [style = bold, label=""];
31->3 [style = solid, label="records3"];
1->23 [style = bold, label=""];
21->18 [style = bold, label=""];
6->18 [style = solid, label="readBlocksLazily"];
1->7 [style = solid, label="records1"];
19->0 [style = bold, label=""];
7->26 [style = bold, label=""];
9->27 [style = bold, label=""];
24->14 [style = bold, label=""];
14->33 [style = bold, label=""];
33->29 [style = bold, label=""];
48->46 [style = bold, label=""];
50->53 [style = dotted, label="true"];
39->35 [style = dashed, label="0"];
54->47 [style = bold, label=""];
17->12 [style = bold, label=""];
52->5 [style = bold, label=""];
18->48 [style = bold, label=""];
43->38 [style = bold, label=""];
16->4 [style = solid, label="dataBlock"];
13->3 [style = bold, label=""];
50->38 [style = bold, label=""];
28->36 [style = solid, label="copyOfRecords2"];
11->10 [style = bold, label=""];
8->51 [style = dashed, label="0"];
0->22 [style = bold, label=""];
22->36 [style = bold, label=""];
15->7 [style = solid, label="header"];
23->14 [style = solid, label="copyOfRecords1"];
35->51 [style = solid, label="prevBlock"];
13->2 [style = solid, label="copyOfRecords3"];
46->45 [style = bold, label=""];
15->40 [style = bold, label=""];
4->34 [style = bold, label=""];
34->32 [style = bold, label=""];
10->9 [style = bold, label=""];
36->5 [style = bold, label=""];
19->0 [style = solid, label="prevBlock"];
20->7 [style = bold, label=""];
16->4 [style = bold, label=""];
31->3 [style = bold, label=""];
47->52 [style = bold, label=""];
15->16 [style = solid, label="header"];
11->48 [style = dashed, label="0"];
32->31 [style = bold, label=""];
27->2 [style = bold, label=""];
39->8 [style = solid, label="prevBlock"];
37->16 [style = bold, label=""];
25->21 [style = bold, label=""];
35->51 [style = bold, label=""];
8->24 [style = bold, label=""];
}
