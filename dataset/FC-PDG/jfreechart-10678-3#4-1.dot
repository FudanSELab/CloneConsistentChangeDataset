digraph {
2 [style = filled, label = "assertEquals(-1.0,d1.getRangeLowerBound(true),EPSILON)@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testGetRangeLowerBound['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(3.0,d1.getRangeUpperBound(true),EPSILON)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "d1.add(1.0,2.0,\"R1\",\"C1\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(1.0,d1.getRangeLowerBound(false),EPSILON)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "DefaultStatisticalCategoryDataset d1 = new DefaultStatisticalCategoryDataset()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "DefaultStatisticalCategoryDataset<String,String> d1 = new DefaultStatisticalCategoryDataset<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertEquals(1.0,d1.getRangeUpperBound(false),EPSILON)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testGetRangeLowerBound['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "testGetRangeUpperBound['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->3 [style = bold, label=""];
8->0 [style = bold, label=""];
5->1 [style = bold, label=""];
6->5 [style = bold, label=""];
3->2 [style = bold, label=""];
0->5 [style = dashed, label="0"];
9->7 [style = bold, label=""];
3->9 [style = dashed, label="0"];
2->7 [style = dashed, label="0"];
0->1 [style = bold, label=""];
1->9 [style = bold, label=""];
4->0 [style = bold, label=""];
}
