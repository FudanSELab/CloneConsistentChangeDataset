digraph {
1 [style = filled, label = "Configuration conf2 = tableSource2.getConf()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertNull(conf2.get(FlinkOptions.READ_AVRO_SCHEMA),\"expect schema string as null\")@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(conf1.get(FlinkOptions.READ_AVRO_SCHEMA),is(INFERRED_SCHEMA))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "HoodieTableSource tableSource2 = (HoodieTableSource)new HoodieTableFactory().createTableSource(MockSourceContext.getInstance(this.conf))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "HoodieTableSource tableSource2 = (HoodieTableSource)new HoodieTableFactory().createDynamicTableSource(MockContext.getInstance(this.conf))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "final HoodieTableSource tableSource1 = (HoodieTableSource)new HoodieTableFactory().createTableSource(MockSourceContext.getInstance(this.conf))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "final Configuration conf1 = tableSource1.getConf()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testInferAvroSchemaForSource['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final HoodieTableSink tableSink1 = (HoodieTableSink)new HoodieTableFactory().createTableSink(MockSinkContext.getInstance(this.conf))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testInferAvroSchemaForSink['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Configuration conf2 = tableSink2.getConf()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final HoodieTableSource tableSource1 = (HoodieTableSource)new HoodieTableFactory().createDynamicTableSource(MockContext.getInstance(this.conf))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "final Configuration conf1 = tableSink1.getConf()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "HoodieTableSink tableSink2 = (HoodieTableSink)new HoodieTableFactory().createTableSink(MockSinkContext.getInstance(this.conf))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "this.conf.setString(FlinkOptions.READ_AVRO_SCHEMA_PATH,AVRO_SCHEMA_FILE_PATH)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testInferAvroSchemaForSource['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0->3 [style = bold, label=""];
14->3 [style = bold, label=""];
5->10 [style = bold, label=""];
1->4 [style = bold, label=""];
9->0 [style = bold, label=""];
11->4 [style = bold, label=""];
13->11 [style = bold, label=""];
6->10 [style = dashed, label="0"];
0->14 [style = dashed, label="0"];
6->1 [style = bold, label=""];
2->12 [style = dashed, label="0"];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
6->13 [style = dashed, label="0"];
5->6 [style = bold, label=""];
2->9 [style = dashed, label="0"];
7->2 [style = bold, label=""];
1->11 [style = dashed, label="0"];
5->13 [style = bold, label=""];
12->14 [style = bold, label=""];
8->9 [style = bold, label=""];
15->12 [style = bold, label=""];
10->1 [style = bold, label=""];
}
