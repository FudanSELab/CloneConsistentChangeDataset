digraph {
20 [style = filled, label = "doReturn(Collections.singleton(mock())).when(memberValidator).findMembers(any())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertThat(cacheConfig.getRegions()).hasSize(1)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "doReturn(functionResults).when(service).executeAndGetFunctionResult(any(),any(),any())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "result = service.delete(regionConfig)@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "delete_succeedsOnAllMembers['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "functionResults.add(new CliFunctionResult(\"member2\",true,\"failed\"))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "regionConfig.setName(\"test\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "RegionConfig regionConfig = new RegionConfig()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "CacheConfig cacheConfig = new CacheConfig()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(result.isSuccessful()).isTrue()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "CacheConfig config = new CacheConfig()@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "doReturn(null).when(persistenceService).getConfiguration(any())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "result = service.create(regionConfig)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Region mockRegion = mock()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<CliFunctionResult> functionResults = new ArrayList<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "doReturn(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@129930).when(memberValidator).findGroupsWithThisElement(any(),any())@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertThat(result.isSuccessful()).isTrue()@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "doReturn(mockRegion).when(persistenceService).getConfigurationRegion()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "when(persistenceService.getCacheConfig(\"cluster\",true)).thenReturn(cacheConfig)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "functionResults.add(new CliFunctionResult(\"member2\",true,\"success\"))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "RegionConfig regionConfig = new RegionConfig()@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "delete_succeedsOnAllMembers['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "regionConfig.setName(\"test\")@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(config.getRegions()).isEmpty()@@@21@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "functionResults.add(new CliFunctionResult(\"member1\",true,\"success\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "doReturn(mockRegion).when(persistenceService).getConfigurationRegion()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "CacheConfig config = new CacheConfig()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "create_succeedsOnAllMembers['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Region mockRegion = mock()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "doReturn(Collections.singleton(mock())).when(service).findMembers(any())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "doReturn(null).when(persistenceService).getConfiguration(any())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(config.getRegions()).isEmpty()@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1->5 [style = bold, label=""];
14->3 [style = bold, label=""];
17->25 [style = bold, label=""];
12->4 [style = solid, label="regionConfig"];
23->20 [style = bold, label=""];
9->31 [style = bold, label=""];
16->6 [style = bold, label=""];
16->24 [style = bold, label=""];
27->28 [style = bold, label=""];
0->2 [style = bold, label=""];
28->7 [style = bold, label=""];
11->15 [style = solid, label="regionConfig"];
31->29 [style = bold, label=""];
9->8 [style = bold, label=""];
2->10 [style = bold, label=""];
12->1 [style = bold, label=""];
3->0 [style = bold, label=""];
20->5 [style = bold, label=""];
29->26 [style = bold, label=""];
26->27 [style = bold, label=""];
15->17 [style = bold, label=""];
31->29 [style = solid, label="cacheConfig"];
18->10 [style = bold, label=""];
6->25 [style = dashed, label="0"];
24->21 [style = bold, label=""];
30->3 [style = bold, label=""];
21->22 [style = bold, label=""];
10->23 [style = bold, label=""];
4->15 [style = dashed, label="0"];
2->18 [style = dashed, label="0"];
11->24 [style = solid, label="regionConfig"];
7->15 [style = bold, label=""];
0->18 [style = bold, label=""];
10->9 [style = bold, label=""];
5->11 [style = bold, label=""];
17->13 [style = bold, label=""];
12->5 [style = solid, label="regionConfig"];
8->31 [style = dashed, label="0"];
19->3 [style = bold, label=""];
8->12 [style = bold, label=""];
11->7 [style = bold, label=""];
4->16 [style = bold, label=""];
13->4 [style = bold, label=""];
}
