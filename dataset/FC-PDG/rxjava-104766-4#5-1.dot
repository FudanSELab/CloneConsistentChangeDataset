digraph {
5 [style = filled, label = "expected.put(3,\"cccccc\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "expected.put(2,\"bbbb\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "toMapWithValueSelector['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "mapped.subscribe(singleObserver)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Single<Map<Integer,String>> mapped = source.toMap(lengthFunc,duplicate)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Observable<String> source = Observable.just(\"a\",\"bb\",\"ccc\",\"dddd\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "verify(objectObserver,times(1)).onNext(expected)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "verify(singleObserver,times(1)).onSuccess(expected)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "toMapWithValueSelector['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Map<Integer,String> expected = new HashMap<>()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "expected.put(4,\"dddd\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "verify(objectObserver,never()).onError(any())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "toMapObservable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Observable<Map<Integer,String>> mapped = source.toMap(lengthFunc).toObservable()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "verify(singleObserver,never()).onError(any())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expected.put(1,\"aa\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "expected.put(2,\"bb\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Flowable<String> source = Flowable.just(\"a\",\"bb\",\"ccc\",\"dddd\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "expected.put(3,\"ccc\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "mapped.subscribe(objectObserver)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "verify(objectObserver,times(1)).onComplete()@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Map<Integer,String> expected = new HashMap<Integer,String>()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "expected.put(4,\"dddddddd\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "expected.put(1,\"a\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
15->23 [style = bold, label=""];
16->13 [style = bold, label=""];
3->17 [style = dashed, label="0"];
11->1 [style = bold, label=""];
4->22 [style = solid, label="expected"];
9->4 [style = bold, label=""];
14->22 [style = bold, label=""];
4->10 [style = solid, label="expected"];
7->20 [style = dashed, label="0"];
12->10 [style = solid, label="expected"];
10->22 [style = dashed, label="0"];
12->7 [style = bold, label=""];
4->7 [style = bold, label=""];
3->0 [style = bold, label=""];
1->9 [style = bold, label=""];
4->12 [style = dashed, label="0"];
20->21 [style = bold, label=""];
9->19 [style = dashed, label="0"];
5->16 [style = dashed, label="0"];
8->1 [style = bold, label=""];
0->14 [style = dashed, label="0"];
13->17 [style = bold, label=""];
0->10 [style = bold, label=""];
22->18 [style = bold, label=""];
6->13 [style = dashed, label="0"];
5->6 [style = bold, label=""];
2->21 [style = dashed, label="0"];
17->14 [style = bold, label=""];
7->2 [style = bold, label=""];
23->19 [style = bold, label=""];
4->20 [style = bold, label=""];
21->16 [style = bold, label=""];
9->12 [style = bold, label=""];
19->4 [style = bold, label=""];
1->23 [style = dashed, label="0"];
2->5 [style = bold, label=""];
}
