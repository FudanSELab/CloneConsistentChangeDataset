digraph {
15 [style = filled, label = "tester.checkNull(\"ceil(cast(null as interval year))\")@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "tester.checkType(\"cbrt(case when false then 1 else null end)\",\"DOUBLE\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "tester.setFor(SqlStdOperatorTable.CBRT)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "tester.checkNull(\"cbrt(cast(null as double))\")@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "tester.checkType(\"cbrt(cast(1 as float))\",\"DOUBLE NOT NULL\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testCbrtFunc['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "tester.checkScalar(\"ceil(interval '-6.3' second)\",\"-6.000000\",\"INTERVAL SECOND NOT NULL\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "tester.checkScalar(\"ceil(interval '5-1' year to month)\",\"+6-00\",\"INTERVAL YEAR TO MONTH NOT NULL\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "return@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "tester.checkScalar(\"ceil(interval '-5-1' year to month)\",\"-5-00\",\"INTERVAL YEAR TO MONTH NOT NULL\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testCeilFuncInterval['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "tester.checkNull(\"cbrt(cast(null as integer))\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "!enable@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "tester.checkScalar(\"ceil(interval '3:4:5' hour to second)\",\"+4:00:00.000000\",\"INTERVAL HOUR TO SECOND NOT NULL\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "tester.checkScalar(\"cbrt(cast(1 as decimal(1, 0)))\",\"1.0\",\"DOUBLE NOT NULL\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "tester.checkScalar(\"cbrt(8)\",\"2.0\",\"DOUBLE NOT NULL\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "tester.checkType(\"cbrt(1)\",\"DOUBLE NOT NULL\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "strictTester.checkFails(\"^cbrt('abc')^\",\"Cannot apply 'CBRT' to arguments of type 'CBRT\(<CHAR\(3\)>\)'\. Supported form\(s\): 'CBRT\(<NUMERIC>\)'\",false)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testCbrtFunc['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "tester.checkScalar(\"cbrt(-8)\",\"-2.0\",\"DOUBLE NOT NULL\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "tester.checkType(\"cbrt('abc')\",\"DOUBLE NOT NULL\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->13 [style = bold, label=""];
16->13 [style = dotted, label="true"];
2->6 [style = bold, label=""];
18->15 [style = bold, label=""];
10->3 [style = bold, label=""];
16->19 [style = bold, label=""];
3->4 [style = bold, label=""];
1->11 [style = bold, label=""];
0->7 [style = bold, label=""];
7->9 [style = bold, label=""];
20->18 [style = bold, label=""];
6->1 [style = bold, label=""];
11->5 [style = bold, label=""];
13->19 [style = bold, label=""];
19->14 [style = bold, label=""];
8->2 [style = bold, label=""];
5->0 [style = bold, label=""];
4->8 [style = bold, label=""];
12->3 [style = bold, label=""];
17->16 [style = bold, label=""];
14->20 [style = bold, label=""];
}
