digraph {
12 [style = filled, label = "final TermsFacetMap categoryFacet = new TermsFacetMap(\"cat\").setLimit(5)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(10,queryResponse.getResults().size())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final NestableJsonFacet topLevelFacetingData = queryResponse.getJsonFacetingResponse()@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertEquals(32,queryResponse.getResults().getNumFound())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "QueryResponse queryResponse = request.process(solrClient,COLLECTION_NAME)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertHasFacetWithBucketValues(topLevelFacetingData,\"categories\",new FacetBucket(\"electronics\",12),new FacetBucket(\"currency\",4),new FacetBucket(\"memory\",3))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "SolrClient solrClient = cluster.getSolrClient()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testSimpleJsonTermsFacet['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertHasFacetWithBucketValues(queryResponse.getResponse(),\"categories\",new FacetBucket(\"electronics\",12),new FacetBucket(\"currency\",4),new FacetBucket(\"memory\",3))@@@10@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final TermsFacetMap categoryFacet = new TermsFacetMap(\"cat\").setLimit(3)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testSimpleJsonTermsFacet['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "testTermsFacet2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(0,queryResponse.getStatus())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final JsonQueryRequest request = new JsonQueryRequest().setQuery(\"*:*\").withFacet(\"categories\",categoryFacet)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertHasFacetWithBucketValues(queryResponse.getResponse(),\"categories\",new FacetBucket(\"electronics\",12),new FacetBucket(\"currency\",4),new FacetBucket(\"memory\",3),new FacetBucket(\"connector\",2),new FacetBucket(\"graphics card\",2))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
4->14 [style = bold, label=""];
12->5 [style = solid, label="categoryFacet"];
12->5 [style = bold, label=""];
4->6 [style = bold, label=""];
1->0 [style = bold, label=""];
0->12 [style = dashed, label="0"];
0->5 [style = solid, label="categoryFacet"];
6->14 [style = dashed, label="0"];
2->4 [style = bold, label=""];
13->1 [style = bold, label=""];
1->3 [style = solid, label="solrClient"];
8->1 [style = bold, label=""];
3->7 [style = bold, label=""];
11->10 [style = bold, label=""];
7->2 [style = bold, label=""];
1->12 [style = bold, label=""];
9->1 [style = bold, label=""];
4->11 [style = bold, label=""];
11->10 [style = solid, label="topLevelFacetingData"];
0->5 [style = bold, label=""];
}
