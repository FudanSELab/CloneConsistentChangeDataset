digraph {
6 [style = filled, label = "assertThat(selectStatementContext.getOrderByContext().getItems().iterator().next().getIndex(),is(2))@@@7@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(selectStatement,new GroupByContext(Collections.emptyList()),createOrderBy(COLUMN_ORDER_BY_WITH_ALIAS),createProjectionsContext(),null)@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "aggregationProjection.getDerivedAggregationProjections().addAll(Collections.singletonList(aggregationProjection))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final SelectStatement selectStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertSetIndexForItemsByColumnOrderByWithAlias['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "selectStatementContext.setIndexes(columnLabelIndexMap)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(Collections.singletonMap(DefaultSchema.LOGIC_NAME,metaData),Collections.emptyList(),selectStatement,DefaultSchema.LOGIC_NAME)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertSetIndexForItemsByColumnOrderByWithAlias['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "AggregationProjection aggregationProjection = new AggregationProjection(AggregationType.MAX,\"\",\"id\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(selectStatement,new GroupByContext(Collections.emptyList()),createOrderBy(COLUMN_ORDER_BY_WITHOUT_OWNER_ALIAS),projectionsContext,null)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "columnLabelIndexMap.put(\"n\",2)@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Map<String,Integer> columnLabelIndexMap = new HashMap<>()@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "selectStatementContext.setIndexes(Collections.singletonMap(\"n\",2))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "selectStatement.setOrderBy(new OrderBySegment(0,0,Collections.singletonList(createOrderByItemSegment(COLUMN_ORDER_BY_WITH_ALIAS))))@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertThat(selectStatementContext.getOrderByContext().getItems().iterator().next().getIndex(),is(2))@@@8@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "ProjectionsContext projectionsContext = new ProjectionsContext(0,0,false,Collections.singletonList(aggregationProjection))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "selectStatement.setProjections(createProjectionsSegment())@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final SelectStatement selectStatement@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertSetIndexWhenAggregationProjectionsPresent['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ShardingSphereMetaData metaData = mock()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertThat(selectStatementContext.getOrderByContext().getItems().iterator().next().getIndex(),is(3))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "selectStatementContext.setIndexes(Collections.singletonMap(\"id\",3))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->13 [style = bold, label=""];
0->3 [style = bold, label=""];
13->10 [style = bold, label=""];
4->5 [style = dotted, label="true"];
2->19 [style = dashed, label="0"];
3->1 [style = bold, label=""];
2->6 [style = bold, label=""];
20->17 [style = dotted, label="true"];
3->2 [style = solid, label="columnLabelIndexMap"];
11->12 [style = bold, label=""];
18->16 [style = solid, label="aggregationProjection"];
16->19 [style = solid, label="projectionsContext"];
6->14 [style = dashed, label="0"];
9->7 [style = bold, label=""];
16->19 [style = bold, label=""];
2->8 [style = dashed, label="0"];
17->19 [style = solid, label="selectStatement"];
4->0 [style = bold, label=""];
20->18 [style = bold, label=""];
18->21 [style = solid, label="aggregationProjection"];
7->8 [style = solid, label="metaData"];
19->14 [style = bold, label=""];
5->17 [style = dashed, label="0"];
10->8 [style = bold, label=""];
5->0 [style = solid, label="selectStatement"];
21->16 [style = bold, label=""];
14->15 [style = bold, label=""];
1->2 [style = bold, label=""];
18->21 [style = bold, label=""];
8->11 [style = bold, label=""];
5->8 [style = solid, label="selectStatement"];
9->5 [style = dotted, label="true"];
}
