digraph {
27 [style = filled, label = "workerCurrentOffsets.put(TOPIC_PARTITION2,new OffsetAndMetadata(FIRST_OFFSET))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "workerCurrentOffsets.put(TOPIC_PARTITION,new OffsetAndMetadata(FIRST_OFFSET + 2))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "EasyMock.expectLastCall().andReturn(workerStartingOffsets)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "workerCurrentOffsets.put(TOPIC_PARTITION,new OffsetAndMetadata(FIRST_OFFSET + 1))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "EasyMock.expectLastCall()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(workerStartingOffsets,Whitebox.getInternalState(workerTask,\"lastCommittedOffsets\"))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "sinkTask.put(EasyMock.anyObject())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "testIgnoredCommit['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "taskOffsets.put(new TopicPartition(TOPIC,3),new OffsetAndMetadata(FIRST_OFFSET))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "PowerMock.replayAll()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Capture<OffsetCommitCallback> callback = EasyMock.newCapture()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "taskOffsets.put(TOPIC_PARTITION2,new OffsetAndMetadata(FIRST_OFFSET + 1))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(workerStartingOffsets,Whitebox.getInternalState(workerTask,\"currentOffsets\"))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(committableOffsets,Whitebox.getInternalState(workerTask,\"lastCommittedOffsets\"))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "consumer.commitAsync(EasyMock.eq(committableOffsets),EasyMock.capture(callback))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "sinkTaskContext.getValue().requestCommit()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final Map<TopicPartition,OffsetAndMetadata> taskOffsets = new HashMap<>()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "testPreCommit['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "PowerMock.replayAll()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "EasyMock.expectLastCall()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "expectPollInitialAssignment()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "EasyMock.expect(consumer.assignment()).andReturn(workerCurrentOffsets.keySet())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "sinkTask.put(EasyMock.anyObject())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "expectConversionAndTransformation(2)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "sinkTask.preCommit(workerCurrentOffsets)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "workerTask.iteration()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "workerTask.iteration()@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "expectConsumerPoll(0)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "workerTask.initializeAndStart()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "workerTask.iteration()@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(workerStartingOffsets,Whitebox.getInternalState(workerTask,\"currentOffsets\"))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "createTask(initialState)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "expectConsumerPoll(1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(workerCurrentOffsets,Whitebox.getInternalState(workerTask,\"currentOffsets\"))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testPreCommit['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "workerTask.iteration()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expectInitializeTask()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "taskOffsets.put(TOPIC_PARTITION,new OffsetAndMetadata(FIRST_OFFSET + 1))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "workerTask.iteration()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "EasyMock.expectLastCall().andReturn(taskOffsets)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "committableOffsets.put(TOPIC_PARTITION,new OffsetAndMetadata(FIRST_OFFSET + 1))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "EasyMock.expectLastCall().andAnswer(new IAnswer<Void>(){@Override public Void answer(){callback.getValue().onComplete(committableOffsets,null)return null}})@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "PowerMock.verifyAll()@@@29@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "workerStartingOffsets.put(TOPIC_PARTITION,new OffsetAndMetadata(FIRST_OFFSET))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Map<TopicPartition,OffsetAndMetadata> committableOffsets = new HashMap<>()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "workerStartingOffsets.put(TOPIC_PARTITION2,new OffsetAndMetadata(FIRST_OFFSET))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final Map<TopicPartition,OffsetAndMetadata> workerStartingOffsets = new HashMap<>()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "workerTask.initializeAndStart()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "final Map<TopicPartition,OffsetAndMetadata> workerCurrentOffsets = new HashMap<>()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(workerStartingOffsets,Whitebox.getInternalState(workerTask,\"lastCommittedOffsets\"))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "expectConversionAndTransformation(1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "PowerMock.verifyAll()@@@49@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "sinkTaskContext.getValue().requestCommit()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "expectConsumerPoll(2)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "workerTask.iteration()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "committableOffsets.put(TOPIC_PARTITION2,new OffsetAndMetadata(FIRST_OFFSET))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47->53 [style = bold, label=""];
30->24 [style = bold, label=""];
35->56 [style = solid, label="workerStartingOffsets"];
10->20 [style = bold, label=""];
27->36 [style = bold, label=""];
40->35 [style = bold, label=""];
14->30 [style = bold, label=""];
43->55 [style = bold, label=""];
54->43 [style = bold, label=""];
0->30 [style = solid, label="committableOffsets"];
16->29 [style = bold, label=""];
27->9 [style = bold, label=""];
31->50 [style = dashed, label="0"];
17->40 [style = bold, label=""];
11->37 [style = bold, label=""];
55->51 [style = bold, label=""];
0->14 [style = solid, label="committableOffsets"];
0->13 [style = solid, label="committableOffsets"];
4->18 [style = bold, label=""];
2->46 [style = dashed, label="0"];
32->34 [style = bold, label=""];
12->1 [style = bold, label=""];
33->50 [style = bold, label=""];
50->49 [style = bold, label=""];
34->0 [style = bold, label=""];
38->19 [style = bold, label=""];
19->16 [style = bold, label=""];
35->25 [style = bold, label=""];
45->54 [style = bold, label=""];
6->14 [style = bold, label=""];
3->9 [style = bold, label=""];
8->17 [style = bold, label=""];
7->33 [style = bold, label=""];
36->21 [style = bold, label=""];
24->26 [style = bold, label=""];
36->12 [style = solid, label="taskOffsets"];
52->47 [style = bold, label=""];
1->6 [style = bold, label=""];
9->56 [style = bold, label=""];
56->45 [style = bold, label=""];
37->46 [style = bold, label=""];
39->7 [style = bold, label=""];
25->11 [style = bold, label=""];
35->52 [style = solid, label="workerStartingOffsets"];
18->5 [style = bold, label=""];
5->13 [style = bold, label=""];
26->23 [style = bold, label=""];
23->38 [style = bold, label=""];
21->32 [style = bold, label=""];
46->27 [style = bold, label=""];
15->4 [style = bold, label=""];
44->52 [style = bold, label=""];
53->24 [style = bold, label=""];
35->10 [style = solid, label="workerStartingOffsets"];
37->9 [style = solid, label="workerCurrentOffsets"];
33->31 [style = bold, label=""];
2->27 [style = bold, label=""];
29->10 [style = bold, label=""];
57->44 [style = bold, label=""];
48->7 [style = bold, label=""];
37->2 [style = bold, label=""];
49->17 [style = bold, label=""];
42->7 [style = bold, label=""];
28->3 [style = bold, label=""];
9->12 [style = bold, label=""];
13->22 [style = bold, label=""];
51->57 [style = bold, label=""];
6->14 [style = solid, label="callback"];
35->4 [style = solid, label="workerStartingOffsets"];
37->15 [style = solid, label="workerCurrentOffsets"];
12->56 [style = dashed, label="0"];
20->15 [style = bold, label=""];
31->8 [style = bold, label=""];
0->28 [style = bold, label=""];
35->47 [style = solid, label="workerStartingOffsets"];
8->49 [style = dashed, label="0"];
41->42 [style = bold, label=""];
}
