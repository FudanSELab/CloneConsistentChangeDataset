digraph {
1 [style = filled, label = "invocation.await()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Invocation invocation = this.cli.invoke(\"jar\",jar.getAbsolutePath(),\"--include\",\"-public/**,-resources/**\",\"jar.groovy\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(invocation.getStandardOutput()).contains(\"Hello World!\").doesNotContain(\"/public/public.txt\").doesNotContain(\"/resources/resource.txt\").contains(\"/static/static.txt\").contains(\"/templates/template.txt\").contains(\"Goodbye Mama\")@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Process process = new JavaExecutable().processBuilder(\"-jar\",jar.getAbsolutePath()).start()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "File jar = new File(this.tempDir,\"test-app.jar\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(jar).exists()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(invocation.getErrorOutput()).contains(\"The name of the \" + \"resulting jar and at least one source file must be specified\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "!JAVA_9_OR_LATER@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(invocation.getErrorOutput()).isEmpty()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Invocation invocation = this.cli.invoke(\"jar\",\"test-app.jar\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(invocation.getErrorOutput()).contains(\"The name of the resulting jar and at least one source file must be specified\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "invocation.await()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "invocation.await()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "jarCreationWithIncludes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "noSources['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(invocation.getErrorOutput()).isEqualTo(\"\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "invocation = new Invocation(process)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "noSources['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "!JAVA_9_OR_LATER@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
7->11 [style = bold, label=""];
14->9 [style = solid, label="process"];
11->1 [style = bold, label=""];
8->18 [style = bold, label=""];
1->15 [style = bold, label=""];
6->0 [style = bold, label=""];
15->16 [style = bold, label=""];
2->17 [style = dashed, label="0"];
10->7 [style = bold, label=""];
3->0 [style = bold, label=""];
15->17 [style = dotted, label="true"];
2->5 [style = dashed, label="0"];
15->17 [style = bold, label=""];
0->4 [style = bold, label=""];
12->8 [style = bold, label=""];
18->13 [style = bold, label=""];
8->18 [style = dotted, label="true"];
16->14 [style = bold, label=""];
14->9 [style = bold, label=""];
1->2 [style = bold, label=""];
4->1 [style = bold, label=""];
9->12 [style = bold, label=""];
0->7 [style = dashed, label="0"];
17->16 [style = bold, label=""];
8->13 [style = bold, label=""];
}
