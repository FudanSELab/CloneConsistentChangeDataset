digraph {
10 [style = filled, label = "repository.add(new AuditEvent(\"dave\",\"c\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "InMemoryAuditEventRepository repository = new InMemoryAuditEventRepository()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "capacity['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(events.get(0).getType()).isEqualTo(\"b\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(events.get(1).getType()).isEqualTo(\"c\")@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "repository.add(new AuditEvent(\"dave\",\"a\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "lessThanCapacity['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "lessThanCapacity['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "repository.add(new AuditEvent(\"dave\",\"b\"))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "InMemoryAuditEventRepository repository = new InMemoryAuditEventRepository(2)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "List<AuditEvent> events = repository.find(\"dave\",null)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(events.get(1).getType()).isEqualTo(\"b\")@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(events.get(0).getType()).isEqualTo(\"a\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(events.size()).isEqualTo(2)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->0 [style = bold, label=""];
0->3 [style = bold, label=""];
9->3 [style = bold, label=""];
6->4 [style = bold, label=""];
13->9 [style = bold, label=""];
0->9 [style = dashed, label="0"];
4->11 [style = dashed, label="0"];
3->1 [style = bold, label=""];
5->0 [style = bold, label=""];
1->10 [style = bold, label=""];
7->2 [style = bold, label=""];
1->7 [style = bold, label=""];
2->6 [style = bold, label=""];
10->7 [style = bold, label=""];
6->12 [style = dashed, label="0"];
2->12 [style = bold, label=""];
12->11 [style = bold, label=""];
}
