digraph {
30 [style = filled, label = "IndexableField f@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "flags.append((f != null && f.omitPositions())? FieldFlag.OMIT_POSITIONS.getAbbreviation(): '-')@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "getFieldFlags['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "boolean binary = false@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "flags.append((f != null && f.fieldType().storeTermVectorPositions())? FieldFlag.TERM_VECTOR_POSITION.getAbbreviation(): '-')@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "FieldType t = (f == null)? null: f.getType()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "flags.append((f != null && f.fieldType().omitNorms())? FieldFlag.OMIT_NORMS.getAbbreviation(): '-')@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "flags.append((f != null && f.storeOffsetsWithPositions())? FieldFlag.STORE_OFFSETS_WITH_POSITIONS.getAbbreviation(): '-')@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "StringBuilder flags = new StringBuilder()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "getFieldFlags['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "flags.append((f != null && f.fieldType().indexed())? FieldFlag.INDEXED.getAbbreviation(): '-')@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "flags.append((f != null && DOCS_AND_FREQS == opts)? FieldFlag.OMIT_POSITIONS.getAbbreviation(): '-')@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "SchemaField f@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "flags.append((f != null && f.sortMissingLast())? FieldFlag.SORT_MISSING_LAST.getAbbreviation(): '-')@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "flags.append((f != null && f.fieldType().storeTermVectorOffsets())? FieldFlag.TERM_VECTOR_OFFSET.getAbbreviation(): '-')@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "flags.append((f != null && DOCS_ONLY == opts)? FieldFlag.OMIT_TF.getAbbreviation(): '-')@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "flags.append((false)? FieldFlag.SORT_MISSING_FIRST.getAbbreviation(): '-')@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "flags.append((f != null && f.omitNorms())? FieldFlag.OMIT_NORMS.getAbbreviation(): '-')@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "flags.append((t != null && t.isTokenized())? FieldFlag.TOKENIZED.getAbbreviation(): '-')@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "flags.append((f != null && f.storeTermPositions())? FieldFlag.TERM_VECTOR_POSITION.getAbbreviation(): '-')@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "flags.append((f != null && f.omitTermFreqAndPositions())? FieldFlag.OMIT_TF.getAbbreviation(): '-')@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "flags.append((f != null && f.binaryValue() != null)? FieldFlag.BINARY.getAbbreviation(): '-')@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "getFieldFlags['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "boolean lazy = false@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "flags.append((lazy)? FieldFlag.LAZY.getAbbreviation(): '-')@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "flags.append((f != null && f.fieldType().storeTermVectors())? FieldFlag.TERM_VECTOR_STORED.getAbbreviation(): '-')@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "flags.append((f != null && f.indexed())? FieldFlag.INDEXED.getAbbreviation(): '-')@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "flags.append((f != null && f.multiValued())? FieldFlag.MULTI_VALUED.getAbbreviation(): '-')@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "flags.append((f != null && f.fieldType().tokenized())? FieldFlag.TOKENIZED.getAbbreviation(): '-')@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "return flags.toString()@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "flags.append((f != null && f.storeTermOffsets())? FieldFlag.TERM_VECTOR_OFFSET.getAbbreviation(): '-')@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "flags.append((f != null && f.sortMissingFirst())? FieldFlag.SORT_MISSING_FIRST.getAbbreviation(): '-')@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "flags.append((false)? FieldFlag.SORT_MISSING_LAST.getAbbreviation(): '-')@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "flags.append((f != null && f.hasDocValues())? FieldFlag.DOC_VALUES.getAbbreviation(): \"-\")@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "IndexOptions opts = (f == null)? null: f.fieldType().indexOptions()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "flags.append((f != null && f.fieldType().stored())? FieldFlag.STORED.getAbbreviation(): '-')@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "return flags.toString()@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "flags.append((binary)? FieldFlag.BINARY.getAbbreviation(): '-')@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "flags.append((f != null && f.getClass().getSimpleName().equals(\"LazyField\"))? FieldFlag.LAZY.getAbbreviation(): '-')@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "flags.append((false)? FieldFlag.MULTI_VALUED.getAbbreviation(): '-')@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "flags.append((f != null && f.storeTermVector())? FieldFlag.TERM_VECTOR_STORED.getAbbreviation(): '-')@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "flags.append((f != null && f.stored())? FieldFlag.STORED.getAbbreviation(): '-')@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->19 [style = solid, label="f"];
30->27 [style = solid, label="f"];
14->7 [style = solid, label="lazy"];
19->33 [style = dashed, label="0"];
5->1 [style = bold, label=""];
11->27 [style = dashed, label="0"];
4->32 [style = dashed, label="0"];
31->32 [style = bold, label=""];
2->1 [style = solid, label="f"];
10->18 [style = bold, label=""];
16->26 [style = dashed, label="0"];
15->26 [style = bold, label=""];
2->17 [style = solid, label="f"];
30->33 [style = solid, label="f"];
11->23 [style = bold, label=""];
41->30 [style = dotted, label="true"];
15->13 [style = bold, label=""];
16->5 [style = bold, label=""];
13->9 [style = bold, label=""];
40->25 [style = bold, label=""];
19->9 [style = solid, label="t"];
20->8 [style = solid, label="binary"];
26->36 [style = bold, label=""];
37->31 [style = bold, label=""];
30->15 [style = solid, label="f"];
0->29 [style = dashed, label="0"];
9->16 [style = bold, label=""];
20->15 [style = bold, label=""];
30->32 [style = solid, label="f"];
38->34 [style = bold, label=""];
2->4 [style = solid, label="f"];
30->29 [style = solid, label="f"];
2->16 [style = solid, label="f"];
33->27 [style = solid, label="opts"];
12->19 [style = bold, label=""];
0->17 [style = bold, label=""];
17->11 [style = bold, label=""];
10->38 [style = dashed, label="0"];
1->37 [style = dashed, label="0"];
19->14 [style = bold, label=""];
30->40 [style = solid, label="f"];
32->29 [style = bold, label=""];
8->10 [style = bold, label=""];
18->6 [style = bold, label=""];
13->28 [style = dashed, label="0"];
22->19 [style = bold, label=""];
7->8 [style = bold, label=""];
41->33 [style = bold, label=""];
29->35 [style = bold, label=""];
30->35 [style = solid, label="f"];
3->31 [style = dashed, label="0"];
28->15 [style = bold, label=""];
12->2 [style = dotted, label="true"];
35->27 [style = bold, label=""];
2->13 [style = solid, label="f"];
2->21 [style = solid, label="f"];
2->30 [style = dashed, label="0"];
9->15 [style = dashed, label="0"];
2->11 [style = solid, label="f"];
30->37 [style = solid, label="f"];
17->35 [style = dashed, label="0"];
5->36 [style = dashed, label="0"];
3->4 [style = bold, label=""];
7->40 [style = dashed, label="0"];
2->3 [style = solid, label="f"];
2->18 [style = solid, label="f"];
36->37 [style = bold, label=""];
39->28 [style = bold, label=""];
34->24 [style = bold, label=""];
8->25 [style = dashed, label="0"];
2->23 [style = solid, label="f"];
2->10 [style = solid, label="f"];
30->25 [style = solid, label="f"];
25->38 [style = bold, label=""];
18->34 [style = dashed, label="0"];
11->7 [style = bold, label=""];
22->2 [style = dotted, label="true"];
27->40 [style = bold, label=""];
1->3 [style = bold, label=""];
16->21 [style = bold, label=""];
30->28 [style = solid, label="f"];
33->39 [style = bold, label=""];
30->26 [style = solid, label="f"];
21->5 [style = bold, label=""];
23->7 [style = bold, label=""];
2->0 [style = solid, label="f"];
33->35 [style = solid, label="opts"];
2->5 [style = solid, label="f"];
14->20 [style = bold, label=""];
4->0 [style = bold, label=""];
30->31 [style = solid, label="f"];
}
