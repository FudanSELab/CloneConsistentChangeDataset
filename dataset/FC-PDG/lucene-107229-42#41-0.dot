digraph {
12 [style = filled, label = "TopGroups<Integer> results = c.getTopGroups(childJoinQuery,null,0,10,0,true)@@@32@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(\"java\",childDoc.get(\"skill\"))@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertEquals(2007,childDoc.getField(\"year\").numericValue())@@@53@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "s.search(fullQuery.build(),c)@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "assertEquals(1,results.totalGroupedHitCount)@@@34@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertEquals(\"java\",childDoc.get(\"skill\"))@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
66 [style = filled, label = "assertEquals(1,topDocs.totalHits)@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
67 [style = filled, label = "BooleanQuery.Builder fullChildQuery = new BooleanQuery.Builder()@@@40@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
78 [style = filled, label = "fullQuery.add(new BooleanClause(childJoinQuery,Occur.MUST))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "testEmptyChildFilter['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "childQuery.add(new BooleanClause(new TermQuery(new Term(\"skill\",\"java\")),Occur.MUST))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "fullChildQuery.add(new BooleanClause(parentJoinQuery,Occur.MUST))@@@41@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "ToParentBlockJoinQuery childJoinQuery = new ToParentBlockJoinQuery(childQuery.build(),parentsFilter,ScoreMode.Avg)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final List<Document> docs = new ArrayList<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "dir.close()@@@52@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "dir.close()@@@58@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "BitSetProducer parentsFilter = new QueryBitSetProducer(new TermQuery(new Term(\"docType\",\"resume\")))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "TopDocs topDocs = s.search(fullQuery.build(),1)@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertEquals(0,s.search(fullChildQuery.build(),1).totalHits)@@@56@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "docs.clear()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertEquals(\"Lisa\",parentDoc.get(\"name\"))@@@34@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
71 [style = filled, label = "ParentChildrenBlockJoinQuery childrenQuery = new ParentChildrenBlockJoinQuery(parentsFilter,childQuery.build(),topDocs.scoreDocs(0(.doc)@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "assertEquals(1,hits.totalHits)@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "fullChildQuery.add(new TermQuery(new Term(\"skill\",\"foosball\")),Occur.FILTER)@@@55@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "docs.add(makeJob(\"ruby\",2005))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "docs.add(makeJob(\"java\",2007))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "childDoc = s.doc(hits.scoreDocs(0(.doc)@@@51@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "CheckHits.checkHitCollector(random(),fullQuery.build(),\"country\",s,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1ac2499)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "BooleanQuery.Builder childQuery = new BooleanQuery.Builder()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "TopDocs matchingChildren = s.search(childrenQuery,1)@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
74 [style = filled, label = "final IndexWriterConfig config = new IndexWriterConfig(new MockAnalyzer(random()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "docs.add(makeJob(\"java\",2007))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "TopGroups<Integer> results = c.getTopGroups(childJoinQuery,null,0,10,0,true)@@@33@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "BooleanQuery.Builder fullQuery = new BooleanQuery.Builder()@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertFalse(Float.isNaN(results.maxScore))@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(\"Lisa\",getParentDoc(r,parentsFilter,hits.scoreDocs(0(.doc).get(\"name\"))@@@54@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "w.addDocuments(docs)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "docs.add(makeJob(\"python\",2010))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(1,results.groups.length)@@@35@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "w.close()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Document parentDoc = s.doc(group.groupValue)@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertNotNull(group.groupValue)@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
73 [style = filled, label = "w.commit()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "config.setMergePolicy(NoMergePolicy.INSTANCE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "docs.add(makeJob(\"java\",2006))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(1,hits.totalHits)@@@50@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "Document childDoc = s.doc(hits.scoreDocs(0(.doc)@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "childQuery.add(new BooleanClause(IntPoint.newRangeQuery(\"year\",2006,2011),Occur.MUST))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertEquals(1,matchingChildren.totalHits)@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Document childDoc = s.doc(group.scoreDocs(0(.doc)@@@37@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "IndexSearcher s = new IndexSearcher(r)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "assertEquals(2007,childDoc.getField(\"year\").numericValue())@@@47@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
82 [style = filled, label = "final IndexWriter w = new IndexWriter(dir,config)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "final RandomIndexWriter w = new RandomIndexWriter(random(),dir)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "r.close()@@@57@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "w.addDocuments(docs)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "BooleanQuery.Builder childQuery = new BooleanQuery.Builder()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "fullChildQuery.add(new BooleanClause(childQuery.build(),Occur.MUST))@@@42@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
76 [style = filled, label = "r.close()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "BitSetProducer parentsFilter = new QueryBitSetProducer(new TermQuery(new Term(\"docType\",\"resume\")))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "IndexReader r = DirectoryReader.open(w)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "CheckJoinIndex.check(r,parentsFilter)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "s.search(fullQuery.build(),c)@@@31@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "docs.add(makeResume(\"Frank\",\"United States\"))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "dir.close()@@@43@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "ToParentBlockJoinCollector c = new ToParentBlockJoinCollector(Sort.RELEVANCE,1,true,true)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "fullQuery.add(new BooleanClause(new MatchAllDocsQuery(),Occur.MUST))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "ToChildBlockJoinQuery parentJoinQuery = new ToChildBlockJoinQuery(parentQuery,parentsFilter)@@@39@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
60 [style = filled, label = "testSimple['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final Directory dir = newDirectory()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertFalse(Float.isNaN(results.maxScore))@@@34@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "Document parentDoc = s.doc(topDocs.scoreDocs(0(.doc)@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "testSimple['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertNotNull(group.groupValue)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(\"java\",childDoc.get(\"skill\"))@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "final List<Document> docs = new ArrayList<>()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "fullQuery.add(new BooleanClause(parentQuery,Occur.MUST))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(\"java\",childDoc.get(\"skill\"))@@@52@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertEquals(\"java\",s.doc(matchingChildren.scoreDocs(0(.doc).get(\"skill\"))@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "r.close()@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(\"Lisa\",parentDoc.get(\"name\"))@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "IndexSearcher s = newSearcher(r,false)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final GroupDocs<Integer> group = results.groups(0(@@@36@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "docs.add(makeResume(\"Lisa\",\"United Kingdom\"))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32->53 [style = bold, label=""];
2->35 [style = bold, label=""];
14->24 [style = bold, label=""];
45->10 [style = solid, label="docs"];
52->44 [style = bold, label=""];
24->78 [style = solid, label="childJoinQuery"];
46->35 [style = solid, label="parentJoinQuery"];
48->29 [style = bold, label=""];
46->2 [style = bold, label=""];
29->71 [style = solid, label="parentsFilter"];
21->8 [style = bold, label=""];
68->66 [style = bold, label=""];
47->24 [style = solid, label="childJoinQuery"];
39->24 [style = bold, label=""];
31->21 [style = bold, label=""];
23->73 [style = bold, label=""];
52->68 [style = bold, label=""];
29->46 [style = solid, label="parentsFilter"];
25->55 [style = solid, label="parentQuery"];
63->55 [style = bold, label=""];
3->5 [style = bold, label=""];
9->80 [style = bold, label=""];
24->11 [style = bold, label=""];
62->65 [style = bold, label=""];
27->7 [style = bold, label=""];
71->69 [style = solid, label="childrenQuery"];
48->80 [style = dashed, label="0"];
13->22 [style = bold, label=""];
8->4 [style = bold, label=""];
67->58 [style = bold, label=""];
72->18 [style = bold, label=""];
5->36 [style = bold, label=""];
77->16 [style = solid, label="r"];
77->9 [style = bold, label=""];
25->47 [style = bold, label=""];
55->58 [style = solid, label="parentJoinQuery"];
57->61 [style = bold, label=""];
37->26 [style = bold, label=""];
29->9 [style = solid, label="parentsFilter"];
50->18 [style = bold, label=""];
18->12 [style = bold, label=""];
56->62 [style = bold, label=""];
51->0 [style = bold, label=""];
61->71 [style = bold, label=""];
69->59 [style = bold, label=""];
5->74 [style = bold, label=""];
58->70 [style = bold, label=""];
29->55 [style = solid, label="parentsFilter"];
26->13 [style = bold, label=""];
23->48 [style = bold, label=""];
9->54 [style = bold, label=""];
22->38 [style = bold, label=""];
25->39 [style = solid, label="parentQuery"];
11->78 [style = bold, label=""];
49->1 [style = bold, label=""];
20->23 [style = bold, label=""];
26->34 [style = solid, label="docs"];
59->63 [style = bold, label=""];
44->41 [style = bold, label=""];
70->40 [style = bold, label=""];
14->39 [style = bold, label=""];
75->82 [style = bold, label=""];
66->57 [style = bold, label=""];
65->46 [style = bold, label=""];
41->50 [style = bold, label=""];
12->31 [style = bold, label=""];
26->23 [style = solid, label="docs"];
80->30 [style = bold, label=""];
74->75 [style = bold, label=""];
74->82 [style = solid, label="config"];
35->42 [style = bold, label=""];
34->49 [style = bold, label=""];
0->43 [style = bold, label=""];
4->7 [style = bold, label=""];
60->5 [style = bold, label=""];
82->26 [style = bold, label=""];
77->80 [style = solid, label="r"];
6->27 [style = bold, label=""];
43->17 [style = bold, label=""];
19->32 [style = bold, label=""];
35->76 [style = bold, label=""];
15->28 [style = bold, label=""];
5->82 [style = solid, label="dir"];
38->34 [style = bold, label=""];
25->46 [style = solid, label="parentQuery"];
55->67 [style = bold, label=""];
30->24 [style = solid, label="parentsFilter"];
20->9 [style = solid, label="r"];
11->44 [style = solid, label="c"];
33->19 [style = bold, label=""];
47->41 [style = solid, label="childJoinQuery"];
7->40 [style = bold, label=""];
78->81 [style = bold, label=""];
83->5 [style = bold, label=""];
10->20 [style = bold, label=""];
4->6 [style = bold, label=""];
5->36 [style = solid, label="dir"];
29->9 [style = bold, label=""];
40->64 [style = bold, label=""];
24->12 [style = solid, label="childJoinQuery"];
54->30 [style = bold, label=""];
42->33 [style = bold, label=""];
16->25 [style = bold, label=""];
11->52 [style = bold, label=""];
28->51 [style = bold, label=""];
82->77 [style = solid, label="w"];
45->22 [style = solid, label="docs"];
71->69 [style = bold, label=""];
40->46 [style = bold, label=""];
30->16 [style = solid, label="parentsFilter"];
48->52 [style = solid, label="s"];
44->68 [style = dashed, label="0"];
64->56 [style = bold, label=""];
29->47 [style = solid, label="parentsFilter"];
81->72 [style = bold, label=""];
32->56 [style = dashed, label="0"];
20->48 [style = solid, label="r"];
53->15 [style = bold, label=""];
24->52 [style = bold, label=""];
73->77 [style = bold, label=""];
76->79 [style = bold, label=""];
45->37 [style = bold, label=""];
36->45 [style = bold, label=""];
30->16 [style = bold, label=""];
1->10 [style = bold, label=""];
47->14 [style = bold, label=""];
72->18 [style = solid, label="c"];
}
