digraph {
30 [style = filled, label = "{span.id(readHexString(input))break}@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "{span.parentId(readHexString(input))break}@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "{span.timestamp(input.readFixed64())break}@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "{logAndSkip(input,tag)break}@@@81@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "{int length = input.readRawVarint32()int oldLimit = input.pushLimit(length)decodeAnnotation(input,span)input.checkLastTagWas(0)input.popLimit(oldLimit)break}@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "CodedInputStream input@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "{span.traceId(readHexString(input))break}@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ProtoReader input@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "{logAndSkip(input,tag)break}@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "decodeOne['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "{span.traceId(readHexString(input))break}@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "kind == 0@@@24@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "{span.debug(ProtoAdapter.BOOL.decode(input))break}@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "{span.shared(ProtoAdapter.BOOL.decode(input))break}@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "!done@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "int tag = input.nextTag()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "done = true@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "done = true@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "decodeOne['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Span.Builder span = Span.newBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "return span.build()@@@87@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "{long token = input.beginMessage()decodeAnnotation(input,span)input.endMessageAndGetUnknownFields(token)break}@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "int tag = input.readTag()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "{span.name(input.readStringRequireUtf8())break}@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "{int length = input.readRawVarint32()int oldLimit = input.pushLimit(length)span.localEndpoint(decodeEndpoint(input))input.checkLastTagWas(0)input.popLimit(oldLimit)break}@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "{int kind = input.readEnum()if (kind == 0) breakif (kind > Span.Kind.values().length) breakspan.kind(Span.Kind.values()(kind - 1()break}@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "{span.timestamp(input.readFixed64())break}@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "{span.duration(input.readUInt64())break}@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "{span.id(readHexString(input))break}@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "{span.duration(input.readVarint64())break}@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "{span.parentId(readHexString(input))break}@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "{long token = input.beginMessage()decodeTag(input,span)input.endMessageAndGetUnknownFields(token)break}@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "{long token = input.beginMessage()span.localEndpoint(decodeEndpoint(input))input.endMessageAndGetUnknownFields(token)break}@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "return span.build()@@@80@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "{span.shared(input.readBool())break}@@@77@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "{int length = input.readRawVarint32()int oldLimit = input.pushLimit(length)decodeTag(input,span)input.checkLastTagWas(0)input.popLimit(oldLimit)break}@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "{long token = input.beginMessage()span.remoteEndpoint(decodeEndpoint(input))input.endMessageAndGetUnknownFields(token)break}@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "{String name = input.readString()span.name(name)break}@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "{span.debug(input.readBool())break}@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "boolean done = false@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "decodeOne['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "tag@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "kind > Span.Kind.values().length@@@25@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "{int length = input.readRawVarint32()int oldLimit = input.pushLimit(length)span.remoteEndpoint(decodeEndpoint(input))input.checkLastTagWas(0)input.popLimit(oldLimit)break}@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "{int kind = input.readVarint32()if (kind == 0) breakif (kind > Span.Kind.values().length) breakspan.kind(Span.Kind.values()(kind - 1()break}@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->24 [style = bold, label=""];
10->23 [style = bold, label=""];
39->37 [style = solid, label="input"];
10->30 [style = bold, label=""];
0->33 [style = dashed, label="0"];
6->43 [style = bold, label=""];
42->33 [style = solid, label="length"];
32->37 [style = bold, label=""];
43->10 [style = bold, label=""];
38->39 [style = dotted, label="true"];
10->11 [style = bold, label=""];
25->22 [style = dotted, label="true"];
25->12 [style = bold, label=""];
10->3 [style = bold, label=""];
10->18 [style = bold, label=""];
10->27 [style = dotted, label="true"];
22->18 [style = solid, label="input"];
0->23 [style = bold, label=""];
39->41 [style = solid, label="input"];
6->21 [style = bold, label=""];
17->43 [style = dashed, label="0"];
16->26 [style = dashed, label="0"];
15->0 [style = bold, label=""];
6->10 [style = dotted, label="true"];
37->42 [style = bold, label=""];
10->40 [style = bold, label=""];
19->22 [style = dotted, label="true"];
20->27 [style = dashed, label="0"];
11->40 [style = dashed, label="0"];
16->5 [style = bold, label=""];
10->15 [style = bold, label=""];
42->32 [style = solid, label="length"];
24->14 [style = bold, label=""];
31->34 [style = bold, label=""];
10->5 [style = bold, label=""];
5->6 [style = bold, label=""];
43->10 [style = solid, label="tag"];
35->40 [style = bold, label=""];
10->37 [style = bold, label=""];
12->42 [style = solid, label="span"];
27->28 [style = bold, label=""];
22->14 [style = solid, label="input"];
39->31 [style = solid, label="input"];
14->13 [style = bold, label=""];
9->44 [style = dashed, label="0"];
10->42 [style = bold, label=""];
15->30 [style = dashed, label="0"];
14->24 [style = solid, label="token"];
6->17 [style = dotted, label="true"];
37->42 [style = solid, label="length"];
33->35 [style = bold, label=""];
10->7 [style = bold, label=""];
22->15 [style = solid, label="input"];
12->14 [style = solid, label="span"];
6->43 [style = dotted, label="true"];
8->36 [style = dashed, label="0"];
26->41 [style = bold, label=""];
10->20 [style = dotted, label="true"];
10->34 [style = bold, label=""];
39->30 [style = solid, label="input"];
34->30 [style = bold, label=""];
24->37 [style = dashed, label="0"];
17->5 [style = solid, label="tag"];
10->14 [style = bold, label=""];
10->26 [style = bold, label=""];
17->10 [style = solid, label="tag"];
42->29 [style = bold, label=""];
18->32 [style = dashed, label="0"];
10->20 [style = bold, label=""];
10->16 [style = bold, label=""];
10->1 [style = dotted, label="true"];
6->28 [style = bold, label=""];
14->18 [style = solid, label="token"];
7->31 [style = dashed, label="0"];
23->35 [style = dashed, label="0"];
12->24 [style = solid, label="span"];
39->32 [style = solid, label="input"];
12->2 [style = bold, label=""];
10->8 [style = bold, label=""];
22->39 [style = dashed, label="0"];
10->44 [style = bold, label=""];
42->37 [style = solid, label="length"];
12->37 [style = solid, label="span"];
7->3 [style = bold, label=""];
30->33 [style = bold, label=""];
22->5 [style = solid, label="input"];
10->13 [style = bold, label=""];
11->8 [style = bold, label=""];
13->16 [style = bold, label=""];
36->44 [style = bold, label=""];
13->29 [style = dashed, label="0"];
2->6 [style = bold, label=""];
22->9 [style = solid, label="input"];
14->9 [style = solid, label="token"];
10->0 [style = bold, label=""];
9->18 [style = bold, label=""];
44->32 [style = solid, label="length"];
10->32 [style = bold, label=""];
8->9 [style = bold, label=""];
41->6 [style = bold, label=""];
42->44 [style = solid, label="length"];
10->35 [style = bold, label=""];
18->24 [style = bold, label=""];
10->9 [style = bold, label=""];
40->36 [style = bold, label=""];
39->44 [style = solid, label="input"];
10->36 [style = bold, label=""];
10->27 [style = bold, label=""];
10->31 [style = bold, label=""];
44->32 [style = bold, label=""];
22->3 [style = solid, label="input"];
24->14 [style = solid, label="token"];
6->17 [style = bold, label=""];
18->24 [style = solid, label="token"];
39->42 [style = solid, label="input"];
22->13 [style = solid, label="input"];
23->11 [style = bold, label=""];
10->29 [style = bold, label=""];
14->42 [style = dashed, label="0"];
38->12 [style = bold, label=""];
20->21 [style = bold, label=""];
39->34 [style = solid, label="input"];
10->4 [style = dotted, label="true"];
22->16 [style = solid, label="input"];
43->41 [style = solid, label="tag"];
3->15 [style = bold, label=""];
3->34 [style = dashed, label="0"];
32->37 [style = solid, label="length"];
9->18 [style = solid, label="token"];
22->24 [style = solid, label="input"];
19->12 [style = bold, label=""];
10->33 [style = bold, label=""];
17->10 [style = bold, label=""];
10->41 [style = bold, label=""];
22->7 [style = solid, label="input"];
29->26 [style = bold, label=""];
}
