digraph {
9 [style = filled, label = "mrApp.stop()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final MyResourceManager rm = new MyResourceManager(conf)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "rm.drainEvents()@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testReportedAppProgressWithOnlyMaps['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "RMApp rmApp = MockRMAppSubmitter.submitWithMemory(1024,rm)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "RMApp rmApp = rm.submitApp(1024)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "amNodeManager.nodeHeartbeat(true)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "Configuration conf = new Configuration()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Assert.assertEquals(0.59f,job.getProgress(),0.001f)@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "MRApp mrApp = new MRApp(appAttemptId,ContainerId.newContainerId(appAttemptId,0),10,0,false,this.getClass().getName(),true,1){@Override protected Dispatcher createDispatcher(){return new DrainDispatcher()}protected ContainerAllocator createContainerAllocator(ClientService clientService,AppContext context){return new MyContainerAllocator(rm,appAttemptId,context)}}@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "allocator.schedule()@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "allocator.schedule()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "rm.drainEvents()@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "allocator.schedule()@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(0.14f,job.getProgress(),0.001f)@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "MyContainerAllocator allocator = (MyContainerAllocator)mrApp.getContainerAllocator()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Iterator<Task> it = job.getTasks().values().iterator()@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "Assert.assertTrue(allocator.isApplicationMasterRegistered())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "mrApp.waitForInternalState((TaskAttemptImpl)t.getAttempts().values().iterator().next(),TaskAttemptStateInternal.UNASSIGNED)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final ApplicationAttemptId appAttemptId = rmApp.getCurrentAppAttempt().getAppAttemptId()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(0.05f,job.getProgress(),0.001f)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "rm.drainEvents()@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "MockNM amNodeManager = rm.registerNode(\"127.0.0.1:1234\",11264)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "MRApp mrApp = new MRApp(appAttemptId,ContainerId.newContainerId(appAttemptId,0),10,0,false,this.getClass().getName(),true,1){@Override protected Dispatcher createDispatcher(){return new DrainDispatcher()}protected ContainerAllocator createContainerAllocator(ClientService clientService,AppContext context){return new MyContainerAllocator(rm,appAttemptId,context)}}@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(0.59f,rmApp.getProgress(),0.001f)@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "allocator.schedule()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "rm.drainEvents()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "rm.drainEvents()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "mrApp.waitForState(t,TaskState.RUNNING)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "finishNextNTasks(rmDispatcher,amNodeManager,mrApp,it,5)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "testUnregistrationOnlyIfRegistered['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "amNodeManager.nodeHeartbeat(true)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "DrainDispatcher amDispatcher = (DrainDispatcher)mrApp.getDispatcher()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "rm.drainEvents()@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "allocator.schedule()@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "rm.drainEvents()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(0.95f,job.getProgress(),0.001f)@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "DrainDispatcher rmDispatcher = (DrainDispatcher)rm.getRMContext().getDispatcher()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Assert.assertEquals(0.0,rmApp.getProgress(),0.0)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final ApplicationAttemptId appAttemptId = rmApp.getCurrentAppAttempt().getAppAttemptId()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "rm.start()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "amDispatcher.await()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "rm.drainEvents()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "LOG.info(\"Running testReportedAppProgressWithOnlyMaps\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "testReportedAppProgressWithOnlyMaps['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "MockNM amNodeManager = rm.registerNode(\"amNM:1234\",11264)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Job job = mrApp.getContext().getAllJobs().entrySet().iterator().next().getValue()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "rm.sendAMLaunched(appAttemptId)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "rm.drainEvents()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "finishNextNTasks(rmDispatcher,amNodeManager,mrApp,it,1)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Assert.assertEquals(0.14f,rmApp.getProgress(),0.001f)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "mrApp.submit(conf)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "amDispatcher.await()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "Assert.assertTrue(allocator.isUnregistered())@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "allocator.schedule()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "finishNextNTasks(rmDispatcher,amNodeManager,mrApp,it,4)@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "mrApp.waitForInternalState((JobImpl)job,JobStateInternal.RUNNING)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assert.assertEquals(0.95f,rmApp.getProgress(),0.001f)@@@65@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "rm.drainEvents()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(0.05f,rmApp.getProgress(),0.001f)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "MyContainerAllocator allocator = (MyContainerAllocator)mrApp.getContainerAllocator()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35->48 [style = bold, label=""];
6->43 [style = bold, label=""];
27->44 [style = bold, label=""];
55->13 [style = bold, label=""];
17->52 [style = dashed, label="0"];
38->2 [style = solid, label="mrApp"];
56->54 [style = bold, label=""];
9->58 [style = bold, label=""];
34->36 [style = solid, label="rmDispatcher"];
4->44 [style = solid, label="job"];
34->17 [style = bold, label=""];
30->14 [style = bold, label=""];
43->29 [style = bold, label=""];
42->1 [style = bold, label=""];
49->40 [style = bold, label=""];
4->16 [style = bold, label=""];
8->34 [style = bold, label=""];
46->42 [style = bold, label=""];
50->38 [style = solid, label="rm"];
21->0 [style = bold, label=""];
19->12 [style = bold, label=""];
12->21 [style = bold, label=""];
16->56 [style = bold, label=""];
25->36 [style = bold, label=""];
52->37 [style = bold, label=""];
34->52 [style = bold, label=""];
31->4 [style = bold, label=""];
38->36 [style = solid, label="mrApp"];
17->37 [style = bold, label=""];
8->17 [style = bold, label=""];
60->55 [style = bold, label=""];
41->30 [style = bold, label=""];
36->49 [style = bold, label=""];
41->35 [style = solid, label="amNodeManager"];
39->35 [style = bold, label=""];
57->30 [style = bold, label=""];
51->18 [style = bold, label=""];
38->47 [style = bold, label=""];
0->20 [style = bold, label=""];
29->38 [style = bold, label=""];
50->52 [style = solid, label="rm"];
27->16 [style = dashed, label="0"];
13->50 [style = solid, label="conf"];
5->22 [style = bold, label=""];
59->43 [style = bold, label=""];
14->6 [style = bold, label=""];
55->13 [style = solid, label="conf"];
38->35 [style = solid, label="mrApp"];
16->27 [style = bold, label=""];
47->31 [style = bold, label=""];
37->41 [style = bold, label=""];
33->36 [style = solid, label="it"];
41->37 [style = dashed, label="0"];
1->3 [style = bold, label=""];
13->50 [style = bold, label=""];
3->28 [style = bold, label=""];
48->23 [style = bold, label=""];
13->29 [style = solid, label="rm"];
7->39 [style = bold, label=""];
24->25 [style = bold, label=""];
33->35 [style = solid, label="it"];
22->10 [style = bold, label=""];
40->32 [style = bold, label=""];
9->19 [style = bold, label=""];
13->31 [style = solid, label="conf"];
6->43 [style = solid, label="appAttemptId"];
6->38 [style = solid, label="appAttemptId"];
44->9 [style = bold, label=""];
2->11 [style = bold, label=""];
33->2 [style = bold, label=""];
41->2 [style = solid, label="amNodeManager"];
37->57 [style = bold, label=""];
29->53 [style = bold, label=""];
32->45 [style = bold, label=""];
34->2 [style = solid, label="rmDispatcher"];
15->7 [style = bold, label=""];
31->16 [style = bold, label=""];
14->29 [style = solid, label="appAttemptId"];
10->46 [style = bold, label=""];
34->35 [style = solid, label="rmDispatcher"];
33->2 [style = solid, label="it"];
6->14 [style = dashed, label="0"];
53->31 [style = bold, label=""];
41->36 [style = solid, label="amNodeManager"];
11->15 [style = bold, label=""];
20->5 [style = bold, label=""];
23->24 [style = bold, label=""];
28->33 [style = bold, label=""];
54->9 [style = bold, label=""];
18->13 [style = bold, label=""];
50->8 [style = bold, label=""];
14->59 [style = bold, label=""];
14->59 [style = solid, label="appAttemptId"];
55->53 [style = solid, label="conf"];
26->18 [style = bold, label=""];
38->29 [style = dashed, label="0"];
}
