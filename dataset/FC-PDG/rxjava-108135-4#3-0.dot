digraph {
9 [style = filled, label = "AssertionError ex@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "AssertionError ex@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ts.assertValueSequence(Arrays.asList(1,2,3))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "TestSubscriberEx<Integer> ts = new TestSubscriberEx<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "throw new RuntimeException(\"Should have thrown\")@@@22@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "throw new RuntimeException(\"Should have thrown\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "{}@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertValueSequence['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "ts.assertValueSequence(Arrays.asList(1,2))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertValueSequence['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "{}@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "{}@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "ts.onSubscribe(new BooleanSubscription())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "throw new RuntimeException(\"Should have thrown\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertValueSequence['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "{}@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ts.onNext(1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ts.assertValueSequence(Collections.singletonList(1))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "{}@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ts.onNext(2)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "TestSubscriber<Integer> ts = TestSubscriber.create()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "TestSubscriberEx<Integer> ts = new TestSubscriberEx<Integer>()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "ts.assertValueSequence(Collections.emptyList())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "{}@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->16 [style = bold, label=""];
11->20 [style = bold, label=""];
19->18 [style = bold, label=""];
9->2 [style = bold, label=""];
21->15 [style = bold, label=""];
4->13 [style = bold, label=""];
23->4 [style = bold, label=""];
9->17 [style = bold, label=""];
15->3 [style = bold, label=""];
12->1 [style = bold, label=""];
22->23 [style = bold, label=""];
6->15 [style = bold, label=""];
20->5 [style = bold, label=""];
7->14 [style = bold, label=""];
11->0 [style = bold, label=""];
14->23 [style = dashed, label="0"];
13->12 [style = bold, label=""];
10->5 [style = bold, label=""];
5->6 [style = bold, label=""];
18->4 [style = bold, label=""];
3->8 [style = bold, label=""];
2->15 [style = bold, label=""];
17->15 [style = bold, label=""];
9->21 [style = bold, label=""];
16->5 [style = bold, label=""];
14->18 [style = dashed, label="0"];
1->10 [style = bold, label=""];
0->5 [style = bold, label=""];
14->4 [style = bold, label=""];
}
