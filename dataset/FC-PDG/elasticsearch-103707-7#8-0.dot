digraph {
12 [style = filled, label = "final ClusterState oldClusterState = loadPersistedClusterState(newPersistedClusterStateService(nodeEnvironment1))@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "assertThat(message,allOf(containsString(\"duplicate metadata found\"),containsString(brokenPath.toString()),containsString(indexName),containsString(indexUUID)))@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "indexWriter.commit()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "writeState(writer,0L,ClusterState.builder(clusterState).metadata(Metadata.builder(clusterState.metadata()).version(1L).coordinationMetadata(CoordinationMetadata.builder(clusterState.coordinationMetadata()).term(1L).build()).put(IndexMetadata.builder(indexName).version(1L).settings(Settings.builder().put(IndexMetadata.INDEX_NUMBER_OF_SHARDS_SETTING.getKey(),1).put(IndexMetadata.INDEX_NUMBER_OF_REPLICAS_SETTING.getKey(),0).put(IndexMetadata.SETTING_VERSION_CREATED,Version.CURRENT).put(IndexMetadata.SETTING_INDEX_UUID,indexUUID)))).incrementVersion().build(),clusterState)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final String message = expectThrows(,null).getMessage()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testFailsIfIndexMetadataIsDuplicated['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final String indexName = randomAlphaOfLength(10)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "indexWriter.addIndexes(dupDirectory)@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final Path(( combinedPaths = Stream.concat(Arrays.stream(dataPaths1),Arrays.stream(dataPaths2)).toArray(null)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "indexWriter.deleteDocuments(new Term(\"type\",\"global\"))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "writeState(writer1,0L,newClusterState,oldClusterState)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "writeState(writer,0L,ClusterState.builder(clusterState).version(randomLongBetween(1L,Long.MAX_VALUE)).build(),clusterState)@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "indexWriter.commit()@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final String message = expectThrows(,null).getMessage()@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "final Path brokenPath = createTempDir()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "final String indexUUID = UUIDs.randomBase64UUID(random())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final ClusterState clusterState = loadPersistedClusterState(newPersistedClusterStateService(nodeEnvironment))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final Path(( dataPaths1 = createDataPaths()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testFailsIfGlobalMetadataIsDuplicated['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final long newVersion = randomLongBetween(1L,Long.MAX_VALUE)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "final Path(( dataPaths2 = createDataPaths()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "writeState(writer2,0L,newClusterState,oldClusterState)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "final ClusterState newClusterState = ClusterState.builder(oldClusterState).version(newVersion).build()@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "final Path brokenPath = randomFrom(nodeEnvironment.nodeDataPaths())@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final Path dupPath = createTempDir()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "final Path dupPath = randomValueOtherThan(brokenPath,null)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(message,allOf(containsString(\"duplicate global metadata found\"),containsString(brokenPath.toString())))@@@23@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "testFailsIfGlobalMetadataIsDuplicated['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22->11 [style = bold, label=""];
1->23 [style = dashed, label="0"];
5->14 [style = bold, label=""];
13->17 [style = solid, label="newClusterState"];
13->15 [style = solid, label="newClusterState"];
14->18 [style = solid, label="message"];
4->14 [style = dashed, label="0"];
7->24 [style = bold, label=""];
4->26 [style = solid, label="message"];
1->10 [style = bold, label=""];
10->3 [style = solid, label="brokenPath"];
14->18 [style = bold, label=""];
8->4 [style = bold, label=""];
4->26 [style = bold, label=""];
3->2 [style = bold, label=""];
23->10 [style = bold, label=""];
25->2 [style = bold, label=""];
4->5 [style = solid, label="message"];
0->7 [style = bold, label=""];
13->17 [style = bold, label=""];
0->21 [style = dashed, label="0"];
19->20 [style = bold, label=""];
4->5 [style = bold, label=""];
15->4 [style = bold, label=""];
27->9 [style = bold, label=""];
11->1 [style = bold, label=""];
9->0 [style = bold, label=""];
7->11 [style = bold, label=""];
16->13 [style = bold, label=""];
21->12 [style = bold, label=""];
10->3 [style = bold, label=""];
2->8 [style = bold, label=""];
24->22 [style = bold, label=""];
12->16 [style = bold, label=""];
6->9 [style = bold, label=""];
24->26 [style = solid, label="indexUUID"];
20->21 [style = bold, label=""];
11->1 [style = solid, label="clusterState"];
17->15 [style = bold, label=""];
11->23 [style = solid, label="clusterState"];
11->23 [style = bold, label=""];
3->25 [style = bold, label=""];
9->20 [style = dashed, label="0"];
12->17 [style = solid, label="oldClusterState"];
22->26 [style = solid, label="indexName"];
12->15 [style = solid, label="oldClusterState"];
5->26 [style = dashed, label="0"];
}
