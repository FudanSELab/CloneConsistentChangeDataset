digraph {
18 [style = filled, label = "{}@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(0,((InMemoryAuditLogger)AuditLogManager.getInstance().getLogger()).inMemQueue.size())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "AuditLogEntry logEntry = ((InMemoryAuditLogger)AuditLogManager.getInstance().getLogger()).inMemQueue.poll()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "ResultSet rs = session.execute(pstmt.bind(1,\"insert_audit\",\"test\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "{}@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "logEntry = ((InMemoryAuditLogger)AuditLogManager.getInstance().getLogger()).inMemQueue.poll()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testCqlSelectQuerySyntaxError['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "String cql = \"INSERT INTO \" + KEYSPACE + '.' + currentTable() + \" (id, v1, v2) VALUES (?,?,?)\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "dropTable(\"DROP TABLE %s\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "AuditLogEntry logEntry = ((InMemoryAuditLogger)AuditLogManager.getInstance().getLogger()).inMemQueue.poll()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.fail(\"should not succeed\")@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "NoHostAvailableException e@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(0,((InMemoryAuditLogger)AuditLogManager.getInstance().getLogger()).inMemQueue.size())@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertLogEntry(logEntry,cql)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String cql = \"SELECT * FROM \" + KEYSPACE + '.' + currentTable() + \" LIMIT 2w\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "{}@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "Assert.fail(\"should not succeed\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertLogEntry(cql,AuditLogEntryType.PREPARE_STATEMENT,logEntry,false)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "SyntaxError e@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ResultSet rs = session.execute(cql)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Session session = sessionNet()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertLogEntry(logEntry,null)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testCqlSelectQuerySyntaxError['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertEquals(0,((InMemoryAuditLogger)AuditLogManager.instance.getLogger()).inMemQueue.size())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "testCqlPrepareQueryError['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertLogEntry(logEntry,cql)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "AuditLogEntry logEntry = ((InMemoryAuditLogger)AuditLogManager.instance.getLogger()).inMemQueue.poll()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "createTable(\"CREATE TABLE %s (id int primary key, v1 text, v2 text)\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "PreparedStatement pstmt = session.prepare(cql)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19->26 [style = solid, label="cql"];
5->10 [style = bold, label=""];
16->15 [style = bold, label=""];
21->10 [style = bold, label=""];
23->16 [style = bold, label=""];
7->1 [style = bold, label=""];
1->8 [style = bold, label=""];
9->11 [style = bold, label=""];
0->13 [style = bold, label=""];
8->23 [style = bold, label=""];
11->14 [style = bold, label=""];
0->2 [style = bold, label=""];
1->19 [style = dashed, label="0"];
25->18 [style = bold, label=""];
22->21 [style = bold, label=""];
18->17 [style = bold, label=""];
10->17 [style = bold, label=""];
5->14 [style = bold, label=""];
17->24 [style = solid, label="logEntry"];
14->0 [style = solid, label="logEntry"];
12->7 [style = bold, label=""];
19->8 [style = bold, label=""];
9->6 [style = bold, label=""];
15->22 [style = bold, label=""];
17->24 [style = bold, label=""];
10->0 [style = solid, label="logEntry"];
14->0 [style = bold, label=""];
3->7 [style = bold, label=""];
2->13 [style = dashed, label="0"];
19->23 [style = solid, label="cql"];
6->10 [style = bold, label=""];
16->15 [style = solid, label="logEntry"];
10->0 [style = bold, label=""];
9->25 [style = dashed, label="0"];
27->26 [style = solid, label="logEntry"];
26->28 [style = bold, label=""];
8->4 [style = bold, label=""];
19->15 [style = solid, label="cql"];
20->7 [style = bold, label=""];
4->23 [style = dashed, label="0"];
7->19 [style = bold, label=""];
4->5 [style = bold, label=""];
24->27 [style = bold, label=""];
1->4 [style = solid, label="cql"];
1->0 [style = solid, label="cql"];
10->14 [style = dashed, label="0"];
27->26 [style = bold, label=""];
}
