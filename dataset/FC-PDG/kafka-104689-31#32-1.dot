digraph {
36 [style = filled, label = "EasyMock.expect(plugins.compareAndSwapLoaders(sourceConnector)).andReturn(delegatingLoader).times(2)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "EasyMock.expectLastCall()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "worker.start()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "worker.herder = herder@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "ConnectorConfig connConfig = new SinkConnectorConfig(plugins,connProps)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "EasyMock.expect(plugins.currentThreadLoader()).andReturn(delegatingLoader).times(2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "EasyMock.expect(sinkConnector.taskConfigs(2)).andReturn(Arrays.asList(taskProps,taskProps))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "sinkConnector.stop()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "EasyMock.expectLastCall()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "EasyMock.expectLastCall()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "ConnectException e@@@42@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "Map<String,String> connProps = new HashMap<>(connectorProps)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "EasyMock.expect(plugins.newConnector(.getName())).andReturn(sourceConnector)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(CONNECTOR_ID)),worker.connectorNames())@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "connectorStatusListener.onStartup(CONNECTOR_ID)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "expectClusterId()@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "worker.startConnector(CONNECTOR_ID,connectorProps,ctx,connectorStatusListener,TargetState.STARTED)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "connectorProps.put(ConnectorConfig.CONNECTOR_CLASS_CONFIG,.getName())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testStartAndStopConnector['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "expectStartStorage()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(delegatingLoader)).andReturn(pluginLoader).times(2)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "sinkConnector.initialize(anyObject())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "EasyMock.expect(plugins.compareAndSwapLoaders(sinkConnector)).andReturn(delegatingLoader).times(3)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "expectedTaskProps.put(TaskConfig.TASK_CLASS_CONFIG,.getName())@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "EasyMock.expect(sourceConnector.version()).andReturn(\"1.0\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "EasyMock.expect(plugins.newConnector(.getName())).andReturn(sinkConnector)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "EasyMock.expect(sinkConnector.version()).andReturn(\"1.0\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "EasyMock.expect(sinkConnector.taskClass()).andReturn()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "worker.stop()@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "assertStatistics(worker,1,0)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertStatistics(worker,1,0)@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "connectorProps.put(SinkConnectorConfig.TOPICS_CONFIG,\"foo,bar\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertStatistics(worker,0,0)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expectFileConfigProvider()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "worker.startConnector(CONNECTOR_ID,connectorProps,ctx,connectorStatusListener,TargetState.STARTED)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "expectedTaskProps.put(\"foo\",\"bar\")@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "assertStatistics(worker,0,0)@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "assertStartupStatistics(worker,1,0,0,0)@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "sinkConnector.start(connectorProps)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "assertEquals(expectedTaskProps,taskConfigs.get(0))@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(Collections.emptySet(),worker.connectorNames())@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "worker.stopConnector(CONNECTOR_ID)@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "fail(\"Should have thrown exception when trying to add connector with same name.\")@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "testStartAndStopConnector['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "sourceConnector.start(connectorProps)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertStatistics(worker,0,0)@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "assertEquals(expectedTaskProps,taskConfigs.get(1))@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "{}@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "worker.startConnector(CONNECTOR_ID,connectorProps,ctx,connectorStatusListener,TargetState.STARTED)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(delegatingLoader)).andReturn(pluginLoader).times(3)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "connectorProps.put(ConnectorConfig.CONNECTOR_CLASS_CONFIG,.getName())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertStartupStatistics(worker,1,0,0,0)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "worker = new Worker(WORKER_ID,new MockTime(),plugins,config,offsetBackingStore,noneConnectorClientConfigOverridePolicy)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "{}@@@36@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
80 [style = filled, label = "assertEquals(2,taskConfigs.size())@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "EasyMock.expectLastCall()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "connProps.put(ConnectorConfig.TASKS_MAX_CONFIG,\"2\")@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "assertStartupStatistics(worker,1,0,0,0)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "EasyMock.expect(sinkConnector.version()).andReturn(\"1.0\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "EasyMock.expectLastCall()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "worker = new Worker(WORKER_ID,new MockTime(),plugins,config,offsetBackingStore,noneConnectorClientConfigOverridePolicy)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "connectorStatusListener.onShutdown(CONNECTOR_ID)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "MockFileConfigProvider.assertClosed(mockFileProviderTestId)@@@47@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "Map<String,String> expectedTaskProps = new HashMap<>()@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "PowerMock.verifyAll()@@@63@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "expectStopStorage()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "taskProps.put(\"foo\",\"bar\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "EasyMock.expectLastCall()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Map<String,String> taskProps = new HashMap<>()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "EasyMock.expect(sourceConnector.version()).andReturn(\"1.0\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "PowerMock.replayAll()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "connectorStatusListener.onStartup(CONNECTOR_ID)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(Collections.emptySet(),worker.connectorNames())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "sourceConnector.initialize(anyObject())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "expectedTaskProps.put(SinkTask.TOPICS_CONFIG,\"foo,bar\")@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "EasyMock.expectLastCall()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "EasyMock.expectLastCall()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expectConverters()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertStatistics(worker,0,0)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "{}@@@35@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "testReconfigureConnectorTasks['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "assertEquals(Collections.emptySet(),worker.connectorNames())@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "worker.herder = herder@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "worker.start()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "List<Map<String,String>> taskConfigs = worker.connectorTaskConfigs(CONNECTOR_ID,connConfig)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "EasyMock.expect(plugins.currentThreadLoader()).andReturn(delegatingLoader).times(3)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "EasyMock.expectLastCall()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "EasyMock.expectLastCall()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->0 [style = bold, label=""];
71->30 [style = bold, label=""];
12->44 [style = bold, label=""];
41->19 [style = bold, label=""];
17->9 [style = bold, label=""];
34->18 [style = bold, label=""];
40->20 [style = bold, label=""];
12->54 [style = solid, label="worker"];
36->81 [style = dashed, label="0"];
7->8 [style = bold, label=""];
69->78 [style = solid, label="expectedTaskProps"];
14->7 [style = bold, label=""];
30->62 [style = dashed, label="0"];
86->34 [style = bold, label=""];
8->1 [style = bold, label=""];
74->67 [style = bold, label=""];
1->28 [style = bold, label=""];
73->80 [style = bold, label=""];
39->8 [style = solid, label="worker"];
51->69 [style = bold, label=""];
62->49 [style = bold, label=""];
16->43 [style = bold, label=""];
21->16 [style = bold, label=""];
28->25 [style = bold, label=""];
75->68 [style = bold, label=""];
43->0 [style = bold, label=""];
82->87 [style = solid, label="connProps"];
35->38 [style = bold, label=""];
12->74 [style = solid, label="worker"];
55->12 [style = bold, label=""];
10->11 [style = bold, label=""];
72->84 [style = bold, label=""];
83->66 [style = bold, label=""];
7->1 [style = bold, label=""];
77->40 [style = bold, label=""];
63->78 [style = bold, label=""];
20->34 [style = bold, label=""];
36->31 [style = bold, label=""];
76->48 [style = bold, label=""];
61->83 [style = bold, label=""];
12->59 [style = solid, label="worker"];
39->34 [style = solid, label="worker"];
14->60 [style = bold, label=""];
19->2 [style = bold, label=""];
12->58 [style = solid, label="worker"];
54->58 [style = bold, label=""];
39->22 [style = bold, label=""];
0->62 [style = bold, label=""];
34->59 [style = bold, label=""];
23->37 [style = bold, label=""];
69->63 [style = solid, label="expectedTaskProps"];
12->83 [style = solid, label="worker"];
39->18 [style = solid, label="worker"];
2->77 [style = bold, label=""];
44->34 [style = bold, label=""];
59->18 [style = bold, label=""];
56->16 [style = bold, label=""];
49->48 [style = solid, label="taskProps"];
0->39 [style = bold, label=""];
87->51 [style = bold, label=""];
58->61 [style = bold, label=""];
52->46 [style = bold, label=""];
4->17 [style = bold, label=""];
6->34 [style = bold, label=""];
37->10 [style = bold, label=""];
35->9 [style = bold, label=""];
39->7 [style = solid, label="worker"];
68->65 [style = bold, label=""];
48->64 [style = bold, label=""];
37->53 [style = dashed, label="0"];
30->53 [style = bold, label=""];
32->57 [style = bold, label=""];
84->74 [style = bold, label=""];
11->24 [style = bold, label=""];
65->71 [style = bold, label=""];
85->47 [style = bold, label=""];
32->33 [style = bold, label=""];
64->2 [style = bold, label=""];
42->4 [style = bold, label=""];
87->51 [style = solid, label="connConfig"];
46->75 [style = bold, label=""];
12->86 [style = bold, label=""];
30->3 [style = bold, label=""];
29->42 [style = bold, label=""];
69->85 [style = bold, label=""];
82->70 [style = bold, label=""];
39->25 [style = solid, label="worker"];
57->82 [style = bold, label=""];
5->35 [style = bold, label=""];
53->13 [style = bold, label=""];
80->63 [style = bold, label=""];
12->60 [style = solid, label="worker"];
12->66 [style = solid, label="worker"];
24->15 [style = bold, label=""];
9->36 [style = bold, label=""];
31->23 [style = bold, label=""];
49->76 [style = bold, label=""];
11->56 [style = dashed, label="0"];
26->5 [style = bold, label=""];
47->73 [style = bold, label=""];
38->29 [style = bold, label=""];
25->32 [style = bold, label=""];
15->30 [style = bold, label=""];
2->40 [style = bold, label=""];
12->6 [style = bold, label=""];
78->54 [style = bold, label=""];
50->52 [style = bold, label=""];
20->55 [style = bold, label=""];
81->50 [style = bold, label=""];
79->5 [style = bold, label=""];
13->56 [style = bold, label=""];
22->27 [style = bold, label=""];
60->7 [style = bold, label=""];
70->87 [style = bold, label=""];
27->41 [style = bold, label=""];
9->81 [style = bold, label=""];
3->13 [style = bold, label=""];
66->72 [style = bold, label=""];
28->82 [style = bold, label=""];
13->21 [style = bold, label=""];
18->14 [style = bold, label=""];
45->5 [style = bold, label=""];
}
