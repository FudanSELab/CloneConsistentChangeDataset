digraph {
16 [style = filled, label = "runTask['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "FileUtils.forceMkdir(tmpDir)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "final TaskToolbox toolbox@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final Set<DataSegment> pushedSegments = generateAndPushSegments(toolbox,taskClient,inputSource,tmpDir)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "runTask['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "taskClient.report(supervisorTaskId,new PushedSegmentsReport(getId(),oldSegments,pushedSegments))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "DimensionDistributionReport report@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final VersionedIntervalTimeline<String,DataSegment> timeline = VersionedIntervalTimeline.forSegments(allSegments)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "sendReport['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final Set<DataSegment> pushedSegments = generateAndPushSegments(toolbox,taskClient,inputSource,toolbox.getIndexingTmpDir())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "final ParallelIndexSupervisorTaskClient taskClient = taskClientFactory.build(new ClientBasedTaskInfoProvider(indexingServiceClient),getId(),1,ingestionSchema.getTuningConfig().getChatHandlerTimeout(),ingestionSchema.getTuningConfig().getChatHandlerNumRetries())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "LOG.warn(\"Intervals are missing in granularitySpec while this task is potentially overwriting existing segments. \" + \"Forced to use timeChunk lock.\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return TaskStatus.success(getId())@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final Set<DataSegment> allSegments = new HashSet<>(getTaskLockHelper().getLockedExistingSegments())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "allSegments.addAll(pushedSegments)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "taskClient.report(supervisorTaskId,report)@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final ParallelIndexSupervisorTaskClient taskClient = taskClientFactory.build(new ClientBasedTaskInfoProvider(indexingServiceClient),getId(),1,ingestionSchema.getTuningConfig().getChatHandlerTimeout(),ingestionSchema.getTuningConfig().getChatHandlerNumRetries())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final File tmpDir = toolbox.getIndexingTmpDir()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "missingIntervalsInOverwriteMode@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final Set<DataSegment> oldSegments = FluentIterable.from(timeline.findFullyOvershadowed()).transformAndConcat(null).transform(null).toSet()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final InputSource inputSource = ingestionSchema.getIOConfig().getNonNullInputSource(ingestionSchema.getDataSchema().getParser())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->2 [style = solid, label="toolbox"];
17->19 [style = solid, label="report"];
2->7 [style = solid, label="pushedSegments"];
4->10 [style = bold, label=""];
1->4 [style = bold, label=""];
14->2 [style = solid, label="taskClient"];
16->12 [style = dotted, label="true"];
7->1 [style = bold, label=""];
16->11 [style = bold, label=""];
9->0 [style = bold, label=""];
14->15 [style = solid, label="taskClient"];
20->17 [style = dotted, label="true"];
2->3 [style = bold, label=""];
18->19 [style = bold, label=""];
15->10 [style = solid, label="pushedSegments"];
2->10 [style = solid, label="pushedSegments"];
5->12 [style = dotted, label="true"];
15->3 [style = bold, label=""];
10->6 [style = bold, label=""];
9->2 [style = solid, label="tmpDir"];
3->1 [style = solid, label="allSegments"];
2->15 [style = dashed, label="0"];
4->10 [style = solid, label="oldSegments"];
20->18 [style = bold, label=""];
0->14 [style = bold, label=""];
13->2 [style = solid, label="inputSource"];
3->7 [style = bold, label=""];
11->13 [style = bold, label=""];
13->15 [style = solid, label="inputSource"];
11->8 [style = bold, label=""];
11->8 [style = dotted, label="true"];
14->15 [style = bold, label=""];
14->2 [style = bold, label=""];
5->11 [style = bold, label=""];
13->9 [style = bold, label=""];
12->15 [style = solid, label="toolbox"];
9->0 [style = solid, label="tmpDir"];
13->14 [style = bold, label=""];
8->13 [style = bold, label=""];
15->7 [style = solid, label="pushedSegments"];
}
