digraph {
68 [style = filled, label = "assertEquals(Optional.of(\"testU\"),fifth.getField(\"url\"))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "assertEquals(Optional.of(\"testN\"),fifth.getField(\"number\"))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "assertEquals(Optional.of(\"testV\"),fifth.getField(\"volume\"))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
72 [style = filled, label = "Path file = Paths.get(.getResource(\"IsiImporterTestEmpty.isi\").toURI())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(Optional.of(\"testI1\"),be4.getField(\"school\"))@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "assertEquals(Optional.of(\"testN\"),be4.getField(\"number\"))@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "assertEquals(Optional.of(\"testR\"),fifth.getField(\"doi\"))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "assertEquals(Optional.of(\"testT\"),first.getField(\"title\"))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "assertEquals(Optional.of(\"test8\"),be1.getField(\"date\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
57 [style = filled, label = "assertEquals(\"misc\",first.getType())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertEquals(Optional.of(\"testT\"),be0.getField(\"title\"))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "BibEntry be3 = bibEntries.get(3)@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertEquals(Optional.of(\"testR\"),be4.getField(\"doi\"))@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "testImportEntries0['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
66 [style = filled, label = "BibEntry fourth = bibEntries.get(3)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "assertEquals(Optional.of(\"testJ\"),second.getField(\"journal\"))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "BibEntry second = bibEntries.get(1)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "assertEquals(\"article\",be2.getType())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
58 [style = filled, label = "assertEquals(Optional.of(\"testI0\"),fourth.getField(\"publisher\"))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertEquals(\"mastersthesis\",be4.getType())@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "assertEquals(Optional.of(\"testJ\"),be1.getField(\"journal\"))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
67 [style = filled, label = "assertEquals(\"misc\",second.getType())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "assertEquals(Optional.of(\"testB2\"),second.getField(\"booktitle\"))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
71 [style = filled, label = "List<BibEntry> entries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertEquals(Optional.of(\"testK\"),fifth.getField(\"keywords\"))@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "BibEntry first = bibEntries.get(0)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "assertEquals(Optional.of(\"testP\"),be4.getField(\"pages\"))@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "assertEquals(Optional.of(\"test7\"),second.getField(\"edition\"))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "assertEquals(\"mastersthesis\",fifth.getType())@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertEquals(Optional.of(\"testU\"),be4.getField(\"url\"))@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "BibEntry third = bibEntries.get(2)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
70 [style = filled, label = "assertEquals(1,entries.size())@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(Optional.of(\"testB0\"),be2.getField(\"journal\"))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "List<BibEntry> bibEntries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(Optional.of(\"testK\"),be4.getField(\"keywords\"))@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "assertEquals(Optional.of(\"testP\"),fifth.getField(\"pages\"))@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "BibEntry be1 = bibEntries.get(1)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "assertEquals(\"book\",be3.getType())@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "testImportEntries0['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertEquals(Optional.of(\"testD\"),second.getField(\"year\"))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "assertEquals(5,bibEntries.size())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertEquals(Optional.of(\"testE0 and testE1\"),first.getField(\"editor\"))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertEquals(Optional.of(\"test7\"),be1.getField(\"edition\"))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "BibEntry be2 = bibEntries.get(2)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "assertEquals(\"book\",fourth.getType())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "BibEntry be0 = bibEntries.get(0)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertEquals(Optional.of(\"testB2\"),be1.getField(\"booktitle\"))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "assertEquals(Optional.of(\"testA0 and testA1\"),be0.getField(\"author\"))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "assertEquals(Optional.of(\"testF\"),fifth.getField(\"bibtexkey\"))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "BibEntry fifth = bibEntries.get(4)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertEquals(Optional.of(\"testC\"),be1.getField(\"address\"))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "assertEquals(Optional.of(\"test8\"),second.getField(\"date\"))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertEquals(Optional.of(\"testV\"),be4.getField(\"volume\"))@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertEquals(Optional.of(\"testE0 and testE1\"),be0.getField(\"editor\"))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertEquals(Optional.of(\"testX\"),be4.getField(\"abstract\"))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertEquals(\"misc\",be1.getType())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "assertEquals(Optional.of(\"testB1\"),be3.getField(\"series\"))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "BibEntry be4 = bibEntries.get(4)@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
65 [style = filled, label = "assertEquals(Optional.of(\"testO1\"),fifth.getField(\"note\"))@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "assertEquals(\"article\",third.getType())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "assertEquals(Optional.of(\"testB1\"),fourth.getField(\"series\"))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "assertEquals(Optional.of(\"testI1\"),fifth.getField(\"school\"))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertEquals(Optional.of(\"testI0\"),be3.getField(\"publisher\"))@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "assertEquals(Optional.of(\"testX\"),fifth.getField(\"abstract\"))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertEquals(Optional.of(\"testF\"),be4.getField(\"bibtexkey\"))@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
63 [style = filled, label = "assertEquals(Optional.of(\"testB0\"),third.getField(\"journal\"))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertEquals(Optional.of(\"testD\"),be1.getField(\"year\"))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "Path file = Paths.get(.getResource(\"Endnote.entries.enw\").toURI())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "testImportEntriesEmpty['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertEquals(Optional.of(\"testA0 and testA1\"),first.getField(\"author\"))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "assertEquals(\"misc\",be0.getType())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "assertEquals(Optional.of(\"testC\"),second.getField(\"address\"))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertEquals(Optional.of(\"testO1\"),be4.getField(\"note\"))@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14->65 [style = dashed, label="0"];
71->70 [style = bold, label=""];
34->61 [style = bold, label=""];
14->25 [style = bold, label=""];
65->47 [style = bold, label=""];
64->51 [style = bold, label=""];
3->24 [style = bold, label=""];
26->10 [style = bold, label=""];
25->30 [style = bold, label=""];
68->50 [style = bold, label=""];
61->57 [style = bold, label=""];
10->17 [style = bold, label=""];
31->41 [style = dashed, label="0"];
15->60 [style = dashed, label="0"];
24->39 [style = dashed, label="0"];
0->66 [style = dashed, label="0"];
27->57 [style = dashed, label="0"];
54->65 [style = bold, label=""];
33->71 [style = dashed, label="0"];
35->23 [style = bold, label=""];
63->66 [style = bold, label=""];
51->48 [style = bold, label=""];
38->56 [style = bold, label=""];
69->72 [style = bold, label=""];
9->50 [style = dashed, label="0"];
4->8 [style = bold, label=""];
60->68 [style = bold, label=""];
32->72 [style = dashed, label="0"];
11->48 [style = dashed, label="0"];
21->3 [style = bold, label=""];
2->16 [style = bold, label=""];
6->32 [style = bold, label=""];
59->42 [style = bold, label=""];
24->28 [style = bold, label=""];
13->59 [style = dashed, label="0"];
40->62 [style = bold, label=""];
19->54 [style = dashed, label="0"];
49->58 [style = bold, label=""];
30->46 [style = dashed, label="0"];
22->9 [style = bold, label=""];
7->43 [style = dashed, label="0"];
35->56 [style = dashed, label="0"];
31->2 [style = bold, label=""];
55->38 [style = bold, label=""];
0->21 [style = bold, label=""];
46->60 [style = bold, label=""];
58->39 [style = bold, label=""];
18->4 [style = bold, label=""];
72->71 [style = bold, label=""];
37->45 [style = bold, label=""];
44->37 [style = bold, label=""];
20->7 [style = bold, label=""];
53->64 [style = bold, label=""];
66->49 [style = bold, label=""];
57->53 [style = bold, label=""];
12->31 [style = bold, label=""];
30->15 [style = bold, label=""];
27->26 [style = bold, label=""];
5->61 [style = dashed, label="0"];
43->59 [style = bold, label=""];
10->64 [style = dashed, label="0"];
42->52 [style = bold, label=""];
28->40 [style = dashed, label="0"];
52->41 [style = bold, label=""];
25->47 [style = dashed, label="0"];
62->44 [style = bold, label=""];
29->42 [style = dashed, label="0"];
23->0 [style = bold, label=""];
2->55 [style = dashed, label="0"];
32->33 [style = bold, label=""];
26->53 [style = dashed, label="0"];
15->22 [style = bold, label=""];
23->63 [style = dashed, label="0"];
17->51 [style = dashed, label="0"];
18->44 [style = dashed, label="0"];
19->14 [style = bold, label=""];
39->40 [style = bold, label=""];
56->63 [style = bold, label=""];
4->37 [style = dashed, label="0"];
1->62 [style = dashed, label="0"];
67->43 [style = bold, label=""];
12->52 [style = dashed, label="0"];
7->13 [style = bold, label=""];
11->20 [style = bold, label=""];
16->38 [style = dashed, label="0"];
41->55 [style = bold, label=""];
34->5 [style = bold, label=""];
8->19 [style = bold, label=""];
3->58 [style = dashed, label="0"];
36->32 [style = bold, label=""];
47->46 [style = bold, label=""];
1->18 [style = bold, label=""];
28->1 [style = bold, label=""];
45->54 [style = bold, label=""];
13->29 [style = bold, label=""];
34->70 [style = dashed, label="0"];
29->12 [style = bold, label=""];
22->68 [style = dashed, label="0"];
48->67 [style = bold, label=""];
8->45 [style = dashed, label="0"];
21->49 [style = dashed, label="0"];
5->27 [style = bold, label=""];
16->35 [style = bold, label=""];
33->34 [style = bold, label=""];
20->67 [style = dashed, label="0"];
17->11 [style = bold, label=""];
}
