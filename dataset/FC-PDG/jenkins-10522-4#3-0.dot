digraph {
5 [style = filled, label = "j.jenkins.getQueue().maintain()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "System.out.println(j.jenkins.getQueue().getItem(project))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "fail(\"The maximum attemps for checking if the job is in COMPLETED State have reached\")@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "j.jenkins.getQueue().maintain()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "j.jenkins.getQueue().cancel(project.getQueueItem())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertTrue(project.isInQueue())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "project.scheduleBuild2(1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "project.getBuildersList().add(new SleepBuilder(2000))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "int count = 0@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Thread.sleep(10)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(project.isInQueue())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "!JobQueueTest.fireCompletedFlag && count < 100@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "JobQueueTest.fireFinalizeFlag@@@30@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "fail(\"The maximum attemps for checking if the job is in POST_PRODUCTION State have reached\")@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "Thread.sleep(100)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "FreeStyleProject project = j.createFreeStyleProject(\"project\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "project.getBuildersList().add(new SleepBuilder(1000))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Thread.sleep(100)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "project.scheduleBuild2(0)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "project.scheduleBuild2(1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Thread.sleep(1000)@@@37@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "buildPendingWhenBuildInPostProduction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "fail(\"The maximum attempts for checking if the job is in COMPLETED State have reached\")@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "count++@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "j.jenkins.getQueue().getItem(project) instanceof WaitingItem@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "count++@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "JobQueueTest.fireCompletedFlag@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "fail(\"The maximum attempts for checking if the job is in POST_PRODUCTION State have reached\")@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "j.jenkins.getQueue().maintain()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "count = 0@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(j.jenkins.getQueue().getItem(project) instanceof BlockedItem)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertTrue(j.jenkins.getQueue().isEmpty())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "!JobQueueTest.fireFinalizeFlag && count < 100@@@26@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertFalse(j.jenkins.getQueue().getItem(project) instanceof BlockedItem)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "buildPendingWhenBuildRunning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "buildPendingWhenBuildInPostProduction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19->10 [style = dotted, label="true"];
2->35 [style = bold, label=""];
6->3 [style = bold, label=""];
12->20 [style = solid, label="count"];
19->14 [style = dotted, label="true"];
8->25 [style = dotted, label="true"];
15->2 [style = bold, label=""];
25->1 [style = bold, label=""];
4->6 [style = bold, label=""];
9->33 [style = bold, label=""];
9->19 [style = solid, label="project"];
8->26 [style = dotted, label="false"];
21->28 [style = dashed, label="0"];
16->24 [style = bold, label=""];
0->12 [style = bold, label=""];
12->11 [style = solid, label="count"];
29->9 [style = bold, label=""];
12->11 [style = bold, label=""];
11->17 [style = dotted, label="true"];
2->18 [style = bold, label=""];
19->10 [style = bold, label=""];
14->19 [style = bold, label=""];
34->31 [style = bold, label=""];
30->34 [style = bold, label=""];
7->4 [style = bold, label=""];
5->14 [style = bold, label=""];
3->16 [style = bold, label=""];
20->11 [style = bold, label=""];
28->12 [style = bold, label=""];
9->10 [style = solid, label="project"];
18->6 [style = solid, label="count"];
27->22 [style = bold, label=""];
26->22 [style = bold, label=""];
19->0 [style = bold, label=""];
3->24 [style = dotted, label="true"];
21->12 [style = bold, label=""];
1->22 [style = bold, label=""];
8->27 [style = dotted, label="false"];
8->1 [style = dotted, label="true"];
32->9 [style = bold, label=""];
11->20 [style = dotted, label="true"];
3->28 [style = bold, label=""];
13->19 [style = bold, label=""];
3->19 [style = dotted, label="true"];
10->5 [style = bold, label=""];
3->28 [style = dotted, label="false"];
6->4 [style = dotted, label="true"];
18->6 [style = bold, label=""];
9->15 [style = bold, label=""];
15->33 [style = dashed, label="0"];
3->0 [style = dotted, label="true"];
6->7 [style = dotted, label="true"];
19->5 [style = dotted, label="true"];
11->17 [style = bold, label=""];
3->21 [style = bold, label=""];
11->8 [style = bold, label=""];
17->20 [style = bold, label=""];
20->11 [style = solid, label="count"];
3->21 [style = dotted, label="false"];
3->16 [style = dotted, label="true"];
6->7 [style = bold, label=""];
8->27 [style = bold, label=""];
23->9 [style = bold, label=""];
35->30 [style = bold, label=""];
8->25 [style = bold, label=""];
9->0 [style = solid, label="project"];
18->4 [style = solid, label="count"];
33->2 [style = bold, label=""];
4->6 [style = solid, label="count"];
9->1 [style = solid, label="project"];
3->13 [style = dotted, label="true"];
26->27 [style = dashed, label="0"];
13->34 [style = dashed, label="0"];
24->13 [style = bold, label=""];
8->26 [style = bold, label=""];
19->31 [style = dashed, label="0"];
}
