digraph {
19 [style = filled, label = "consumerClient.pollNoWakeup()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(5,subscriptions.position(tp0).offset)@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "subscriptions.requestOffsetReset(tp0,OffsetResetStrategy.LATEST)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "buildFetcher(OffsetResetStrategy.EARLIEST,new ByteArrayDeserializer(),new ByteArrayDeserializer(),Integer.MAX_VALUE,isolationLevel)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(subscriptions.isFetchable(tp0))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "subscriptions.requestOffsetReset(tp0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "buildFetcher()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "client.prepareResponse(listOffsetRequestMatcher(ListOffsetRequest.EARLIEST_TIMESTAMP,validLeaderEpoch),listOffsetResponse(Errors.NONE,1L,5L))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "fetcher.resetOffsetsIfNeeded()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "consumerClient.pollNoWakeup()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testListOffsetsSendsIsolationLevel['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "IsolationLevel isolationLevel@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertFalse(subscriptions.isOffsetResetNeeded(tp0))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testListOffsetsSendsIsolationLevel['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(5,subscriptions.position(tp0).offset)@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(subscriptions.isFetchable(tp0))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assignFromUser(singleton(tp0))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testUpdateFetchPositionResetToDefaultOffset['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertFalse(subscriptions.isOffsetResetNeeded(tp0))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "client.prepareResponse(null,listOffsetResponse(Errors.NONE,1L,5L))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->2 [style = bold, label=""];
7->8 [style = bold, label=""];
4->7 [style = bold, label=""];
8->9 [style = bold, label=""];
17->14 [style = bold, label=""];
1->6 [style = dotted, label="true"];
2->3 [style = bold, label=""];
0->10 [style = bold, label=""];
16->12 [style = bold, label=""];
0->16 [style = dashed, label="0"];
2->18 [style = bold, label=""];
10->4 [style = bold, label=""];
3->0 [style = bold, label=""];
19->17 [style = bold, label=""];
11->6 [style = dotted, label="true"];
12->19 [style = bold, label=""];
18->16 [style = bold, label=""];
15->13 [style = bold, label=""];
3->18 [style = dashed, label="0"];
13->2 [style = bold, label=""];
14->10 [style = bold, label=""];
6->5 [style = solid, label="isolationLevel"];
11->5 [style = bold, label=""];
1->5 [style = bold, label=""];
}
