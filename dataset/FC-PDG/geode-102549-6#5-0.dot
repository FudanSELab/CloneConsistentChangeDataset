digraph {
7 [style = filled, label = "cos.flush()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(cos.size()).isEqualTo(2)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(9)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).close()@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertThat(cos.size()).isEqualTo(0)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(1)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testRemoveOutputStreamWithTwoStreams['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "cos.addOutputStream(streamTwo)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "cos.write(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@123488,2,3)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(0)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "verifyNoMoreInteractions(streamTwo)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "final CompositeOutputStream cos = new CompositeOutputStream()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "cos.write(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1233cb)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "cos.close()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testAddTwoOutputStreamsWhenEmpty['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(3)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "cos.removeOutputStream(streamTwo)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "cos.write(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@12349b)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(cos.size()).isEqualTo(2)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "cos.close()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(cos.isEmpty()).isFalse()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final CompositeOutputStream cos = new CompositeOutputStream(streamOne,streamTwo)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "inOrderStreams.verify(streamOne,times(2)).flush()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(4)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(2)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "InOrder inOrderStreams = inOrder(streamOne,streamTwo)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertThat(cos.isEmpty()).isFalse()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(4)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(cos.isEmpty()).isFalse()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final OutputStream streamOne = mock(,\"streamOne\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "cos.write(9)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "cos.write(9)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testRemoveOutputStreamWithTwoStreams['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "verifyZeroInteractions(streamTwo)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "assertThat(cos.isEmpty()).isTrue()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final OutputStream streamTwo = mock(,\"streamTwo\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(0)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "cos.addOutputStream(streamOne)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->19 [style = solid, label="streamTwo"];
14->16 [style = bold, label=""];
6->3 [style = bold, label=""];
29->8 [style = bold, label=""];
23->20 [style = bold, label=""];
3->35 [style = dashed, label="0"];
10->15 [style = bold, label=""];
32->37 [style = bold, label=""];
34->20 [style = bold, label=""];
16->27 [style = bold, label=""];
28->30 [style = bold, label=""];
11->1 [style = bold, label=""];
0->19 [style = bold, label=""];
0->24 [style = solid, label="streamTwo"];
27->28 [style = bold, label=""];
3->24 [style = dashed, label="0"];
19->10 [style = bold, label=""];
6->24 [style = bold, label=""];
8->19 [style = solid, label="streamOne"];
31->1 [style = bold, label=""];
5->14 [style = bold, label=""];
9->7 [style = bold, label=""];
26->4 [style = bold, label=""];
0->17 [style = solid, label="streamTwo"];
17->23 [style = bold, label=""];
1->9 [style = bold, label=""];
0->34 [style = solid, label="streamTwo"];
8->35 [style = solid, label="streamOne"];
21->2 [style = bold, label=""];
0->35 [style = solid, label="streamTwo"];
20->21 [style = bold, label=""];
8->0 [style = bold, label=""];
3->9 [style = bold, label=""];
8->36 [style = solid, label="streamOne"];
12->13 [style = bold, label=""];
7->22 [style = bold, label=""];
15->17 [style = bold, label=""];
0->3 [style = solid, label="streamTwo"];
8->9 [style = solid, label="streamOne"];
1->6 [style = bold, label=""];
21->31 [style = bold, label=""];
22->12 [style = bold, label=""];
33->36 [style = bold, label=""];
25->8 [style = bold, label=""];
18->8 [style = bold, label=""];
19->32 [style = dashed, label="0"];
0->32 [style = bold, label=""];
37->33 [style = bold, label=""];
22->35 [style = bold, label=""];
4->5 [style = bold, label=""];
35->26 [style = bold, label=""];
2->11 [style = bold, label=""];
36->34 [style = bold, label=""];
24->9 [style = bold, label=""];
13->4 [style = bold, label=""];
}
