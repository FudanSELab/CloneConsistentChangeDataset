digraph {
3 [style = filled, label = "validateWrongMaxActions['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Elasticsearch6DynamicSinkFactory sinkFactory = new Elasticsearch6DynamicSinkFactory()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Elasticsearch7DynamicSinkFactory sinkFactory = new Elasticsearch7DynamicSinkFactory()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "validateWrongMaxActions['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "thrown.expectMessage(\"'sink.bulk-flush.max-actions' must be at least 1 character. Got: -2\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "thrown.expectMessage(\"'sink.bulk-flush.max-actions' must be at least 1 character. Got: 0\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "sinkFactory.createDynamicTableSink(context().withSchema(TableSchema.builder().field(\"a\",DataTypes.TIME()).build()).withOption(ElasticsearchOptions.INDEX_OPTION.key(),\"MyIndex\").withOption(ElasticsearchOptions.DOCUMENT_TYPE_OPTION.key(),\"MyType\").withOption(ElasticsearchOptions.HOSTS_OPTION.key(),\"http://localhost:1234\").withOption(ElasticsearchOptions.BULK_FLUSH_MAX_ACTIONS_OPTION.key(),\"0\").build())@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "sinkFactory.createDynamicTableSink(context().withSchema(TableSchema.builder().field(\"a\",DataTypes.TIME()).build()).withOption(ElasticsearchOptions.INDEX_OPTION.key(),\"MyIndex\").withOption(ElasticsearchOptions.HOSTS_OPTION.key(),\"http://localhost:1234\").withOption(ElasticsearchOptions.BULK_FLUSH_MAX_ACTIONS_OPTION.key(),\"-2\").build())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "sinkFactory.createDynamicTableSink(context().withSchema(TableSchema.builder().field(\"a\",DataTypes.TIME()).build()).withOption(ElasticsearchOptions.INDEX_OPTION.key(),\"MyIndex\").withOption(ElasticsearchOptions.HOSTS_OPTION.key(),\"http://localhost:1234\").withOption(ElasticsearchOptions.BULK_FLUSH_MAX_ACTIONS_OPTION.key(),\"0\").build())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "thrown.expect()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "validateWrongMaxActions['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8->10 [style = bold, label=""];
1->2 [style = bold, label=""];
4->1 [style = bold, label=""];
1->9 [style = bold, label=""];
1->7 [style = dashed, label="0"];
2->6 [style = dashed, label="0"];
5->0 [style = bold, label=""];
0->10 [style = dashed, label="0"];
0->4 [style = bold, label=""];
2->9 [style = dashed, label="0"];
4->7 [style = bold, label=""];
3->0 [style = bold, label=""];
7->6 [style = bold, label=""];
10->4 [style = bold, label=""];
}
