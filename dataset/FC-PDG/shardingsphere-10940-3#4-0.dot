digraph {
7 [style = filled, label = "latch.await()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(usingField.getBoolean(connectionStatus),is(true))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertSwitchToUsing['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertThat(usingField.getBoolean(connectionStatus),is(false))@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertSwitchToUsing['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(usingField.getBoolean(connectionStatus))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertThat(numberOfThreads,is(counter.get()))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(counter.get(),is(0))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "service.submit(null)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "AtomicInteger counter = new AtomicInteger()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i < numberOfThreads@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertSwitchToReleased['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "int i = 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
4->6 [style = dotted, label="true"];
6->4 [style = solid, label="i"];
8->10 [style = dashed, label="0"];
0->6 [style = bold, label=""];
7->12 [style = bold, label=""];
2->6 [style = solid, label="i"];
4->0 [style = dotted, label="true"];
12->11 [style = bold, label=""];
2->4 [style = bold, label=""];
7->3 [style = bold, label=""];
4->7 [style = bold, label=""];
4->0 [style = bold, label=""];
3->10 [style = bold, label=""];
6->4 [style = bold, label=""];
5->2 [style = bold, label=""];
3->12 [style = dashed, label="0"];
3->8 [style = bold, label=""];
2->4 [style = solid, label="i"];
13->5 [style = bold, label=""];
9->5 [style = bold, label=""];
8->11 [style = dashed, label="0"];
}
