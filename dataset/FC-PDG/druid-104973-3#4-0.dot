digraph {
3 [style = filled, label = "final Parser<String,Object> jsonParser = new JSONPathParser(new JSONPathSpec(true,fields),null)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final Map<String,Object> jsonMap = jsonParser.parseToMap(json)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "final Map<String,Object> jsonMap = jsonParser.parseToMap(JSON)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "testSimple['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "Assert.assertEquals(\"jsonMap\",ImmutableMap.of(\"one\",\"foo?\"),jsonMap)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final Map<String,Object> jsonMap = jsonParser.parseToMap(whackyCharacterJson)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testWithWhackyCharacters['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testSimple['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List<JSONPathFieldSpec> fields = new ArrayList<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(\"jsonMap\",ImmutableMap.of(\"one\",\"foo\",\"two\",ImmutableList.of(\"bar\",\"baz\"),\"three\",\"qux\"),jsonMap)@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7->9 [style = bold, label=""];
4->3 [style = bold, label=""];
5->1 [style = bold, label=""];
5->1 [style = solid, label="jsonMap"];
3->5 [style = bold, label=""];
6->4 [style = bold, label=""];
2->5 [style = dashed, label="0"];
4->3 [style = solid, label="fields"];
8->4 [style = bold, label=""];
1->9 [style = dashed, label="0"];
3->2 [style = bold, label=""];
7->9 [style = solid, label="jsonMap"];
3->7 [style = bold, label=""];
0->4 [style = bold, label=""];
2->7 [style = dashed, label="0"];
2->1 [style = bold, label=""];
2->1 [style = solid, label="jsonMap"];
}
