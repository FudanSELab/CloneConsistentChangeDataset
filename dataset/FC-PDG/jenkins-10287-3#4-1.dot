digraph {
5 [style = filled, label = "assertThat(masterComputer.isOnline(),equalTo(true))@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "connectNodeShouldSucceedOnMaster['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Computer masterComputer = j.jenkins.getActiveInstance().getComputer(\"\")@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "onlineNodeShouldSucceedOnMaster['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(result,succeededSilently())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(result,succeededSilently())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "result = command.authorizedTo(Computer.CONNECT,Jenkins.READ).invokeWithArgs(\"\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "CLICommandInvoker.Result result = command.authorizedTo(Computer.CONNECT,Jenkins.READ).invokeWithArgs(\"\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final Computer masterComputer = j.jenkins.getComputer(\"\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "connectNodeShouldSucceedOnMaster['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertThat(masterComputer.isOnline(),equalTo(true))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
6->4 [style = bold, label=""];
3->6 [style = bold, label=""];
6->8 [style = dashed, label="0"];
7->0 [style = bold, label=""];
2->1 [style = solid, label="result"];
8->4 [style = bold, label=""];
9->8 [style = bold, label=""];
10->6 [style = bold, label=""];
2->1 [style = bold, label=""];
4->7 [style = bold, label=""];
0->2 [style = bold, label=""];
4->7 [style = solid, label="result"];
}
