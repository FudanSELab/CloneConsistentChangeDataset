digraph {
0 [style = filled, label = "assertTrue(ko1.equals(ko2))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ko2 = CloneUtils.clone(ko1)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "obj1 = new DefaultPieDataset<String>()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "KeyedObject<String> ko2 = (KeyedObject)ko1.clone()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testCloning2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(ko1.getClass() == ko2.getClass())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ko1 = new KeyedObject<>(\"Test\",obj1)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(ko2.getObject() != obj1)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "KeyedObject<String> ko2 = CloneUtils.clone(ko1)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "testCloning2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertTrue(ko1.getClass() == ko2.getClass())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(ko1 != ko2)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(ko2.getObject() == obj1)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ko2 = (KeyedObject)ko1.clone()@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "KeyedObject<String> ko1 = new KeyedObject<>(\"Test\",\"Object\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Object obj1 = new ArrayList<String>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(ko1.equals(ko2))@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "KeyedObject<String> ko1 = new KeyedObject<>(\"Test\",obj1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(ko1 != ko2)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(ko1.equals(ko2))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15->2 [style = bold, label=""];
8->15 [style = bold, label=""];
13->3 [style = solid, label="obj1"];
12->5 [style = bold, label=""];
13->1 [style = solid, label="obj1"];
15->2 [style = solid, label="ko2"];
4->8 [style = solid, label="obj1"];
10->12 [style = solid, label="ko2"];
18->19 [style = bold, label=""];
10->11 [style = solid, label="ko2"];
1->16 [style = solid, label="ko1"];
19->10 [style = bold, label=""];
8->6 [style = bold, label=""];
7->0 [style = bold, label=""];
3->4 [style = bold, label=""];
13->1 [style = bold, label=""];
6->2 [style = bold, label=""];
20->18 [style = bold, label=""];
16->11 [style = solid, label="ko2"];
0->14 [style = bold, label=""];
16->12 [style = solid, label="ko2"];
8->15 [style = solid, label="ko1"];
4->14 [style = solid, label="obj1"];
11->3 [style = bold, label=""];
10->12 [style = bold, label=""];
1->16 [style = bold, label=""];
6->15 [style = dashed, label="0"];
19->5 [style = solid, label="ko2"];
15->0 [style = solid, label="ko2"];
1->12 [style = solid, label="ko1"];
6->0 [style = solid, label="ko2"];
4->8 [style = bold, label=""];
19->10 [style = solid, label="ko2"];
5->11 [style = bold, label=""];
17->13 [style = bold, label=""];
10->16 [style = dashed, label="0"];
2->7 [style = bold, label=""];
13->18 [style = dashed, label="0"];
6->2 [style = solid, label="ko2"];
1->10 [style = bold, label=""];
16->12 [style = bold, label=""];
8->2 [style = solid, label="ko1"];
18->10 [style = solid, label="ko1"];
9->13 [style = bold, label=""];
}
