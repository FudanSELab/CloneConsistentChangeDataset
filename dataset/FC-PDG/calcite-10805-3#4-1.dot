digraph {
2 [style = filled, label = "tester.setFor(SqlStdOperatorTable.FUSION,VM_FENNEL,VM_JAVA)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "checkAggType(tester,\"intersection(MULTISET(1,2,3()\",\"INTEGER NOT NULL MULTISET NOT NULL\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "tester.checkFails(\"fusion(^*^)\",\"Unknown identifier '\*'\",false)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "checkAggType(tester,\"fusion(MULTISET(1,2,3()\",\"INTEGER NOT NULL MULTISET NOT NULL\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "tester.checkAgg(\"fusion(x)\",values1,\"(0, 1, 2, 3(\",0)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "tester.checkAgg(\"intersection(x)\",values2,\"(1(\",0)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testIntersectionFunc['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final String(( values2 = {\"MULTISET(0, 1(\",\"MULTISET(1, 2(\"}@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "tester.checkAgg(\"intersection(x)\",values3,\"(0, 1, 1(\",0)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "tester.checkAgg(\"intersection(x)\",values1,\"((\",0)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final String(( values3 = {\"MULTISET(0, 1, 1(\",\"MULTISET(0, 1, 2(\"}@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "tester.checkAgg(\"fusion(x)\",values2,\"(0, 1, 1, 2(\",0)@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testFusionFunc['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "tester.checkFails(\"intersection(^*^)\",\"Unknown identifier '\*'\",false)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testFusionFunc['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "strictTester.checkFails(\"^fusion(12)^\",\"Cannot apply 'FUSION' to arguments of type .*\",false)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "strictTester.checkFails(\"^intersection(12)^\",\"Cannot apply 'INTERSECTION' to arguments of type .*\",false)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "tester.setFor(SqlStdOperatorTable.INTERSECTION,VM_FENNEL,VM_JAVA)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final String(( values1 = {\"MULTISET(0(\",\"MULTISET(1(\",\"MULTISET(2(\",\"MULTISET(3(\"}@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
14->16 [style = bold, label=""];
5->8 [style = solid, label="values2"];
5->8 [style = bold, label=""];
5->13 [style = solid, label="values2"];
9->2 [style = bold, label=""];
16->10 [style = bold, label=""];
17->18 [style = solid, label="values3"];
2->1 [style = bold, label=""];
7->0 [style = bold, label=""];
3->15 [style = bold, label=""];
0->11 [style = dashed, label="0"];
3->4 [style = bold, label=""];
1->7 [style = bold, label=""];
15->5 [style = bold, label=""];
8->13 [style = dashed, label="0"];
6->2 [style = bold, label=""];
3->15 [style = solid, label="values1"];
13->17 [style = bold, label=""];
2->14 [style = dashed, label="0"];
11->3 [style = bold, label=""];
1->16 [style = dashed, label="0"];
4->15 [style = dashed, label="0"];
5->13 [style = bold, label=""];
12->14 [style = bold, label=""];
3->4 [style = solid, label="values1"];
7->10 [style = dashed, label="0"];
4->5 [style = bold, label=""];
17->18 [style = bold, label=""];
10->11 [style = bold, label=""];
}
