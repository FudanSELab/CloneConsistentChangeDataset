digraph {
0 [style = filled, label = "stream = new JDBCStream(\"jdbc:hsqldb:mem:.\",\"select PEOPLE.ID, PEOPLE.NAME, COUNTRIES.COUNTRY_NAME from PEOPLE inner join COUNTRIES on PEOPLE.COUNTRY_CODE = COUNTRIES.CODE where COUNTRIES.CODE = 'NL' order by PEOPLE.ID\",new FieldComparator(\"ID\",ComparatorOrder.ASCENDING))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(3,tuples.size())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "new UpdateRequest().add(id,\"1\",\"rating_f\",\"3.5\",\"personId_i\",\"11\").add(id,\"2\",\"rating_f\",\"5\",\"personId_i\",\"12\").add(id,\"3\",\"rating_f\",\"2.2\",\"personId_i\",\"13\").add(id,\"4\",\"rating_f\",\"4.3\",\"personId_i\",\"14\").add(id,\"5\",\"rating_f\",\"3.5\",\"personId_i\",\"15\").add(id,\"6\",\"rating_f\",\"3\",\"personId_i\",\"16\").add(id,\"7\",\"rating_f\",\"3\",\"personId_i\",\"17\").add(id,\"8\",\"rating_f\",\"4\",\"personId_i\",\"18\").add(id,\"9\",\"rating_f\",\"4.1\",\"personId_i\",\"19\").add(id,\"10\",\"rating_f\",\"4.8\",\"personId_i\",\"20\").commit(cluster.getSolrClient(),COLLECTION)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (18,'Natalie','NL')\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertOrderOf(tuples,\"country\",\"Netherlands\",\"United States\",\"Netherlands\",\"Netherlands\",\"Netherlands\",\"United States\",\"United States\",\"Netherlands\",\"Netherlands\",\"United States\")@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (20,'Samantha','NR')\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (12,'Grace','US')\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (13,'Hailey','NG')\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "StreamFactory factory = new StreamFactory().withCollectionZkHost(COLLECTION,cluster.getZkServer().getZkAddress()).withFunctionName(\"search\",).withFunctionName(\"select\",).withFunctionName(\"innerJoin\",).withFunctionName(\"jdbc\",)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertEquals(10,tuples.size())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (12,'Grace','NI')\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (16,'Madison','NC')\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "testJDBCJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertOrderOf(tuples,\"personName\",\"Emma\",\"Grace\",\"Hailey\",\"Isabella\",\"Lily\",\"Madison\",\"Mia\",\"Natalie\",\"Olivia\",\"Samantha\")@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "statement.executeUpdate(\"insert into COUNTRIES (CODE,COUNTRY_NAME) values ('NL', 'Netherlands')\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String expression@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (13,'Hailey','NL')\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "tuples = getTuples(stream)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (11,'Emma','NL')\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "stream = factory.constructStream(expression)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "List<Tuple> tuples@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "new UpdateRequest().add(id,\"1\",\"rating_f\",\"3.5\",\"personId_i\",\"11\").add(id,\"2\",\"rating_f\",\"5\",\"personId_i\",\"12\").add(id,\"3\",\"rating_f\",\"2.2\",\"personId_i\",\"13\").add(id,\"4\",\"rating_f\",\"4.3\",\"personId_i\",\"14\").add(id,\"5\",\"rating_f\",\"3.5\",\"personId_i\",\"15\").add(id,\"6\",\"rating_f\",\"3\",\"personId_i\",\"16\").add(id,\"7\",\"rating_f\",\"3\",\"personId_i\",\"17\").add(id,\"8\",\"rating_f\",\"4\",\"personId_i\",\"18\").add(id,\"9\",\"rating_f\",\"4.1\",\"personId_i\",\"19\").add(id,\"10\",\"rating_f\",\"4.8\",\"personId_i\",\"20\").commit(cluster.getSolrClient(),COLLECTIONORALIAS)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "testJDBCSolrInnerJoinExpression['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (14,'Isabella','NL')\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "TupleStream stream@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertOrderOf(tuples,\"personId\",11,12,13,14,15,16,17,18,19,20)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "expression = \"innerJoin(\" + \" select(\" + \" search(\" + COLLECTIONORALIAS + \", fl=\"personId_i,rating_f\", q=\"rating_f:*\", sort=\"personId_i asc\"),\" + \" personId_i as personId,\" + \" rating_f as rating\" + \" ),\" + \" select(\" + \" jdbc(connection=\"jdbc:hsqldb:mem:.\", sql=\"select PEOPLE.ID, PEOPLE.NAME, COUNTRIES.COUNTRY_NAME from PEOPLE inner join COUNTRIES on PEOPLE.COUNTRY_CODE = COUNTRIES.CODE order by PEOPLE.ID\", sort=\"ID asc\"),\" + \" ID as personId,\" + \" NAME as personName,\" + \" COUNTRY_NAME as country\" + \" ),\" + \" on=\"personId\"\" + \")\"@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "testJDBCSolrInnerJoinExpression['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "statement.executeUpdate(\"insert into COUNTRIES (CODE,COUNTRY_NAME) values ('NP', 'Nepal')\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "StreamFactory factory = new StreamFactory().withCollectionZkHost(COLLECTIONORALIAS,cluster.getZkServer().getZkAddress()).withFunctionName(\"search\",).withFunctionName(\"select\",).withFunctionName(\"innerJoin\",).withFunctionName(\"jdbc\",)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (20,'Samantha','US')\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (17,'Mia','NL')\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (15,'Lily','NE')\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (19,'Olivia','NL')\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "statement.executeUpdate(\"insert into COUNTRIES (CODE,COUNTRY_NAME) values ('US', 'United States')\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertOrderOf(tuples,\"NAME\",\"Emma\",\"Mia\",\"Olivia\")@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (15,'Lily','NL')\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertOrderOf(tuples,\"ID\",11,17,19)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (14,'Isabella','NF')\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (17,'Mia','US')\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (18,'Natalie','NZ')\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (16,'Madison','US')\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "statement.executeUpdate(\"insert into COUNTRIES (CODE,COUNTRY_NAME) values ('NO', 'Norway')\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "expression = \"innerJoin(\" + \" select(\" + \" search(\" + COLLECTION + \", fl=\"personId_i,rating_f\", q=\"rating_f:*\", sort=\"personId_i asc\"),\" + \" personId_i as personId,\" + \" rating_f as rating\" + \" ),\" + \" select(\" + \" jdbc(connection=\"jdbc:hsqldb:mem:.\", sql=\"select PEOPLE.ID, PEOPLE.NAME, COUNTRIES.COUNTRY_NAME from PEOPLE inner join COUNTRIES on PEOPLE.COUNTRY_CODE = COUNTRIES.CODE order by PEOPLE.ID\", sort=\"ID asc\"),\" + \" ID as personId,\" + \" NAME as personName,\" + \" COUNTRY_NAME as country\" + \" ),\" + \" on=\"personId\"\" + \")\"@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertOrderOf(tuples,\"rating\",3.5d,5d,2.2d,4.3d,3.5d,3d,3d,4d,4.1d,4.8d)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36->43 [style = bold, label=""];
11->10 [style = dashed, label="0"];
0->30 [style = bold, label=""];
17->26 [style = bold, label=""];
28->5 [style = bold, label=""];
42->37 [style = bold, label=""];
15->7 [style = bold, label=""];
27->0 [style = bold, label=""];
13->35 [style = dashed, label="0"];
21->15 [style = bold, label=""];
30->23 [style = bold, label=""];
1->27 [style = bold, label=""];
20->28 [style = dashed, label="0"];
3->11 [style = bold, label=""];
10->13 [style = solid, label="tuples"];
10->35 [style = bold, label=""];
15->32 [style = dashed, label="0"];
10->3 [style = bold, label=""];
26->17 [style = dashed, label="0"];
9->20 [style = bold, label=""];
22->0 [style = dashed, label="0"];
25->43 [style = dashed, label="0"];
19->17 [style = bold, label=""];
31->1 [style = bold, label=""];
10->2 [style = solid, label="tuples"];
38->35 [style = solid, label="tuples"];
34->10 [style = bold, label=""];
38->10 [style = solid, label="tuples"];
22->23 [style = bold, label=""];
32->33 [style = bold, label=""];
0->38 [style = bold, label=""];
20->5 [style = bold, label=""];
29->28 [style = bold, label=""];
5->16 [style = bold, label=""];
37->5 [style = bold, label=""];
43->40 [style = bold, label=""];
30->23 [style = solid, label="expression"];
41->17 [style = bold, label=""];
26->31 [style = bold, label=""];
8->36 [style = bold, label=""];
3->34 [style = dashed, label="0"];
33->39 [style = bold, label=""];
18->1 [style = bold, label=""];
23->10 [style = solid, label="stream"];
19->39 [style = dashed, label="0"];
10->14 [style = solid, label="tuples"];
12->8 [style = bold, label=""];
6->36 [style = dashed, label="0"];
22->30 [style = dashed, label="0"];
0->22 [style = bold, label=""];
11->13 [style = bold, label=""];
38->34 [style = bold, label=""];
40->32 [style = bold, label=""];
23->10 [style = bold, label=""];
21->40 [style = dashed, label="0"];
4->12 [style = bold, label=""];
22->23 [style = solid, label="expression"];
39->41 [style = bold, label=""];
14->2 [style = bold, label=""];
24->8 [style = dashed, label="0"];
17->44 [style = bold, label=""];
7->33 [style = dashed, label="0"];
0->38 [style = solid, label="stream"];
16->4 [style = bold, label=""];
44->27 [style = bold, label=""];
10->11 [style = solid, label="tuples"];
24->6 [style = bold, label=""];
7->19 [style = bold, label=""];
13->14 [style = bold, label=""];
18->31 [style = dashed, label="0"];
25->21 [style = bold, label=""];
6->25 [style = bold, label=""];
26->18 [style = bold, label=""];
8->24 [style = bold, label=""];
}
