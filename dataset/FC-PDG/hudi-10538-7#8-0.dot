digraph {
24 [style = filled, label = "testTable.addInflightCommit(\"00000000000001\").withBaseFilesInPartition(p0,file1P0C0).withBaseFilesInPartition(p1,file1P1C0)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertFalse(testTable.baseFileExists(p0,\"000\",file1P0))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "Map<String,String> partitionAndFileId004 = testTable.forReplaceCommit(\"00000000000004\").getFileIdsWithBaseFilesInPartitions(p0)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "testTable.addReplaceCommit(\"00000000000003\",replaceMetadata.getKey(),replaceMetadata.getValue())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "HoodieTableMetaClient metaClient = HoodieTestUtils.init(hadoopConf,basePath,HoodieTableType.MERGE_ON_READ)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(3,getCleanStat(hoodieCleanStats,p0).getSuccessDeleteFiles().size(),\"Must clean three files, one parquet and 2 log files\")@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "HoodieCommitMetadata commitMetadata = generateCommitMetadata(Collections.unmodifiableMap(new HashMap<String,List<String>>(){}))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testKeepLatestCommitsMOR['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsFour = runCleaner(config)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "replaceMetadata = generateReplaceCommitMetadata(p0,file3P1C2,file4P1C4)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(0,hoodieCleanStatsTwo.size(),\"Must not scan any partitions and clean any files\")@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000004\",file4P0C3))@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "replaceMetadata = generateReplaceCommitMetadata(p1,file1P1C0,file3P1C2)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsTwo = runCleaner(config)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Pair<HoodieRequestedReplaceMetadata,HoodieReplaceCommitMetadata> replaceMetadata = generateReplaceCommitMetadata(p0,file1P0C0,file2P0C1)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertFalse(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"001\",file1P0))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "String file2P0C1 = partitionAndFileId002.get(p0)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "testTable.addReplaceCommit(\"00000000000002\",replaceMetadata.getKey(),replaceMetadata.getValue())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "metaClient = HoodieTableMetaClient.reload(metaClient)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(3,getCleanStat(hoodieCleanStats,p0).getSuccessDeleteFiles().size(),\"Must clean three files, one base and 2 log files\")@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStats = runCleaner(config)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000003\",file3P1C2))@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(0,hoodieCleanStatsThree.size(),\"Must not scan any partitions and clean any files\")@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "String file1P1C0 = UUID.randomUUID().toString()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(testTable.logFileExists(p0,\"001\",file1P0,3))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "Map<String,String> partitionAndFileId003 = testTable.forReplaceCommit(\"00000000000003\").getFileIdsWithBaseFilesInPartitions(p1)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testTable.addDeltaCommit(\"001\").withBaseFilesInPartition(p0,file1P0).withLogFile(p0,file1P0,3)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000003\",file3P1C2))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "replaceMetadata = generateReplaceCommitMetadata(p0,file2P0C1,file4P0C3)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"002\",file1P0))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000003\",file3P1C2))@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(testTable.logFileExists(p0,\"002\",file1P0,4))@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "String file1P0C0 = UUID.randomUUID().toString()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000004\",file4P0C3))@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testTable.forDeltaCommit(\"000\").withLogFile(p0,file1P0,1).withLogFile(p0,file1P0,2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "metaClient.getActiveTimeline().saveAsComplete(new HoodieInstant(State.INFLIGHT,HoodieTimeline.COMMIT_ACTION,\"00000000000001\"),Option.of(commitMetadata.toJsonString().getBytes(StandardCharsets.UTF_8)))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "testCleanWithReplaceCommits['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertFalse(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "Map<String,String> partitionAndFileId002 = testTable.forReplaceCommit(\"00000000000002\").getFileIdsWithBaseFilesInPartitions(p0)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String p1 = \"2020/01/02\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "String file4P1C4 = partitionAndFileId005.get(p1)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "HoodieWriteConfig config = HoodieWriteConfig.newBuilder().withPath(basePath).withMetadataConfig(HoodieMetadataConfig.newBuilder().withAssumeDatePartitioning(true).build()).withCompactionConfig(HoodieCompactionConfig.newBuilder().withCleanerPolicy(HoodieCleaningPolicy.KEEP_LATEST_COMMITS).retainCommits(2).build()).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "String p0 = \"2020/01/01\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String file1P0 = testTable.addDeltaCommit(\"000\").getFileIdsWithBaseFilesInPartitions(p0).get(p0)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertFalse(testTable.logFilesExist(p0,\"000\",file1P0,1,2))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "testTable.addReplaceCommit(\"00000000000004\",replaceMetadata.getKey(),replaceMetadata.getValue())@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertFalse(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@61@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "assertEquals(0,hoodieCleanStatsOne.size(),\"Must not scan any partitions and clean any files\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsFive = runCleaner(config,2)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "String file4P0C3 = partitionAndFileId004.get(p0)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsOne = runCleaner(config)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testTable.addDeltaCommit(\"002\").withBaseFilesInPartition(p0,file1P0).withLogFile(p0,file1P0,4)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsThree = runCleaner(config)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "testTable.addReplaceCommit(\"00000000000005\",replaceMetadata.getKey(),replaceMetadata.getValue())@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "String file3P1C2 = partitionAndFileId003.get(p1)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "HoodieWriteConfig config = HoodieWriteConfig.newBuilder().withPath(basePath).withMetadataConfig(HoodieMetadataConfig.newBuilder().withAssumeDatePartitioning(true).build()).withCompactionConfig(HoodieCompactionConfig.newBuilder().withCleanerPolicy(HoodieCleaningPolicy.KEEP_LATEST_COMMITS).retainCommits(1).build()).build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Map<String,String> partitionAndFileId005 = testTable.forReplaceCommit(\"00000000000005\").getFileIdsWithBaseFilesInPartitions(p1)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testKeepLatestCommitsMOR['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "HoodieTestTable testTable = HoodieTestTable.of(metaClient)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59->34 [style = solid, label="config"];
70->64 [style = bold, label=""];
65->42 [style = bold, label=""];
5->3 [style = solid, label="config"];
9->48 [style = solid, label="p0"];
38->65 [style = solid, label="file1P1C0"];
62->54 [style = bold, label=""];
27->44 [style = bold, label=""];
38->50 [style = solid, label="file1P1C0"];
9->47 [style = solid, label="p0"];
30->29 [style = bold, label=""];
21->48 [style = solid, label="file4P0C3"];
6->2 [style = solid, label="file1P0"];
0->50 [style = solid, label="p1"];
68->58 [style = solid, label="file3P1C2"];
37->36 [style = solid, label="file1P0C0"];
0->1 [style = solid, label="p0"];
21->69 [style = solid, label="file4P0C3"];
68->64 [style = solid, label="file3P1C2"];
37->38 [style = bold, label=""];
1->12 [style = bold, label=""];
9->22 [style = solid, label="p0"];
60->65 [style = bold, label=""];
0->66 [style = solid, label="p1"];
0->15 [style = solid, label="p0"];
9->69 [style = solid, label="p0"];
68->41 [style = solid, label="file3P1C2"];
0->54 [style = solid, label="p1"];
8->11 [style = bold, label=""];
68->29 [style = solid, label="file3P1C2"];
16->9 [style = bold, label=""];
9->36 [style = solid, label="p0"];
0->65 [style = solid, label="p1"];
37->25 [style = solid, label="file1P0C0"];
0->52 [style = solid, label="p1"];
24->28 [style = bold, label=""];
43->41 [style = solid, label="file4P1C4"];
36->63 [style = bold, label=""];
37->60 [style = solid, label="file1P0C0"];
0->58 [style = solid, label="p1"];
44->21 [style = bold, label=""];
7->1 [style = bold, label=""];
34->48 [style = bold, label=""];
10->14 [style = bold, label=""];
7->17 [style = dashed, label="0"];
0->10 [style = solid, label="p0"];
9->25 [style = solid, label="p0"];
59->32 [style = solid, label="config"];
57->60 [style = bold, label=""];
0->2 [style = solid, label="p0"];
6->1 [style = solid, label="file1P0"];
0->29 [style = solid, label="p1"];
4->2 [style = bold, label=""];
67->26 [style = bold, label=""];
0->43 [style = solid, label="p1"];
9->21 [style = solid, label="p0"];
41->61 [style = bold, label=""];
68->54 [style = solid, label="file3P1C2"];
0->27 [style = solid, label="p1"];
29->27 [style = bold, label=""];
54->25 [style = bold, label=""];
3->7 [style = bold, label=""];
58->51 [style = bold, label=""];
39->66 [style = bold, label=""];
6->15 [style = solid, label="file1P0"];
13->5 [style = bold, label=""];
5->59 [style = dashed, label="0"];
0->6 [style = solid, label="p0"];
14->15 [style = bold, label=""];
42->22 [style = bold, label=""];
6->10 [style = solid, label="file1P0"];
37->31 [style = solid, label="file1P0C0"];
22->69 [style = solid, label="file2P0C1"];
0->11 [style = solid, label="p0"];
46->43 [style = bold, label=""];
23->31 [style = bold, label=""];
37->47 [style = solid, label="file1P0C0"];
6->12 [style = solid, label="file1P0"];
17->1 [style = bold, label=""];
48->70 [style = bold, label=""];
59->19 [style = solid, label="config"];
38->24 [style = bold, label=""];
9->42 [style = solid, label="p0"];
11->4 [style = bold, label=""];
9->55 [style = solid, label="p0"];
22->70 [style = solid, label="file2P0C1"];
15->24 [style = dashed, label="0"];
35->32 [style = bold, label=""];
40->9 [style = bold, label=""];
22->55 [style = solid, label="file2P0C1"];
32->57 [style = bold, label=""];
15->3 [style = bold, label=""];
38->27 [style = solid, label="file1P1C0"];
53->62 [style = bold, label=""];
5->16 [style = bold, label=""];
0->12 [style = solid, label="p0"];
61->34 [style = bold, label=""];
21->53 [style = solid, label="file4P0C3"];
55->30 [style = bold, label=""];
19->53 [style = bold, label=""];
12->8 [style = bold, label=""];
0->24 [style = solid, label="p1"];
6->10 [style = bold, label=""];
63->67 [style = bold, label=""];
38->24 [style = solid, label="file1P1C0"];
9->62 [style = solid, label="p0"];
38->58 [style = solid, label="file1P1C0"];
3->17 [style = bold, label=""];
43->41 [style = bold, label=""];
6->14 [style = solid, label="file1P0"];
31->39 [style = bold, label=""];
47->52 [style = bold, label=""];
6->11 [style = solid, label="file1P0"];
56->59 [style = bold, label=""];
16->9 [style = solid, label="metaClient"];
49->20 [style = bold, label=""];
9->41 [style = solid, label="p0"];
37->30 [style = solid, label="file1P0C0"];
38->39 [style = solid, label="file1P1C0"];
9->44 [style = solid, label="p0"];
0->8 [style = solid, label="p0"];
0->39 [style = solid, label="p1"];
33->35 [style = bold, label=""];
0->46 [style = solid, label="p1"];
9->0 [style = bold, label=""];
0->37 [style = bold, label=""];
0->68 [style = solid, label="p1"];
0->6 [style = bold, label=""];
0->4 [style = solid, label="p0"];
50->46 [style = bold, label=""];
38->52 [style = solid, label="file1P1C0"];
9->30 [style = solid, label="p0"];
59->40 [style = bold, label=""];
66->68 [style = bold, label=""];
0->14 [style = solid, label="p0"];
9->53 [style = solid, label="p0"];
22->36 [style = solid, label="file2P0C1"];
9->23 [style = solid, label="p0"];
51->49 [style = bold, label=""];
9->60 [style = solid, label="p0"];
6->4 [style = solid, label="file1P0"];
21->69 [style = bold, label=""];
20->55 [style = bold, label=""];
22->62 [style = solid, label="file2P0C1"];
9->31 [style = solid, label="p0"];
0->64 [style = solid, label="p1"];
28->33 [style = bold, label=""];
64->47 [style = bold, label=""];
45->19 [style = bold, label=""];
22->23 [style = solid, label="file2P0C1"];
18->5 [style = bold, label=""];
22->36 [style = bold, label=""];
26->23 [style = bold, label=""];
6->8 [style = solid, label="file1P0"];
59->67 [style = solid, label="config"];
59->49 [style = solid, label="config"];
25->50 [style = bold, label=""];
9->70 [style = solid, label="p0"];
69->45 [style = bold, label=""];
68->58 [style = bold, label=""];
}
