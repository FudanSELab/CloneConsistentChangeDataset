digraph {
8 [style = filled, label = "fail(\"should throw an exception\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testHarness.waitForTaskCompletion()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "throw t@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertTrue(ExceptionUtils.findThrowable(t,).isPresent())@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testNoMaxWatermarkOnImmediateCancel['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertTrue(testHarness.getOutput().isEmpty())@@@15@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testNoMaxWatermarkOnAsyncCancel['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Thread.sleep(200)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testNoMaxWatermarkOnImmediateCancel['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(testHarness.getOutput().isEmpty())@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "!ExceptionUtils.findThrowable(t,).isPresent()@@@11@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "StreamSource<String,?> sourceOperator = new StreamSource<>(new InfiniteSource<>())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Throwable t@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "StreamTaskTestHarness<String> testHarness = setupSourceStreamTask(sourceOperator,BasicTypeInfo.STRING_TYPE_INFO,true)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testHarness.getTask().cancel()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testHarness.waitForTaskRunning()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testHarness.invoke()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "StreamTaskTestHarness<String> testHarness = setupSourceStreamTask(sourceOperator,BasicTypeInfo.STRING_TYPE_INFO)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16->13 [style = bold, label=""];
12->5 [style = bold, label=""];
4->17 [style = bold, label=""];
3->1 [style = bold, label=""];
2->6 [style = bold, label=""];
3->10 [style = dotted, label="true"];
8->6 [style = bold, label=""];
4->2 [style = bold, label=""];
1->10 [style = dashed, label="0"];
5->14 [style = bold, label=""];
11->9 [style = bold, label=""];
15->5 [style = bold, label=""];
0->14 [style = dashed, label="0"];
3->10 [style = bold, label=""];
7->5 [style = bold, label=""];
1->6 [style = bold, label=""];
5->0 [style = bold, label=""];
10->11 [style = dotted, label="true"];
0->4 [style = bold, label=""];
5->14 [style = solid, label="sourceOperator"];
5->0 [style = solid, label="sourceOperator"];
8->9 [style = bold, label=""];
13->2 [style = bold, label=""];
10->9 [style = bold, label=""];
3->1 [style = dotted, label="true"];
17->16 [style = bold, label=""];
2->8 [style = bold, label=""];
14->4 [style = bold, label=""];
10->11 [style = bold, label=""];
}
