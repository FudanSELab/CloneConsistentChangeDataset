digraph {
6 [style = filled, label = "i++@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final AtomicReader r = SlowCompositeReaderWrapper.wrap(reader)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "writer.updateBinaryDocValue(new Term(\"key\",\"doc\"),\"bdv\",toBytes(17L))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "dir.close()@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "writer.shutdown()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random()))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "writer.addDocument(doc)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "reader.close()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testDifferentDVFormatPerField['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(3,getValue(bdv,i))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "testUpdateSameDocMultipleTimes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "Document doc = new Document()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(new BytesRef(\"value\"),scratch)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "BytesRef scratch = new BytesRef()@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Directory dir = newDirectory()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "writer.commit()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "doc.add(new BinaryDocValuesField(\"bdv\",toBytes(5L)))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "doc.add(new SortedDocValuesField(\"sorted\",new BytesRef(\"value\")))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(17,getValue(bdv,i,scratch))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "writer.addDocument(doc)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "AtomicReader r = SlowCompositeReaderWrapper.wrap(reader)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "IndexWriter writer = new IndexWriter(dir,conf)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "conf.setCodec(new Lucene49Codec(){@Override public DocValuesFormat getDocValuesFormatForField(String field){return new Lucene49DocValuesFormat()}})@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "doc.add(new StringField(\"key\",\"doc\",Store.NO))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "dir.close()@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "sdv.get(i,scratch)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "writer.updateBinaryDocValue(new Term(\"key\",\"doc\"),\"bdv\",toBytes(3L))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "i < r.maxDoc()@@@27@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(3,getValue(bdv,i,scratch))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "final DirectoryReader reader = DirectoryReader.open(dir)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int i = 0@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "SortedDocValues sdv = r.getSortedDocValues(\"sorted\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testUpdateSameDocMultipleTimes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "reader.close()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2->17 [style = bold, label=""];
8->28 [style = bold, label=""];
34->9 [style = bold, label=""];
12->31 [style = solid, label="i"];
33->3 [style = bold, label=""];
16->8 [style = bold, label=""];
6->23 [style = solid, label="i"];
12->21 [style = bold, label=""];
12->23 [style = solid, label="i"];
6->21 [style = bold, label=""];
19->30 [style = solid, label="reader"];
20->7 [style = solid, label="doc"];
21->29 [style = dotted, label="true"];
1->30 [style = dashed, label="0"];
28->7 [style = bold, label=""];
20->5 [style = solid, label="doc"];
19->1 [style = solid, label="reader"];
10->25 [style = solid, label="bdv"];
12->25 [style = solid, label="i"];
10->3 [style = bold, label=""];
14->34 [style = bold, label=""];
9->20 [style = bold, label=""];
7->0 [style = bold, label=""];
31->29 [style = bold, label=""];
32->27 [style = bold, label=""];
22->9 [style = solid, label="dir"];
3->12 [style = bold, label=""];
21->25 [style = bold, label=""];
14->9 [style = solid, label="conf"];
10->23 [style = solid, label="bdv"];
13->25 [style = dashed, label="0"];
24->22 [style = bold, label=""];
3->13 [style = solid, label="scratch"];
6->13 [style = solid, label="i"];
13->23 [style = dashed, label="0"];
17->19 [style = bold, label=""];
26->22 [style = bold, label=""];
8->7 [style = bold, label=""];
21->6 [style = dotted, label="true"];
25->31 [style = bold, label=""];
6->31 [style = solid, label="i"];
21->25 [style = dotted, label="true"];
12->6 [style = solid, label="i"];
19->1 [style = bold, label=""];
5->2 [style = bold, label=""];
15->17 [style = bold, label=""];
29->6 [style = bold, label=""];
18->22 [style = bold, label=""];
6->21 [style = solid, label="i"];
20->16 [style = bold, label=""];
6->25 [style = solid, label="i"];
10->13 [style = solid, label="bdv"];
21->31 [style = dotted, label="true"];
10->12 [style = bold, label=""];
21->23 [style = dotted, label="true"];
19->30 [style = bold, label=""];
23->6 [style = bold, label=""];
3->25 [style = solid, label="scratch"];
2->15 [style = bold, label=""];
21->32 [style = bold, label=""];
12->13 [style = solid, label="i"];
3->31 [style = solid, label="scratch"];
30->10 [style = bold, label=""];
12->21 [style = solid, label="i"];
22->19 [style = solid, label="dir"];
14->9 [style = bold, label=""];
21->13 [style = dotted, label="true"];
10->33 [style = bold, label=""];
13->6 [style = bold, label=""];
22->14 [style = bold, label=""];
4->11 [style = bold, label=""];
1->10 [style = bold, label=""];
0->5 [style = bold, label=""];
3->29 [style = solid, label="scratch"];
21->13 [style = bold, label=""];
21->4 [style = bold, label=""];
21->23 [style = bold, label=""];
}
