digraph {
8 [style = filled, label = "fetcher.initFetches(cluster)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Future<RecordMetadata> future = accumulator.append(tp,\"key\".getBytes(),\"value\".getBytes(),null,MAX_BLOCK_TIMEOUT).future@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(300,maxMetric.value(),EPS)@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testQuotaMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertEquals(300,maxMetric.value(),EPSILON)@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "i <= 3@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "this.records.close()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "this.records = MemoryRecords.emptyRecords(ByteBuffer.allocate(1024),CompressionType.NONE)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "subscriptions.assignFromUser(Arrays.asList(tp))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "sender.run(time.milliseconds())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "i > 1@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "int i = 1@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "v++@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "sender.run(time.milliseconds())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricName(\"produce-throttle-time-max\",METRIC_GROUP,\"\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "consumerClient.poll(0)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(3,records.size())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int v = 0@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricName(\"produce-throttle-time-avg\",METRIC_GROUP,\"\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "v < 3@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "List<ConsumerRecord<byte((,byte((>> records@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "client.prepareResponse(fetchResponse(this.records.buffer(),Errors.NONE.code(),100L,100 * i))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "subscriptions.seek(tp,0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "records = fetcher.fetchedRecords().get(tp)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "client.respond(produceResponse(tp,offset,Errors.NONE.code(),100 * i))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "this.records.append((long)i * 3 + v,\"key\".getBytes(),String.format(\"value-%d\",v).getBytes())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "i < 4@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(200,avgMetric.value(),EPSILON)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final long offset = 0@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricName(\"fetch-throttle-time-avg\",metricGroup,\"\"))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testQuotaMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(200,avgMetric.value(),EPS)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "this.records.append((long)i * 3 + v,Record.NO_TIMESTAMP,\"key\".getBytes(),String.format(\"value-%d\",v).getBytes())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricName(\"fetch-throttle-time-max\",metricGroup,\"\"))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testQuotaMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32->28 [style = dotted, label="true"];
36->28 [style = bold, label=""];
12->25 [style = solid, label="i"];
27->36 [style = solid, label="offset"];
19->30 [style = dashed, label="0"];
23->13 [style = bold, label=""];
10->6 [style = solid, label="v"];
13->36 [style = bold, label=""];
24->17 [style = bold, label=""];
31->30 [style = bold, label=""];
26->35 [style = bold, label=""];
10->7 [style = solid, label="v"];
21->25 [style = dashed, label="0"];
34->32 [style = bold, label=""];
7->21 [style = solid, label="v"];
32->13 [style = dotted, label="true"];
19->15 [style = bold, label=""];
14->18 [style = dotted, label="true"];
17->20 [style = bold, label=""];
0->3 [style = bold, label=""];
13->21 [style = solid, label="i"];
13->25 [style = solid, label="i"];
4->23 [style = dotted, label="true"];
4->0 [style = dotted, label="true"];
30->26 [style = bold, label=""];
11->12 [style = bold, label=""];
16->17 [style = bold, label=""];
13->4 [style = solid, label="i"];
32->36 [style = dotted, label="true"];
14->33 [style = dashed, label="0"];
25->7 [style = bold, label=""];
33->13 [style = bold, label=""];
32->12 [style = dotted, label="true"];
4->13 [style = dotted, label="true"];
29->27 [style = bold, label=""];
3->23 [style = bold, label=""];
12->2 [style = solid, label="i"];
12->14 [style = solid, label="i"];
12->32 [style = solid, label="i"];
6->25 [style = dotted, label="true"];
7->6 [style = bold, label=""];
6->7 [style = dotted, label="true"];
15->26 [style = dashed, label="0"];
21->7 [style = bold, label=""];
14->18 [style = bold, label=""];
13->14 [style = solid, label="i"];
14->8 [style = bold, label=""];
4->22 [style = bold, label=""];
32->31 [style = bold, label=""];
4->2 [style = dotted, label="true"];
7->6 [style = solid, label="v"];
4->14 [style = bold, label=""];
10->21 [style = solid, label="v"];
1->35 [style = dashed, label="0"];
22->19 [style = bold, label=""];
6->21 [style = bold, label=""];
12->32 [style = bold, label=""];
34->12 [style = solid, label="i"];
9->22 [style = dashed, label="0"];
28->12 [style = bold, label=""];
10->6 [style = bold, label=""];
32->33 [style = bold, label=""];
32->33 [style = dotted, label="true"];
1->9 [style = bold, label=""];
6->5 [style = bold, label=""];
2->0 [style = bold, label=""];
14->5 [style = dotted, label="true"];
27->34 [style = bold, label=""];
13->2 [style = solid, label="i"];
4->3 [style = dotted, label="true"];
18->10 [style = bold, label=""];
8->2 [style = bold, label=""];
12->36 [style = solid, label="i"];
6->21 [style = dotted, label="true"];
20->11 [style = bold, label=""];
15->1 [style = bold, label=""];
14->6 [style = dotted, label="true"];
5->8 [style = bold, label=""];
35->22 [style = bold, label=""];
34->36 [style = solid, label="i"];
4->8 [style = dotted, label="true"];
34->32 [style = solid, label="i"];
4->14 [style = dotted, label="true"];
10->25 [style = solid, label="v"];
14->10 [style = dotted, label="true"];
4->32 [style = dashed, label="0"];
12->4 [style = bold, label=""];
7->25 [style = solid, label="v"];
12->4 [style = solid, label="i"];
12->13 [style = solid, label="i"];
12->21 [style = solid, label="i"];
6->25 [style = bold, label=""];
13->4 [style = bold, label=""];
}
