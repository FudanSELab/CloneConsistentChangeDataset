digraph {
35 [style = filled, label = "hiveSyncConfig.tableName = \"non_partitioned\"@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "HoodieHiveClient hiveClient = new HoodieHiveClient(hiveSyncConfig,HiveTestUtil.getHiveConf(),fileSystem)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "tool.syncHoodieTable()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String syncMode@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testSyncIncremental['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "tool.syncHoodieTable()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String commitTime1 = \"100\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "HiveTestUtil.hiveSyncConfig.batchSyncNum = 2@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "tool.syncHoodieTable()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "testNonPartitionedSync['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(commitTime2,hiveClient.getLastCommitTimeSynced(hiveSyncConfig.tableName).get(),\"The last commit that was synced should be 101\")@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "String instantTime = \"100\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertFalse(hiveClient.doesTableExist(hiveSyncConfig.tableName),\"Table \" + hiveSyncConfig.tableName + \" should not exist initially\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "HoodieHiveClient hiveClient = new HoodieHiveClient(hiveSyncConfig,HiveTestUtil.getHiveConf(),fileSystem)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "HiveSyncConfig hiveSyncConfig = HiveSyncConfig.copy(HiveTestUtil.hiveSyncConfig)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "tool = new HiveSyncTool(hiveSyncConfig,HiveTestUtil.getHiveConf(),fileSystem)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(6,hiveClient.scanTablePartitions(hiveSyncConfig.tableName).size(),\"The one partition we wrote should be added to hive\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testSyncIncremental['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertEquals(PartitionEventType.ADD,partitionEvents.iterator().next().eventType,\"The one partition event must of type ADD\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "HiveTestUtil.createCOWTable(commitTime1,5,true)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(5,hiveClient.scanTablePartitions(hiveSyncConfig.tableName).size(),\"Table partitions should match the number of partitions we wrote\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(0,hiveClient.scanTablePartitions(hiveSyncConfig.tableName).size(),\"Table should not have partitions because of the NonPartitionedExtractor\")@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "ZonedDateTime dateTime = ZonedDateTime.now().plusDays(6)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "hiveSyncConfig.partitionValueExtractorClass = .getCanonicalName()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "HiveTestUtil.getCreatedTablesSet().add(hiveSyncConfig.databaseName + \".\" + hiveSyncConfig.tableName)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "List<PartitionEvent> partitionEvents = hiveClient.getPartitionEvents(hivePartitions,writtenPartitionsSince)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(hiveClient.getTableSchema(hiveSyncConfig.tableName).size(),hiveClient.getDataSchema().getColumns().size(),\"Hive Schema should match the table schema�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽignoring the partition fields\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertTrue(hiveClient.doesTableExist(hiveSyncConfig.tableName),\"Table \" + hiveSyncConfig.tableName + \" should exist after sync completes\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "HiveSyncTool tool = new HiveSyncTool(hiveSyncConfig,HiveTestUtil.getHiveConf(),fileSystem)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "hiveClient = new HoodieHiveClient(hiveSyncConfig,HiveTestUtil.getHiveConf(),fileSystem)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "List<String> writtenPartitionsSince = hiveClient.getPartitionsWrittenToSince(Option.of(commitTime1))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<Partition> hivePartitions = hiveClient.scanTablePartitions(hiveSyncConfig.tableName)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "hiveSyncConfig.partitionFields = Arrays.asList(\"year\",\"month\",\"day\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "HiveTestUtil.createCOWTable(instantTime,5,true)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(commitTime1,hiveClient.getLastCommitTimeSynced(hiveSyncConfig.tableName).get(),\"The last commit that was synced should be updated in the TBLPROPERTIES\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(1,partitionEvents.size(),\"There should be only one partition event\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "hiveSyncConfig.syncMode = syncMode@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "HiveSyncTool tool = new HiveSyncTool(hiveSyncConfig,HiveTestUtil.getHiveConf(),fileSystem)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(1,writtenPartitionsSince.size(),\"We should have one partition written after 100 commit\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "String syncMode@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10->32 [style = dashed, label="0"];
9->22 [style = bold, label=""];
22->29 [style = bold, label=""];
11->4 [style = bold, label=""];
25->3 [style = bold, label=""];
35->33 [style = solid, label="tableName"];
27->33 [style = bold, label=""];
19->6 [style = bold, label=""];
16->34 [style = dashed, label="0"];
32->3 [style = solid, label="syncMode"];
21->22 [style = solid, label="dateTime"];
14->21 [style = bold, label=""];
37->35 [style = bold, label=""];
17->19 [style = bold, label=""];
39->32 [style = dotted, label="true"];
16->0 [style = solid, label="commitTime1"];
16->0 [style = bold, label=""];
23->16 [style = bold, label=""];
9->1 [style = solid, label="commitTime2"];
22->17 [style = bold, label=""];
7->20 [style = bold, label=""];
26->22 [style = solid, label="dateTime"];
14->26 [style = bold, label=""];
26->9 [style = bold, label=""];
25->10 [style = dotted, label="true"];
4->1 [style = bold, label=""];
35->38 [style = solid, label="tableName"];
12->13 [style = bold, label=""];
35->27 [style = bold, label=""];
38->9 [style = bold, label=""];
33->21 [style = bold, label=""];
23->34 [style = bold, label=""];
3->23 [style = bold, label=""];
15->10 [style = dotted, label="true"];
34->30 [style = solid, label="instantTime"];
2->18 [style = bold, label=""];
19->24 [style = solid, label="writtenPartitionsSince"];
5->24 [style = bold, label=""];
0->30 [style = dashed, label="0"];
16->19 [style = solid, label="commitTime1"];
5->24 [style = solid, label="hivePartitions"];
28->37 [style = bold, label=""];
29->31 [style = bold, label=""];
28->21 [style = solid, label="hiveSyncConfig"];
21->26 [style = dashed, label="0"];
6->5 [style = bold, label=""];
21->38 [style = bold, label=""];
9->22 [style = solid, label="commitTime2"];
15->3 [style = bold, label=""];
30->28 [style = bold, label=""];
8->7 [style = bold, label=""];
39->3 [style = bold, label=""];
35->29 [style = solid, label="tableName"];
21->9 [style = bold, label=""];
18->12 [style = bold, label=""];
0->2 [style = bold, label=""];
31->36 [style = bold, label=""];
13->14 [style = bold, label=""];
16->14 [style = solid, label="commitTime1"];
24->8 [style = bold, label=""];
34->30 [style = bold, label=""];
10->3 [style = solid, label="syncMode"];
20->11 [style = bold, label=""];
28->9 [style = solid, label="hiveSyncConfig"];
}
