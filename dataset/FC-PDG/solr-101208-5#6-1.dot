digraph {
12 [style = filled, label = "output.write(buffer)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "output.flush()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "output.write(buffer)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "byte(( buffer = content.getBytes(Charset.defaultCharset())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testFlushLargeBuffer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertTrue(buffer.length > S3OutputStream.MIN_PART_SIZE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testWriteSmallBuffer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String read = IOUtils.toString(input,Charset.defaultCharset())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testWriteSmallBuffer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "output.close()@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(buffer.length < S3OutputStream.PART_SIZE)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "output.write(buffer)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "InputStream input = s3.getObject(null)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(\"Flushing a large frame of an S3OutputStream should not impact data written\",content + \"some more\",read)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "S3OutputStream output = new S3OutputStream(s3,\"flush-large\",BUCKET)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "String content = RandomStringUtils.randomAlphanumeric(S3OutputStream.MIN_PART_SIZE + 1024)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "byte(( buffer = \"hello\".getBytes(Charset.defaultCharset())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String read = IOUtils.toString(input,Charset.defaultCharset())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "S3OutputStream output = new S3OutputStream(s3,\"small-buffer\",BUCKET)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "buffer = \"some more\".getBytes(Charset.defaultCharset())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16->15 [style = bold, label=""];
13->6 [style = solid, label="input"];
7->1 [style = bold, label=""];
15->14 [style = bold, label=""];
19->12 [style = bold, label=""];
9->2 [style = bold, label=""];
14->1 [style = solid, label="buffer"];
10->19 [style = bold, label=""];
15->11 [style = solid, label="content"];
6->11 [style = dashed, label="0"];
1->3 [style = bold, label=""];
14->17 [style = bold, label=""];
3->13 [style = dashed, label="0"];
2->4 [style = bold, label=""];
0->17 [style = dashed, label="0"];
4->7 [style = bold, label=""];
4->0 [style = bold, label=""];
0->7 [style = bold, label=""];
19->12 [style = solid, label="buffer"];
3->5 [style = solid, label="input"];
3->5 [style = bold, label=""];
7->5 [style = bold, label=""];
5->6 [style = solid, label="read"];
5->6 [style = bold, label=""];
8->2 [style = bold, label=""];
18->1 [style = bold, label=""];
6->11 [style = solid, label="read"];
6->11 [style = bold, label=""];
3->13 [style = bold, label=""];
2->7 [style = solid, label="buffer"];
12->3 [style = bold, label=""];
13->6 [style = bold, label=""];
1->10 [style = bold, label=""];
17->18 [style = bold, label=""];
}
