digraph {
21 [style = filled, label = "HiveTestUtil.getCreatedTablesSet().add(hiveSyncConfig.databaseName + \".\" + hiveSyncConfig.tableName)@@@34@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "boolean useJdbc@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "hiveSyncConfig.partitionValueExtractorClass = .getCanonicalName()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "tool = new HiveSyncTool(hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "testMultiPartitionKeySync['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(0,hiveClient.scanTablePartitions(hiveSyncConfig.tableName).size(),\"Table should not have partitions because of the NonPartitionedExtractor\")@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "HiveTestUtil.addCOWPartition(\"2010/02/01\",true,true,commitTime3)@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "HiveTestUtil.addCOWPartition(\"2010/01/02\",true,true,commitTime2)@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "tool.syncHoodieTable()@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "assertTrue(hiveClient.doesTableExist(hiveSyncConfig.tableName),\"Table \" + hiveSyncConfig.tableName + \" should exist after sync completes\")@@@38@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "HiveTestUtil.hiveSyncConfig.useJdbc = useJdbc@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "tool = new HiveSyncTool(hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@36@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "hiveSyncConfig.partitionFields = Arrays.asList(\"year\",\"month\",\"day\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(commitTime3,hiveClient.getLastCommitTimeSynced(hiveSyncConfig.tableName).get(),\"The last commit that was sycned should be updated in the TBLPROPERTIES\")@@@41@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "HiveTestUtil.createCOWTable(instantTime,5,true)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String instantTime = \"100\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(hiveClient.getTableSchema(hiveSyncConfig.tableName).size(),hiveClient.getDataSchema().getColumns().size() + 3,\"Hive Schema should match the table schema + partition fields\")@@@39@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "HoodieHiveClient hiveClient = new HoodieHiveClient(hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(hiveClient.getTableSchema(hiveSyncConfig.tableName).size(),hiveClient.getDataSchema().getColumns().size() + 3,\"Hive Schema should match the table schema + partition fields\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertFalse(hiveClient.doesTableExist(hiveSyncConfig.tableName),\"Table \" + hiveSyncConfig.tableName + \" should not exist initially\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(hiveClient.getTableSchema(hiveSyncConfig.tableName).size(),hiveClient.getDataSchema().getColumns().size(),\"Hive Schema should match the table schema�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽignoring the partition fields\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "hiveClient = new HoodieHiveClient(hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "tool.syncHoodieTable()@@@37@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "HiveTestUtil.getCreatedTablesSet().add(hiveSyncConfig.databaseName + \".\" + hiveSyncConfig.tableName)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(PartitionEventType.ADD,partitionEvents.iterator().next().eventType,\"The one partition event must of type ADD\")@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "hiveClient = new HoodieHiveClient(hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "assertEquals(6,hiveClient.scanTablePartitions(hiveSyncConfig.tableName).size(),\"Table partitions should match the number of partitions we wrote\")@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "hiveSyncConfig.tableName = \"non_partitioned\"@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "tool.syncHoodieTable()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testNonPartitionedSync['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(7,hiveClient.scanTablePartitions(hiveSyncConfig.tableName).size(),\"Table partitions should match the number of partitions we wrote\")@@@40@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "String commitTime2 = \"101\"@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "List<Partition> hivePartitions = hiveClient.scanTablePartitions(hiveSyncConfig.tableName)@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertTrue(hiveClient.doesTableExist(hiveSyncConfig.tableName),\"Table \" + hiveSyncConfig.tableName + \" should exist after sync completes\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "boolean useJdbc@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(commitTime2,hiveClient.getLastCommitTimeSynced(hiveSyncConfig.tableName).get(),\"The last commit that was sycned should be 101\")@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "List<PartitionEvent> partitionEvents = hiveClient.getPartitionEvents(hivePartitions,writtenPartitionsSince)@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "assertEquals(1,writtenPartitionsSince.size(),\"We should have one partition written after 100 commit\")@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "assertEquals(1,hiveClient.getPartitionsWrittenToSince(Option.of(commitTime2)).size())@@@42@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertEquals(instantTime,hiveClient.getLastCommitTimeSynced(hiveSyncConfig.tableName).get(),\"The last commit that was sycned should be updated in the TBLPROPERTIES\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(1,partitionEvents.size(),\"There should be only one paritition event\")@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "HiveSyncTool tool = new HiveSyncTool(hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "hiveSyncConfig.partitionValueExtractorClass = .getCanonicalName()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testMultiPartitionKeySync['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "List<String> writtenPartitionsSince = hiveClient.getPartitionsWrittenToSince(Option.of(instantTime))@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertEquals(5,hiveClient.scanTablePartitions(hiveSyncConfig.tableName).size(),\"Table partitions should match the number of partitions we wrote\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "String commitTime3 = \"102\"@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "hiveSyncConfig.tableName = \"multi_part_key\"@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "HiveSyncConfig hiveSyncConfig = HiveSyncConfig.copy(HiveTestUtil.hiveSyncConfig)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28->21 [style = bold, label=""];
12->21 [style = solid, label="tableName"];
31->28 [style = solid, label="commitTime3"];
22->19 [style = bold, label=""];
43->46 [style = dotted, label="true"];
18->29 [style = solid, label="commitTime2"];
38->36 [style = bold, label=""];
12->17 [style = solid, label="tableName"];
12->13 [style = solid, label="tableName"];
46->1 [style = solid, label="useJdbc"];
7->47 [style = bold, label=""];
21->22 [style = bold, label=""];
44->3 [style = bold, label=""];
6->15 [style = bold, label=""];
15->18 [style = bold, label=""];
13->0 [style = bold, label=""];
2->13 [style = bold, label=""];
37->35 [style = bold, label=""];
47->44 [style = bold, label=""];
14->46 [style = dashed, label="0"];
12->30 [style = solid, label="tableName"];
16->14 [style = dotted, label="true"];
44->13 [style = solid, label="tableName"];
12->10 [style = solid, label="tableName"];
7->38 [style = solid, label="hiveSyncConfig"];
7->19 [style = solid, label="hiveSyncConfig"];
11->9 [style = bold, label=""];
5->48 [style = dashed, label="0"];
0->8 [style = bold, label=""];
44->17 [style = solid, label="tableName"];
34->32 [style = bold, label=""];
7->34 [style = solid, label="hiveSyncConfig"];
11->15 [style = solid, label="instantTime"];
7->2 [style = solid, label="hiveSyncConfig"];
19->40 [style = bold, label=""];
7->0 [style = solid, label="hiveSyncConfig"];
4->47 [style = dashed, label="0"];
11->9 [style = solid, label="instantTime"];
1->11 [style = bold, label=""];
30->27 [style = bold, label=""];
23->31 [style = bold, label=""];
7->22 [style = solid, label="hiveSyncConfig"];
30->27 [style = solid, label="hivePartitions"];
3->17 [style = bold, label=""];
10->48 [style = bold, label=""];
16->1 [style = bold, label=""];
26->14 [style = dotted, label="true"];
48->45 [style = bold, label=""];
36->27 [style = solid, label="writtenPartitionsSince"];
7->4 [style = bold, label=""];
12->3 [style = bold, label=""];
33->23 [style = bold, label=""];
26->1 [style = bold, label=""];
12->44 [style = dashed, label="0"];
40->37 [style = bold, label=""];
4->12 [style = bold, label=""];
6->45 [style = dashed, label="0"];
43->1 [style = bold, label=""];
25->42 [style = bold, label=""];
14->1 [style = solid, label="useJdbc"];
29->38 [style = bold, label=""];
12->37 [style = solid, label="tableName"];
31->25 [style = solid, label="commitTime3"];
18->23 [style = solid, label="commitTime2"];
24->25 [style = bold, label=""];
32->33 [style = bold, label=""];
44->10 [style = solid, label="tableName"];
31->28 [style = bold, label=""];
35->24 [style = bold, label=""];
39->30 [style = bold, label=""];
36->39 [style = bold, label=""];
8->10 [style = bold, label=""];
11->36 [style = solid, label="instantTime"];
10->5 [style = bold, label=""];
5->6 [style = bold, label=""];
41->20 [style = bold, label=""];
18->29 [style = bold, label=""];
17->2 [style = bold, label=""];
27->41 [style = bold, label=""];
20->34 [style = bold, label=""];
9->7 [style = bold, label=""];
}
