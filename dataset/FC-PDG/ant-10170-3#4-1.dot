digraph {
9 [style = filled, label = "buildRule.getProject().addReference(\"path\",p)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "buildRule.getProject().addReference(\"no-override\",p)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "testReference(\"testInherit\",new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ced19a,new boolean((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ced19f,p)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testReferenceNoInheritance['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Path p = Path.systemClasspath@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "p.setProject(project)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testReferenceInheritance['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "testReference(\"testNoInherit\",new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ced1e3,new boolean((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ced1e8,p)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testReferenceInheritance['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testReference(\"testNoInherit\",new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ced1f2,new boolean((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ced1f7,null)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testReference(\"testInherit\",new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ced201,new boolean((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ced206,p)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testReference(\"testInherit\",new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ced210,new boolean((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ced215,null)@@@22@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "project.addReference(\"no-override\",p)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "project.addReference(\"path\",p)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "p.setProject(buildRule.getProject())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5->3 [style = bold, label=""];
3->4 [style = solid, label="p"];
3->8 [style = solid, label="p"];
4->14 [style = bold, label=""];
4->6 [style = bold, label=""];
8->6 [style = bold, label=""];
1->0 [style = bold, label=""];
6->14 [style = dashed, label="0"];
9->8 [style = bold, label=""];
12->1 [style = bold, label=""];
2->4 [style = bold, label=""];
3->2 [style = solid, label="p"];
6->1 [style = bold, label=""];
3->10 [style = bold, label=""];
13->3 [style = bold, label=""];
3->7 [style = bold, label=""];
11->3 [style = bold, label=""];
2->9 [style = dashed, label="0"];
7->2 [style = bold, label=""];
3->6 [style = solid, label="p"];
14->12 [style = bold, label=""];
3->14 [style = solid, label="p"];
3->9 [style = solid, label="p"];
4->8 [style = dashed, label="0"];
7->10 [style = dashed, label="0"];
10->9 [style = bold, label=""];
3->1 [style = solid, label="p"];
}
