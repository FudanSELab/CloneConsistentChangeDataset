digraph {
17 [style = filled, label = "failBecauseExceptionWasNotThrown()@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "testFactory.maybeAdd(\"foo\",calls)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "calls.get(1).execute()@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "{}@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "AssertionError e@@@12@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertThat(testFactory.values).containsExactly(\"bar\")@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "calls.get(0).execute()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(testFactory.values).containsExactly(\"bar\",\"foo\")@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "enqueuesInOrder['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testFactory.maybeAdd(\"foo\",calls)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "testFactory.failValue.set(\"foo\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "callFactory.maybeAdd(\"foo\",calls)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(calls).isNotEmpty()@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "calls.get(0).execute()@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "callFactory.maybeAdd(\"bar\",calls)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "AssertionError e@@@11@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(calls).isNotEmpty()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "calls.get(0).execute()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "{}@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "call.enqueue(assertFailOnError)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertThat(values).containsExactly(\"foo\",\"bar\")@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "exceptionsInvalidate_execute['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "calls.clear()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "calls.get(1).execute()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testFactory.maybeAdd(\"bar\",calls)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "List<Call<Void>> calls = new ArrayList<>()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "calls.clear()@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "exceptionsInvalidate_execute['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "TestFactory testFactory = new TestFactory()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "failValue.set(\"foo\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13->4 [style = solid, label="calls"];
7->13 [style = bold, label=""];
17->10 [style = bold, label=""];
23->16 [style = bold, label=""];
16->9 [style = bold, label=""];
15->16 [style = dashed, label="0"];
11->1 [style = bold, label=""];
0->6 [style = bold, label=""];
5->23 [style = dashed, label="0"];
10->19 [style = dashed, label="0"];
10->19 [style = bold, label=""];
27->28 [style = bold, label=""];
8->20 [style = dashed, label="0"];
4->26 [style = bold, label=""];
5->15 [style = bold, label=""];
9->17 [style = bold, label=""];
2->23 [style = solid, label="calls"];
4->26 [style = dashed, label="0"];
26->6 [style = bold, label=""];
15->3 [style = bold, label=""];
13->5 [style = solid, label="calls"];
4->0 [style = bold, label=""];
21->2 [style = bold, label=""];
2->24 [style = solid, label="calls"];
3->9 [style = bold, label=""];
18->22 [style = bold, label=""];
8->20 [style = bold, label=""];
12->4 [style = bold, label=""];
10->12 [style = bold, label=""];
6->8 [style = bold, label=""];
13->2 [style = solid, label="calls"];
22->10 [style = bold, label=""];
19->4 [style = bold, label=""];
5->27 [style = bold, label=""];
2->24 [style = bold, label=""];
2->24 [style = dashed, label="0"];
9->1 [style = bold, label=""];
1->10 [style = bold, label=""];
14->11 [style = bold, label=""];
2->26 [style = solid, label="calls"];
25->21 [style = bold, label=""];
2->5 [style = bold, label=""];
13->2 [style = bold, label=""];
24->23 [style = bold, label=""];
29->13 [style = bold, label=""];
}
