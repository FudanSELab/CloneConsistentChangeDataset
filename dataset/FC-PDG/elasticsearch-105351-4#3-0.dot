digraph {
26 [style = filled, label = "indexWriter.addDocument(singleton(new NumericDocValuesField(\"number\",2)))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "indexWriter.close()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(AggregationInspectionHelper.hasValue(min))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "indexWriter.addDocument(singleton(new NumericDocValuesField(\"number\",3)))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "fieldType.setName(\"number\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "InternalMin min = searchAndReduce(indexSearcher,new MatchAllDocsQuery(),nonDeterministicAggregationBuilder,fieldType)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.INTEGER)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertFalse(queryShardContext.isCacheable())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "MinAggregationBuilder aggregationBuilder = new MinAggregationBuilder(\"min\").field(\"number\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "testCaching['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "testScriptCaching['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "indexWriter.addDocument(singleton(new NumericDocValuesField(\"number\",2)))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(queryShardContext.isCacheable())@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "RandomIndexWriter indexWriter = new RandomIndexWriter(random(),directory)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testScriptCaching['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "assertTrue(queryShardContext.isCacheable())@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(2.0,min.getValue(),0)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "MinAggregationBuilder aggregationBuilder = new MinAggregationBuilder(\"min\").field(\"number\").script(new Script(ScriptType.INLINE,MockScriptEngine.NAME,INVERT_SCRIPT,Collections.emptyMap()))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(AggregationInspectionHelper.hasValue(min))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "MinAggregationBuilder nonDeterministicAggregationBuilder = new MinAggregationBuilder(\"min\").field(\"number\").script(new Script(ScriptType.INLINE,MockScriptEngine.NAME,RANDOM_SCRIPT,Collections.emptyMap()))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "IndexSearcher indexSearcher = newSearcher(indexReader,true,true)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(AggregationInspectionHelper.hasValue(min))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "indexSearcher = newSearcher(indexReader,true,true)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "InternalMin min = searchAndReduce(indexSearcher,new MatchAllDocsQuery(),aggregationBuilder,fieldType)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "min = searchAndReduce(indexSearcher,new MatchAllDocsQuery(),aggregationBuilder,fieldType)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(-7.0,min.getValue(),0)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(min.getValue() >= 0.0 && min.getValue() <= 1.0)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "indexWriter.addDocument(singleton(new NumericDocValuesField(\"number\",7)))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21->20 [style = solid, label="indexSearcher"];
16->3 [style = bold, label=""];
23->25 [style = bold, label=""];
15->10 [style = bold, label=""];
9->11 [style = bold, label=""];
21->27 [style = bold, label=""];
20->7 [style = solid, label="min"];
12->15 [style = bold, label=""];
18->19 [style = bold, label=""];
3->21 [style = solid, label="min"];
11->12 [style = bold, label=""];
20->3 [style = dashed, label="0"];
20->6 [style = bold, label=""];
14->5 [style = solid, label="fieldType"];
24->23 [style = bold, label=""];
12->0 [style = bold, label=""];
0->15 [style = bold, label=""];
12->20 [style = solid, label="nonDeterministicAggregationBuilder"];
2->13 [style = bold, label=""];
19->5 [style = solid, label="indexSearcher"];
19->5 [style = bold, label=""];
6->28 [style = dashed, label="0"];
5->2 [style = bold, label=""];
3->28 [style = bold, label=""];
28->21 [style = bold, label=""];
14->3 [style = solid, label="fieldType"];
21->20 [style = bold, label=""];
10->16 [style = bold, label=""];
17->14 [style = bold, label=""];
1->16 [style = bold, label=""];
25->26 [style = bold, label=""];
26->15 [style = bold, label=""];
29->14 [style = bold, label=""];
11->24 [style = dashed, label="0"];
7->18 [style = bold, label=""];
11->8 [style = bold, label=""];
3->21 [style = bold, label=""];
14->9 [style = bold, label=""];
11->5 [style = solid, label="aggregationBuilder"];
6->7 [style = bold, label=""];
22->14 [style = bold, label=""];
10->1 [style = bold, label=""];
24->3 [style = solid, label="aggregationBuilder"];
9->24 [style = bold, label=""];
8->12 [style = bold, label=""];
5->13 [style = solid, label="min"];
14->20 [style = solid, label="fieldType"];
16->3 [style = solid, label="indexSearcher"];
13->4 [style = bold, label=""];
}
