digraph {
37 [style = filled, label = "fail(\"'le' on non-numeric different type is not possible\")@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(SqlFunctions.geAny(new BigDecimal(1L),new BigDecimal(1.0D)),is(true))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(SqlFunctions.leAny(1,2.0D),is(true))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertThat(SqlFunctions.leAny(\"apple\",\"banana\"),is(true))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertThat(SqlFunctions.leAny(new BigDecimal(1L),2L),is(true))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertThat(SqlFunctions.leAny(\"apple\",\"apple\"),is(true))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(SqlFunctions.leAny(new BigDecimal(1L),1.0D),is(true))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(SqlFunctions.geAny(\"2\",2L),is(false))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertThat(SqlFunctions.leAny(new BigDecimal(1L),1L),is(true))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(SqlFunctions.geAny(1,1.0D),is(true))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertThat(SqlFunctions.leAny(1,2L),is(true))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertThat(SqlFunctions.leAny(new BigDecimal(1L),new BigDecimal(1.0D)),is(true))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(SqlFunctions.geAny(new BigDecimal(2L),1L),is(true))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertThat(SqlFunctions.leAny(1L,1.0D),is(true))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertThat(SqlFunctions.leAny(new BigDecimal(1L),new BigDecimal(2.0D)),is(true))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertThat(SqlFunctions.leAny(new BigDecimal(1L),2),is(true))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "fail(\"'ge' on non-numeric different type is not possible\")@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(SqlFunctions.geAny(\"banana\",\"apple\"),is(true))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(SqlFunctions.leAny(new BigDecimal(1L),1),is(true))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testGeWithAny['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "assertThat(SqlFunctions.leAny(1L,2.0D),is(true))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertThat(SqlFunctions.leAny(1,1L),is(true))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(SqlFunctions.geAny(new BigDecimal(2L),1.0D),is(true))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(SqlFunctions.geAny(2L,1.0D),is(true))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertThat(SqlFunctions.leAny(new BigDecimal(1L),2.0D),is(true))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(SqlFunctions.geAny(new BigDecimal(1L),1),is(true))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(SqlFunctions.geAny(\"apple\",\"apple\"),is(true))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertThat(SqlFunctions.leAny(1,1.0D),is(true))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(SqlFunctions.geAny(2,1L),is(true))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(SqlFunctions.geAny(new BigDecimal(1L),1.0D),is(true))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(SqlFunctions.leAny(\"2\",2L),is(false))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testGeWithAny['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(SqlFunctions.geAny(new BigDecimal(1L),1L),is(true))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testLeWithAny['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(SqlFunctions.geAny(1L,1.0D),is(true))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(SqlFunctions.geAny(new BigDecimal(2L),new BigDecimal(1.0D)),is(true))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(SqlFunctions.geAny(new BigDecimal(2L),1),is(true))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(SqlFunctions.geAny(2,1.0D),is(true))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(SqlFunctions.geAny(1,1L),is(true))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29->30 [style = bold, label=""];
14->36 [style = dashed, label="0"];
6->18 [style = bold, label=""];
24->32 [style = bold, label=""];
26->21 [style = bold, label=""];
5->7 [style = bold, label=""];
7->8 [style = bold, label=""];
27->33 [style = bold, label=""];
28->35 [style = bold, label=""];
14->3 [style = bold, label=""];
33->31 [style = bold, label=""];
10->35 [style = dashed, label="0"];
15->12 [style = bold, label=""];
4->11 [style = bold, label=""];
3->24 [style = dashed, label="0"];
30->22 [style = bold, label=""];
15->30 [style = dashed, label="0"];
0->13 [style = bold, label=""];
16->27 [style = dashed, label="0"];
21->29 [style = bold, label=""];
11->14 [style = bold, label=""];
4->38 [style = dashed, label="0"];
11->23 [style = dashed, label="0"];
8->21 [style = dashed, label="0"];
32->20 [style = bold, label=""];
19->16 [style = bold, label=""];
0->25 [style = dashed, label="0"];
8->2 [style = bold, label=""];
12->17 [style = bold, label=""];
9->32 [style = dashed, label="0"];
3->9 [style = bold, label=""];
38->23 [style = bold, label=""];
23->36 [style = bold, label=""];
22->28 [style = bold, label=""];
5->20 [style = dashed, label="0"];
16->6 [style = bold, label=""];
2->29 [style = dashed, label="0"];
36->24 [style = bold, label=""];
35->25 [style = bold, label=""];
18->31 [style = dashed, label="0"];
13->37 [style = dashed, label="0"];
17->28 [style = dashed, label="0"];
1->16 [style = bold, label=""];
25->37 [style = bold, label=""];
7->26 [style = dashed, label="0"];
20->26 [style = bold, label=""];
9->5 [style = bold, label=""];
12->22 [style = dashed, label="0"];
2->15 [style = bold, label=""];
17->10 [style = bold, label=""];
10->0 [style = bold, label=""];
31->38 [style = bold, label=""];
18->4 [style = bold, label=""];
6->33 [style = dashed, label="0"];
34->27 [style = bold, label=""];
}
