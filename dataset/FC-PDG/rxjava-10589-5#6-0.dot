digraph {
8 [style = filled, label = "to.onError(new TestException())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "{}@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "{}@@@27@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "throw new RuntimeException(\"Should have thrown\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "TestObserver<Integer> to = TestObserver.create(to1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "createDelegate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "AssertionError exc@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "TestObserverEx<Integer> to1 = new TestObserverEx<Integer>()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "to.assertNotSubscribed()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "TestObserverEx<Integer> to = new TestObserverEx<>(to1)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "to.assertValueSequence(Collections.singletonList(1))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "{}@@@33@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "{}@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertTrue(to.isDisposed())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "to.assertNotSubscribed()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "to.onNext(1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertFalse(to.hasSubscription())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "to1.assertValue(1).assertError().assertComplete()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "to.dispose()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertSame(Thread.currentThread(),to.lastThread())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "throw new RuntimeException(\"Should have thrown\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "throw new RuntimeException(\"Should have thrown\")@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "{}@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "AssertionError exc@@@27@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "{}@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "AssertionError exc@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertFalse(to.isDisposed())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "AssertionError ex@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "throw new RuntimeException(\"Should have thrown\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "throw new RuntimeException(\"Should have thrown\")@@@38@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(to.hasSubscription())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "to.assertValueSequence(Collections.singletonList(1))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "AssertionError ex@@@12@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "to.assertValueCount(0)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "AssertionError exc@@@33@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "throw new RuntimeException(\"Should have thrown\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "createDelegate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertTrue(to.isDisposed())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "TestObserver<Integer> to1 = TestObserver.create()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "to.assertNoValues()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "to.onComplete()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "throw new RuntimeException(\"Should have thrown\")@@@30@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "TestObserverEx<Integer> to = new TestObserverEx<Integer>(to1)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "createDelegate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "to.assertValueSequence(Collections.singletonList(2))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "to.onSubscribe(Disposable.empty())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "{}@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "TestObserverEx<Integer> to1 = new TestObserverEx<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4->9 [style = bold, label=""];
18->3 [style = bold, label=""];
24->12 [style = bold, label=""];
15->10 [style = bold, label=""];
16->0 [style = bold, label=""];
47->6 [style = bold, label=""];
8->15 [style = bold, label=""];
33->3 [style = bold, label=""];
38->41 [style = solid, label="to1"];
25->33 [style = bold, label=""];
26->17 [style = bold, label=""];
17->6 [style = bold, label=""];
3->40 [style = bold, label=""];
29->3 [style = bold, label=""];
12->11 [style = bold, label=""];
0->20 [style = solid, label="to1"];
25->18 [style = bold, label=""];
35->19 [style = bold, label=""];
3->26 [style = bold, label=""];
11->29 [style = bold, label=""];
27->31 [style = bold, label=""];
11->37 [style = bold, label=""];
28->13 [style = bold, label=""];
45->36 [style = bold, label=""];
31->21 [style = bold, label=""];
38->41 [style = bold, label=""];
0->38 [style = dashed, label="0"];
1->7 [style = bold, label=""];
34->30 [style = bold, label=""];
37->3 [style = bold, label=""];
28->32 [style = bold, label=""];
6->2 [style = bold, label=""];
23->14 [style = bold, label=""];
30->35 [style = solid, label="to1"];
22->8 [style = bold, label=""];
43->40 [style = bold, label=""];
20->35 [style = dashed, label="0"];
19->1 [style = bold, label=""];
13->17 [style = bold, label=""];
30->35 [style = bold, label=""];
21->22 [style = bold, label=""];
20->41 [style = dashed, label="0"];
7->23 [style = bold, label=""];
9->44 [style = bold, label=""];
40->47 [style = bold, label=""];
0->30 [style = dashed, label="0"];
10->4 [style = bold, label=""];
39->38 [style = bold, label=""];
7->21 [style = bold, label=""];
44->11 [style = bold, label=""];
0->20 [style = bold, label=""];
42->1 [style = bold, label=""];
36->37 [style = bold, label=""];
5->27 [style = bold, label=""];
20->19 [style = bold, label=""];
27->21 [style = bold, label=""];
32->17 [style = bold, label=""];
9->24 [style = bold, label=""];
14->21 [style = bold, label=""];
41->42 [style = bold, label=""];
46->43 [style = bold, label=""];
}
