digraph {
10 [style = filled, label = "assertEquals(Optional.of(\"Very Long Title\"),entry.getField(StandardField.JOURNAL))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(Optional.of(\"Musterbuch\"),entry.getField(StandardField.TITLE))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(Optional.of(\"Einleitung\"),entry.getField(new UnknownField(\"chaptertitle\")))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(Optional.of(\"Short abstract\"),entry.getField(StandardField.ABSTRACT))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(Optional.of(\"Max\"),entry.getField(StandardField.AUTHOR))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(Optional.of(\"58\"),entry.getField(StandardField.PAGES))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "entry.setField(StandardField.YEAR,\"2011\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "cleanupWithYearAlreadyPresentDoesNothing['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(Optional.of(\"Mustermann and Musterfrau\"),entry.getField(StandardField.AUTHOR))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(StandardEntryType.InProceedings,entry.getType())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "entry = entries.get(3)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(Optional.of(\"Max\"),entry.getField(StandardField.EDITOR))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(Optional.of(\"Address\"),entry.getField(StandardField.ADDRESS))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Path file = Paths.get(.getResource(\"OvidImporterTest1.txt\").toURI())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertEquals(Optional.of(\"Test\"),entry.getField(StandardField.TITLE))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(Optional.of(\"2015\"),entry.getField(StandardField.YEAR))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "testImportEntries1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "assertEquals(Optional.of(\"2011\"),entry.getField(StandardField.YEAR))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(Optional.of(\"Very Long Title\"),entry.getField(StandardField.BOOKTITLE))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "entry.setField(StandardField.DATE,\"2012\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(Optional.of(\"Very Long Title\"),entry.getField(StandardField.JOURNAL))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(Optional.of(\"Editor\"),entry.getField(StandardField.EDITOR))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(StandardEntryType.Article,entry.getType())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(Optional.of(\"TestPublisher\"),entry.getField(StandardField.PUBLISHER))@@@46@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(Optional.of(\"2014\"),entry.getField(StandardField.YEAR))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(Optional.of(\"2015\"),entry.getField(StandardField.YEAR))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "entry = entries.get(4)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Path file = Path.of(.getResource(\"OvidImporterTest1.txt\").toURI())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "assertEquals(Optional.of(\"103--106\"),entry.getField(StandardField.PAGES))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "worker.cleanup(entry)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(5,entries.size())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(StandardEntryType.Misc,entry.getType())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(Optional.of(\"Publisher\"),entry.getField(StandardField.PUBLISHER))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(Optional.of(\"Test\"),entry.getField(StandardField.ADDRESS))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(Optional.empty(),entry.getField(StandardField.TITLE))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(Optional.of(\"2012\"),entry.getField(StandardField.DATE))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(StandardEntryType.InCollection,entry.getType())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(StandardEntryType.Book,entry.getType())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(Optional.of(\"Max\"),entry.getField(StandardField.AUTHOR))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(Optional.of(\"103--106\"),entry.getField(StandardField.PAGES))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "List<BibEntry> entries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "BibEntry entry = new BibEntry()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "BibEntry entry = entries.get(0)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(Optional.of(\"103--106\"),entry.getField(StandardField.PAGES))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(Optional.of(\"April\"),entry.getField(StandardField.MONTH))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testImportEntries1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(Optional.of(\"28\"),entry.getField(StandardField.VOLUME))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "entry = entries.get(1)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(Optional.of(\"2\"),entry.getField(StandardField.ISSUE))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(Optional.of(\"2\"),entry.getField(StandardField.ISSUE))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(Optional.of(\"28\"),entry.getField(StandardField.VOLUME))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "entry = entries.get(2)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(Optional.of(\"2015\"),entry.getField(StandardField.YEAR))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(Optional.of(\"Max the Editor\"),entry.getField(StandardField.TITLE))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
8->24 [style = bold, label=""];
16->40 [style = bold, label=""];
9->39 [style = bold, label=""];
35->16 [style = bold, label=""];
22->2 [style = bold, label=""];
23->30 [style = bold, label=""];
0->37 [style = bold, label=""];
30->13 [style = bold, label=""];
28->34 [style = bold, label=""];
5->33 [style = bold, label=""];
46->28 [style = bold, label=""];
52->53 [style = bold, label=""];
2->6 [style = bold, label=""];
25->36 [style = bold, label=""];
53->48 [style = bold, label=""];
43->20 [style = bold, label=""];
25->48 [style = dashed, label="0"];
7->35 [style = bold, label=""];
34->18 [style = bold, label=""];
14->10 [style = bold, label=""];
27->31 [style = bold, label=""];
48->50 [style = bold, label=""];
47->53 [style = solid, label="entry"];
11->19 [style = bold, label=""];
17->22 [style = bold, label=""];
10->41 [style = bold, label=""];
38->15 [style = bold, label=""];
44->12 [style = bold, label=""];
13->11 [style = bold, label=""];
15->5 [style = bold, label=""];
36->50 [style = dashed, label="0"];
47->49 [style = bold, label=""];
3->9 [style = bold, label=""];
42->4 [style = bold, label=""];
37->14 [style = bold, label=""];
26->0 [style = bold, label=""];
20->8 [style = bold, label=""];
31->46 [style = dashed, label="0"];
49->52 [style = bold, label=""];
32->1 [style = bold, label=""];
33->43 [style = bold, label=""];
21->32 [style = bold, label=""];
51->47 [style = bold, label=""];
18->25 [style = bold, label=""];
29->7 [style = bold, label=""];
40->26 [style = bold, label=""];
12->23 [style = bold, label=""];
31->28 [style = bold, label=""];
36->17 [style = bold, label=""];
45->46 [style = bold, label=""];
41->44 [style = bold, label=""];
1->38 [style = bold, label=""];
39->29 [style = bold, label=""];
24->42 [style = bold, label=""];
19->21 [style = bold, label=""];
}
