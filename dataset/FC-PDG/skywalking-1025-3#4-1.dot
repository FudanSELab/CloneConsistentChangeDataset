digraph {
9 [style = filled, label = "Node sourceNode = VariableExpressParser.parse(callMatcher.getSource(),nodes,null)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "nonNull(targetNode)@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "convert = true@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "convertNodeId['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "List<ServiceInstanceNode> nodes@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "callMatcher.setSource(sourceNode.getId())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "callMatcher.setId(String.join(\"_\",callMatcher.getSource(),callMatcher.getTarget()))@@@16@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "convert = true@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "List<CallMatcher> callMatchers@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<Node> nodes@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "convertNodeId['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Node targetNode = VariableExpressParser.parse(callMatcher.getTarget(),nodes,null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "callMatcher.setTarget(targetNode.getId())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "callMatcher.setId(String.join(\"-\",callMatcher.getSource(),callMatcher.getTarget()))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "convert@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ServiceInstanceNode sourceNode = VariableExpressParser.parse(callMatcher.getSource(),nodes,null)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "List<Node> nodes@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "List<CallMatcher> callMatchers@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "boolean convert = false@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "convertNodeId['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "nonNull(sourceNode)@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ServiceInstanceNode targetNode = VariableExpressParser.parse(callMatcher.getTarget(),nodes,null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
9->20 [style = dashed, label="0"];
4->10 [style = bold, label=""];
3->9 [style = solid, label="nodes"];
16->9 [style = bold, label=""];
20->17 [style = bold, label=""];
9->0 [style = bold, label=""];
17->1 [style = bold, label=""];
16->13 [style = dotted, label="true"];
18->17 [style = solid, label="nodes"];
21->18 [style = dotted, label="true"];
4->10 [style = dotted, label="true"];
2->6 [style = bold, label=""];
7->14 [style = dashed, label="0"];
12->20 [style = bold, label=""];
5->6 [style = dotted, label="true"];
4->11 [style = dotted, label="true"];
11->12 [style = bold, label=""];
7->20 [style = bold, label=""];
13->19 [style = dashed, label="0"];
6->12 [style = solid, label="convert"];
11->12 [style = solid, label="convert"];
12->9 [style = bold, label=""];
0->17 [style = dashed, label="0"];
20->5 [style = solid, label="sourceNode"];
12->7 [style = bold, label=""];
8->3 [style = dotted, label="true"];
7->9 [style = bold, label=""];
15->9 [style = solid, label="nodes"];
1->12 [style = solid, label="convert"];
6->4 [style = bold, label=""];
5->2 [style = bold, label=""];
12->14 [style = dotted, label="true"];
21->20 [style = bold, label=""];
3->0 [style = solid, label="nodes"];
0->4 [style = solid, label="targetNode"];
0->1 [style = bold, label=""];
21->19 [style = dotted, label="true"];
5->4 [style = bold, label=""];
12->14 [style = bold, label=""];
8->9 [style = bold, label=""];
9->5 [style = solid, label="sourceNode"];
4->12 [style = bold, label=""];
17->4 [style = solid, label="targetNode"];
14->9 [style = bold, label=""];
8->13 [style = dotted, label="true"];
12->7 [style = dotted, label="true"];
18->20 [style = solid, label="nodes"];
15->0 [style = solid, label="nodes"];
5->2 [style = dotted, label="true"];
16->15 [style = dotted, label="true"];
10->11 [style = bold, label=""];
}
