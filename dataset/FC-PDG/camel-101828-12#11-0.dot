digraph {
39 [style = filled, label = "count == 1@@@30@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessageAll)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(\"Test test Commit\",ex1.getOut().getBody().getShortMessage())@@@30@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "File gitDir = new File(gitLocalRepo,\".git\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "File fileToAdd = new File(gitLocalRepo,filenameToAdd)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "mockResultCommit.assertIsSatisfied()@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "removeFileBranchTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "git.close()@@@45@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertFalse(status.getAdded().contains(filenameToAdd))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "template.send(\"direct:remove-on-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameToAdd)}})@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertTrue(status.getAdded().contains(filenameToAdd))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "git.commit().setMessage(commitMessageAll).call()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Exchange ex1 = mockResultCommit.getExchanges().get(0)@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "git.close()@@@31@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "File fileToAdd1 = new File(gitLocalRepo,filenameBranchToAdd)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "git.commit().setMessage(\"Test test Commit\").call()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(count,1)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "status = git.status().call()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "validateGitLogs(git,\"Test test Commit\",commitMessage)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "git.close()@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "fileToAdd.createNewFile()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Exchange ex2 = mockResultCommit.getExchanges().get(1)@@@28@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "count++@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(commitMessage,ex2.getOut().getBody().getShortMessage())@@@29@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Iterable<RevCommit> logs = git.log().call()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(status.getAdded().contains(filenameBranchToAdd))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Status status = git.status().call()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int count = 0@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "status = git.status().call()@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "git.commit().setMessage(commitMessage).call()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "git.add().addFilepattern(filenameToAdd).call()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "commitConsumerTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "count == 0@@@27@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "count = 0@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "count++@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "git.checkout().setCreateBranch(false).setName(branchTest).call()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(commitMessage,ex2.getOut().getBody().getShortMessage())@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertEquals(gitDir.exists(),true)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "commitConsumerTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "git.add().addFilepattern(filenameBranchToAdd).call()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Iterable<RevCommit> logs = git.log().call()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "fileToAdd1.createNewFile()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(count,2)@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertEquals(\"Test test Commit\",ex1.getOut().getBody().getShortMessage())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "mockResultCommit.expectedMessageCount(2)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "MockEndpoint mockResultCommit = getMockEndpoint(\"mock:result-commit\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(count,2)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int count = 0@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "git.checkout().setCreateBranch(true).setName(branchTest).setUpstreamMode(SetupUpstreamMode.SET_UPSTREAM).call()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Exchange ex2 = mockResultCommit.getExchanges().get(1)@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
54 [style = filled, label = "Git git = getGitTestRepository()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "logs = git.log().call()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "count++@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45->41 [style = bold, label=""];
13->10 [style = bold, label=""];
49->45 [style = bold, label=""];
24->12 [style = bold, label=""];
42->34 [style = bold, label=""];
2->20 [style = bold, label=""];
0->13 [style = bold, label=""];
30->33 [style = bold, label=""];
25->22 [style = bold, label=""];
21->6 [style = bold, label=""];
38->44 [style = bold, label=""];
11->1 [style = bold, label=""];
23->25 [style = dashed, label="0"];
7->3 [style = solid, label="count"];
8->19 [style = bold, label=""];
40->51 [style = bold, label=""];
36->39 [style = solid, label="count"];
16->24 [style = bold, label=""];
18->11 [style = bold, label=""];
39->43 [style = bold, label=""];
4->26 [style = bold, label=""];
49->38 [style = solid, label="count"];
31->29 [style = bold, label=""];
49->38 [style = bold, label=""];
44->50 [style = bold, label=""];
10->17 [style = bold, label=""];
21->30 [style = bold, label=""];
51->52 [style = bold, label=""];
50->48 [style = bold, label=""];
9->30 [style = solid, label="git"];
12->9 [style = bold, label=""];
48->42 [style = bold, label=""];
39->43 [style = dotted, label="true"];
15->18 [style = bold, label=""];
22->23 [style = bold, label=""];
32->2 [style = bold, label=""];
11->35 [style = bold, label=""];
7->3 [style = bold, label=""];
45->41 [style = dotted, label="true"];
37->54 [style = bold, label=""];
23->14 [style = bold, label=""];
36->45 [style = solid, label="count"];
20->8 [style = bold, label=""];
52->47 [style = bold, label=""];
36->49 [style = solid, label="count"];
46->40 [style = solid, label="count"];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
29->32 [style = bold, label=""];
22->36 [style = bold, label=""];
39->49 [style = bold, label=""];
6->7 [style = solid, label="count"];
46->35 [style = bold, label=""];
49->45 [style = solid, label="count"];
17->15 [style = bold, label=""];
49->39 [style = solid, label="count"];
11->46 [style = solid, label="count"];
9->5 [style = bold, label=""];
33->31 [style = bold, label=""];
28->24 [style = bold, label=""];
54->53 [style = bold, label=""];
43->49 [style = bold, label=""];
6->30 [style = dashed, label="0"];
14->27 [style = bold, label=""];
19->4 [style = bold, label=""];
46->40 [style = bold, label=""];
36->45 [style = bold, label=""];
6->7 [style = bold, label=""];
53->9 [style = bold, label=""];
41->39 [style = bold, label=""];
27->21 [style = bold, label=""];
1->25 [style = bold, label=""];
45->39 [style = bold, label=""];
47->1 [style = bold, label=""];
35->46 [style = bold, label=""];
}
