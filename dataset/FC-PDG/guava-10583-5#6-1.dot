digraph {
18 [style = filled, label = "transitiveClosure_undirectedPathGraph['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "directedGraph.putEdge(N1,N2)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "MutableBasicGraph<Integer> expectedClosure = BasicGraphBuilder.directed().allowsSelfLoops(true).build()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "expectedClosure.putEdge(N2,N4)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "expectedClosure.putEdge(N3,N3)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "expectedClosure.putEdge(N1,N1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "directedGraph.putEdge(N4,N1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "MutableGraph<Integer> undirectedGraph = GraphBuilder.undirected().allowsSelfLoops(false).build()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "expectedClosure.putEdge(N1,N1)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "MutableBasicGraph<Integer> expectedClosure = BasicGraphBuilder.undirected().allowsSelfLoops(true).build()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "expectedClosure.putEdge(N3,N2)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "expectedClosure.putEdge(N1,N4)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "checkTransitiveClosure(directedGraph,expectedClosure)@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "directedGraph.putEdge(N2,N3)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "expectedClosure.putEdge(N2,N2)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "directedGraph.putEdge(N3,N4)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "expectedClosure.putEdge(N1,N3)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "undirectedGraph.putEdge(N3,N4)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "undirectedGraph.putEdge(N1,N2)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "expectedClosure.putEdge(N4,N4)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "expectedClosure.putEdge(N1,N2)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "undirectedGraph.putEdge(N2,N3)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "MutableGraph<Integer> expectedClosure = GraphBuilder.undirected().allowsSelfLoops(true).build()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "transitiveClosure_undirectedPathGraph['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "expectedClosure.putEdge(N2,N1)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "MutableBasicGraph<Integer> undirectedGraph = BasicGraphBuilder.undirected().allowsSelfLoops(false).build()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "expectedClosure.putEdge(N4,N2)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "expectedClosure.putEdge(N3,N4)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "expectedClosure.putEdge(N2,N3)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "transitiveClosure_directedCycleGraph['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "expectedClosure.putEdge(N3,N1)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "expectedClosure.putEdge(N4,N1)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "MutableBasicGraph<Integer> directedGraph = BasicGraphBuilder.directed().allowsSelfLoops(false).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "expectedClosure.putEdge(N4,N3)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->32 [style = bold, label=""];
23->31 [style = bold, label=""];
9->20 [style = dashed, label="0"];
8->19 [style = dashed, label="0"];
14->24 [style = dashed, label="0"];
0->16 [style = bold, label=""];
12->33 [style = dashed, label="0"];
31->22 [style = bold, label=""];
9->2 [style = bold, label=""];
11->1 [style = bold, label=""];
7->12 [style = bold, label=""];
20->26 [style = bold, label=""];
25->30 [style = bold, label=""];
1->15 [style = bold, label=""];
10->19 [style = bold, label=""];
18->17 [style = bold, label=""];
14->10 [style = bold, label=""];
20->33 [style = solid, label="directedGraph"];
30->33 [style = solid, label="expectedClosure"];
10->27 [style = dashed, label="0"];
26->24 [style = bold, label=""];
4->7 [style = bold, label=""];
19->12 [style = solid, label="expectedClosure"];
29->28 [style = bold, label=""];
3->9 [style = bold, label=""];
21->20 [style = bold, label=""];
8->12 [style = solid, label="expectedClosure"];
5->6 [style = bold, label=""];
10->8 [style = bold, label=""];
17->2 [style = bold, label=""];
19->13 [style = bold, label=""];
22->12 [style = bold, label=""];
6->11 [style = bold, label=""];
7->23 [style = bold, label=""];
2->14 [style = bold, label=""];
9->17 [style = dashed, label="0"];
15->4 [style = bold, label=""];
12->33 [style = bold, label=""];
16->5 [style = bold, label=""];
17->12 [style = solid, label="undirectedGraph"];
30->0 [style = bold, label=""];
2->26 [style = dashed, label="0"];
9->12 [style = solid, label="undirectedGraph"];
32->11 [style = bold, label=""];
24->27 [style = bold, label=""];
27->25 [style = bold, label=""];
15->29 [style = bold, label=""];
8->13 [style = bold, label=""];
28->4 [style = bold, label=""];
13->0 [style = bold, label=""];
}
