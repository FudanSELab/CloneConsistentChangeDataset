digraph {
13 [style = filled, label = "results.get(0).termsStatistics(new Term((((,new TermStatistics(((()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(2,mockSearchPhaseContext.numSuccess.get())@@@58@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertEquals(1,responseRef.get().get(0).queryResult().topDocs().topDocs.totalHits.value)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertNotNull(responseRef.get())@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "DfsQueryPhase phase = new DfsQueryPhase(results.asList(),null,searchPhaseController(),null,mockSearchPhaseContext,null)@@@35@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testDfsWith2Shards['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(\"dfs_query\",phase.getName())@@@45@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertEquals(\"dfs_query\",phase.getName())@@@43@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "mockSearchPhaseContext.assertNoFailure()@@@45@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "SearchPhaseController searchPhaseController = searchPhaseController()@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "mockSearchPhaseContext.searchTransport = searchTransportService@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "SearchTransportService searchTransportService = new SearchTransportService(null,null){@Override public void sendExecuteQuery(Transport.Connection connection,QuerySearchRequest request,SearchTask task,SearchActionListener<QuerySearchResult> listener){if (request.contextId().getId() == 1) {QuerySearchResult queryResult = new QuerySearchResult(new ShardSearchContextId(\"\",123),new SearchShardTarget(\"node1\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE),null)queryResult.topDocs(new TopDocsAndMaxScore(new TopDocs(new TotalHits(1,TotalHits.Relation.EQUAL_TO),new ScoreDoc((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@12305c1),2.0F),new DocValueFormat(((()queryResult.size(2)listener.onResponse(queryResult)}if (request.contextId().getId() == 2) {throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException())}{fail(\"no such request ID: \" + request.contextId())}}}@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "mockSearchPhaseContext.assertNoFailure()@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertNotNull(responseRef.get().get(0))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertNotNull(responseRef.get().get(1))@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "results.set(0,newSearchResult(0,new ShardSearchContextId(\"\",1),new SearchShardTarget(\"node1\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE)))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testFailPhaseOnException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(42,responseRef.get().get(0).queryResult().topDocs().topDocs.scoreDocs(0(.doc)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "mockSearchPhaseContext.searchTransport = searchTransportService@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testDfsWith2Shards['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "results.get(1).termsStatistics(new Term((((,new TermStatistics(((()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertNull(responseRef.get().get(1).fetchResult())@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "DfsQueryPhase phase = new DfsQueryPhase(results.asList(),null,searchPhaseController(),null,mockSearchPhaseContext,null)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertNull(responseRef.get().get(0).fetchResult())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty())@@@40@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "AtomicArray<DfsSearchResult> results = new AtomicArray<>(2)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "QueryPhaseResultConsumer consumer = searchPhaseController.newSearchPhaseResults(EsExecutors.newDirectExecutorService(),new NoopCircuitBreaker(CircuitBreaker.REQUEST),SearchProgressListener.NOOP,mockSearchPhaseContext.searchRequest,results.length(),null)@@@36@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "phase.run()@@@44@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "phase.run()@@@46@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertEquals(84,responseRef.get().get(1).queryResult().topDocs().topDocs.scoreDocs(0(.doc)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "expectThrows(,null)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty())@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "DfsQueryPhase phase = new DfsQueryPhase(results.asList(),null,consumer,null,mockSearchPhaseContext)@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertEquals(1,responseRef.get().get(1).queryResult().topDocs().topDocs.totalHits.value)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(\"dfs_query\",phase.getName())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "results.set(1,newSearchResult(1,new ShardSearchContextId(\"\",2),new SearchShardTarget(\"node2\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE)))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28->29 [style = bold, label=""];
4->24 [style = bold, label=""];
7->17 [style = bold, label=""];
17->1 [style = bold, label=""];
36->34 [style = bold, label=""];
5->33 [style = bold, label=""];
35->20 [style = bold, label=""];
27->28 [style = solid, label="consumer"];
2->3 [style = bold, label=""];
27->28 [style = bold, label=""];
20->0 [style = bold, label=""];
5->26 [style = bold, label=""];
14->10 [style = bold, label=""];
29->25 [style = bold, label=""];
21->30 [style = bold, label=""];
12->9 [style = bold, label=""];
26->4 [style = bold, label=""];
15->18 [style = bold, label=""];
5->24 [style = solid, label="searchTransportService"];
0->15 [style = bold, label=""];
33->36 [style = solid, label="mockSearchPhaseContext"];
22->8 [style = bold, label=""];
6->5 [style = bold, label=""];
3->23 [style = bold, label=""];
23->22 [style = bold, label=""];
19->14 [style = bold, label=""];
34->37 [style = bold, label=""];
24->11 [style = bold, label=""];
37->38 [style = bold, label=""];
4->28 [style = solid, label="mockSearchPhaseContext"];
5->4 [style = bold, label=""];
25->19 [style = bold, label=""];
9->21 [style = bold, label=""];
18->13 [style = bold, label=""];
32->36 [style = bold, label=""];
33->32 [style = bold, label=""];
10->2 [style = bold, label=""];
17->37 [style = dashed, label="0"];
13->6 [style = bold, label=""];
31->20 [style = bold, label=""];
1->19 [style = bold, label=""];
16->20 [style = bold, label=""];
24->27 [style = bold, label=""];
8->12 [style = bold, label=""];
11->7 [style = bold, label=""];
4->11 [style = solid, label="mockSearchPhaseContext"];
5->32 [style = solid, label="searchTransportService"];
}
