digraph {
15 [style = filled, label = "ServerState serverState = new Builder().setWorkingDirectory(getWorkingDirectoryPath()).build().status()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ServerState serverState = new Builder().setPid(getServerPid()).build().status()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(serverState.getMemberName()).isEqualTo(getUniqueName())@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "statusWithPidReturnsOnlineWithDetails['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "givenRunningServer()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(serverState.getStatus()).isEqualTo(ONLINE)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "statusWithWorkingDirectoryReturnsOnlineWithDetails['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(serverState.getPid().intValue()).isEqualTo(readPidFile())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(serverState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(serverState.getPid().intValue()).isEqualTo(getServerPid())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(serverState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(serverState.getUptime()).isGreaterThan(0)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(serverState.getClasspath()).isEqualTo(getClassPath())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "statusWithPidReturnsOnlineWithDetails['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->4 [style = bold, label=""];
7->11 [style = bold, label=""];
12->5 [style = bold, label=""];
17->1 [style = bold, label=""];
1->15 [style = bold, label=""];
2->3 [style = bold, label=""];
12->16 [style = bold, label=""];
9->10 [style = bold, label=""];
16->2 [style = bold, label=""];
11->9 [style = bold, label=""];
14->1 [style = bold, label=""];
5->16 [style = dashed, label="0"];
5->2 [style = bold, label=""];
10->13 [style = bold, label=""];
3->7 [style = bold, label=""];
0->1 [style = bold, label=""];
4->15 [style = dashed, label="0"];
6->8 [style = bold, label=""];
4->12 [style = bold, label=""];
15->12 [style = bold, label=""];
13->6 [style = bold, label=""];
}
