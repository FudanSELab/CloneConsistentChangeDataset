digraph {
4 [style = filled, label = "RelNode result = planner.chooseDelegate().findBestExp()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "planner.addRule(PhysLeafRule.INSTANCE)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "planner.addRule(new GoodRemoveSingleRule())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertTrue(result instanceof PhysSingleRel)@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "NoneLeafRel leafRel = new NoneLeafRel(cluster,\"a\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "planner.addRule(new ReformedSingleRule())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testTransformSingleReformed['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "planner.setRoot(convertedRel)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testRemoveSingleGood['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "planner.addRelTraitDef(ConventionTraitDef.INSTANCE)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "RelOptCluster cluster = newCluster(planner)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(\"c\",resultLeaf.label)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "planner.addRule(new PhysLeafRule())@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "RelNode convertedRel = planner.changeTraits(singleRel,cluster.traitSetOf(PHYS_CALLING_CONVENTION))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "planner.addRule(GoodRemoveSingleRule.INSTANCE)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "planner.addRule(new GoodSingleRule())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertTrue(result instanceof PhysLeafRel)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "NoneSingleRel singleRel = new NoneSingleRel(cluster,leafRel)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testRemoveSingleGood['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "VolcanoPlanner planner = new VolcanoPlanner()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "planner.addRule(GoodSingleRule.INSTANCE)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "PhysLeafRel resultLeaf = (PhysLeafRel)result@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
4->9 [style = bold, label=""];
10->15 [style = bold, label=""];
21->19 [style = bold, label=""];
12->16 [style = dashed, label="0"];
7->17 [style = dashed, label="0"];
9->13 [style = solid, label="result"];
8->15 [style = dashed, label="0"];
14->5 [style = bold, label=""];
1->19 [style = solid, label="planner"];
1->14 [style = solid, label="planner"];
13->9 [style = dashed, label="0"];
16->17 [style = bold, label=""];
20->1 [style = bold, label=""];
14->5 [style = solid, label="cluster"];
19->5 [style = solid, label="cluster"];
15->16 [style = bold, label=""];
2->4 [style = bold, label=""];
11->2 [style = bold, label=""];
12->7 [style = bold, label=""];
5->11 [style = solid, label="leafRel"];
12->21 [style = dashed, label="0"];
7->14 [style = bold, label=""];
4->9 [style = solid, label="result"];
6->1 [style = bold, label=""];
19->14 [style = solid, label="cluster"];
19->14 [style = bold, label=""];
11->2 [style = solid, label="singleRel"];
10->8 [style = bold, label=""];
18->1 [style = bold, label=""];
14->5 [style = solid, label="leafRel"];
17->14 [style = bold, label=""];
5->11 [style = solid, label="singleRel"];
2->4 [style = solid, label="convertedRel"];
11->2 [style = solid, label="convertedRel"];
8->21 [style = bold, label=""];
9->0 [style = solid, label="result"];
5->11 [style = bold, label=""];
14->11 [style = solid, label="cluster"];
1->10 [style = bold, label=""];
8->12 [style = bold, label=""];
13->0 [style = bold, label=""];
9->13 [style = bold, label=""];
}
