digraph {
6 [style = filled, label = "String methodName = TestHelper.getTestMethodName()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String path = String.format(\"%s/%d\",fallbackRoot,i)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "ZkBaseDataAccessor<ZNRecord> baseAccessor = new ZkBaseDataAccessor<ZNRecord>(_gZkClient)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "deleteCluster(clusterName)@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "Assert.assertTrue(exist)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Assert.assertNotNull(stat)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(record.getId(),\"0\")@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "baseAccessor.create(path,new ZNRecord(Integer.toString(i)),AccessOption.PERSISTENT)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "i < 1@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "ZNRecord record = store.get(path,null,0)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertEquals(record.getId(),\"0\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertTrue(succeed)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testSingleGetOnFallbackPath['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "String className = TestHelper.getTestClassName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "i++@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(record.getId(),\"0\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "boolean succeed = store.update(path,new MyDataUpdater(\"new0\"),AccessOption.PERSISTENT)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "String clusterName = className + \"_\" + methodName@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String path = String.format(\"/%d\",0)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String fallbackRoot = String.format(\"/%s/%s\",clusterName,\"HELIX_PROPERTYSTORE\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "boolean exist = store.exists(path,0)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "ZkBaseDataAccessor<ZNRecord> baseAccessor = new ZkBaseDataAccessor<>(_gZkClient)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Assert.assertNotNull(record)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertFalse(baseAccessor.exists(String.format(\"%s%s\",root,path),0),\"Should not exist under new location after get\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testSingleUpdateUsingFallbackPath['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(record.getSimpleField(\"key\"),\"value\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertNotNull(record)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "ZNRecord record = baseAccessor.get(String.format(\"%s%s\",fallbackRoot,path),null,0)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Stat stat = store.getStat(path,0)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "AutoFallbackPropertyStore<ZNRecord> store = new AutoFallbackPropertyStore<ZNRecord>(baseAccessor,root,fallbackRoot)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "String root = String.format(\"/%s/%s\",clusterName,PropertyType.PROPERTYSTORE.name())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertTrue(baseAccessor.exists(String.format(\"%s%s\",fallbackRoot,path),0),\"Should exist under fallback location\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertNotNull(record)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testSingleUpdateUsingFallbackPath['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "AutoFallbackPropertyStore<ZNRecord> store = new AutoFallbackPropertyStore<>(baseAccessor,root,fallbackRoot)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "int i = 0@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertFalse(baseAccessor.exists(String.format(\"%s%s\",root,path),0),\"Should not exist under new location\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertNotNull(record.getSimpleField(\"key\"))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22->20 [style = solid, label="clusterName"];
9->11 [style = bold, label=""];
20->0 [style = solid, label="root"];
6->22 [style = bold, label=""];
22->38 [style = solid, label="clusterName"];
17->9 [style = bold, label=""];
27->28 [style = bold, label=""];
10->35 [style = bold, label=""];
23->10 [style = solid, label="path"];
31->21 [style = bold, label=""];
17->7 [style = solid, label="i"];
6->22 [style = solid, label="methodName"];
28->29 [style = dashed, label="0"];
13->1 [style = bold, label=""];
20->27 [style = bold, label=""];
3->18 [style = bold, label=""];
37->5 [style = bold, label=""];
23->12 [style = solid, label="path"];
19->5 [style = bold, label=""];
28->4 [style = bold, label=""];
17->15 [style = solid, label="i"];
22->21 [style = solid, label="clusterName"];
10->8 [style = bold, label=""];
4->15 [style = solid, label="i"];
23->39 [style = solid, label="path"];
9->15 [style = dotted, label="true"];
27->26 [style = solid, label="fallbackRoot"];
35->38 [style = bold, label=""];
26->14 [style = solid, label="record"];
23->0 [style = solid, label="path"];
18->31 [style = bold, label=""];
22->25 [style = bold, label=""];
22->25 [style = solid, label="clusterName"];
24->33 [style = dashed, label="0"];
26->14 [style = bold, label=""];
15->7 [style = solid, label="path"];
4->17 [style = solid, label="i"];
20->10 [style = solid, label="root"];
23->16 [style = solid, label="path"];
5->6 [style = bold, label=""];
34->36 [style = bold, label=""];
10->8 [style = solid, label="record"];
20->30 [style = solid, label="root"];
27->29 [style = bold, label=""];
4->7 [style = solid, label="i"];
4->9 [style = bold, label=""];
4->9 [style = solid, label="i"];
36->40 [style = bold, label=""];
7->17 [style = bold, label=""];
1->35 [style = dashed, label="0"];
16->24 [style = bold, label=""];
0->12 [style = bold, label=""];
2->3 [style = bold, label=""];
20->11 [style = solid, label="root"];
23->0 [style = bold, label=""];
29->30 [style = solid, label="baseAccessor"];
39->33 [style = bold, label=""];
24->26 [style = bold, label=""];
25->20 [style = bold, label=""];
8->2 [style = bold, label=""];
39->33 [style = solid, label="exist"];
22->27 [style = solid, label="clusterName"];
16->24 [style = solid, label="succeed"];
28->11 [style = solid, label="baseAccessor"];
14->13 [style = bold, label=""];
18->21 [style = bold, label=""];
12->39 [style = bold, label=""];
9->7 [style = dotted, label="true"];
40->1 [style = solid, label="record"];
32->5 [style = bold, label=""];
29->4 [style = bold, label=""];
15->7 [style = bold, label=""];
27->30 [style = solid, label="fallbackRoot"];
27->12 [style = solid, label="fallbackRoot"];
9->17 [style = dotted, label="true"];
30->23 [style = bold, label=""];
20->35 [style = solid, label="root"];
23->40 [style = solid, label="path"];
9->30 [style = bold, label=""];
12->16 [style = bold, label=""];
23->35 [style = solid, label="path"];
27->11 [style = solid, label="fallbackRoot"];
17->9 [style = solid, label="i"];
34->36 [style = solid, label="stat"];
40->1 [style = bold, label=""];
5->22 [style = solid, label="className"];
9->15 [style = bold, label=""];
23->34 [style = solid, label="path"];
27->15 [style = solid, label="fallbackRoot"];
11->30 [style = dashed, label="0"];
1->10 [style = bold, label=""];
11->23 [style = bold, label=""];
33->34 [style = bold, label=""];
23->26 [style = solid, label="path"];
22->31 [style = solid, label="clusterName"];
}
