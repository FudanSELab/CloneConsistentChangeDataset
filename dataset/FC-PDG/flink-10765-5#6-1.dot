digraph {
20 [style = filled, label = "List<Row> results = CollectionUtil.iteratorToList(table.execute().collect())@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "TableEnvironment tEnv = createBatchTableEnv()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "TestBaseUtils.compareResultAsText(results,expected)@@@8@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "hbaseTable.addColumn(FAMILY2,F2COL2,)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "hbaseTable.addColumn(FAMILY1,F1COL1,)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testTableSourceProjection['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "tEnv.executeSql(\"CREATE TABLE hTable (\" + \" family1 ROW<col1 INT>,\" + \" family2 ROW<col1 STRING, col2 BIGINT>,\" + \" family3 ROW<col1 DOUBLE, col2 BOOLEAN, col3 STRING>,\" + \" rowkey INT,\" + \" PRIMARY KEY (rowkey) NOT ENFORCED\" + \") WITH (\" + \" 'connector' = 'hbase-1.4',\" + \" 'table-name' = '\" + TEST_TABLE_1 + \"',\" + \" 'zookeeper.quorum' = '\" + getZookeeperQuorum() + \"'\" + \")\")@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "hbaseTable.addColumn(FAMILY3,F3COL3,)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "TableEnvironment tEnv = TableEnvironment.create(batchSettings)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "hbaseTable.addColumn(FAMILY3,F3COL2,)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "hbaseTable.addColumn(FAMILY3,F3COL1,)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testTableSourceProjection['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String expected = \"+I(10, 1.01, false, Welt-1(\" + \"+I(20, 2.02, true, Welt-2(\" + \"+I(30, 3.03, false, Welt-3(\" + \"+I(40, 4.04, true, Welt-4(\" + \"+I(50, 5.05, false, Welt-5(\" + \"+I(60, 6.06, true, Welt-6(\" + \"+I(70, 7.07, false, Welt-7(\" + \"+I(80, 8.08, true, Welt-8(\"@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Table table = tEnv.sqlQuery(\"SELECT \" + \" h.family1.col1, \" + \" h.family3.col1, \" + \" h.family3.col2, \" + \" h.family3.col3 \" + \"FROM hTable AS h\")@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "isLegacyConnector@@@4@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "tEnv.executeSql(\"CREATE TABLE hTable (\" + \" family1 ROW<col1 INT>,\" + \" family2 ROW<col1 STRING, col2 BIGINT>,\" + \" family3 ROW<col1 DOUBLE, col2 BOOLEAN, col3 STRING>,\" + \" rowkey INT,\" + \" PRIMARY KEY (rowkey) NOT ENFORCED\" + \") WITH (\" + \" 'connector' = 'hbase-1.4',\" + \" 'table-name' = '\" + TEST_TABLE_1 + \"',\" + \" 'zookeeper.quorum' = '\" + getZookeeperQuorum() + \"'\" + \")\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "hbaseTable.addColumn(FAMILY2,F2COL1,)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "TestBaseUtils.compareResultAsText(results,expected)@@@21@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "hbaseTable.setRowKey(ROW_KEY,)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "HBaseTableSource hbaseTable = new HBaseTableSource(getConf(),TEST_TABLE_1)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "tEnv.executeSql(\"CREATE TABLE hTable (\" + \" family1 ROW<col1 INT>,\" + \" family2 ROW<col1 STRING, col2 BIGINT>,\" + \" family3 ROW<col1 DOUBLE, col2 BOOLEAN, col3 STRING>,\" + \" rowkey INT,\" + \" PRIMARY KEY (rowkey) NOT ENFORCED\" + \") WITH (\" + \" 'connector' = 'hbase-2.2',\" + \" 'table-name' = '\" + TEST_TABLE_1 + \"',\" + \" 'zookeeper.quorum' = '\" + getZookeeperQuorum() + \"'\" + \")\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "List<Row> results = CollectionUtil.iteratorToList(table.execute().collect())@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "((TableEnvironmentInternal)tEnv).registerTableSourceInternal(\"hTable\",hbaseTable)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Table table = tEnv.sqlQuery(\"SELECT \" + \" h.family1.col1, \" + \" h.family3.col1, \" + \" h.family3.col2, \" + \" h.family3.col3 \" + \"FROM hTable AS h\")@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "String expected = \"+I(10, 1.01, false, Welt-1(\" + \"+I(20, 2.02, true, Welt-2(\" + \"+I(30, 3.03, false, Welt-3(\" + \"+I(40, 4.04, true, Welt-4(\" + \"+I(50, 5.05, false, Welt-5(\" + \"+I(60, 6.06, true, Welt-6(\" + \"+I(70, 7.07, false, Welt-7(\" + \"+I(80, 8.08, true, Welt-8(\"@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "testTableSourceProjection['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0->3 [style = bold, label=""];
11->16 [style = bold, label=""];
6->3 [style = bold, label=""];
13->25 [style = bold, label=""];
13->16 [style = dotted, label="true"];
13->6 [style = dotted, label="true"];
23->20 [style = bold, label=""];
15->13 [style = bold, label=""];
18->23 [style = bold, label=""];
14->6 [style = solid, label="hbaseTable"];
4->6 [style = bold, label=""];
25->3 [style = bold, label=""];
13->25 [style = dotted, label="false"];
22->21 [style = bold, label=""];
12->10 [style = solid, label="expected"];
13->5 [style = dotted, label="true"];
19->17 [style = bold, label=""];
13->7 [style = dotted, label="true"];
7->8 [style = bold, label=""];
22->21 [style = solid, label="expected"];
1->11 [style = bold, label=""];
20->22 [style = bold, label=""];
14->7 [style = bold, label=""];
9->10 [style = solid, label="results"];
3->9 [style = bold, label=""];
8->1 [style = bold, label=""];
13->0 [style = dotted, label="false"];
13->1 [style = dotted, label="true"];
12->10 [style = bold, label=""];
0->25 [style = dashed, label="0"];
13->8 [style = dotted, label="true"];
5->4 [style = bold, label=""];
2->15 [style = bold, label=""];
20->21 [style = solid, label="results"];
16->5 [style = bold, label=""];
15->17 [style = dashed, label="0"];
13->11 [style = dotted, label="true"];
9->12 [style = bold, label=""];
13->14 [style = dotted, label="true"];
13->14 [style = bold, label=""];
17->18 [style = bold, label=""];
13->4 [style = dotted, label="true"];
13->0 [style = bold, label=""];
24->15 [style = bold, label=""];
}
