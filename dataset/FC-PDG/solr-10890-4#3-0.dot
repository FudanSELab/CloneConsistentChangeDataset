digraph {
25 [style = filled, label = "TupleStream solrStream = new SolrStream(url,paramsLoc)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "updateRequest.add(id,\"id_\" + (++i),\"test_dt\",getDateString(\"2013\",\"5\",\"1\"),\"price_f\",\"100.00\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testCopyOfRange['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "updateRequest.add(id,\"id_\" + (++i),\"test_dt\",getDateString(\"2016\",\"5\",\"1\"),\"price_f\",\"400.00\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(copy1.size() == 2)@@@30@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "@SuppressWarnings({\"unchecked\"}) List<Number> copy1 = (List<Number>)tuples.get(0).get(\"copy\")@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "List<Tuple> tuples = getTuples(solrStream)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(copy1.get(1).doubleValue() == 300D)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertTrue(copy2.get(0).doubleValue() == 100D)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "paramsLoc.set(\"qt\",\"/stream\")@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(tuples.size() == 1)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "updateRequest.add(id,\"id_\" + (++i),\"test_dt\",getDateString(\"2014\",\"5\",\"1\"),\"price_f\",\"500.0\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertTrue(copy1.get(0).doubleValue() == 100D)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "i < 100@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertTrue(copy2.get(1).doubleValue() == 500D)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "i < 50@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String cexpr = \"let(a=\" + expr + \", c=col(a, max(price_f)), tuple(copy=copyOfRange(c, 1, 3), copy2=copyOfRange(c, 2, 4), l=length(c)))\"@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(copy2.get(1).doubleValue() == 400D)@@@36@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "UpdateRequest updateRequest = new UpdateRequest()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "i < 250@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertTrue(copy1.get(2).doubleValue() == 300D)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "testCopyOf['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertTrue(copy3.get(1).doubleValue() == 500D)@@@44@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "int i = 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "@SuppressWarnings({\"unchecked\"}) List<Number> copy2 = (List<Number>)tuples.get(0).get(\"copy2\")@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "List<Number> copy1 = (List<Number>)tuples.get(0).get(\"copy\")@@@29@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "updateRequest.commit(cluster.getSolrClient(),COLLECTIONORALIAS)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertTrue(copy1.get(1).doubleValue() == 500D)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(copy1.size() == 2)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertTrue(copy2.get(2).doubleValue() == 300D)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertTrue(copy2.size() == 2)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertTrue(copy1.size() == 4)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertTrue(copy3.size() == 2)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assertTrue(copy3.get(0).doubleValue() == 100D)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "testCopyOfRange['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString() + \"/\" + COLLECTIONORALIAS@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "long l = tuples.get(0).getLong(\"l\")@@@41@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
54 [style = filled, label = "String cexpr = \"let(a=\" + expr + \", c=col(a, max(price_f)), tuple(copy1=copyOf(c, 10), copy2=copyOf(c), copy3=copyOf(c, 2) ))\"@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "StreamContext context = new StreamContext()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertTrue(copy2.get(3).doubleValue() == 400D)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertTrue(copy2.get(0).doubleValue() == 300D)@@@39@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "updateRequest.add(id,\"id_\" + (++i),\"test_dt\",getDateString(\"2015\",\"5\",\"1\"),\"price_f\",\"300.0\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertTrue(copy1.get(3).doubleValue() == 400D)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertTrue(l == 4)@@@42@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "paramsLoc.set(\"expr\",cexpr)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "solrStream.setStreamContext(context)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "i < 150@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertTrue(copy2.size() == 4)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertTrue(copy2.get(1).doubleValue() == 400D)@@@40@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertTrue(copy1.get(0).doubleValue() == 500D)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ModifiableSolrParams paramsLoc = new ModifiableSolrParams()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String expr = \"timeseries(\" + COLLECTIONORALIAS + \", q=\"*:*\", start=\"2013-01-01T01:00:00.000Z\", \" + \"end=\"2016-12-01T01:00:00.000Z\", \" + \"gap=\"+1YEAR\", \" + \"field=\"test_dt\", \" + \"count(*), sum(price_f), max(price_f), min(price_f))\"@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertTrue(copy1.get(0).doubleValue() == 500D)@@@31@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "long l = tuples.get(0).getLong(\"l\")@@@37@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "List<Number> copy1 = (List<Number>)tuples.get(0).get(\"copy1\")@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "List<Number> copy3 = (List<Number>)tuples.get(0).get(\"copy3\")@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "List<Number> copy2 = (List<Number>)tuples.get(0).get(\"copy2\")@@@35@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28->21 [style = bold, label=""];
11->49 [style = dashed, label="0"];
23->32 [style = bold, label=""];
24->53 [style = dashed, label="0"];
52->56 [style = bold, label=""];
43->48 [style = bold, label=""];
4->26 [style = bold, label=""];
5->32 [style = solid, label="i"];
37->35 [style = bold, label=""];
19->27 [style = solid, label="l"];
45->41 [style = bold, label=""];
47->21 [style = bold, label=""];
0->8 [style = bold, label=""];
50->51 [style = bold, label=""];
22->31 [style = bold, label=""];
12->23 [style = bold, label=""];
7->11 [style = bold, label=""];
51->43 [style = bold, label=""];
3->1 [style = bold, label=""];
19->27 [style = bold, label=""];
26->25 [style = bold, label=""];
17->25 [style = solid, label="paramsLoc"];
36->33 [style = solid, label="l"];
17->13 [style = bold, label=""];
22->45 [style = dashed, label="0"];
6->12 [style = bold, label=""];
5->12 [style = bold, label=""];
54->13 [style = solid, label="cexpr"];
23->29 [style = bold, label=""];
20->14 [style = dotted, label="true"];
44->46 [style = bold, label=""];
20->16 [style = bold, label=""];
10->17 [style = bold, label=""];
31->41 [style = dashed, label="0"];
49->53 [style = bold, label=""];
46->31 [style = bold, label=""];
5->12 [style = solid, label="i"];
18->10 [style = solid, label="expr"];
56->55 [style = bold, label=""];
2->3 [style = bold, label=""];
32->20 [style = bold, label=""];
54->17 [style = bold, label=""];
42->40 [style = bold, label=""];
8->22 [style = bold, label=""];
7->39 [style = bold, label=""];
35->36 [style = bold, label=""];
25->1 [style = solid, label="solrStream"];
15->32 [style = bold, label=""];
12->6 [style = dotted, label="true"];
23->29 [style = dotted, label="true"];
27->43 [style = dashed, label="0"];
9->19 [style = bold, label=""];
7->49 [style = bold, label=""];
13->4 [style = bold, label=""];
31->45 [style = bold, label=""];
32->15 [style = dotted, label="true"];
27->37 [style = bold, label=""];
11->24 [style = bold, label=""];
38->21 [style = bold, label=""];
48->52 [style = bold, label=""];
30->0 [style = bold, label=""];
2->3 [style = solid, label="context"];
18->54 [style = bold, label=""];
36->33 [style = bold, label=""];
1->7 [style = bold, label=""];
30->42 [style = dashed, label="0"];
0->40 [style = dashed, label="0"];
12->6 [style = bold, label=""];
5->23 [style = solid, label="i"];
5->20 [style = solid, label="i"];
25->2 [style = bold, label=""];
31->9 [style = bold, label=""];
16->18 [style = bold, label=""];
18->54 [style = solid, label="expr"];
41->50 [style = bold, label=""];
53->42 [style = bold, label=""];
26->25 [style = solid, label="url"];
24->30 [style = bold, label=""];
10->13 [style = solid, label="cexpr"];
29->23 [style = bold, label=""];
40->44 [style = bold, label=""];
22->34 [style = bold, label=""];
18->10 [style = bold, label=""];
21->5 [style = bold, label=""];
9->50 [style = dashed, label="0"];
10->54 [style = dashed, label="0"];
39->0 [style = bold, label=""];
20->14 [style = bold, label=""];
32->15 [style = bold, label=""];
14->20 [style = bold, label=""];
34->27 [style = bold, label=""];
}
