digraph {
14 [style = filled, label = "final SparkConf conf = new SparkConf().set(\"spark.memory.offHeap.enabled\",\"false\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "offHeap['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(360,packedPointer.getPartitionId())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final long recordPointer = packedPointer.getRecordPointer()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "packedPointer.set(PackedRecordPointer.packPointer(addressInPage1,360))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final SparkConf conf = new SparkConf().set(\"spark.unsafe.offHeap\",\"false\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertEquals(addressInPage1,recordPointer)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "PackedRecordPointer packedPointer = new PackedRecordPointer()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "heap['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "memoryManager.cleanUpAllAllocatedMemory()@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "heap['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "final SparkConf conf = new SparkConf().set(\"spark.unsafe.offHeap\",\"true\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final MemoryBlock page1 = memoryManager.allocatePage(128,null)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final long addressInPage1 = memoryManager.encodePageNumberAndOffset(page1,page1.getBaseOffset() + 42)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final TaskMemoryManager memoryManager = new TaskMemoryManager(new TestMemoryManager(conf),0)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(1,TaskMemoryManager.decodePageNumber(recordPointer))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(page1.getBaseOffset() + 42,memoryManager.getOffsetInPage(recordPointer))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final MemoryBlock page0 = memoryManager.allocatePage(128,null)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->12 [style = solid, label="addressInPage1"];
4->3 [style = bold, label=""];
5->9 [style = solid, label="page1"];
17->1 [style = bold, label=""];
5->9 [style = bold, label=""];
15->14 [style = bold, label=""];
16->17 [style = bold, label=""];
7->8 [style = bold, label=""];
0->17 [style = dashed, label="0"];
14->1 [style = solid, label="conf"];
14->1 [style = bold, label=""];
9->6 [style = bold, label=""];
1->11 [style = bold, label=""];
0->14 [style = dashed, label="0"];
12->13 [style = bold, label=""];
6->4 [style = bold, label=""];
11->5 [style = bold, label=""];
2->8 [style = solid, label="recordPointer"];
3->2 [style = bold, label=""];
0->1 [style = bold, label=""];
10->0 [style = bold, label=""];
9->4 [style = solid, label="addressInPage1"];
17->1 [style = solid, label="conf"];
2->12 [style = solid, label="recordPointer"];
2->7 [style = bold, label=""];
0->1 [style = solid, label="conf"];
8->12 [style = bold, label=""];
2->7 [style = solid, label="recordPointer"];
}
