digraph {
0 [style = filled, label = "testRunWithOffsetOutOfRangeExceptionAndNextOffsetGreaterThanLeastAvailable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "!task.getRunner().getStatus().equals(Status.READING)@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "resetOffsetAutomatically = true@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Thread.sleep(25)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(task.getRunner().getStatus(),Status.READING)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "!task.getRunner().getStatus().equals(Status.READING)@@@7@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "testRunWithOffsetOutOfRangeExceptionAndNextOffsetGreaterThanLeastAvailable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "final KafkaIndexTask task = createTask(null,new KafkaIndexTaskIOConfig(0,\"sequence0\",new SeekableStreamPartitions<>(topic,ImmutableMap.of(0,2L)),new SeekableStreamPartitions<>(topic,ImmutableMap.of(0,5L)),kafkaServer.consumerProperties(),KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,true,null,null,false))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertTrue(task.getRunner().getCurrentOffsets().get(0) == 200L)@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final KafkaIndexTask task = createTask(null,new KafkaIndexTaskIOConfig(0,\"sequence0\",new SeekableStreamPartitions<>(topic,ImmutableMap.of(0,200L)),new SeekableStreamPartitions<>(topic,ImmutableMap.of(0,500L)),kafkaServer.consumerProperties(),KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,true,null,null,false))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "final KafkaIndexTask task = createTask(null,new KafkaIndexTaskIOConfig(0,\"sequence0\",new SeekableStreamPartitions<>(topic,ImmutableMap.of(0,200L)),new SeekableStreamPartitions<>(topic,ImmutableMap.of(0,500L)),kafkaServer.consumerProperties(),KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,true,null,null))@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "task.getRunner().pause()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "!task.getRunner().getStatus().equals(Status.PAUSED)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "i++@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i < 5@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "runTask(task)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "i++@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertTrue(task.getRunner().getCurrentOffsets().get(0) == 200L)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "kafkaProducer.send(record).get()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "i < 5@@@15@@@['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testRunWithOffsetOutOfRangeExceptionAndPause['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Thread.sleep(2000)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "insertData()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "Thread.sleep(20)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "Assert.assertEquals(task.getRunner().getStatus(),Status.READING)@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "runTask(task)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
2->9 [style = solid, label="i"];
16->13 [style = bold, label=""];
1->10 [style = solid, label="task"];
15->14 [style = bold, label=""];
25->22 [style = bold, label=""];
22->19 [style = bold, label=""];
17->6 [style = bold, label=""];
11->1 [style = bold, label=""];
0->6 [style = bold, label=""];
10->8 [style = solid, label="i"];
6->18 [style = bold, label=""];
19->20 [style = dotted, label="true"];
19->20 [style = bold, label=""];
8->20 [style = dashed, label="0"];
4->8 [style = dotted, label="true"];
14->10 [style = bold, label=""];
16->13 [style = solid, label="task"];
4->2 [style = bold, label=""];
2->9 [style = bold, label=""];
10->4 [style = solid, label="i"];
9->7 [style = bold, label=""];
2->3 [style = solid, label="i"];
4->2 [style = dotted, label="true"];
3->9 [style = bold, label=""];
14->15 [style = dotted, label="true"];
12->2 [style = bold, label=""];
7->5 [style = bold, label=""];
3->9 [style = solid, label="i"];
9->5 [style = dotted, label="true"];
23->10 [style = dotted, label="true"];
10->23 [style = bold, label=""];
24->25 [style = bold, label=""];
6->11 [style = bold, label=""];
10->4 [style = bold, label=""];
23->10 [style = bold, label=""];
4->12 [style = bold, label=""];
4->8 [style = bold, label=""];
14->15 [style = bold, label=""];
19->21 [style = bold, label=""];
8->4 [style = bold, label=""];
9->7 [style = dotted, label="true"];
20->19 [style = bold, label=""];
4->12 [style = dotted, label="true"];
1->10 [style = bold, label=""];
13->14 [style = bold, label=""];
8->4 [style = solid, label="i"];
9->3 [style = dotted, label="true"];
25->22 [style = solid, label="task"];
2->8 [style = bold, label=""];
21->23 [style = bold, label=""];
18->16 [style = bold, label=""];
}
