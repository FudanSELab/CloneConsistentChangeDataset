digraph {
21 [style = filled, label = "assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName,1)).isSystem(),is(false))@@@35@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName,1)).getSettings().get(\"index.hidden\"),equalTo(\"true\"))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(newState.metadata().dataStreams().get(dataStreamName).isReplicated(),is(false))@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertThat(newState.metadata().dataStreams().size(),equalTo(1))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(newState.metadata().dataStreamAliases().values().stream().map(null).toArray(),arrayContainingInAnyOrder(new ArrayList<>(aliases.keySet()).toArray()))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertThat(newState.metadata().dataStreams().get(dataStreamName).isSystem(),is(false))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(actualAlias.getName(),equalTo(expectedAlias.alias()))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "ClusterState newState = MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService,cs,req)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "k < aliasCount@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertThat(newState.metadata().dataStreams().get(dataStreamName).isHidden(),is(false))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "k++@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final AliasMetadata am = randomAlias(null)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertThat(newState.metadata().dataStreams().get(dataStreamName).isHidden(),is(false))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final String aliasName = randomAlphaOfLength(6)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "ClusterState cs = ClusterState.builder(new ClusterName(\"_name\")).metadata(Metadata.builder().put(\"template\",template).build()).build()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "var builder = AliasMetadata.newAliasMetadataBuilder(aliasName)@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "randomBoolean()@@@12@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "testCreateDataStreamWithAliasFromTemplate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertThat(newState.metadata().dataStreamAliases().size(),is(aliasCount))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(newState.metadata().dataStreams().get(dataStreamName).isReplicated(),is(false))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName,1)).isSystem(),is(false))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName,1)).getSettings().get(\"index.hidden\"),equalTo(\"true\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final int aliasCount = randomIntBetween(0,3)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "var actualAlias = newState.metadata().dataStreamAliases().get(aliasName)@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "final String dataStreamName = \"my-data-stream\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "ComposableIndexTemplate template = new ComposableIndexTemplate.Builder().indexPatterns(List.of(dataStreamName + \"*\")).dataStreamTemplate(new DataStreamTemplate()).template(new Template(null,null,aliases)).build()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "Map<String,AliasMetadata> aliases = new HashMap<>(aliasCount)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testCreateDataStreamWithAliasFromTemplate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(newState.metadata().dataStreams().size(),equalTo(1))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "var expectedAlias = aliases.get(aliasName)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(newState.metadata().dataStreams().get(dataStreamName).isSystem(),is(false))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "testCreateDataStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "builder.writeIndex(randomBoolean())@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "ClusterState cs = ClusterState.builder(new ClusterName(\"_name\")).metadata(Metadata.builder().put(\"template\",template).build()).build()@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName,1)).getSettings().get(\"index.hidden\"),equalTo(\"true\"))@@@39@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName,1)).isSystem(),is(false))@@@40@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertThat(newState.metadata().dataStreams().get(dataStreamName).isReplicated(),is(false))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "CreateDataStreamClusterStateUpdateRequest req = new CreateDataStreamClusterStateUpdateRequest(dataStreamName,TimeValue.ZERO,TimeValue.ZERO)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "ComposableIndexTemplate template = new ComposableIndexTemplate.Builder().indexPatterns(List.of(dataStreamName + \"*\")).dataStreamTemplate(new ComposableIndexTemplate.DataStreamTemplate()).build()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName,1)).getAliases().size(),is(0))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int k = 0@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertThat(newState.metadata().dataStreams().get(dataStreamName).getName(),equalTo(dataStreamName))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertThat(newState.metadata().dataStreams().get(dataStreamName).getName(),equalTo(dataStreamName))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "CreateDataStreamClusterStateUpdateRequest req = new CreateDataStreamClusterStateUpdateRequest(dataStreamName,TimeValue.ZERO,TimeValue.ZERO)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(actualAlias,is(notNullValue()))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertThat(actualAlias.getFilter(),equalTo(expectedAlias.filter()))@@@33@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertThat(actualAlias.getFilter(),equalTo(expectedAlias.filter()))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "builder.filter(Map.of(\"term\",Map.of(\"user\",Map.of(\"value\",randomAlphaOfLength(5)))))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "aliases.put(am.alias(),am)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "assertThat(actualAlias.getWriteDataStream(),equalTo(expectedAlias.writeIndex()? dataStreamName: null))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName,1)),notNullValue())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "ClusterState newState = MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService,cs,req)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName,1)),notNullValue())@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "aliases.put(aliasName,builder.build())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23->19 [style = solid, label="aliasCount"];
30->13 [style = bold, label=""];
25->34 [style = bold, label=""];
6->14 [style = solid, label="dataStreamName"];
6->33 [style = solid, label="dataStreamName"];
17->9 [style = bold, label=""];
6->41 [style = solid, label="dataStreamName"];
39->14 [style = bold, label=""];
49->48 [style = bold, label=""];
10->17 [style = bold, label=""];
23->15 [style = solid, label="aliasCount"];
12->35 [style = dotted, label="true"];
6->16 [style = solid, label="dataStreamName"];
21->2 [style = bold, label=""];
19->24 [style = bold, label=""];
16->33 [style = solid, label="req"];
42->44 [style = bold, label=""];
5->0 [style = bold, label=""];
29->10 [style = solid, label="aliasName"];
14->31 [style = solid, label="req"];
1->12 [style = bold, label=""];
34->32 [style = bold, label=""];
35->38 [style = bold, label=""];
19->15 [style = bold, label=""];
3->1 [style = solid, label="k"];
12->17 [style = dotted, label="true"];
50->43 [style = bold, label=""];
3->12 [style = solid, label="k"];
8->18 [style = bold, label=""];
18->11 [style = bold, label=""];
43->51 [style = bold, label=""];
6->46 [style = solid, label="dataStreamName"];
44->50 [style = bold, label=""];
6->8 [style = solid, label="dataStreamName"];
12->35 [style = bold, label=""];
12->37 [style = bold, label=""];
13->52 [style = solid, label="metadataCreateIndexService"];
12->27 [style = dotted, label="true"];
12->29 [style = bold, label=""];
12->10 [style = dotted, label="true"];
16->33 [style = bold, label=""];
12->14 [style = bold, label=""];
1->12 [style = solid, label="k"];
0->20 [style = bold, label=""];
12->4 [style = dotted, label="true"];
6->0 [style = solid, label="dataStreamName"];
20->19 [style = bold, label=""];
29->35 [style = dashed, label="0"];
8->41 [style = bold, label=""];
25->34 [style = solid, label="actualAlias"];
6->23 [style = bold, label=""];
26->3 [style = bold, label=""];
23->12 [style = solid, label="aliasCount"];
11->21 [style = bold, label=""];
23->26 [style = solid, label="aliasCount"];
53->42 [style = bold, label=""];
29->25 [style = solid, label="aliasName"];
3->12 [style = bold, label=""];
33->5 [style = bold, label=""];
38->1 [style = bold, label=""];
6->11 [style = solid, label="dataStreamName"];
29->27 [style = solid, label="aliasName"];
32->8 [style = bold, label=""];
36->13 [style = bold, label=""];
40->7 [style = solid, label="actualAlias"];
28->8 [style = bold, label=""];
14->31 [style = bold, label=""];
13->31 [style = solid, label="metadataCreateIndexService"];
29->10 [style = bold, label=""];
15->40 [style = bold, label=""];
13->6 [style = bold, label=""];
31->33 [style = solid, label="cs"];
41->18 [style = bold, label=""];
37->39 [style = bold, label=""];
17->4 [style = bold, label=""];
24->15 [style = bold, label=""];
27->1 [style = bold, label=""];
47->52 [style = solid, label="cs"];
52->53 [style = bold, label=""];
15->7 [style = bold, label=""];
12->29 [style = dotted, label="true"];
31->16 [style = bold, label=""];
35->38 [style = solid, label="am"];
9->4 [style = bold, label=""];
23->26 [style = bold, label=""];
12->1 [style = dotted, label="true"];
47->46 [style = bold, label=""];
13->33 [style = solid, label="metadataCreateIndexService"];
51->49 [style = bold, label=""];
12->38 [style = dotted, label="true"];
6->51 [style = solid, label="dataStreamName"];
46->52 [style = bold, label=""];
8->7 [style = bold, label=""];
29->7 [style = solid, label="aliasName"];
40->7 [style = bold, label=""];
54->13 [style = bold, label=""];
39->31 [style = solid, label="cs"];
6->32 [style = solid, label="dataStreamName"];
46->52 [style = solid, label="req"];
4->27 [style = bold, label=""];
17->9 [style = dotted, label="true"];
32->15 [style = bold, label=""];
45->47 [style = bold, label=""];
7->25 [style = bold, label=""];
6->42 [style = solid, label="dataStreamName"];
2->22 [style = bold, label=""];
6->45 [style = bold, label=""];
32->28 [style = bold, label=""];
}
