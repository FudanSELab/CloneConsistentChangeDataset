digraph {
9 [style = filled, label = "File mu = new File(thisTest.getWorkingCopy(),\"A/mu\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "OneTest thisTest = new OneTest()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "byte(( testContent = thisTest.getWc().getItemContent(\"A/mu\").getBytes()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "pw.close()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "client.streamFileContent(thisTest.getWCPath() + \"/A/mu\",null,null,100,baos)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "byte(( content = baos.toByteArray()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(\"content changed\",Arrays.equals(content,testContent))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testBasicCat['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "pw.print(\"some text\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ByteArrayOutputStream baos = new ByteArrayOutputStream()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "PrintWriter pw = new PrintWriter(new FileOutputStream(mu,true))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "byte(( testContent = thisTest.getWc().getItemContent(\"A/mu\").getBytes()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testBasicCatStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "client.streamFileContent(thisTest.getWCPath() + \"/A/mu\",null,null,baos)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "byte(( content = client.fileContent(thisTest.getWCPath() + \"/A/mu\",null)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertTrue(\"content changed\",Arrays.equals(content,testContent))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testBasicCatStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13->10 [style = bold, label=""];
16->15 [style = bold, label=""];
5->8 [style = bold, label=""];
9->0 [style = bold, label=""];
15->14 [style = bold, label=""];
6->1 [style = solid, label="testContent"];
8->6 [style = bold, label=""];
3->16 [style = bold, label=""];
8->1 [style = solid, label="content"];
2->10 [style = bold, label=""];
3->4 [style = bold, label=""];
7->3 [style = bold, label=""];
15->14 [style = solid, label="testContent"];
0->7 [style = bold, label=""];
6->1 [style = bold, label=""];
12->10 [style = bold, label=""];
5->11 [style = dashed, label="0"];
4->5 [style = solid, label="baos"];
9->0 [style = solid, label="mu"];
11->8 [style = bold, label=""];
10->9 [style = bold, label=""];
4->11 [style = bold, label=""];
4->5 [style = bold, label=""];
16->14 [style = solid, label="content"];
4->11 [style = solid, label="baos"];
}
