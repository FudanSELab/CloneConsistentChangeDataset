digraph {
43 [style = filled, label = "_gZkClient.deleteRecursively(subRoot)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "Thread.sleep(1000)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertTrue(listener._deleteKeys.size() == expectDeleteNodes,\"Should receive \" + expectDeleteNodes + \" delete callbacks\")@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "int expectChangeNodes = firstLevelNr * secondLevelNr@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "int expectCreateNodes = 1 + firstLevelNr + firstLevelNr * secondLevelNr@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "setNodes(store,'b',true)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "System.out.println(\"END testLocalTriggeredCallback() at \" + new Date(System.currentTimeMillis()))@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "store.stop()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "ZkHelixPropertyStore<ZNRecord> store = new ZkHelixPropertyStore<>(new ZkBaseDataAccessor<>(_gZkClient),subRoot,subscribedPaths)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "Assert.assertTrue(listener._createKeys.size() == expectCreateNodes,\"Should receive \" + expectCreateNodes + \" create callbacks\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "TestListener listener = new TestListener()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "setNodes(_gZkClient,subRoot,'b',true)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "store.remove(\"/\",0)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(expectDeleteNodes,listener._deleteKeys.size(),\"Should receive \" + expectDeleteNodes + \" delete callbacks\")@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "int expectDeleteNodes = 1 + firstLevelNr + firstLevelNr * secondLevelNr@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "setNodes(_gZkClient,subRoot,'a',true)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "List<String> subscribedPaths = Arrays.asList(subRoot)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "System.out.println(\"createKey#:\" + listener._createKeys.size() + \", changeKey#:\" + listener._changeKeys.size() + \", deleteKey#:\" + listener._deleteKeys.size())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "System.out.println(\"END testLocalTriggeredCallback() at \" + new Date(System.currentTimeMillis()))@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "System.out.println(\"createKey#:\" + listener._createKeys.size() + \", changeKey#:\" + listener._changeKeys.size() + \", deleteKey#:\" + listener._deleteKeys.size())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "System.out.println(\"START testLocalTriggeredCallback() at \" + new Date(System.currentTimeMillis()))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "store.subscribe(\"/\",listener)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "Thread.sleep(500)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "Assert.assertEquals(expectCreateNodes,listener._createKeys.size(),\"Should receive \" + expectCreateNodes + \" create callbacks\")@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "System.out.println(\"START testZkTriggeredCallback() at \" + new Date(System.currentTimeMillis()))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Thread.sleep(500)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "subscribedPaths.add(subRoot)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assert.assertTrue(listener._deleteKeys.size() == expectDeleteNodes,\"Should receive \" + expectDeleteNodes + \" delete callbacks\")@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "String subRoot = _root + \"/\" + \"zkCallback\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "i++@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "listener.reset()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "System.out.println(\"createKey#:\" + listener._createKeys.size() + \", changeKey#:\" + listener._changeKeys.size() + \", deleteKey#:\" + listener._deleteKeys.size())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Thread.sleep(500)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "i++@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "i < 10@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "ZkHelixPropertyStore<ZNRecord> store = new ZkHelixPropertyStore<ZNRecord>(new ZkBaseDataAccessor<ZNRecord>(_gZkClient),subRoot,subscribedPaths)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "store.stop()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "String subRoot = _root + \"/\" + \"localCallback\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "listener.reset()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "listener.reset()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "testZkTriggeredCallback['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "System.out.println(\"createKey#:\" + listener._createKeys.size() + \", changeKey#:\" + listener._changeKeys.size() + \", deleteKey#:\" + listener._deleteKeys.size())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "int expectDeleteNodes = 1 + firstLevelNr + firstLevelNr * secondLevelNr@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Thread.sleep(500)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "listener._changeKeys.size() >= expectChangeNodes@@@21@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "System.out.println(\"END testZkTriggeredCallback() at \" + new Date(System.currentTimeMillis()))@@@33@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "testLocalTriggeredCallback['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "setNodes(store,'a',true)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertTrue(listener._changeKeys.size() >= expectChangeNodes,\"Should receive at least \" + expectChangeNodes + \" change callbacks\")@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "List<String> subscribedPaths = new ArrayList<>()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "listener.reset()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "listener._deleteKeys.size() == expectDeleteNodes@@@28@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "System.out.println(\"START testLocalTriggeredCallback() at \" + new Date(System.currentTimeMillis()))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "List<String> subscribedPaths = new ArrayList<String>()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(listener._changeKeys.size() >= expectChangeNodes,\"Should receive at least \" + expectChangeNodes + \" change callbacks\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "int i = 0@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "testLocalTriggeredCallback['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8->16 [style = bold, label=""];
52->8 [style = bold, label=""];
25->56 [style = dashed, label="0"];
41->52 [style = solid, label="expectCreateNodes"];
4->12 [style = solid, label="subRoot"];
47->16 [style = solid, label="subRoot"];
44->7 [style = bold, label=""];
14->28 [style = bold, label=""];
42->48 [style = bold, label=""];
7->9 [style = solid, label="i"];
56->47 [style = bold, label=""];
37->5 [style = bold, label=""];
7->9 [style = bold, label=""];
17->32 [style = solid, label="expectDeleteNodes"];
27->7 [style = solid, label="expectChangeNodes"];
15->11 [style = bold, label=""];
27->11 [style = solid, label="expectChangeNodes"];
15->7 [style = dashed, label="0"];
15->20 [style = bold, label=""];
4->22 [style = solid, label="subRoot"];
45->42 [style = bold, label=""];
20->43 [style = bold, label=""];
49->56 [style = bold, label=""];
9->15 [style = dotted, label="true"];
40->44 [style = solid, label="i"];
17->19 [style = solid, label="expectDeleteNodes"];
17->21 [style = bold, label=""];
12->22 [style = bold, label=""];
44->9 [style = dotted, label="true"];
11->51 [style = bold, label=""];
47->53 [style = solid, label="subRoot"];
5->23 [style = bold, label=""];
37->0 [style = solid, label="store"];
24->0 [style = bold, label=""];
54->46 [style = bold, label=""];
3->36 [style = dashed, label="0"];
44->7 [style = dotted, label="true"];
55->26 [style = bold, label=""];
44->50 [style = bold, label=""];
5->23 [style = solid, label="listener"];
4->2 [style = bold, label=""];
47->39 [style = bold, label=""];
22->5 [style = bold, label=""];
8->38 [style = bold, label=""];
12->37 [style = bold, label=""];
32->10 [style = bold, label=""];
30->9 [style = solid, label="i"];
22->37 [style = dashed, label="0"];
2->22 [style = solid, label="subscribedPaths"];
2->39 [style = dashed, label="0"];
21->7 [style = bold, label=""];
44->31 [style = dotted, label="true"];
19->32 [style = dashed, label="0"];
14->16 [style = dashed, label="0"];
20->19 [style = bold, label=""];
20->45 [style = solid, label="expectDeleteNodes"];
11->30 [style = bold, label=""];
7->50 [style = bold, label=""];
3->48 [style = dashed, label="0"];
40->31 [style = solid, label="i"];
22->14 [style = solid, label="store"];
16->27 [style = bold, label=""];
27->14 [style = bold, label=""];
17->15 [style = solid, label="expectDeleteNodes"];
6->18 [style = bold, label=""];
9->31 [style = bold, label=""];
31->13 [style = bold, label=""];
28->31 [style = bold, label=""];
9->11 [style = dotted, label="true"];
31->44 [style = solid, label="i"];
38->27 [style = bold, label=""];
31->6 [style = solid, label="expectChangeNodes"];
19->10 [style = bold, label=""];
26->8 [style = bold, label=""];
9->20 [style = bold, label=""];
30->9 [style = bold, label=""];
39->53 [style = solid, label="subscribedPaths"];
39->53 [style = bold, label=""];
26->16 [style = solid, label="expectCreateNodes"];
7->30 [style = solid, label="i"];
51->20 [style = bold, label=""];
24->41 [style = bold, label=""];
26->52 [style = bold, label=""];
31->44 [style = bold, label=""];
0->1 [style = bold, label=""];
13->6 [style = bold, label=""];
9->30 [style = dotted, label="true"];
43->54 [style = bold, label=""];
4->34 [style = bold, label=""];
26->38 [style = solid, label="expectCreateNodes"];
40->44 [style = bold, label=""];
33->35 [style = bold, label=""];
16->38 [style = dashed, label="0"];
41->55 [style = bold, label=""];
22->0 [style = solid, label="store"];
47->39 [style = solid, label="subRoot"];
18->17 [style = bold, label=""];
25->4 [style = bold, label=""];
29->25 [style = bold, label=""];
10->3 [style = bold, label=""];
20->32 [style = bold, label=""];
4->47 [style = dashed, label="0"];
53->22 [style = bold, label=""];
4->37 [style = solid, label="subRoot"];
25->35 [style = dashed, label="0"];
1->26 [style = bold, label=""];
34->12 [style = bold, label=""];
35->4 [style = bold, label=""];
2->12 [style = bold, label=""];
10->36 [style = bold, label=""];
23->24 [style = bold, label=""];
50->11 [style = bold, label=""];
9->15 [style = bold, label=""];
34->37 [style = solid, label="subscribedPaths"];
37->14 [style = solid, label="store"];
22->5 [style = solid, label="listener"];
2->34 [style = dashed, label="0"];
0->24 [style = dashed, label="0"];
46->45 [style = bold, label=""];
47->24 [style = solid, label="subRoot"];
27->40 [style = bold, label=""];
47->43 [style = solid, label="subRoot"];
}
