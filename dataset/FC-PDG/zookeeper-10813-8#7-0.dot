digraph {
8 [style = filled, label = "offerThread.join()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "NoSuchElementException e@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Assert.fail()@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(new String(takeResult(0(),testString)@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "testTakeWait1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testTakeWait1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "DistributedQueue(( queueHandles = new DistributedQueue((((@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final byte(((( takeResult = new byte((((((@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "takeThread.start()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "queueHandles(i( = new DistributedQueue(clients(i(,dir,null)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String dir = \"/testTakeWait1\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertNotNull(takeResult(0()@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "i < clients.length@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "String dir = \"/testRemove1\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Thread.sleep(1000)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "takeThread.join()@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(new String(takeResult(0(),testString)@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "Thread takeThread = new Thread(null)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "clients(i( = createClient()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "queueHandles(i( = new DistributedQueue(clients(i(,dir,null)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Thread offerThread = new Thread(null)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertNotNull(takeResult(0()@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "final DistributedQueue(( queueHandles = new DistributedQueue((((@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testRemove1['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final int numClients = 1@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "queueHandles(0(.remove()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "offerThread.start()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "int i = 0@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "return@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ZooKeeper(( clients = new ZooKeeper((((@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final ZooKeeper(( clients = new ZooKeeper((((@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final String testString = \"Hello World\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
15->0 [style = solid, label="testString"];
5->10 [style = bold, label=""];
25->32 [style = dotted, label="true"];
28->12 [style = solid, label="dir"];
10->12 [style = dotted, label="true"];
10->5 [style = solid, label="i"];
12->5 [style = bold, label=""];
26->10 [style = bold, label=""];
3->23 [style = solid, label="takeResult"];
10->24 [style = bold, label=""];
16->6 [style = bold, label=""];
28->31 [style = bold, label=""];
3->21 [style = solid, label="takeResult"];
11->4 [style = bold, label=""];
4->15 [style = bold, label=""];
30->26 [style = bold, label=""];
0->23 [style = dashed, label="0"];
25->32 [style = bold, label=""];
12->20 [style = bold, label=""];
8->14 [style = bold, label=""];
3->0 [style = solid, label="takeResult"];
15->23 [style = solid, label="testString"];
19->10 [style = bold, label=""];
14->17 [style = bold, label=""];
32->27 [style = bold, label=""];
12->20 [style = solid, label="clients"];
31->1 [style = bold, label=""];
5->12 [style = dotted, label="true"];
1->30 [style = bold, label=""];
10->5 [style = dotted, label="true"];
17->21 [style = dashed, label="0"];
1->9 [style = bold, label=""];
2->12 [style = bold, label=""];
3->17 [style = solid, label="takeResult"];
2->12 [style = solid, label="clients"];
22->4 [style = bold, label=""];
20->2 [style = bold, label=""];
29->28 [style = bold, label=""];
4->28 [style = dashed, label="0"];
9->1 [style = dashed, label="0"];
4->20 [style = solid, label="dir"];
20->2 [style = solid, label="i"];
17->0 [style = bold, label=""];
12->5 [style = solid, label="i"];
10->5 [style = bold, label=""];
19->30 [style = dashed, label="0"];
5->12 [style = bold, label=""];
3->7 [style = bold, label=""];
10->2 [style = dotted, label="true"];
6->13 [style = bold, label=""];
26->10 [style = solid, label="i"];
7->16 [style = bold, label=""];
9->19 [style = bold, label=""];
5->20 [style = dotted, label="true"];
10->2 [style = bold, label=""];
18->8 [style = bold, label=""];
5->10 [style = solid, label="i"];
21->23 [style = bold, label=""];
24->27 [style = bold, label=""];
2->5 [style = solid, label="i"];
14->21 [style = bold, label=""];
5->2 [style = dotted, label="true"];
13->18 [style = bold, label=""];
2->5 [style = bold, label=""];
15->1 [style = bold, label=""];
}
