digraph {
3 [style = filled, label = "GraphiteProperties properties = new GraphiteProperties()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "GangliaConfig config = GangliaConfig.DEFAULT@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "GangliaProperties properties = new GangliaProperties()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(properties.getRateUnits()).isEqualTo(config.rateUnits())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "defaultValuesAreConsistent['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(properties.getProtocolVersion()).isEqualTo(config.protocolVersion())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(properties.getProtocol()).isEqualTo(config.protocol())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(properties.getAddressingMode()).isEqualTo(config.addressingMode())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(properties.getPort()).isEqualTo(config.port())@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(properties.isEnabled()).isEqualTo(config.enabled())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(properties.getTagsAsPrefix()).isEqualTo(config.tagsAsPrefix())@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(properties.getStep()).isEqualTo(config.step())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "defaultValuesAreConsistent['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertThat(properties.isGraphiteTagsEnabled()).isEqualTo(config.graphiteTagsEnabled())@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertThat(properties.getDurationUnits()).isEqualTo(config.durationUnits())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "GraphiteConfig config = GraphiteConfig.DEFAULT@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "defaultValuesAreConsistent['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(properties.getHost()).isEqualTo(config.host())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(properties.getTimeToLive()).isEqualTo(config.ttl())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->14 [style = bold, label=""];
14->17 [style = bold, label=""];
1->10 [style = bold, label=""];
13->4 [style = bold, label=""];
10->6 [style = bold, label=""];
2->5 [style = bold, label=""];
10->11 [style = bold, label=""];
5->9 [style = bold, label=""];
11->6 [style = bold, label=""];
3->7 [style = bold, label=""];
7->13 [style = dashed, label="0"];
8->3 [style = bold, label=""];
7->4 [style = bold, label=""];
12->3 [style = bold, label=""];
15->13 [style = bold, label=""];
3->15 [style = dashed, label="0"];
0->2 [style = bold, label=""];
17->16 [style = bold, label=""];
9->1 [style = bold, label=""];
4->0 [style = bold, label=""];
16->9 [style = bold, label=""];
18->15 [style = bold, label=""];
}
