digraph {
15 [style = filled, label = "Character hierarchicalDelimiter = tok.nextToken().charAt(0)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "String string@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String field = StringUtil.unquote(tok.nextToken(),MetadataSerializationConfiguration.GROUP_QUOTE_CHAR)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "KeywordGroup newGroup@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "!s.startsWith(MetadataSerializationConfiguration.KEYWORD_GROUP_ID)@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "AutomaticKeywordGroup newGroup = new AutomaticKeywordGroup(name,context,field,delimiter,hierarchicalDelimiter)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "GroupHierarchyType context = GroupHierarchyType.getByNumberOrDefault(Integer.parseInt(tok.nextToken()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "!string.startsWith(MetadataSerializationConfiguration.AUTOMATIC_KEYWORD_GROUP_ID)@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "QuotedStringTokenizer tok = new QuotedStringTokenizer(string.substring(MetadataSerializationConfiguration.AUTOMATIC_KEYWORD_GROUP_ID.length()),MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR,MetadataSerializationConfiguration.GROUP_QUOTE_CHAR)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "String s@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "addGroupDetails(tok,newGroup)@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return newGroup@@@14@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "String expression = StringUtil.unquote(tok.nextToken(),MetadataSerializationConfiguration.GROUP_QUOTE_CHAR)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "throw new IllegalArgumentException(\"KeywordGroup cannot be created from \"\" + s + \"\".\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "return newGroup@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Character keywordSeparator@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "addGroupDetails(tok,newGroup)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "AutomaticKeywordGroup newGroup = new AutomaticKeywordGroup(name,context,field,separator)@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "boolean caseSensitive = Integer.parseInt(tok.nextToken()) == 1@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "QuotedStringTokenizer tok = new QuotedStringTokenizer(s.substring(MetadataSerializationConfiguration.KEYWORD_GROUP_ID.length()),MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR,MetadataSerializationConfiguration.GROUP_QUOTE_CHAR)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "keywordGroupFromString['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "automaticKeywordGroupFromString['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Character delimiter = tok.nextToken().charAt(0)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "boolean regExp = Integer.parseInt(tok.nextToken()) == 1@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Character separator = tok.nextToken().charAt(0)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "String name = StringUtil.unquote(tok.nextToken(),MetadataSerializationConfiguration.GROUP_QUOTE_CHAR)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "newGroup = new RegexKeywordGroup(name,context,field,expression,caseSensitive)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "newGroup = new WordKeywordGroup(name,context,field,expression,caseSensitive,keywordSeparator,false)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "automaticKeywordGroupFromString['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "throw new IllegalArgumentException(\"KeywordGroup cannot be created from \"\" + string + \"\".\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "regExp@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "addGroupDetails(tok,newGroup)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->8 [style = solid, label="context"];
6->5 [style = solid, label="string"];
0->14 [style = solid, label="field"];
5->10 [style = bold, label=""];
31->26 [style = solid, label="newGroup"];
8->4 [style = solid, label="newGroup"];
20->31 [style = solid, label="keywordSeparator"];
1->8 [style = bold, label=""];
10->7 [style = solid, label="tok"];
22->27 [style = solid, label="newGroup"];
15->14 [style = bold, label=""];
24->25 [style = dotted, label="true"];
6->20 [style = dashed, label="0"];
9->24 [style = dashed, label="0"];
0->17 [style = bold, label=""];
25->30 [style = bold, label=""];
0->12 [style = bold, label=""];
21->31 [style = dotted, label="false"];
4->13 [style = bold, label=""];
3->8 [style = solid, label="name"];
12->15 [style = bold, label=""];
3->11 [style = bold, label=""];
10->3 [style = bold, label=""];
21->22 [style = dotted, label="true"];
5->25 [style = dashed, label="0"];
7->4 [style = bold, label=""];
9->10 [style = bold, label=""];
2->9 [style = bold, label=""];
0->8 [style = solid, label="field"];
10->4 [style = solid, label="tok"];
18->22 [style = solid, label="caseSensitive"];
29->20 [style = dotted, label="true"];
18->31 [style = solid, label="caseSensitive"];
18->28 [style = bold, label=""];
8->7 [style = bold, label=""];
11->31 [style = solid, label="context"];
31->27 [style = solid, label="newGroup"];
0->31 [style = solid, label="field"];
24->30 [style = bold, label=""];
11->14 [style = solid, label="context"];
14->4 [style = solid, label="newGroup"];
1->12 [style = dashed, label="0"];
1->17 [style = dashed, label="0"];
11->0 [style = bold, label=""];
14->4 [style = bold, label=""];
21->31 [style = bold, label=""];
27->26 [style = bold, label=""];
10->30 [style = dashed, label="0"];
11->22 [style = solid, label="context"];
19->25 [style = solid, label="s"];
28->21 [style = solid, label="regExp"];
30->3 [style = bold, label=""];
23->21 [style = bold, label=""];
17->31 [style = solid, label="expression"];
22->26 [style = solid, label="newGroup"];
2->6 [style = dotted, label="true"];
0->1 [style = bold, label=""];
24->25 [style = bold, label=""];
16->6 [style = dotted, label="true"];
28->23 [style = bold, label=""];
30->27 [style = solid, label="tok"];
21->22 [style = bold, label=""];
12->14 [style = solid, label="delimiter"];
9->5 [style = bold, label=""];
31->27 [style = bold, label=""];
15->14 [style = solid, label="hierarchicalDelimiter"];
3->31 [style = solid, label="name"];
22->27 [style = bold, label=""];
3->14 [style = solid, label="name"];
17->22 [style = solid, label="expression"];
29->24 [style = bold, label=""];
0->22 [style = solid, label="field"];
16->9 [style = bold, label=""];
17->18 [style = bold, label=""];
1->8 [style = solid, label="separator"];
3->22 [style = solid, label="name"];
29->19 [style = dotted, label="true"];
8->7 [style = solid, label="newGroup"];
14->13 [style = solid, label="newGroup"];
9->5 [style = dotted, label="true"];
}
