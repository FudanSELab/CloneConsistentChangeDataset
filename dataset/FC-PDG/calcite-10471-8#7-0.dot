digraph {
14 [style = filled, label = "{}@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "String name@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final byte(( bytes = AvaticaUtils.readFullyToBytes(in)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "throw new RuntimeException(\"expected field \" + name + \", got \" + parser.getCurrentName())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "System.out.println(\"Response: \" + new String(bytes,StandardCharsets.UTF_8))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "expect(parser,JsonToken.FIELD_NAME)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "traceResponse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return in@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "expectObjectField['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "traceResponse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "!parser.getCurrentName().equals(name)@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "JsonParser parser@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "IOException e@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "in.close()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "in = new ByteArrayInputStream(bytes)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "InputStream in@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "CalcitePrepareImpl.DEBUG@@@3@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "expect(parser,JsonToken.START_OBJECT)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "throw new RuntimeException(e)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "parser.nextToken() != JsonToken.END_OBJECT@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "CalciteSystemProperty.DEBUG.value()@@@3@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
4->6 [style = dotted, label="true"];
4->5 [style = dotted, label="true"];
6->3 [style = bold, label=""];
10->6 [style = dotted, label="true"];
16->18 [style = bold, label=""];
3->1 [style = bold, label=""];
9->0 [style = solid, label="in"];
4->1 [style = dotted, label="true"];
18->17 [style = bold, label=""];
10->3 [style = dotted, label="true"];
8->7 [style = dotted, label="true"];
14->19 [style = bold, label=""];
11->9 [style = dotted, label="true"];
7->0 [style = bold, label=""];
1->0 [style = bold, label=""];
15->16 [style = bold, label=""];
10->5 [style = dotted, label="true"];
9->5 [style = solid, label="in"];
2->4 [style = bold, label=""];
8->7 [style = bold, label=""];
4->0 [style = bold, label=""];
5->3 [style = solid, label="bytes"];
5->1 [style = solid, label="bytes"];
15->13 [style = dotted, label="true"];
18->20 [style = bold, label=""];
4->3 [style = dotted, label="true"];
2->9 [style = dotted, label="true"];
5->6 [style = bold, label=""];
10->5 [style = bold, label=""];
13->17 [style = solid, label="name"];
19->14 [style = bold, label=""];
11->10 [style = bold, label=""];
10->0 [style = bold, label=""];
1->0 [style = solid, label="in"];
15->12 [style = dotted, label="true"];
17->20 [style = bold, label=""];
18->17 [style = dotted, label="true"];
10->1 [style = dotted, label="true"];
4->10 [style = dashed, label="0"];
20->19 [style = bold, label=""];
4->5 [style = bold, label=""];
12->16 [style = solid, label="parser"];
12->20 [style = solid, label="parser"];
}
