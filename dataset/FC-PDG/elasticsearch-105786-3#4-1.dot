digraph {
9 [style = filled, label = "testExecuteItemWithFailure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Pipeline pipeline = new Pipeline(\"_id\",\"_description\",version,new CompoundProcessor(processor,processor))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Processor processor2 = new DropProcessor.Factory().create(Map.of(),null,Map.of())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "TestProcessor processor = new TestProcessor(null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(exception.getMessage(),equalTo(\"java.lang.IllegalArgumentException: java.lang.RuntimeException: processor failed\"))@@@16@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertThat(actualItemResponse,instanceOf())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "executionService.executeDocument(pipeline,ingestDocument,false,null)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertThat(simulateDocumentBaseResult.getFailure(),instanceOf())@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "SimulateDocumentBaseResult simulateDocumentBaseResult = (SimulateDocumentBaseResult)actualItemResponse@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "SimulateDocumentResult actualItemResponse = executionService.executeDocument(pipeline,ingestDocument,false)@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Exception exception = simulateDocumentBaseResult.getFailure()@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "assertThat(processor.getInvokedCounter(),equalTo(1))@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "SimulateDocumentVerboseResult verboseResult = (SimulateDocumentVerboseResult)actualItemResponse@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(processor.getInvokedCounter(),equalTo(1))@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "SimulateDocumentResult actualItemResponse = holder.get()@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertThat(simulateDocumentBaseResult.getFailure(),instanceOf())@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "latch.await()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertThat(verboseResult.getProcessorResults().size(),equalTo(2))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertThat(actualItemResponse,instanceOf())@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "assertThat(verboseResult.getProcessorResults().get(0).getIngestDocument(),notNullValue())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(simulateDocumentBaseResult.getIngestDocument(),nullValue())@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "CountDownLatch latch = new CountDownLatch(1)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertThat(actualItemResponse,instanceOf())@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertThat(verboseResult.getProcessorResults().get(1).getFailure(),nullValue())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertThat(processor1.getInvokedCounter(),equalTo(1))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(exception,instanceOf())@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "TestProcessor processor1 = new TestProcessor(null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "SimulateDocumentBaseResult simulateDocumentBaseResult = (SimulateDocumentBaseResult)actualItemResponse@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Exception exception = simulateDocumentBaseResult.getFailure()@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertThat(verboseResult.getProcessorResults().get(0).getFailure(),nullValue())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "testDropDocumentVerbose['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "AtomicReference<SimulateDocumentResult> holder = new AtomicReference<>()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "testExecuteItemWithFailure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "SimulateDocumentResult actualItemResponse = executionService.executeDocument(pipeline,ingestDocument,true)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(exception,instanceOf())@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(exception.getMessage(),equalTo(\"java.lang.IllegalArgumentException: java.lang.RuntimeException: processor failed\"))@@@24@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "assertThat(verboseResult.getProcessorResults().get(1).getIngestDocument(),nullValue())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "Pipeline pipeline = new Pipeline(\"_id\",\"_description\",version,new CompoundProcessor(processor1,processor2))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertThat(simulateDocumentBaseResult.getIngestDocument(),nullValue())@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1->4 [style = bold, label=""];
16->13 [style = bold, label=""];
27->32 [style = bold, label=""];
6->5 [style = solid, label="exception"];
32->37 [style = bold, label=""];
3->1 [style = bold, label=""];
37->35 [style = solid, label="processor2"];
19->20 [style = bold, label=""];
38->29 [style = bold, label=""];
29->31 [style = bold, label=""];
34->33 [style = bold, label=""];
18->19 [style = bold, label=""];
2->22 [style = solid, label="pipeline"];
36->28 [style = bold, label=""];
10->3 [style = bold, label=""];
28->26 [style = bold, label=""];
8->6 [style = bold, label=""];
30->34 [style = bold, label=""];
0->3 [style = solid, label="actualItemResponse"];
9->7 [style = bold, label=""];
17->22 [style = bold, label=""];
15->16 [style = bold, label=""];
32->35 [style = solid, label="processor1"];
2->23 [style = bold, label=""];
26->38 [style = bold, label=""];
6->5 [style = bold, label=""];
0->10 [style = bold, label=""];
0->1 [style = solid, label="actualItemResponse"];
2->0 [style = bold, label=""];
15->16 [style = solid, label="exception"];
30->36 [style = solid, label="actualItemResponse"];
7->2 [style = bold, label=""];
2->0 [style = solid, label="pipeline"];
24->25 [style = bold, label=""];
30->33 [style = solid, label="actualItemResponse"];
14->12 [style = bold, label=""];
33->36 [style = bold, label=""];
12->18 [style = bold, label=""];
25->15 [style = bold, label=""];
21->7 [style = bold, label=""];
4->8 [style = bold, label=""];
23->17 [style = bold, label=""];
7->32 [style = dashed, label="0"];
5->11 [style = bold, label=""];
12->19 [style = solid, label="actualItemResponse"];
37->35 [style = bold, label=""];
12->20 [style = solid, label="actualItemResponse"];
35->30 [style = solid, label="pipeline"];
22->14 [style = bold, label=""];
20->24 [style = bold, label=""];
35->30 [style = bold, label=""];
7->2 [style = solid, label="processor"];
}
