digraph {
22 [style = filled, label = "String someStringValue = \"someStringValue\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Byte someDefaultValue = -1@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "DefaultConfig defaultConfig = new DefaultConfig(someNamespace,configRepository)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Integer someValue = 2@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "when(configRepository.getConfig()).thenReturn(someProperties)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(someValue,defaultConfig.getByteProperty(someKey,someDefaultValue))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "someProperties.setProperty(someKey,String.valueOf(someValue))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final String someKey = \"someKey\"@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "await().atMost(500,TimeUnit.MILLISECONDS).untilAsserted(new ThrowingRunnable(){@Override public void run(){assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))verify(someProperties,times(2)).getProperty(someKey)}})@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "verify(someProperties,times(2)).getProperty(someKey)@@@17@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "when(configRepository.getConfig()).thenReturn(someProperties)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "someProperties = mock()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testGetIntPropertyMultipleTimesWithShortExpireTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "verify(someProperties,times(1)).getProperty(someKey)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final Integer someValue = 2@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "final DefaultConfig defaultConfig = new DefaultConfig(someNamespace,configRepository)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "DefaultConfig defaultConfig = new DefaultConfig(someNamespace,configRepository)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "assertEquals(someDefaultValue,defaultConfig.getByteProperty(someStringKey,someDefaultValue))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "TimeUnit.MILLISECONDS.sleep(50)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "when(someProperties.getProperty(someKey)).thenReturn(String.valueOf(someValue))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "String someKey = \"someKey\"@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String someKey = \"someKey\"@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "testGetByteProperty['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final Integer someDefaultValue = -1@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "String someStringKey = \"someStringKey\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testGetIntPropertyMultipleTimesWithShortExpireTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "Byte someValue = 10@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "someProperties = new Properties()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "MockInjector.setInstance(,new MockConfigUtilWithShortExpireTime())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "someProperties.setProperty(someStringKey,someStringValue)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23->31 [style = bold, label=""];
24->28 [style = bold, label=""];
8->10 [style = bold, label=""];
2->25 [style = solid, label="someKey"];
23->25 [style = solid, label="someValue"];
22->2 [style = bold, label=""];
13->15 [style = solid, label="someProperties"];
17->1 [style = bold, label=""];
15->14 [style = bold, label=""];
10->11 [style = solid, label="someValue"];
17->11 [style = solid, label="someDefaultValue"];
10->9 [style = solid, label="someValue"];
7->12 [style = bold, label=""];
2->1 [style = bold, label=""];
13->29 [style = dashed, label="0"];
25->30 [style = bold, label=""];
26->29 [style = bold, label=""];
10->5 [style = solid, label="someValue"];
21->19 [style = solid, label="someKey"];
18->11 [style = bold, label=""];
28->29 [style = solid, label="someStringKey"];
8->7 [style = solid, label="someKey"];
5->15 [style = bold, label=""];
3->6 [style = bold, label=""];
10->7 [style = solid, label="someValue"];
6->0 [style = bold, label=""];
31->30 [style = solid, label="someDefaultValue"];
16->17 [style = bold, label=""];
2->9 [style = solid, label="someDefaultValue"];
26->11 [style = solid, label="someProperties"];
8->21 [style = dashed, label="0"];
11->9 [style = bold, label=""];
2->17 [style = dashed, label="0"];
16->11 [style = solid, label="someValue"];
15->18 [style = bold, label=""];
1->13 [style = bold, label=""];
2->11 [style = solid, label="someDefaultValue"];
28->30 [style = solid, label="someStringKey"];
8->3 [style = solid, label="someKey"];
8->9 [style = solid, label="someKey"];
21->9 [style = solid, label="someKey"];
10->0 [style = solid, label="someValue"];
0->7 [style = bold, label=""];
8->11 [style = solid, label="someKey"];
20->21 [style = bold, label=""];
2->0 [style = solid, label="someDefaultValue"];
21->11 [style = solid, label="someKey"];
2->23 [style = bold, label=""];
2->31 [style = dashed, label="0"];
29->27 [style = bold, label=""];
31->26 [style = bold, label=""];
5->27 [style = dashed, label="0"];
27->11 [style = bold, label=""];
3->19 [style = bold, label=""];
2->7 [style = solid, label="someDefaultValue"];
31->25 [style = solid, label="someDefaultValue"];
8->12 [style = solid, label="someKey"];
21->3 [style = solid, label="someKey"];
17->19 [style = solid, label="someDefaultValue"];
9->25 [style = bold, label=""];
6->19 [style = dashed, label="0"];
11->25 [style = dashed, label="0"];
13->5 [style = bold, label=""];
21->16 [style = bold, label=""];
16->5 [style = solid, label="someValue"];
9->3 [style = bold, label=""];
4->8 [style = bold, label=""];
16->19 [style = solid, label="someValue"];
17->9 [style = solid, label="someDefaultValue"];
10->2 [style = bold, label=""];
10->16 [style = dashed, label="0"];
14->18 [style = dashed, label="0"];
9->30 [style = dashed, label="0"];
2->27 [style = solid, label="someKey"];
16->9 [style = solid, label="someValue"];
14->11 [style = bold, label=""];
23->27 [style = solid, label="someValue"];
10->23 [style = dashed, label="0"];
28->22 [style = bold, label=""];
8->0 [style = solid, label="someKey"];
22->29 [style = solid, label="someStringValue"];
}
