digraph {
4 [style = filled, label = "_zkBaseDataAccessor = new ZkBaseDataAccessor<>(_zkClient)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "_versionTTLms = versionTTLms@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "ZkBucketDataAccessor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "IllegalArgumentException|IOException|InvalidRoutingDataException e@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "_zkClient = DedicatedZkClientFactory.getInstance().buildZkClient(new HelixZkClient.ZkConnectionConfig(zkAddr))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "_zkBaseDataAccessor = new ZkBaseDataAccessor<>(zkClient)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "throw new HelixException(\"Not able to connect on realm-aware mode\",e)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Boolean.getBoolean(SystemPropertyKeys.MULTI_ZK_ENABLED)@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "HelixZkClient zkClient = DedicatedZkClientFactory.getInstance().buildZkClient(new HelixZkClient.ZkConnectionConfig(ZK_ADDR))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "String zkAddr@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int bucketSize@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "_versionTTL = versionTTL@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "record.setSimpleField(NAME_KEY,NAME_KEY)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "String zkAddr@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "beforeClass['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "record.setMapField(NAME_KEY,MAP_FIELD)@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "record.setListField(NAME_KEY,LIST_FIELD)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "int bucketSize@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "ZkBucketDataAccessor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "RealmAwareZkClient.RealmAwareZkClientConfig clientConfig = new RealmAwareZkClient.RealmAwareZkClientConfig()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "_zkClient.setZkSerializer(new ZkSerializer(){@Override public byte(( serialize(Object data){if (data instanceof byte(() {return (byte(()data}throw new HelixException(\"ZkBucketDataAccesor only supports a byte array as an argument!\")}@Override public Object deserialize(byte(( data){return data}})@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "_zkClient = new FederatedZkClient(connectionConfig,clientConfig)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "_bucketDataAccessor = new ZkBucketDataAccessor(ZK_ADDR,50 * 1024,0L)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "_zkSerializer = new ZNRecordJacksonSerializer()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "_bucketSize = bucketSize@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "long versionTTLms@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "RealmAwareZkClient.RealmAwareZkConnectionConfig connectionConfig = new RealmAwareZkClient.RealmAwareZkConnectionConfig.Builder().build()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "long versionTTL@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "zkClient.setZkSerializer(new ZkSerializer(){@Override public byte(( serialize(Object data){if (data instanceof byte(() {return (byte(()data}throw new HelixException(\"ZkBucketDataAccesor only supports a byte array as an argument!\")}@Override public Object deserialize(byte(( data){return data}})@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19->17 [style = solid, label="versionTTLms"];
16->19 [style = dotted, label="true"];
3->11 [style = solid, label="clientConfig"];
25->28 [style = bold, label=""];
0->5 [style = dotted, label="true"];
23->27 [style = bold, label=""];
5->6 [style = solid, label="zkAddr"];
0->10 [style = dotted, label="true"];
16->7 [style = bold, label=""];
3->11 [style = bold, label=""];
2->15 [style = dotted, label="true"];
13->17 [style = dashed, label="0"];
16->20 [style = dotted, label="true"];
14->17 [style = bold, label=""];
28->26 [style = bold, label=""];
21->24 [style = bold, label=""];
7->9 [style = dotted, label="true"];
6->4 [style = solid, label="_zkClient"];
10->13 [style = solid, label="versionTTL"];
22->23 [style = bold, label=""];
7->6 [style = dotted, label="false"];
11->4 [style = solid, label="_zkClient"];
0->7 [style = bold, label=""];
7->9 [style = bold, label=""];
9->11 [style = solid, label="connectionConfig"];
7->11 [style = dotted, label="true"];
20->14 [style = solid, label="bucketSize"];
7->3 [style = dotted, label="true"];
24->25 [style = bold, label=""];
1->14 [style = solid, label="bucketSize"];
7->6 [style = bold, label=""];
2->15 [style = bold, label=""];
6->8 [style = bold, label=""];
12->14 [style = bold, label=""];
4->12 [style = bold, label=""];
9->3 [style = bold, label=""];
11->8 [style = bold, label=""];
10->20 [style = dashed, label="0"];
8->4 [style = bold, label=""];
14->13 [style = bold, label=""];
4->24 [style = dashed, label="0"];
27->21 [style = bold, label=""];
15->8 [style = bold, label=""];
18->6 [style = solid, label="zkAddr"];
27->24 [style = solid, label="zkClient"];
0->1 [style = dotted, label="true"];
16->18 [style = dotted, label="true"];
}
