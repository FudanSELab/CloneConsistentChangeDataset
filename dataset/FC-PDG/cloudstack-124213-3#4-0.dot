digraph {
42 [style = filled, label = "final long nodesCount@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "int reserved = hp.second()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "hostDao.loadHostTags(h)@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "suitable_host_found@@@46@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "Map.Entry<String,Pair<HostVO,Integer>> hostEntry@@@16@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "LOGGER.info(String.format(\"Suitable hosts found in datacenter ID: %s, creating deployment destination\",zone.getUuid()))@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "suitable_host_found = true@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "LOGGER.debug(String.format(\"Found host ID: %s for with enough capacity, CPU=%d RAM=%d\",h.getUuid(),cpu_requested * reserved,ram_requested * reserved))@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "List<HostVO> hosts = resourceManager.listAllHostsInOneZoneByType(Host.Type.Routing,zone.getId())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "final DataCenter zone@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "hostEntry.setValue(new Pair<HostVO,Integer>(h,reserved))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "!Strings.isNullOrEmpty(offering.getHostTag()) && !(h.getHostTags() != null && h.getHostTags().contains(offering.getHostTag()))@@@22@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "Map.Entry<String,Pair<HostVO,Integer>> hostEntry@@@15@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "Map.Entry<String,Pair<HostVO,Integer>> hostEntry@@@15@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "HostVO h = hp.first()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final ServiceOffering offering@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "planCluster = cluster@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "i <= nodesCount + 1@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "return new DeployDestination(zone,null,null,null)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "LOGGER.info(String.format(\"Suitable hosts not found in datacenter ID: %s for node %d, with offering ID: %s and hypervisor: %s\",zone.getUuid(),i,offering.getUuid(),clusterTemplate.getHypervisorType().toString()))@@@46@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "String msg = String.format(\"Cannot find enough capacity for Kubernetes cluster(requested cpu=%d memory=%d) with offering ID: %s and hypervisor: %s\",cpu_requested * nodesCount,ram_requested * nodesCount,offering.getUuid(),clusterTemplate.getHypervisorType().toString())@@@57@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "Float memoryOvercommitRatio = Float.parseFloat(cluster_detail_ram.getValue())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "final long nodesCount@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "final ServiceOffering offering@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "LOGGER.isInfoEnabled()@@@40@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Float cpuOvercommitRatio = Float.parseFloat(cluster_detail_cpu.getValue())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "boolean suitable_host_found = false@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String msg = String.format(\"Cannot find enough capacity for Kubernetes cluster(requested cpu=%1$s memory=%2$s)\",cpu_requested * nodesCount,ram_requested * nodesCount)@@@52@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "LOGGER.isDebugEnabled()@@@30@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ClusterDetailsVO cluster_detail_cpu = clusterDetailsDao.findDetail(cluster.getId(),\"cpuOvercommitRatio\")@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "LOGGER.isDebugEnabled()@@@26@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "hosts_with_resevered_capacity.entrySet()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final DataCenter zone@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "throw new InsufficientServerCapacityException(msg,,zone.getId())@@@54@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "capacityManager.checkIfHostHasCapacity(h.getId(),cpu_requested * reserved,ram_requested * reserved,false,cpuOvercommitRatio,memoryOvercommitRatio,true)@@@29@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "!h.getHypervisorType().equals(clusterTemplate.getHypervisorType())@@@18@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "reserved++@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "!suitable_host_found@@@39@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "List<HostVO> hosts = resourceManager.listAllHostsInOneZoneByType(Type.Routing,zone.getId())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "final ServiceOffering offering@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "LOGGER.debug(String.format(\"Checking host ID: %s for capacity already reserved %d\",h.getUuid(),reserved))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "suitable_host_found = false@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "int i = 1@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "ClusterVO cluster = clusterDao.findById(h.getClusterId())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final DataCenter zone@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final long ram_requested = offering.getRamSize() * 1024L * 1024L@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "return new DeployDestination(zone,null,planCluster,null)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "ClusterDetailsVO cluster_detail_ram = clusterDetailsDao.findDetail(cluster.getId(),\"memoryOvercommitRatio\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "hosts_with_resevered_capacity.put(h.getUuid(),new Pair<HostVO,Integer>(h,0))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "LOGGER.info(String.format(\"Suitable hosts not found in datacenter ID: %s for node %d\",zone.getUuid(),i))@@@41@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "plan['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final int cpu_requested = offering.getCpu() * offering.getSpeed()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "Cluster planCluster = null@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "i++@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "plan['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "plan['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "Pair<HostVO,Integer> hp = hostEntry.getValue()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final Map<String,Pair<HostVO,Integer>> hosts_with_resevered_capacity = new ConcurrentHashMap<String,Pair<HostVO,Integer>>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "LOGGER.warn(msg)@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "LOGGER.isInfoEnabled()@@@47@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5->14 [style = dotted, label="true"];
58->9 [style = bold, label=""];
4->7 [style = dotted, label="true"];
18->13 [style = bold, label=""];
4->44 [style = dotted, label="true"];
4->26 [style = dotted, label="true"];
22->31 [style = bold, label=""];
50->24 [style = solid, label="msg"];
57->52 [style = solid, label="planCluster"];
13->34 [style = bold, label=""];
51->59 [style = dotted, label="true"];
18->13 [style = dotted, label="true"];
33->21 [style = bold, label=""];
2->29 [style = bold, label=""];
45->27 [style = bold, label=""];
39->17 [style = solid, label="cpu_requested"];
57->38 [style = bold, label=""];
29->17 [style = bold, label=""];
38->32 [style = solid, label="i"];
3->37 [style = bold, label=""];
4->27 [style = dotted, label="true"];
18->30 [style = dotted, label="true"];
2->29 [style = dotted, label="true"];
4->9 [style = dotted, label="true"];
8->49 [style = solid, label="h"];
31->36 [style = bold, label=""];
36->38 [style = bold, label=""];
7->19 [style = bold, label=""];
39->50 [style = solid, label="cpu_requested"];
3->47 [style = dotted, label="true"];
15->18 [style = solid, label="suitable_host_found"];
55->16 [style = solid, label="nodesCount"];
28->0 [style = bold, label=""];
58->52 [style = solid, label="planCluster"];
4->40 [style = bold, label=""];
15->9 [style = bold, label=""];
50->24 [style = bold, label=""];
0->54 [style = dashed, label="0"];
38->4 [style = bold, label=""];
0->22 [style = bold, label=""];
37->18 [style = bold, label=""];
4->53 [style = dotted, label="true"];
35->16 [style = solid, label="nodesCount"];
28->2 [style = solid, label="ram_requested"];
39->2 [style = solid, label="cpu_requested"];
3->18 [style = bold, label=""];
30->16 [style = bold, label=""];
52->16 [style = bold, label=""];
33->2 [style = bold, label=""];
27->8 [style = bold, label=""];
28->17 [style = solid, label="ram_requested"];
3->47 [style = bold, label=""];
4->19 [style = dotted, label="true"];
37->47 [style = dashed, label="0"];
6->2 [style = solid, label="reserved"];
34->52 [style = bold, label=""];
55->4 [style = solid, label="nodesCount"];
2->27 [style = bold, label=""];
4->46 [style = dotted, label="true"];
51->55 [style = dotted, label="true"];
2->58 [style = dotted, label="true"];
9->32 [style = bold, label=""];
28->54 [style = bold, label=""];
10->6 [style = solid, label="reserved"];
32->4 [style = bold, label=""];
26->58 [style = solid, label="cluster"];
34->30 [style = bold, label=""];
4->32 [style = dotted, label="true"];
5->39 [style = bold, label=""];
30->50 [style = bold, label=""];
8->10 [style = bold, label=""];
25->15 [style = bold, label=""];
4->41 [style = dotted, label="true"];
36->57 [style = bold, label=""];
51->39 [style = bold, label=""];
4->40 [style = dotted, label="true"];
14->30 [style = solid, label="zone"];
10->6 [style = bold, label=""];
13->52 [style = bold, label=""];
35->4 [style = solid, label="nodesCount"];
6->26 [style = bold, label=""];
38->4 [style = solid, label="i"];
46->27 [style = bold, label=""];
4->11 [style = dotted, label="true"];
54->22 [style = bold, label=""];
42->4 [style = solid, label="nodesCount"];
4->1 [style = dotted, label="true"];
46->9 [style = bold, label=""];
43->30 [style = solid, label="zone"];
40->27 [style = bold, label=""];
29->25 [style = bold, label=""];
20->2 [style = solid, label="memoryOvercommitRatio"];
4->45 [style = dotted, label="true"];
30->52 [style = dashed, label="0"];
2->9 [style = bold, label=""];
48->43 [style = dotted, label="true"];
18->50 [style = bold, label=""];
38->47 [style = solid, label="i"];
35->59 [style = dashed, label="0"];
2->15 [style = dotted, label="true"];
18->16 [style = bold, label=""];
24->12 [style = bold, label=""];
5->35 [style = dotted, label="true"];
20->33 [style = bold, label=""];
6->17 [style = solid, label="reserved"];
4->18 [style = bold, label=""];
4->20 [style = dotted, label="true"];
4->2 [style = dotted, label="true"];
28->16 [style = solid, label="ram_requested"];
38->37 [style = solid, label="i"];
4->33 [style = dotted, label="true"];
16->24 [style = bold, label=""];
15->58 [style = bold, label=""];
48->35 [style = dotted, label="true"];
47->18 [style = bold, label=""];
29->17 [style = dotted, label="true"];
13->30 [style = bold, label=""];
32->37 [style = solid, label="i"];
6->25 [style = solid, label="reserved"];
39->28 [style = bold, label=""];
19->1 [style = bold, label=""];
36->18 [style = solid, label="suitable_host_found"];
48->42 [style = dotted, label="true"];
4->10 [style = dotted, label="true"];
32->4 [style = solid, label="i"];
9->3 [style = bold, label=""];
42->50 [style = solid, label="nodesCount"];
45->9 [style = bold, label=""];
18->52 [style = dotted, label="true"];
51->56 [style = dotted, label="true"];
2->25 [style = dotted, label="true"];
48->39 [style = bold, label=""];
4->49 [style = dotted, label="true"];
8->25 [style = solid, label="h"];
45->49 [style = bold, label=""];
33->21 [style = dotted, label="true"];
21->2 [style = bold, label=""];
46->10 [style = bold, label=""];
4->8 [style = dotted, label="true"];
1->2 [style = solid, label="cpuOvercommitRatio"];
56->52 [style = solid, label="zone"];
16->50 [style = dashed, label="0"];
16->24 [style = solid, label="msg"];
13->34 [style = dotted, label="true"];
26->7 [style = bold, label=""];
16->12 [style = solid, label="msg"];
32->47 [style = solid, label="i"];
50->12 [style = solid, label="msg"];
49->46 [style = bold, label=""];
9->3 [style = dotted, label="true"];
8->45 [style = bold, label=""];
3->37 [style = dotted, label="true"];
28->50 [style = solid, label="ram_requested"];
39->16 [style = solid, label="cpu_requested"];
1->20 [style = bold, label=""];
40->18 [style = solid, label="suitable_host_found"];
4->6 [style = dotted, label="true"];
5->23 [style = dotted, label="true"];
6->21 [style = solid, label="reserved"];
17->25 [style = bold, label=""];
}
