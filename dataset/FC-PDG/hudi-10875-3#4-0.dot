digraph {
0 [style = filled, label = "GenericRecord rec = new GenericData.Record(schema)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String filePath = tempDir.resolve(\"test.parquet\").toAbsolutePath().toString()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "writer.write(rec)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i++@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ParquetWriter writer = new ParquetWriter(new Path(filePath),writeSupport,CompressionCodecName.GZIP,120 * 1024 * 1024,ParquetWriter.DEFAULT_PAGE_SIZE)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "i < 1000@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "BloomFilter filter = BloomFilterFactory.createBloomFilter(1000,0.0001,10000,bloomFilterTypeToTest)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "@TempDir java.nio.file.Path tempDir@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "BloomFilter filter = BloomFilterFactory.createBloomFilter(1000,0.0001,10000,BloomFilterTypeCode.SIMPLE.name())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "writer.write(rec)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "List<String> rowKeys@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "writer.close()@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testAddKey['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "rec.put(HoodieRecord.RECORD_KEY_METADATA_FIELD,rowKey)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String filePath@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "writeSupport.add(rowKey)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "HoodieAvroWriteSupport writeSupport = new HoodieAvroWriteSupport(new AvroSchemaConverter().convert(schema),schema,filter)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "writeSupport.add(rowKey)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "int i = 0@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Schema schema = HoodieAvroUtils.getRecordKeySchema()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "writer.close()@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "GenericRecord rec = new GenericData.Record(schema)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "rowKeys.add(UUID.randomUUID().toString())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testAddKey['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "rec.put(HoodieRecord.RECORD_KEY_METADATA_FIELD,rowKey)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "writeParquetFile['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "List<String> rowKeys = new ArrayList<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "HoodieAvroWriteSupport writeSupport = new HoodieAvroWriteSupport(new AvroSchemaConverter().convert(schema),schema,filter)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String filePath = folder.getRoot() + \"/test.parquet\"@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6->3 [style = bold, label=""];
5->8 [style = bold, label=""];
3->1 [style = bold, label=""];
22->25 [style = solid, label="schema"];
22->19 [style = bold, label=""];
26->10 [style = bold, label=""];
16->10 [style = bold, label=""];
28->22 [style = bold, label=""];
5->8 [style = solid, label="writeSupport"];
10->27 [style = bold, label=""];
28->20 [style = dotted, label="true"];
0->11 [style = solid, label="rec"];
12->15 [style = bold, label=""];
18->12 [style = bold, label=""];
7->0 [style = bold, label=""];
21->24 [style = bold, label=""];
1->8 [style = solid, label="filePath"];
3->16 [style = bold, label=""];
3->6 [style = dotted, label="true"];
15->3 [style = bold, label=""];
23->24 [style = solid, label="filePath"];
10->0 [style = solid, label="schema"];
15->6 [style = solid, label="i"];
15->3 [style = solid, label="i"];
8->0 [style = bold, label=""];
19->21 [style = solid, label="filter"];
0->14 [style = bold, label=""];
7->2 [style = bold, label=""];
24->25 [style = bold, label=""];
16->8 [style = solid, label="filePath"];
1->16 [style = dashed, label="0"];
25->26 [style = bold, label=""];
22->21 [style = solid, label="schema"];
4->5 [style = solid, label="filter"];
10->4 [style = bold, label=""];
3->13 [style = bold, label=""];
5->21 [style = dashed, label="0"];
28->23 [style = dotted, label="true"];
21->24 [style = solid, label="writeSupport"];
4->19 [style = dashed, label="0"];
9->12 [style = bold, label=""];
18->17 [style = dotted, label="true"];
13->6 [style = bold, label=""];
25->10 [style = solid, label="rec"];
1->10 [style = bold, label=""];
14->11 [style = bold, label=""];
4->5 [style = bold, label=""];
27->25 [style = bold, label=""];
27->8 [style = bold, label=""];
6->3 [style = solid, label="i"];
11->7 [style = bold, label=""];
10->5 [style = solid, label="schema"];
3->13 [style = dotted, label="true"];
19->21 [style = bold, label=""];
}
