digraph {
59 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 2000))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "expectedOutput.add(new Watermark(1000))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 3000))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 1000))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "ConcurrentLinkedQueue<Object> expectedOutput = new ConcurrentLinkedQueue<>()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 3000))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "expectedOutput.add(new Watermark(4999))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 3000))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "expectedOutput.add(new Watermark(5999))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 1999))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "testHarness.configureForKeyedStream(new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new Tuple2ResultSortComparator())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new Tuple2ResultSortComparator())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new Tuple2ResultSortComparator())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 8000))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),initialTime))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 1998))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),initialTime + 999))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new Tuple2ResultSortComparator())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 3999))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key1\",3),Long.MAX_VALUE))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "long initialTime = 0L@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "TypeInformation<Tuple2<String,Integer>> inputType = TypeInfoParser.parse(\"Tuple2<String, Integer>\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "expectedOutput.add(new Watermark(3000))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "final int WINDOW_SIZE = 3@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "operator.setInputType(TypeInfoParser.parse(\"Tuple2<String, Integer>\"),new ExecutionConfig())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "expectedOutput.add(new Watermark(3999))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),initialTime + 999))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),initialTime))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "testContinuousWatermarkTrigger['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "testHarness.open()@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 7999))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "expectedOutput.add(new Watermark(2000))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "testHarness.restore(snapshot,10L)@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
73 [style = filled, label = "OneInputStreamOperatorTestHarness<Tuple2<String,Integer>,Tuple2<String,Integer>> testHarness = new OneInputStreamOperatorTestHarness<>(operator)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 3999))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 999))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new Tuple2ResultSortComparator())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 7000))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "expectedOutput.add(new Watermark(2999))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "OneInputStreamOperatorTestHarness<Tuple2<String,Integer>,Tuple2<String,Integer>> testHarness@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testHarness.open()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testTumblingEventTimeWindows['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new Tuple2ResultSortComparator())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),initialTime + 20))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "expectedOutput.add(new Watermark(5000))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 3999))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "long initialTime = 0L@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "testHarness.close()@@@48@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key1\",3),Long.MAX_VALUE))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key2\",5),Long.MAX_VALUE))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "expectedOutput.add(new Watermark(4000))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new Tuple2ResultSortComparator())@@@44@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "WindowOperator<String,Tuple2<String,Integer>,Tuple2<String,Integer>,Tuple2<String,Integer>,GlobalWindow> operator = new WindowOperator<>(GlobalWindows.create(),new GlobalWindow.Serializer(),new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig()),stateDesc,new InternalSingleValueWindowFunction<>(new PassThroughWindowFunction<String,GlobalWindow,Tuple2<String,Integer>>()),ContinuousEventTimeTrigger.of(Time.of(WINDOW_SIZE,TimeUnit.SECONDS)))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "expectedOutput.add(new Watermark(8000))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "expectedOutput.add(new Watermark(7000))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "ConcurrentLinkedQueue<Object> expectedOutput = new ConcurrentLinkedQueue<>()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testHarness.open()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 1000))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new Tuple2ResultSortComparator())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 1999))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 4000))@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key2\",3),initialTime + 2999))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "StreamTaskState snapshot = testHarness.snapshot(0L,0L)@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "testTumblingEventTimeWindows['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "ReducingStateDescriptor<Tuple2<String,Integer>> stateDesc = new ReducingStateDescriptor<>(\"window-contents\",new SumReducer(),inputType.createSerializer(new ExecutionConfig()))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),initialTime + 20))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 4999))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 6000))@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new Tuple2ResultSortComparator())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testHarness.setup()@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "expectedOutput.add(new Watermark(6000))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new Tuple2ResultSortComparator())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 5999))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testHarness.close()@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
68 [style = filled, label = "closeCalled.set(0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 5000))@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "expectedOutput.add(new Watermark(6999))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22->29 [style = bold, label=""];
33->63 [style = bold, label=""];
12->48 [style = solid, label="initialTime"];
13->33 [style = dashed, label="0"];
47->76 [style = bold, label=""];
21->3 [style = bold, label=""];
38->36 [style = bold, label=""];
28->16 [style = bold, label=""];
27->76 [style = dashed, label="0"];
10->24 [style = bold, label=""];
70->46 [style = bold, label=""];
44->42 [style = bold, label=""];
72->52 [style = bold, label=""];
36->28 [style = solid, label="initialTime"];
77->30 [style = bold, label=""];
36->20 [style = bold, label=""];
12->30 [style = solid, label="initialTime"];
19->46 [style = solid, label="expectedOutput"];
36->13 [style = solid, label="initialTime"];
20->7 [style = solid, label="expectedOutput"];
27->53 [style = bold, label=""];
36->4 [style = solid, label="initialTime"];
19->23 [style = bold, label=""];
12->27 [style = solid, label="initialTime"];
12->47 [style = solid, label="initialTime"];
1->11 [style = bold, label=""];
39->41 [style = bold, label=""];
12->57 [style = solid, label="initialTime"];
17->14 [style = dashed, label="0"];
12->10 [style = solid, label="initialTime"];
59->69 [style = bold, label=""];
69->7 [style = bold, label=""];
28->65 [style = dashed, label="0"];
37->4 [style = bold, label=""];
6->57 [style = dashed, label="0"];
28->47 [style = bold, label=""];
36->12 [style = solid, label="initialTime"];
34->55 [style = dashed, label="0"];
64->65 [style = bold, label=""];
20->11 [style = solid, label="expectedOutput"];
43->44 [style = bold, label=""];
30->60 [style = bold, label=""];
54->14 [style = bold, label=""];
36->5 [style = solid, label="initialTime"];
5->59 [style = dashed, label="0"];
56->48 [style = bold, label=""];
53->9 [style = bold, label=""];
71->61 [style = bold, label=""];
16->25 [style = bold, label=""];
55->77 [style = bold, label=""];
36->6 [style = solid, label="initialTime"];
13->31 [style = bold, label=""];
12->15 [style = solid, label="initialTime"];
36->19 [style = solid, label="initialTime"];
12->24 [style = solid, label="initialTime"];
12->33 [style = solid, label="initialTime"];
75->58 [style = bold, label=""];
20->24 [style = solid, label="expectedOutput"];
20->37 [style = solid, label="expectedOutput"];
12->19 [style = bold, label=""];
63->54 [style = bold, label=""];
71->45 [style = solid, label="WINDOW_SIZE"];
76->0 [style = bold, label=""];
36->16 [style = solid, label="initialTime"];
48->66 [style = bold, label=""];
12->53 [style = solid, label="initialTime"];
45->73 [style = solid, label="operator"];
18->8 [style = bold, label=""];
12->28 [style = solid, label="initialTime"];
10->69 [style = dashed, label="0"];
35->47 [style = dashed, label="0"];
36->35 [style = solid, label="initialTime"];
36->21 [style = solid, label="initialTime"];
15->64 [style = dashed, label="0"];
73->62 [style = bold, label=""];
9->10 [style = bold, label=""];
14->22 [style = bold, label=""];
61->51 [style = bold, label=""];
14->56 [style = dashed, label="0"];
22->48 [style = dashed, label="0"];
6->18 [style = bold, label=""];
33->60 [style = dashed, label="0"];
19->50 [style = solid, label="expectedOutput"];
24->39 [style = bold, label=""];
0->59 [style = bold, label=""];
12->14 [style = solid, label="initialTime"];
51->45 [style = bold, label=""];
20->0 [style = solid, label="expectedOutput"];
68->71 [style = bold, label=""];
27->9 [style = bold, label=""];
16->70 [style = dashed, label="0"];
66->49 [style = bold, label=""];
36->8 [style = solid, label="initialTime"];
8->21 [style = bold, label=""];
11->14 [style = bold, label=""];
67->68 [style = bold, label=""];
57->27 [style = bold, label=""];
19->0 [style = solid, label="expectedOutput"];
35->27 [style = bold, label=""];
23->35 [style = bold, label=""];
62->12 [style = bold, label=""];
36->3 [style = solid, label="initialTime"];
3->12 [style = bold, label=""];
4->33 [style = bold, label=""];
7->17 [style = bold, label=""];
36->18 [style = solid, label="initialTime"];
25->0 [style = bold, label=""];
20->9 [style = solid, label="expectedOutput"];
50->56 [style = bold, label=""];
9->5 [style = bold, label=""];
45->74 [style = bold, label=""];
20->2 [style = solid, label="expectedOutput"];
29->30 [style = bold, label=""];
26->6 [style = bold, label=""];
36->15 [style = solid, label="initialTime"];
14->55 [style = bold, label=""];
19->54 [style = solid, label="expectedOutput"];
60->72 [style = bold, label=""];
49->75 [style = bold, label=""];
12->56 [style = solid, label="initialTime"];
19->7 [style = solid, label="expectedOutput"];
19->75 [style = solid, label="expectedOutput"];
40->36 [style = bold, label=""];
40->32 [style = dotted, label="true"];
12->9 [style = solid, label="initialTime"];
7->64 [style = bold, label=""];
24->15 [style = bold, label=""];
41->43 [style = bold, label=""];
30->2 [style = bold, label=""];
38->32 [style = dotted, label="true"];
52->50 [style = bold, label=""];
0->13 [style = bold, label=""];
5->10 [style = bold, label=""];
31->63 [style = dashed, label="0"];
46->33 [style = bold, label=""];
36->22 [style = solid, label="initialTime"];
4->30 [style = dashed, label="0"];
15->28 [style = bold, label=""];
51->45 [style = solid, label="stateDesc"];
29->66 [style = dashed, label="0"];
39->44 [style = solid, label="snapshot"];
12->59 [style = solid, label="initialTime"];
23->57 [style = bold, label=""];
36->17 [style = solid, label="initialTime"];
36->33 [style = solid, label="initialTime"];
12->64 [style = solid, label="initialTime"];
42->15 [style = bold, label=""];
17->34 [style = bold, label=""];
36->23 [style = solid, label="initialTime"];
1->72 [style = dashed, label="0"];
30->49 [style = dashed, label="0"];
74->73 [style = bold, label=""];
20->26 [style = bold, label=""];
19->77 [style = solid, label="expectedOutput"];
34->37 [style = bold, label=""];
31->7 [style = bold, label=""];
36->14 [style = solid, label="initialTime"];
65->70 [style = bold, label=""];
33->1 [style = bold, label=""];
}
