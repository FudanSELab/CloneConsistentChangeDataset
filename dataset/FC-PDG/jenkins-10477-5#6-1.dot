digraph {
19 [style = filled, label = "persistence2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(0,Queue.WaitingItem.getCurrentCounterValue())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testProject.delete()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "q.save()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(0,q.getItems().length)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(1,q.getItems().length)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(1,Queue.WaitingItem.getCurrentCounterValue())@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "r.jenkins.setNodes(r.jenkins.getNodes())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "q.load()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testProject.scheduleBuild(new UserIdCause())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "q.clear()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "FreeStyleProject testProject = r.createFreeStyleProject(\"test\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertSame(q.getItems()(0(.task,testProject)@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "persistence['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "assertEquals(0,q.getItems().length)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Queue q = r.jenkins.getQueue()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "r.jenkins.setNumExecutors(0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "persistence['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "System.out.println(FileUtils.readFileToString(new File(r.jenkins.getRootDir(),\"queue.xml\")))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(1,q.getItems().length)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "resetQueueState()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20->17 [style = bold, label=""];
1->8 [style = bold, label=""];
16->11 [style = bold, label=""];
17->1 [style = bold, label=""];
18->15 [style = bold, label=""];
7->0 [style = bold, label=""];
9->10 [style = bold, label=""];
5->18 [style = dashed, label="0"];
11->18 [style = bold, label=""];
19->0 [style = bold, label=""];
8->2 [style = solid, label="testProject"];
3->9 [style = bold, label=""];
11->5 [style = bold, label=""];
5->2 [style = bold, label=""];
1->6 [style = bold, label=""];
13->3 [style = bold, label=""];
12->4 [style = bold, label=""];
14->0 [style = bold, label=""];
10->12 [style = bold, label=""];
0->1 [style = bold, label=""];
6->8 [style = bold, label=""];
0->20 [style = bold, label=""];
4->11 [style = bold, label=""];
4->16 [style = bold, label=""];
8->13 [style = bold, label=""];
}
