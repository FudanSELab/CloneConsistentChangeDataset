digraph {
13 [style = filled, label = "assertEquals(\"Property should have primary view \" + Messages.Hudson_ViewName() + \" instead of \" + property.getPrimaryView().name,property.getView(Messages.Hudson_ViewName()),property.getPrimaryView())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "MyViewsProperty property = new MyViewsProperty(Messages.Hudson_ViewName())@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "view.rename(\"primary-renamed\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "User user = User.get(\"User\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "property.setUser(user)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "property.setPrimaryViewName(view.name)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "property.addView(view)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(\"Property should have primary view \" + view.name + \" instead of \" + property.getPrimaryView().name,view,property.getPrimaryView())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "View view = new ListView(\"foo\",property)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "user.addProperty(property)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "MyViewsProperty property = new MyViewsProperty(AllView.DEFAULT_VIEW_NAME)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testGetPrimaryView['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "property.readResolve()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(\"Property should rename its primary view \",\"primary-renamed\",property.getPrimaryViewName())@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testOnViewRenamed['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testOnViewRenamed['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->14 [style = solid, label="view"];
12->0 [style = bold, label=""];
8->14 [style = dashed, label="0"];
1->10 [style = bold, label=""];
10->9 [style = bold, label=""];
3->1 [style = solid, label="property"];
3->11 [style = dashed, label="0"];
0->3 [style = bold, label=""];
8->6 [style = bold, label=""];
1->10 [style = solid, label="view"];
0->11 [style = bold, label=""];
3->5 [style = bold, label=""];
11->4 [style = solid, label="property"];
4->1 [style = bold, label=""];
15->0 [style = bold, label=""];
0->7 [style = solid, label="user"];
7->4 [style = bold, label=""];
9->14 [style = bold, label=""];
13->1 [style = bold, label=""];
11->1 [style = solid, label="property"];
4->13 [style = bold, label=""];
2->0 [style = bold, label=""];
9->8 [style = bold, label=""];
3->4 [style = solid, label="property"];
5->7 [style = bold, label=""];
11->5 [style = bold, label=""];
}
