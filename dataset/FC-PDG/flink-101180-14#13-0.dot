digraph {
4 [style = filled, label = "assertEquals(55,sum)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testRestart['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(55,sum)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "env.setParallelism(4)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "env.setRestartStrategy(RestartStrategies.fixedDelayRestart(5,100))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "sum += l@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "{FailingMapper3.failuresBeforeSuccess = 3}@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "{FailingMapper2.failuresBeforeSuccess = 1}@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "List<Long> resultCollection = env.generateSequence(1,10).rebalance().map(new FailingMapper3<>()).reduce(null).collect()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "long sum = 0@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testRestartMultipleTimes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testRestartMultipleTimes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "List<Long> resultCollection = env.generateSequence(1,10).rebalance().map(new FailingMapper2<>()).reduce(null).collect()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "sum += l@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "long sum = 0@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
4->8 [style = bold, label=""];
5->1 [style = bold, label=""];
10->0 [style = bold, label=""];
3->5 [style = bold, label=""];
6->0 [style = bold, label=""];
13->15 [style = bold, label=""];
2->4 [style = solid, label="sum"];
11->13 [style = solid, label="sum"];
9->0 [style = bold, label=""];
3->12 [style = bold, label=""];
3->1 [style = bold, label=""];
2->4 [style = bold, label=""];
7->2 [style = bold, label=""];
1->7 [style = bold, label=""];
14->11 [style = bold, label=""];
11->13 [style = bold, label=""];
12->14 [style = bold, label=""];
}
