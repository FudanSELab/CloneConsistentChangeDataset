digraph {
8 [style = filled, label = "testTestClasspathTransform['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertNotNull(res.getClasspath(),\"null classpath after test transform\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertEquals(\"test artifact version should be 1.2\",\"1.2\",md.getVersion())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertNotNull(res,\"null classpath container after test transform\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertEquals(4,res.getClasspath().size(),\"test classpath should have 4 entries\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "testCompileClasspathTransform['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "res = transform.transform(graph,ArtifactScopeEnum.test,false)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "res = transform.transform(graph,ArtifactScopeEnum.compile,false)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertNotNull(\"null classpath container after runtime transform\",res)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "assertNotNull(\"null classpath container after compile transform\",res)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testTestClasspathTransform['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ClasspathContainer res@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertNotNull(\"null classpath after compile transform\",res.getClasspath())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertNotNull(\"null classpath after runtime transform\",res.getClasspath())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "ArtifactMetadata md = res.getClasspath().get(3)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(\"1.2\",md.getVersion(),\"test artifact version should be 1.2\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertEquals(\"compile classpath should have 3 entries\",3,res.getClasspath().size())@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(\"runtime classpath should have 4 entries\",4,res.getClasspath().size())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0->3 [style = bold, label=""];
0->9 [style = bold, label=""];
3->17 [style = dashed, label="0"];
2->1 [style = bold, label=""];
16->6 [style = bold, label=""];
0->3 [style = solid, label="res"];
8->6 [style = bold, label=""];
6->0 [style = bold, label=""];
9->10 [style = bold, label=""];
3->4 [style = bold, label=""];
4->7 [style = bold, label=""];
13->17 [style = bold, label=""];
12->2 [style = bold, label=""];
0->9 [style = solid, label="res"];
5->6 [style = bold, label=""];
3->9 [style = dashed, label="0"];
17->14 [style = bold, label=""];
10->12 [style = bold, label=""];
7->2 [style = bold, label=""];
1->11 [style = dashed, label="0"];
6->13 [style = bold, label=""];
0->13 [style = dashed, label="0"];
13->17 [style = solid, label="res"];
7->15 [style = dashed, label="0"];
7->12 [style = dashed, label="0"];
14->15 [style = bold, label=""];
4->14 [style = dashed, label="0"];
4->10 [style = dashed, label="0"];
2->11 [style = bold, label=""];
}
