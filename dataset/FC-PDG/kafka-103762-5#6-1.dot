digraph {
6 [style = filled, label = "selector.close(node.idString())@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "clientWithNoExponentialBackoff.poll(requestTimeoutMs,time.milliseconds())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testConnectionDelayDisconnected['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "time.sleep(delay)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "client.poll(requestTimeoutMs,time.milliseconds())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "selector.close(node.idString())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "selector.serverDisconnect(node.idString())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "selector.close(node.idString())@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "awaitReady(client,node)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "jitter = 0.6@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(0,clientWithNoExponentialBackoff.connectionDelay(node,time.milliseconds()))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "client.ready(node,time.milliseconds())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "time.sleep(delay)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testConnectionDelayDisconnectedWithNoExponentialBackoff['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "long expectedDelay = reconnectBackoffMsTest@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(expectedDelay,delay,expectedDelay * jitter)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testConnectionDelayDisconnectedWithNoExponentialBackoff['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "long delay = client.connectionDelay(node,time.milliseconds())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "selector.serverDisconnect(node.idString())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "long delay = clientWithNoExponentialBackoff.connectionDelay(node,time.milliseconds())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "client.poll(requestTimeoutMs,time.milliseconds())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(reconnectBackoffMsTest,delay)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "delay = client.connectionDelay(node,time.milliseconds())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "expectedDelay = Math.round(delay * 2)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "awaitReady(clientWithNoExponentialBackoff,node)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(0,client.connectionDelay(node,time.milliseconds()))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(expectedDelay,delay,expectedDelay * jitter)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "double jitter = 0.3@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24->10 [style = bold, label=""];
5->13 [style = dashed, label="0"];
17->8 [style = bold, label=""];
5->8 [style = bold, label=""];
22->25 [style = bold, label=""];
19->18 [style = bold, label=""];
0->6 [style = bold, label=""];
20->24 [style = solid, label="jitter"];
25->23 [style = bold, label=""];
11->16 [style = dashed, label="0"];
21->15 [style = bold, label=""];
16->10 [style = solid, label="delay"];
16->26 [style = bold, label=""];
4->27 [style = dashed, label="0"];
10->17 [style = bold, label=""];
9->10 [style = bold, label=""];
27->16 [style = bold, label=""];
6->14 [style = dashed, label="0"];
12->0 [style = bold, label=""];
11->7 [style = solid, label="delay"];
11->2 [style = bold, label=""];
3->0 [style = bold, label=""];
1->22 [style = bold, label=""];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
6->4 [style = bold, label=""];
6->27 [style = bold, label=""];
0->14 [style = bold, label=""];
11->1 [style = solid, label="delay"];
10->5 [style = bold, label=""];
10->13 [style = bold, label=""];
23->21 [style = bold, label=""];
18->6 [style = bold, label=""];
11->2 [style = solid, label="delay"];
9->17 [style = dashed, label="0"];
16->25 [style = solid, label="delay"];
0->18 [style = dashed, label="0"];
23->15 [style = solid, label="delay"];
16->24 [style = solid, label="delay"];
2->7 [style = bold, label=""];
26->24 [style = solid, label="expectedDelay"];
13->8 [style = bold, label=""];
2->26 [style = dashed, label="0"];
4->11 [style = bold, label=""];
20->24 [style = bold, label=""];
25->15 [style = solid, label="expectedDelay"];
26->20 [style = bold, label=""];
14->4 [style = bold, label=""];
21->15 [style = solid, label="jitter"];
}
