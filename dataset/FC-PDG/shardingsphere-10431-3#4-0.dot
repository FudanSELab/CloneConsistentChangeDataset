digraph {
10 [style = filled, label = "assertRouteForBroadcastTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "when(schema.get(anyString()).getIndexes().containsKey(anyString())).thenReturn(true)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "IndexSegment segment = mock(,RETURNS_DEEP_STUBS)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "RouteContext routeContext = new RouteContext()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertRouteForBroadcastTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "when(((IndexAvailable)sqlStatementContext).getIndexes()).thenReturn(Collections.singletonList(segment))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "SQLStatementContext<DropIndexStatement> sqlStatementContext = mock(,RETURNS_DEEP_STUBS)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ShardingTableBroadcastRoutingEngine shardingTableBroadcastRoutingEngine = new ShardingTableBroadcastRoutingEngine(mock(),createSQLStatementContext(Collections.singletonList(\"t_order\")))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "when(((TableAvailable)sqlStatementContext).getAllTables()).thenReturn(Collections.emptyList())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "shardingTableBroadcastRoutingEngine.route(routeContext,createShardingRule(true))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(routeContext.getActualDataSourceNames().size(),is(2))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "ShardingTableBroadcastRoutingEngine shardingTableBroadcastRoutingEngine = new ShardingTableBroadcastRoutingEngine(schema,sqlStatementContext)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds1\",\"t_order_1\")@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Iterator<RouteUnit> routeUnits = routeContext.getRouteUnits().iterator()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertRouteForDropIndexStatement['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ShardingSphereSchema schema = mock(,RETURNS_DEEP_STUBS)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(routeContext.getRouteUnits().size(),is(2))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Iterator<RouteUnit> routeUnits = routeContext.getRouteUnits().iterator()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ShardingTableBroadcastRoutingEngine shardingTableBroadcastRoutingEngine = new ShardingTableBroadcastRoutingEngine(mock(),createSQLStatementContext(Lists.newArrayList(\"t_order\")))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds0\",\"t_order_0\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds0\",\"t_order\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds1\",\"t_order_0\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "DropIndexStatement dropIndexStatement = mock(,RETURNS_DEEP_STUBS)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "when(sqlStatementContext.getTablesContext().getTableNames()).thenReturn(Collections.emptyList())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "when(segment.getIdentifier().getValue()).thenReturn(\"t_order\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds1\",\"t_order\")@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "shardingTableBroadcastRoutingEngine.route(routeContext,createShardingRule(false))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "when(schema.getAllTableNames()).thenReturn(Sets.newHashSet(\"t_order\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "RouteContext routeContext = new RouteContext()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds0\",\"t_order_1\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(routeContext.getActualDataSourceNames().size(),is(2))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->19 [style = solid, label="routeContext"];
7->1 [style = bold, label=""];
24->19 [style = bold, label=""];
22->15 [style = bold, label=""];
14->30 [style = bold, label=""];
28->20 [style = bold, label=""];
6->0 [style = solid, label="routeContext"];
0->19 [style = dashed, label="0"];
26->29 [style = bold, label=""];
8->15 [style = dashed, label="0"];
1->3 [style = bold, label=""];
5->9 [style = dashed, label="0"];
16->25 [style = bold, label=""];
11->12 [style = bold, label=""];
6->0 [style = bold, label=""];
25->14 [style = bold, label=""];
19->17 [style = bold, label=""];
13->20 [style = solid, label="schema"];
17->22 [style = bold, label=""];
30->18 [style = bold, label=""];
18->28 [style = bold, label=""];
29->21 [style = bold, label=""];
9->6 [style = bold, label=""];
0->7 [style = bold, label=""];
5->6 [style = bold, label=""];
15->11 [style = bold, label=""];
13->26 [style = bold, label=""];
23->13 [style = bold, label=""];
3->8 [style = bold, label=""];
14->20 [style = solid, label="sqlStatementContext"];
21->16 [style = bold, label=""];
10->9 [style = bold, label=""];
21->28 [style = solid, label="segment"];
8->4 [style = bold, label=""];
4->11 [style = dashed, label="0"];
20->24 [style = bold, label=""];
12->27 [style = bold, label=""];
2->5 [style = bold, label=""];
}
