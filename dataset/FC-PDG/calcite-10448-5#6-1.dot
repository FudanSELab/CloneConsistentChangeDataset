digraph {
10 [style = filled, label = "Fixture f@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "final List<Interval> intervals = DruidDateTimeUtils.createInterval(e,\"UTC\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "checkDateRangeNoSimplify['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "checkDateRangeNoSimplify['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertThat(intervals.toString(),intervalMatcher)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "e = e.accept(new DateRangeRules.ExtractShuttle(f.rexBuilder,timeUnit,operandRanges))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "List<LocalInterval> intervals = DruidDateTimeUtils.createInterval(e2,\"UTC\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final RexNode e2 = f.simplify.simplify(e)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "RexNode e@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Matcher<String> intervalMatcher@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final List<TimeUnitRange> timeUnits = Ordering.natural().sortedCopy(DateRangeRules.extractTimeUnits(e))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "intervals == null@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Matcher<String> intervalMatcher@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "RexNode e@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "RexNode e@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "throw new AssertionError(\"null interval\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Matcher<String> intervalMatcher@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Fixture f@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final List<LocalInterval> intervals = DruidDateTimeUtils.createInterval(e,\"UTC\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "assertThat(intervals.toString(),intervalMatcher)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final Map<String,RangeSet<Calendar>> operandRanges = new HashMap<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "checkDateRange['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(intervals,notNullValue())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->6 [style = dotted, label="true"];
13->6 [style = dotted, label="true"];
5->12 [style = dashed, label="0"];
7->21 [style = dashed, label="0"];
21->15 [style = bold, label=""];
12->7 [style = solid, label="intervals"];
4->0 [style = dotted, label="true"];
16->17 [style = dotted, label="true"];
6->8 [style = solid, label="intervalMatcher"];
9->5 [style = solid, label="e"];
9->20 [style = bold, label=""];
2->9 [style = bold, label=""];
21->15 [style = solid, label="intervals"];
5->7 [style = solid, label="intervals"];
9->12 [style = solid, label="e"];
7->8 [style = bold, label=""];
15->19 [style = bold, label=""];
13->10 [style = dotted, label="true"];
12->7 [style = bold, label=""];
13->1 [style = bold, label=""];
15->22 [style = bold, label=""];
11->2 [style = solid, label="e"];
6->18 [style = dashed, label="0"];
20->21 [style = bold, label=""];
3->2 [style = solid, label="e"];
1->9 [style = solid, label="operandRanges"];
9->20 [style = solid, label="e"];
17->22 [style = solid, label="intervalMatcher"];
18->2 [style = solid, label="e"];
4->3 [style = dotted, label="true"];
16->1 [style = bold, label=""];
15->19 [style = dotted, label="true"];
16->14 [style = dotted, label="true"];
0->8 [style = solid, label="intervalMatcher"];
20->21 [style = solid, label="e2"];
9->5 [style = bold, label=""];
5->7 [style = bold, label=""];
13->11 [style = dotted, label="true"];
1->2 [style = bold, label=""];
4->1 [style = bold, label=""];
9->12 [style = bold, label=""];
19->22 [style = bold, label=""];
16->18 [style = dotted, label="true"];
}
