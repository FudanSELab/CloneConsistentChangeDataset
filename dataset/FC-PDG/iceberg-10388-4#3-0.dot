digraph {
25 [style = filled, label = "out.writeObject(POS_DELETE_FILE.copy())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int i = 0@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "return (T)in.readObject()@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertTrue(\"Should be a equality DeleteFile\",obj instanceof DeleteFile)@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "out.writeObject(POS_DELETE_FILE)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assertions.assertThat(obj).as(\"Should be a equality DeleteFile\").isInstanceOf()@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "out.writeObject(EQ_DELETE_FILE.copy())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Object obj = in.readObject()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "out.writeObject(DATA_FILE.copy())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "TestHelpers.assertEquals(DATA_FILE,(DataFile)obj)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "out.writeObject(EQ_DELETE_FILE)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int i = 0@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "roundTripSerialize['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "i += 1@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i < 2@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Object obj = in.readObject()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "out.writeObject(DATA_FILE)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assertions.assertThat(obj).as(\"Should be a DataFile\").isInstanceOf()@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "i += 1@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testJavaSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "TestHelpers.assertEquals(EQ_DELETE_FILE,(DeleteFile)obj)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Object obj = in.readObject()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "TestHelpers.assertEquals(POS_DELETE_FILE,(DeleteFile)obj)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "i < 2@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assertions.assertThat(obj).as(\"Should be a position DeleteFile\").isInstanceOf()@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "i < 2@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "out.writeObject(type)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int i = 0@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testJavaSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertTrue(\"Should be a position DeleteFile\",obj instanceof DeleteFile)@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "T type@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Assert.assertTrue(\"Should be a DataFile\",obj instanceof DataFile)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "ByteArrayOutputStream bytes = new ByteArrayOutputStream()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "i += 1@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->22 [style = solid, label="obj"];
18->31 [style = bold, label=""];
4->3 [style = bold, label=""];
5->8 [style = bold, label=""];
13->17 [style = dotted, label="true"];
9->21 [style = solid, label="obj"];
8->28 [style = dotted, label="true"];
24->27 [style = dashed, label="0"];
14->31 [style = dashed, label="0"];
28->15 [style = bold, label=""];
3->20 [style = solid, label="obj"];
11->4 [style = solid, label="i"];
26->17 [style = bold, label=""];
3->24 [style = bold, label=""];
8->21 [style = dotted, label="true"];
21->28 [style = dashed, label="0"];
13->26 [style = dotted, label="true"];
21->15 [style = bold, label=""];
11->4 [style = bold, label=""];
12->11 [style = bold, label=""];
4->20 [style = dotted, label="true"];
8->15 [style = dotted, label="true"];
7->0 [style = bold, label=""];
8->6 [style = bold, label=""];
2->13 [style = solid, label="i"];
1->17 [style = solid, label="obj"];
15->19 [style = bold, label=""];
1->26 [style = bold, label=""];
6->13 [style = solid, label="i"];
3->24 [style = solid, label="obj"];
19->8 [style = bold, label=""];
13->1 [style = bold, label=""];
32->33 [style = dotted, label="true"];
29->18 [style = bold, label=""];
14->7 [style = bold, label=""];
2->13 [style = bold, label=""];
1->22 [style = bold, label=""];
24->20 [style = bold, label=""];
3->27 [style = bold, label=""];
9->28 [style = bold, label=""];
13->2 [style = dotted, label="true"];
13->1 [style = dotted, label="true"];
9->15 [style = solid, label="obj"];
33->31 [style = solid, label="type"];
4->3 [style = dotted, label="true"];
20->16 [style = bold, label=""];
13->22 [style = dotted, label="true"];
17->2 [style = bold, label=""];
0->25 [style = bold, label=""];
10->12 [style = bold, label=""];
6->13 [style = bold, label=""];
31->30 [style = bold, label=""];
9->21 [style = bold, label=""];
8->9 [style = bold, label=""];
4->27 [style = dotted, label="true"];
22->17 [style = bold, label=""];
19->8 [style = solid, label="i"];
25->10 [style = bold, label=""];
4->16 [style = dotted, label="true"];
4->24 [style = dotted, label="true"];
8->9 [style = dotted, label="true"];
32->18 [style = bold, label=""];
16->4 [style = solid, label="i"];
16->4 [style = bold, label=""];
4->5 [style = bold, label=""];
18->14 [style = bold, label=""];
23->18 [style = bold, label=""];
27->20 [style = bold, label=""];
8->19 [style = dotted, label="true"];
22->26 [style = dashed, label="0"];
5->8 [style = solid, label="i"];
}
