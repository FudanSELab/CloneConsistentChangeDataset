digraph {
16 [style = filled, label = "assertEquals(arguments(0(,options.getJarFilePath())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testNonExistingFileWithoutArguments['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testNonExistingFileWithArguments['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String(( reducedArguments = {\"--debug\",\"true\",\"arg1\",\"arg2\"}@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testNonExistingFileWithArguments['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "frontend.buildProgram(options)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "CliFrontend frontend = new CliFrontend(CliFrontendTestUtils.getConfigDir())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(arguments(4(,options.getJarFilePath())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertArrayEquals(new String((((,options.getProgramArgs())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "RunOptions options = CliFrontendParser.parseRunCommand(arguments)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertArrayEquals(classpath,options.getClasspaths().toArray())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String(( arguments = {\"/some/none/existing/path\"}@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "CliFrontend frontend = new CliFrontend(CliFrontendTestUtils.getConfigDir())@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertArrayEquals(reducedArguments,options.getProgramArgs())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "fail(\"Should fail with an exception\")@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "URL(( classpath = new URL((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b0746e@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "frontend.buildProgram(options)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
4->9 [style = bold, label=""];
16->15 [style = bold, label=""];
13->10 [style = bold, label=""];
0->16 [style = bold, label=""];
0->8 [style = solid, label="options"];
15->14 [style = bold, label=""];
10->0 [style = solid, label="arguments"];
1->6 [style = solid, label="classpath"];
3->6 [style = bold, label=""];
9->8 [style = bold, label=""];
2->10 [style = bold, label=""];
0->12 [style = solid, label="options"];
8->7 [style = bold, label=""];
6->4 [style = bold, label=""];
10->3 [style = solid, label="arguments"];
10->16 [style = solid, label="arguments"];
5->0 [style = bold, label=""];
6->15 [style = dashed, label="0"];
11->10 [style = bold, label=""];
14->12 [style = bold, label=""];
10->0 [style = bold, label=""];
4->8 [style = bold, label=""];
5->4 [style = solid, label="reducedArguments"];
10->1 [style = bold, label=""];
3->16 [style = dashed, label="0"];
}
