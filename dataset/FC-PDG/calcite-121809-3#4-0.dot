digraph {
11 [style = filled, label = "implementSafe['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "sqlTypeName == SqlTypeName.DATE@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "throw new AssertionError(\"unexpected \" + sqlTypeName)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "operand = Expressions.call(BuiltInMethod.TIMESTAMP_WITH_LOCAL_TIME_ZONE_TO_TIMESTAMP.method,operand,Expressions.call(BuiltInMethod.TIME_ZONE.method,translator.getRoot()))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "return Expressions.call(BuiltInMethod.UNIX_DATE_EXTRACT.method,argValueList.get(0),operand)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "sqlTypeName@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "return Expressions.constant(0L)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Expression operand = argValueList.get(1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "sqlTypeName@@@29@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final List<Expression> argValueList@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "RelDataType type@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "RexNode exp@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "operand = Expressions.subtract(operand,Expressions.constant(1L))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final RexCall call@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "operand = Expressions.divide(operand,Expressions.constant(unit.multiplier.longValue()))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "return Expressions.divide(operand,Expressions.constant(TimeUnit.SECOND.multiplier.longValue()))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "unit == TimeUnit.QUARTER@@@39@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "RelDataType type@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "return operand@@@42@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "operand = mod(operand,getFactor(unit))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "operand = Expressions.call(BuiltInMethod.TIMESTAMP_WITH_LOCAL_TIME_ZONE_TO_TIMESTAMP.method,operand,Expressions.call(BuiltInMethod.TIME_ZONE.method,translator.getRoot()))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "boolean matchNullability@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "operand = Expressions.add(operand,Expressions.constant(1L))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final TimeUnitRange timeUnitRange = (TimeUnitRange)translator.getLiteralValue(argValueList.get(0))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "return Expressions.multiply(operand,Expressions.constant((long)(1 / unit.multiplier.doubleValue())))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "throw new AssertionError(\"unexpected \" + sqlTypeName)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "sqlTypeName@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "makeCast['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "operand = mod(operand,TimeUnit.MINUTE.multiplier.longValue())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "unit == TimeUnit.QUARTER@@@35@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "return Expressions.divide(operand,Expressions.constant(TimeUnit.SECOND.multiplier.longValue()))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "return Expressions.multiply(operand,Expressions.constant(0L))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "final SqlTypeName sqlTypeName = call.operands.get(1).getType().getSqlTypeName()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "operand = Expressions.multiply(operand,Expressions.constant(TimeUnit.DAY.multiplier.longValue()))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final TimeUnit unit = timeUnitRange.startUnit@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "RexNode exp@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final RexToLixTranslator translator@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "unit@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "operand = Expressions.call(BuiltInMethod.FLOOR_DIV.method,operand,Expressions.constant(TimeUnit.DAY.multiplier.longValue()))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "makeCast['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7->28 [style = bold, label=""];
35->33 [style = bold, label=""];
24->35 [style = solid, label="unit"];
30->21 [style = bold, label=""];
21->23 [style = solid, label="operand"];
17->21 [style = bold, label=""];
21->13 [style = solid, label="operand"];
37->14 [style = solid, label="operand"];
5->3 [style = dotted, label="true"];
36->15 [style = solid, label="operand"];
38->28 [style = solid, label="operand"];
5->4 [style = dotted, label="true"];
19->38 [style = bold, label=""];
19->38 [style = dotted, label="true"];
34->19 [style = dotted, label="true"];
13->38 [style = bold, label=""];
12->16 [style = bold, label=""];
19->27 [style = bold, label=""];
14->28 [style = bold, label=""];
7->36 [style = bold, label=""];
27->13 [style = solid, label="operand"];
39->36 [style = solid, label="operand"];
7->15 [style = dotted, label="true"];
34->23 [style = dotted, label="true"];
34->7 [style = dotted, label="true"];
37->38 [style = solid, label="operand"];
37->36 [style = solid, label="operand"];
37->13 [style = solid, label="operand"];
29->7 [style = solid, label="sqlTypeName"];
9->28 [style = bold, label=""];
16->35 [style = bold, label=""];
38->25 [style = bold, label=""];
26->24 [style = bold, label=""];
24->37 [style = bold, label=""];
2->3 [style = dotted, label="true"];
15->9 [style = bold, label=""];
20->16 [style = bold, label=""];
24->12 [style = solid, label="unit"];
7->9 [style = bold, label=""];
11->26 [style = bold, label=""];
32->14 [style = dotted, label="true"];
22->39 [style = solid, label="call"];
34->17 [style = bold, label=""];
37->28 [style = solid, label="operand"];
39->36 [style = bold, label=""];
2->1 [style = dotted, label="true"];
7->39 [style = bold, label=""];
12->20 [style = bold, label=""];
37->15 [style = solid, label="operand"];
17->30 [style = dotted, label="true"];
37->27 [style = solid, label="operand"];
31->28 [style = bold, label=""];
16->33 [style = solid, label="operand"];
21->38 [style = solid, label="operand"];
22->38 [style = solid, label="call"];
29->9 [style = solid, label="sqlTypeName"];
34->7 [style = bold, label=""];
16->10 [style = solid, label="operand"];
32->14 [style = bold, label=""];
36->28 [style = solid, label="operand"];
35->10 [style = bold, label=""];
19->13 [style = bold, label=""];
37->29 [style = bold, label=""];
10->33 [style = solid, label="operand"];
7->36 [style = dotted, label="true"];
27->38 [style = solid, label="operand"];
35->10 [style = dotted, label="true"];
19->25 [style = dotted, label="true"];
25->31 [style = bold, label=""];
29->32 [style = solid, label="sqlTypeName"];
7->39 [style = dotted, label="true"];
7->15 [style = bold, label=""];
29->19 [style = solid, label="sqlTypeName"];
17->30 [style = bold, label=""];
29->17 [style = solid, label="sqlTypeName"];
37->21 [style = solid, label="operand"];
28->20 [style = solid, label="operand"];
20->16 [style = solid, label="operand"];
19->13 [style = dotted, label="true"];
23->19 [style = bold, label=""];
28->12 [style = bold, label=""];
22->36 [style = solid, label="call"];
36->15 [style = bold, label=""];
27->13 [style = bold, label=""];
28->16 [style = solid, label="operand"];
29->31 [style = solid, label="sqlTypeName"];
24->34 [style = solid, label="unit"];
37->39 [style = solid, label="operand"];
12->20 [style = dotted, label="true"];
7->9 [style = dotted, label="true"];
19->31 [style = dotted, label="true"];
22->15 [style = solid, label="call"];
5->6 [style = dotted, label="true"];
29->34 [style = bold, label=""];
11->8 [style = dotted, label="true"];
21->28 [style = solid, label="operand"];
34->32 [style = dotted, label="true"];
24->28 [style = solid, label="unit"];
34->17 [style = dotted, label="true"];
11->18 [style = dotted, label="true"];
21->27 [style = solid, label="operand"];
2->0 [style = dotted, label="true"];
19->31 [style = bold, label=""];
34->21 [style = dotted, label="true"];
11->22 [style = dotted, label="true"];
34->19 [style = bold, label=""];
21->23 [style = bold, label=""];
10->33 [style = bold, label=""];
19->27 [style = dotted, label="true"];
34->32 [style = bold, label=""];
38->25 [style = solid, label="operand"];
}
