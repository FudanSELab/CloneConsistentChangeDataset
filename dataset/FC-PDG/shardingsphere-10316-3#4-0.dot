digraph {
15 [style = filled, label = "final ShardingRuleConfiguration currentRuleConfig@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "throw new DatabaseDiscoveryRuleNotExistedException(schemaName,notExistedRuleNames)@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final DropDatabaseDiscoveryRuleStatement sqlStatement@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "final DatabaseDiscoveryRuleConfiguration currentRuleConfig@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "throw new ShardingTableRulesInUsedException(usedTableNames)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final String schemaName@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "Collection<String> currentRuleNames = currentRuleConfig.getDataSources().stream().map(null).collect(Collectors.toList())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "checkBindingTables['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "!notExistedRuleNames.isEmpty()@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final String schemaName@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final DropDatabaseDiscoveryRuleStatement sqlStatement@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "checkToBeDroppedRuleNames['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "checkToBeDroppedRuleNames['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "Collection<String> notExistedRuleNames = sqlStatement.getRuleNames().stream().filter(null).collect(Collectors.toList())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final DatabaseDiscoveryRuleConfiguration currentRuleConfig@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "!usedTableNames.isEmpty()@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Collection<String> bindingTables = getBindingTables(currentRuleConfig)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final DropShardingTableRuleStatement sqlStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Collection<String> usedTableNames = getToBeDroppedShardingTableNames(sqlStatement).stream().filter(null).collect(Collectors.toList())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9->0 [style = bold, label=""];
18->16 [style = dotted, label="true"];
9->11 [style = dotted, label="true"];
7->11 [style = dashed, label="0"];
10->2 [style = solid, label="schemaName"];
6->0 [style = bold, label=""];
1->18 [style = dashed, label="0"];
9->8 [style = dotted, label="true"];
5->2 [style = solid, label="schemaName"];
17->15 [style = dotted, label="true"];
15->13 [style = solid, label="currentRuleConfig"];
17->12 [style = dotted, label="true"];
0->4 [style = bold, label=""];
14->16 [style = solid, label="usedTableNames"];
6->7 [style = dotted, label="true"];
7->15 [style = dashed, label="0"];
14->18 [style = bold, label=""];
4->1 [style = bold, label=""];
1->2 [style = bold, label=""];
17->13 [style = bold, label=""];
4->2 [style = solid, label="notExistedRuleNames"];
1->2 [style = dotted, label="true"];
6->3 [style = dotted, label="true"];
9->10 [style = dotted, label="true"];
13->14 [style = bold, label=""];
6->5 [style = dotted, label="true"];
18->16 [style = bold, label=""];
}
