digraph {
8 [style = filled, label = "assertEquals(DClass.IN,ar.getDClass())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThrows(,null)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(Type.A,ar.getType())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "new ARecord(m_an,DClass.IN,m_ttl,InetAddress.getByName(\"2001:0db8:85a3:08d3:1319:8a2e:0370:7334\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ARecord ar = new ARecord(m_an,DClass.IN,m_ttl,m_addr)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ctor_4arg['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "fail(\"IllegalArgumentException not thrown\")@@@12@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ctor_4arg['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertEquals(Type.A,ar.getType())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThrows(,null)@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ARecord ar = new ARecord(m_an,DClass.IN,m_ttl,m_addr)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "new ARecord(m_an,DClass.IN,m_ttl,InetAddress.getByName(\"192.168.0.1\"))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertEquals(m_ttl,ar.getTTL())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ctor_4arg['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(m_an,ar.getName())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(m_addr,ar.getAddress())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->12 [style = dashed, label="0"];
9->11 [style = bold, label=""];
5->9 [style = bold, label=""];
2->1 [style = bold, label=""];
9->4 [style = bold, label=""];
0->2 [style = bold, label=""];
8->3 [style = bold, label=""];
7->0 [style = bold, label=""];
12->9 [style = bold, label=""];
13->1 [style = bold, label=""];
7->14 [style = bold, label=""];
0->14 [style = dashed, label="0"];
6->5 [style = bold, label=""];
10->5 [style = bold, label=""];
3->7 [style = bold, label=""];
2->13 [style = dashed, label="0"];
4->8 [style = bold, label=""];
11->8 [style = bold, label=""];
15->12 [style = bold, label=""];
14->13 [style = bold, label=""];
4->11 [style = dashed, label="0"];
}
