digraph {
4 [style = filled, label = "props.setProperty(\"JAEGER_SAMPLER_TYPE\",\"const\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Properties props = new Properties()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "props.setProperty(\"JAEGER_REPORTER_FLUSH_INTERVAL\",\"1\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "PluginConfiguration configuration = new PluginConfiguration(\"localhost\",5775,\"\",props)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "openTracingPluginBootService.start(configuration)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "configuration.setProps(props)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "props.setProperty(\"JAEGER_SAMPLER_PARAM\",\"1\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertStart['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "props.setProperty(\"JAEGER_REPORTER_LOG_SPANS\",\"true\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertStart['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "jaegerTracingPluginBootService.start(configuration)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertThat(GlobalTracer.isRegistered(),is(true))@@@8@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "PluginConfiguration configuration = new PluginConfiguration()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(GlobalTracer.isRegistered(),is(true))@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "props.setProperty(\"OPENTRACING_TRACER_CLASS_NAME\",\"io.opentracing.mock.MockTracer\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(GlobalTracer.isRegistered(),is(true))@@@11@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "configuration.setProps(props)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "assertStart['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14->16 [style = bold, label=""];
16->15 [style = bold, label=""];
15->7 [style = bold, label=""];
17->6 [style = bold, label=""];
0->6 [style = bold, label=""];
2->1 [style = bold, label=""];
11->6 [style = bold, label=""];
6->12 [style = solid, label="props"];
1->3 [style = bold, label=""];
12->10 [style = solid, label="configuration"];
4->2 [style = bold, label=""];
3->12 [style = bold, label=""];
7->8 [style = bold, label=""];
6->16 [style = solid, label="props"];
6->4 [style = bold, label=""];
12->10 [style = bold, label=""];
3->7 [style = bold, label=""];
6->8 [style = solid, label="props"];
6->13 [style = bold, label=""];
8->9 [style = bold, label=""];
9->5 [style = bold, label=""];
7->12 [style = dashed, label="0"];
10->9 [style = bold, label=""];
7->9 [style = solid, label="configuration"];
4->13 [style = dashed, label="0"];
14->15 [style = solid, label="configuration"];
13->14 [style = bold, label=""];
9->15 [style = dashed, label="0"];
}
