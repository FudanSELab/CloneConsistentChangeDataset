digraph {
8 [style = filled, label = "Artifact artifact = (Artifact)iter.next()@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "testDependencyManagementOverridesTransitiveDependencyVersion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Iterator iter = set.iterator()@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertTrue(\"Incorrect scope for \" + c.getDependencyConflictId(),c.getScope().equals(\"runtime\"))@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "File localRepo = getLocalRepositoryPath()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "iter.hasNext()@@@14@@@['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertNotNull(a)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertTrue(\"Incorrect scope for \" + a.getDependencyConflictId(),a.getScope().equals(\"test\"))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "File pom0Basedir = pom0.getParentFile()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "System.out.println(a.getScope())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(\"No Artifacts\",set.size() > 0)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertNotNull(\"No artifacts\",set)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(\"Incorrect version for \" + artifact.getDependencyConflictId(),artifact.getVersion().equals(\"1.0\"))@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertTrue(\"Incorrect scope for \" + b.getDependencyConflictId(),b.getScope().equals(\"runtime\"))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertTrue(\"No Artifacts\",map.size() > 0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertNotNull(\"No artifacts\",map)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "MavenProject project0 = getProjectWithDependencies(pom0)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(\"Set size should be 3, is \" + map.size(),map.size() == 3)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "File pom0 = new File(localRepo,\"p0/pom.xml\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Map map = project1.getArtifactMap()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "File pom1 = new File(pom0Basedir,\"p1/pom.xml\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testDependencyManagement['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(pom0Basedir,project1.getParent().getBasedir())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertNotNull(b)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "MavenProject project1 = getProjectWithDependencies(pom1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(\"Incorrect version for \" + artifact.getDependencyConflictId(),artifact.getVersion().equals(\"1.0\"))@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "System.out.println(\"Artifact: \" + artifact.getDependencyConflictId() + \" \" + artifact.getVersion() + \" Scope: \" + artifact.getScope())@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "Artifact c = (Artifact)map.get(\"maven-test:t10-c\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Artifact a = (Artifact)map.get(\"maven-test:t10-a\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Set set = project1.getArtifacts()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testDependencyManagement['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "Artifact b = (Artifact)map.get(\"maven-test:t10-b\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "System.out.println(\"Project \" + project1.getId() + \" \" + project1)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Artifact artifact = (Artifact)aSet@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "assertNotNull(c)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->1 [style = solid, label="pom1"];
23->31 [style = bold, label=""];
22->26 [style = bold, label=""];
24->28 [style = bold, label=""];
32->31 [style = solid, label="c"];
2->0 [style = solid, label="pom0Basedir"];
10->9 [style = solid, label="set"];
7->1 [style = bold, label=""];
30->23 [style = solid, label="b"];
0->27 [style = bold, label=""];
19->20 [style = bold, label=""];
11->7 [style = solid, label="pom0"];
4->8 [style = dotted, label="true"];
8->14 [style = bold, label=""];
3->6 [style = bold, label=""];
30->32 [style = bold, label=""];
1->0 [style = bold, label=""];
29->23 [style = bold, label=""];
4->15 [style = dotted, label="true"];
4->14 [style = dotted, label="true"];
10->27 [style = dashed, label="0"];
13->11 [style = bold, label=""];
33->13 [style = bold, label=""];
11->2 [style = bold, label=""];
31->34 [style = bold, label=""];
26->30 [style = bold, label=""];
3->18 [style = bold, label=""];
20->21 [style = bold, label=""];
32->29 [style = bold, label=""];
26->29 [style = solid, label="a"];
12->13 [style = bold, label=""];
6->4 [style = bold, label=""];
13->11 [style = solid, label="localRepo"];
0->10 [style = bold, label=""];
34->24 [style = bold, label=""];
21->22 [style = bold, label=""];
1->27 [style = solid, label="project1"];
3->20 [style = dashed, label="0"];
15->4 [style = bold, label=""];
19->20 [style = solid, label="map"];
9->3 [style = bold, label=""];
5->7 [style = bold, label=""];
4->8 [style = bold, label=""];
16->14 [style = bold, label=""];
14->15 [style = bold, label=""];
10->9 [style = bold, label=""];
14->18 [style = bold, label=""];
17->13 [style = bold, label=""];
27->19 [style = bold, label=""];
28->25 [style = bold, label=""];
2->5 [style = solid, label="pom0Basedir"];
2->5 [style = bold, label=""];
8->26 [style = dashed, label="0"];
18->16 [style = bold, label=""];
}
