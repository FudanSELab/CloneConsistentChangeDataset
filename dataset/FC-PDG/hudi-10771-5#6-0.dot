digraph {
10 [style = filled, label = "throw new HoodieKeyGeneratorException(\"Unable to initialise TimestampBasedKeyGenerator class\",ioe)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "throw new HoodieKeyGeneratorException(\"Please provide valid PartitionKeyType with fields! You provided: \" + keyType)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "getPartitionPath['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "getPartitionPath['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "partitionPath.append(new SimpleKeyGenerator(config,partitionPathField).getPartitionPath(record.get()))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "throw new HoodieKeyGeneratorException(\"Unable to initialise TimestampBasedKeyGenerator class\",e)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "record.isPresent()@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Option<Row> row@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "StringBuilder partitionPath = new StringBuilder()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Option<Row> row@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "getPartitionPathFields().size() == 1 && getPartitionPathFields().get(0).isEmpty()@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "String(( fieldWithType = field.split(customAvroKeyGenerator.getSplitRegex())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "partitionPathField = fieldWithType(0(@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "partitionPath.append(DEFAULT_PARTITION_PATH_SEPARATOR)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Option<GenericRecord> record@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String partitionPathField@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "fieldWithType.length != 2@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return \"\"@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "getPartitionPath['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "partitionPath.deleteCharAt(partitionPath.length() - 1)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "String(( fieldWithType = field.split(customAvroKeyGenerator.SPLIT_REGEX)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "keyType@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "GenericRecord record@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "partitionPath.append(new TimestampBasedAvroKeyGenerator(config,partitionPathField).getPartitionPath(record))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "IOException e@@@24@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "partitionPath.deleteCharAt(partitionPath.length() - 1)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "partitionPath.append(new SimpleKeyGenerator(config,partitionPathField).getPartitionPath(row.get()))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "throw new HoodieKeyException(\"Unable to find field names for partition path in cfg\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "return partitionPath.toString()@@@33@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "PartitionKeyType keyType = PartitionKeyType.valueOf(fieldWithType(1(.toUpperCase())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "getPartitionPathFields() == null@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "throw new HoodieKeyException(\"Unable to find field names for partition path in proper format\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "throw new HoodieKeyGeneratorException(\"Unable to find field names for partition path in proper format\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "CustomAvroKeyGenerator.PartitionKeyType keyType = CustomAvroKeyGenerator.PartitionKeyType.valueOf(fieldWithType(1(.toUpperCase())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "partitionPath.append(new SimpleAvroKeyGenerator(config,partitionPathField).getPartitionPath(record))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return partitionPath.toString()@@@43@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "String(( fieldWithType = field.split(SPLIT_REGEX)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "partitionPath.append(new TimestampBasedKeyGenerator(config,partitionPathField).getPartitionPath(row.get()))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "throw new HoodieKeyGeneratorException(\"Please provide valid PartitionKeyType with fields! You provided: \" + keyType)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "partitionPath.append(new TimestampBasedKeyGenerator(config,partitionPathField).getPartitionPath(record.get()))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "partitionPath.append(customAvroKeyGenerator.getDefaultPartitionPathSeparator())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "record.isPresent()@@@27@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "IOException ioe@@@34@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32->35 [style = bold, label=""];
6->3 [style = bold, label=""];
42->41 [style = bold, label=""];
16->0 [style = bold, label=""];
14->25 [style = bold, label=""];
20->26 [style = bold, label=""];
38->41 [style = bold, label=""];
7->31 [style = bold, label=""];
3->38 [style = bold, label=""];
3->4 [style = bold, label=""];
40->23 [style = bold, label=""];
7->9 [style = bold, label=""];
17->8 [style = dotted, label="true"];
1->28 [style = bold, label=""];
19->11 [style = dotted, label="true"];
6->36 [style = dashed, label="0"];
21->1 [style = bold, label=""];
4->12 [style = dotted, label="false"];
30->42 [style = solid, label="record"];
3->39 [style = bold, label=""];
23->36 [style = bold, label=""];
4->24 [style = dotted, label="true"];
20->39 [style = dashed, label="0"];
20->15 [style = bold, label=""];
20->15 [style = dotted, label="true"];
3->42 [style = dotted, label="true"];
14->16 [style = bold, label=""];
36->38 [style = solid, label="keyType"];
41->32 [style = bold, label=""];
8->23 [style = bold, label=""];
26->1 [style = bold, label=""];
12->1 [style = bold, label=""];
36->3 [style = solid, label="keyType"];
0->7 [style = bold, label=""];
22->28 [style = dashed, label="0"];
27->29 [style = dotted, label="true"];
14->25 [style = dotted, label="true"];
22->17 [style = bold, label=""];
39->41 [style = bold, label=""];
28->23 [style = solid, label="fieldWithType"];
10->1 [style = bold, label=""];
31->23 [style = solid, label="fieldWithType"];
22->31 [style = dashed, label="0"];
6->3 [style = solid, label="keyType"];
9->22 [style = bold, label=""];
17->8 [style = bold, label=""];
8->40 [style = dashed, label="0"];
4->24 [style = bold, label=""];
27->14 [style = bold, label=""];
9->31 [style = bold, label=""];
17->40 [style = bold, label=""];
27->13 [style = dotted, label="true"];
25->16 [style = bold, label=""];
30->39 [style = solid, label="record"];
17->23 [style = bold, label=""];
3->42 [style = bold, label=""];
18->10 [style = dotted, label="true"];
9->28 [style = bold, label=""];
7->22 [style = bold, label=""];
19->14 [style = bold, label=""];
18->10 [style = bold, label=""];
7->28 [style = bold, label=""];
3->21 [style = dotted, label="true"];
3->38 [style = dotted, label="true"];
23->6 [style = bold, label=""];
4->12 [style = bold, label=""];
28->17 [style = bold, label=""];
3->21 [style = bold, label=""];
41->31 [style = bold, label=""];
1->2 [style = bold, label=""];
24->1 [style = bold, label=""];
31->17 [style = bold, label=""];
26->34 [style = dashed, label="0"];
20->26 [style = dotted, label="false"];
2->5 [style = bold, label=""];
15->1 [style = bold, label=""];
33->34 [style = dotted, label="true"];
3->4 [style = dotted, label="true"];
19->13 [style = dotted, label="true"];
34->41 [style = bold, label=""];
7->9 [style = dotted, label="true"];
1->41 [style = dashed, label="0"];
17->40 [style = dotted, label="true"];
37->30 [style = dotted, label="true"];
1->22 [style = bold, label=""];
37->14 [style = bold, label=""];
3->20 [style = bold, label=""];
3->39 [style = dotted, label="true"];
22->23 [style = solid, label="fieldWithType"];
4->42 [style = dashed, label="0"];
6->21 [style = solid, label="keyType"];
33->34 [style = bold, label=""];
13->30 [style = dashed, label="0"];
3->20 [style = dotted, label="true"];
36->3 [style = bold, label=""];
}
