digraph {
2 [style = filled, label = "client.computeTaskLags(null,allTaskEndOffsetSums)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "shouldReturnUnknownOffsetSumForLagOfTaskWithUnknownOffset['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "final Map<TaskId,Long> taskOffsetSums = Collections.singletonMap(TASK_0_1,UNKNOWN_OFFSET_SUM)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "final Map<TaskId,Long> allTaskEndOffsetSums = Collections.singletonMap(taskId01,1L)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "client.addPreviousTasksAndOffsetSums(taskOffsetSums)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(client.lagFor(TASK_0_1),equalTo(UNKNOWN_OFFSET_SUM))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "final Map<TaskId,Long> allTaskEndOffsetSums = Collections.singletonMap(taskId01,500L)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "final Map<TaskId,Long> taskOffsetSums = Collections.singletonMap(taskId01,5L)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "shouldReturnEndOffsetSumIfOffsetSumIsGreaterThanEndOffsetSum['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(client.lagFor(taskId01),equalTo(UNKNOWN_OFFSET_SUM))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "shouldReturnUnknownOffsetSumForLagOfTaskWithUnknownOffset['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final Map<TaskId,Long> allTaskEndOffsetSums = Collections.singletonMap(TASK_0_1,500L)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertThat(client.lagFor(taskId01),equalTo(1L))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final Map<TaskId,Long> taskOffsetSums = Collections.singletonMap(taskId01,UNKNOWN_OFFSET_SUM)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2->6 [style = bold, label=""];
10->2 [style = solid, label="allTaskEndOffsetSums"];
12->5 [style = solid, label="taskOffsetSums"];
1->3 [style = bold, label=""];
4->6 [style = dashed, label="0"];
2->4 [style = bold, label=""];
8->7 [style = bold, label=""];
7->9 [style = bold, label=""];
1->12 [style = dashed, label="0"];
5->2 [style = bold, label=""];
3->5 [style = bold, label=""];
12->10 [style = bold, label=""];
3->2 [style = solid, label="allTaskEndOffsetSums"];
13->12 [style = bold, label=""];
10->5 [style = bold, label=""];
3->9 [style = dashed, label="0"];
0->1 [style = bold, label=""];
9->5 [style = bold, label=""];
3->10 [style = dashed, label="0"];
4->11 [style = dashed, label="0"];
1->7 [style = dashed, label="0"];
1->5 [style = solid, label="taskOffsetSums"];
2->11 [style = bold, label=""];
7->5 [style = solid, label="taskOffsetSums"];
9->2 [style = solid, label="allTaskEndOffsetSums"];
}
