digraph {
11 [style = filled, label = "Map<Pair<Interval,Integer>,List<GenericPartitionLocation>> partitionToLocations = groupGenericPartitionLocationsPerPartition(indexingRunner.getReports())@@@35@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final ParallelIndexTaskRunner<PartialGenericSegmentMergeTask,PushedSegmentsReport> mergeRunner = createRunner(toolbox,null)@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "state.isFailure()@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "state.isFailure()@@@39@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "runHashPartitionMultiPhaseParallel['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "final Integer numShardsOverride@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "ingestionSchemaToUse = rewriteIngestionSpecWithIntervalsIfMissing(ingestionSchemaToUse,intervalToNumShards.keySet())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "state = runNextPhase(indexingRunner)@@@38@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "!(ingestionSchema.getTuningConfig().getPartitionsSpec() instanceof HashedPartitionsSpec)@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "return TaskStatus.failure(getId())@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "state.isSuccess()@@@47@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "LOG.warn(msg)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "return TaskStatus.fromCode(getId(),state)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "return TaskStatus.success(getId(),msg)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "LOG.info(\"Automatically determined numShards: \" + numShardsOverride)@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "throw new ISE(\"forceGuaranteedRollup is set but partitionsSpec (%s( is not a single_dim or hash partition spec.\",ingestionSchema.getTuningConfig().getPartitionsSpec())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "publishSegments(toolbox,mergeRunner.getReports())@@@40@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "TaskState state@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "return TaskStatus.fromCode(getId(),state)@@@50@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "runHashPartitionMultiPhaseParallel['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ParallelIndexTaskRunner<PartialDimensionCardinalityTask,DimensionCardinalityReport> cardinalityRunner = createRunner(toolbox,null)@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "needsInputSampling@@@11@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
52 [style = filled, label = "ParallelIndexTaskRunner<PartialHashSegmentGenerateTask,GeneratedPartitionsReport<GenericPartitionStat>> indexingRunner = createRunner(toolbox,null)@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "state = runNextPhase(cardinalityRunner)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "state.isSuccess()@@@39@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "LOG.info(\"Needs to determine intervals or numShards, beginning %s phase.\",PartialDimensionCardinalityTask.TYPE)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "final ParallelIndexIngestionSpec segmentMergeIngestionSpec = ingestionSchemaToUse@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "LOG.info(\"numShards is unspecified, beginning %s phase.\",PartialDimensionCardinalityTask.TYPE)@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "intervalToNumShards = null@@@34@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "throw new ISE(\"Could not create cardinality runner for hash partitioning.\")@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "partitionsSpec.getNumShards() == null@@@9@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "int effectiveMaxRowsPerSegment = partitionsSpec.getMaxRowsPerSegment() == null? PartitionsSpec.DEFAULT_MAX_ROWS_PER_SEGMENT: partitionsSpec.getMaxRowsPerSegment()@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "publishSegments(toolbox,mergeRunner.getReports())@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "final boolean needsInputSampling = partitionsSpec.getNumShards() == null || ingestionSchemaToUse.getDataSchema().getGranularitySpec().inputIntervals().isEmpty()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "TaskToolbox toolbox@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Map<Pair<Interval,Integer>,List<GenericPartitionLocation>> partitionToLocations = groupGenericPartitionLocationsPerPartition(indexingRunner.getReports())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "partitionsSpec.getNumShards() == null@@@23@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "TaskToolbox toolbox@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "numShardsOverride = determineNumShardsFromCardinalityReport(cardinalityRunner.getReports().values(),effectiveMaxRowsPerSegment)@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "HashedPartitionsSpec partitionsSpec = (HashedPartitionsSpec)ingestionSchema.getTuningConfig().getPartitionsSpec()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "String msg = \"No valid rows for hash partitioning.\" + \" All rows may have invalid timestamps or have been filtered out.\"@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "state = runNextPhase(mergeRunner)@@@46@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "cardinalityRunner.getReports().isEmpty()@@@18@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "state = runNextPhase(cardinalityRunner)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "publishSegments(toolbox,runner.getReports())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "throw new ISE(\"Could not determine cardinalities for hash partitioning.\")@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "LOG.info(\"effective maxRowsPerSegment is: \" + effectiveMaxRowsPerSegment)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "return TaskStatus.failure(getId())@@@40@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "int effectiveMaxRowsPerSegment = partitionsSpec.getMaxRowsPerSegment() == null? PartitionsSpec.DEFAULT_MAX_ROWS_PER_SEGMENT: partitionsSpec.getMaxRowsPerSegment()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final List<PartialGenericSegmentMergeIOConfig> ioConfigs = createGenericMergeIOConfigs(ingestionSchema.getTuningConfig().getTotalNumMergeTasks(),partitionToLocations)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "state = runNextPhase(indexingRunner)@@@31@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "final TaskState state = runNextPhase(runner)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "final Map<Interval,Integer> intervalToNumShards@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "state.isSuccess()@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "runSinglePhaseParallel['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "final ParallelIndexTaskRunner<SinglePhaseSubTask,PushedSegmentsReport> runner = createRunner(toolbox,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "state.isFailure()@@@32@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "intervalToNumShards = CollectionUtils.mapValues(mergeCardinalityReports(cardinalityRunner.getReports().values()),null)@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "intervalToNumShards = determineNumShardsFromCardinalityReport(cardinalityRunner.getReports().values(),effectiveMaxRowsPerSegment)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "ParallelIndexIngestionSpec ingestionSchemaToUse = ingestionSchema@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "final ParallelIndexIngestionSpec segmentCreateIngestionSpec = ingestionSchemaToUse@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ParallelIndexTaskRunner<PartialDimensionCardinalityTask,DimensionCardinalityReport> cardinalityRunner = createRunner(toolbox,null)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
32->53 [style = bold, label=""];
45->18 [style = dotted, label="true"];
24->6 [style = dotted, label="true"];
27->32 [style = bold, label=""];
2->26 [style = bold, label=""];
18->6 [style = solid, label="effectiveMaxRowsPerSegment"];
10->24 [style = bold, label=""];
46->2 [style = bold, label=""];
24->17 [style = dotted, label="true"];
47->31 [style = solid, label="ingestionSchemaToUse"];
57->59 [style = bold, label=""];
3->40 [style = dotted, label="true"];
45->42 [style = dotted, label="false"];
29->18 [style = bold, label=""];
54->53 [style = solid, label="state"];
47->22 [style = bold, label=""];
8->43 [style = solid, label="toolbox"];
47->22 [style = solid, label="ingestionSchemaToUse"];
12->10 [style = bold, label=""];
55->57 [style = bold, label=""];
38->49 [style = bold, label=""];
44->22 [style = solid, label="ingestionSchemaToUse"];
43->54 [style = solid, label="mergeRunner"];
50->10 [style = bold, label=""];
31->30 [style = bold, label=""];
45->42 [style = bold, label=""];
8->32 [style = solid, label="toolbox"];
49->36 [style = dotted, label="true"];
23->12 [style = bold, label=""];
39->47 [style = bold, label=""];
13->22 [style = bold, label=""];
36->17 [style = bold, label=""];
8->19 [style = solid, label="toolbox"];
52->46 [style = solid, label="indexingRunner"];
24->5 [style = dotted, label="true"];
49->36 [style = bold, label=""];
17->16 [style = bold, label=""];
40->37 [style = bold, label=""];
11->26 [style = solid, label="partitionToLocations"];
5->29 [style = bold, label=""];
22->25 [style = bold, label=""];
8->22 [style = solid, label="toolbox"];
17->5 [style = bold, label=""];
21->44 [style = bold, label=""];
15->13 [style = bold, label=""];
25->28 [style = bold, label=""];
26->20 [style = solid, label="partitionToLocations"];
44->47 [style = solid, label="ingestionSchemaToUse"];
0->19 [style = bold, label=""];
24->0 [style = bold, label=""];
41->21 [style = bold, label=""];
30->27 [style = bold, label=""];
55->59 [style = solid, label="state"];
4->21 [style = bold, label=""];
28->2 [style = dotted, label="true"];
60->61 [style = solid, label="toolbox"];
20->31 [style = bold, label=""];
5->3 [style = dotted, label="true"];
51->35 [style = bold, label=""];
58->60 [style = dotted, label="true"];
29->18 [style = solid, label="effectiveMaxRowsPerSegment"];
17->16 [style = dotted, label="true"];
61->55 [style = bold, label=""];
8->60 [style = dashed, label="0"];
49->47 [style = dotted, label="true"];
21->61 [style = dashed, label="0"];
24->0 [style = dotted, label="true"];
20->31 [style = solid, label="mergeRunner"];
2->33 [style = bold, label=""];
48->32 [style = bold, label=""];
45->39 [style = dotted, label="true"];
24->19 [style = dotted, label="true"];
37->45 [style = bold, label=""];
60->56 [style = solid, label="toolbox"];
35->34 [style = bold, label=""];
24->7 [style = bold, label=""];
8->27 [style = solid, label="toolbox"];
6->39 [style = bold, label=""];
3->29 [style = bold, label=""];
49->17 [style = dotted, label="true"];
26->20 [style = bold, label=""];
24->18 [style = dotted, label="true"];
11->26 [style = bold, label=""];
24->13 [style = dotted, label="true"];
58->61 [style = bold, label=""];
51->34 [style = solid, label="msg"];
52->46 [style = bold, label=""];
17->1 [style = bold, label=""];
3->37 [style = bold, label=""];
42->47 [style = bold, label=""];
19->1 [style = solid, label="cardinalityRunner"];
30->32 [style = bold, label=""];
14->23 [style = dotted, label="true"];
37->51 [style = dotted, label="true"];
27->56 [style = dashed, label="0"];
19->17 [style = bold, label=""];
44->14 [style = bold, label=""];
6->15 [style = bold, label=""];
33->26 [style = bold, label=""];
49->45 [style = dotted, label="true"];
8->17 [style = solid, label="toolbox"];
37->35 [style = dotted, label="true"];
7->22 [style = bold, label=""];
15->13 [style = solid, label="numShardsOverride"];
14->23 [style = bold, label=""];
16->1 [style = bold, label=""];
18->6 [style = bold, label=""];
6->9 [style = dotted, label="true"];
48->32 [style = dotted, label="true"];
49->7 [style = bold, label=""];
14->50 [style = bold, label=""];
31->32 [style = solid, label="state"];
31->43 [style = bold, label=""];
41->8 [style = dotted, label="true"];
37->34 [style = dotted, label="true"];
17->5 [style = solid, label="cardinalityRunner"];
43->54 [style = bold, label=""];
56->59 [style = bold, label=""];
2->11 [style = bold, label=""];
49->37 [style = dotted, label="true"];
45->6 [style = dotted, label="true"];
10->38 [style = bold, label=""];
22->25 [style = solid, label="indexingRunner"];
23->50 [style = bold, label=""];
21->14 [style = bold, label=""];
45->18 [style = bold, label=""];
24->1 [style = dotted, label="true"];
44->31 [style = solid, label="ingestionSchemaToUse"];
61->55 [style = solid, label="runner"];
3->40 [style = bold, label=""];
37->51 [style = bold, label=""];
30->27 [style = dotted, label="true"];
19->17 [style = solid, label="cardinalityRunner"];
22->52 [style = bold, label=""];
24->29 [style = dotted, label="true"];
28->11 [style = bold, label=""];
34->45 [style = bold, label=""];
4->8 [style = dotted, label="true"];
54->48 [style = bold, label=""];
49->7 [style = dotted, label="false"];
48->53 [style = bold, label=""];
38->49 [style = solid, label="needsInputSampling"];
24->7 [style = dotted, label="false"];
49->5 [style = dotted, label="true"];
57->56 [style = bold, label=""];
28->2 [style = bold, label=""];
6->39 [style = dashed, label="0"];
2->33 [style = dotted, label="true"];
9->15 [style = bold, label=""];
14->12 [style = bold, label=""];
24->15 [style = dotted, label="true"];
18->39 [style = solid, label="effectiveMaxRowsPerSegment"];
29->15 [style = solid, label="effectiveMaxRowsPerSegment"];
8->20 [style = solid, label="toolbox"];
6->9 [style = bold, label=""];
8->52 [style = solid, label="toolbox"];
12->50 [style = dashed, label="0"];
49->3 [style = dotted, label="true"];
24->38 [style = dashed, label="0"];
51->35 [style = solid, label="msg"];
57->56 [style = dotted, label="true"];
}
