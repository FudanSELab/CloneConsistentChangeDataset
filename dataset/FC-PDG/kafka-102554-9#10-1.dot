digraph {
6 [style = filled, label = "builder.build()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(topology.processorConnectedStateStores(\"KSTREAM-JOIN-0000000005\"),equalTo(Collections.singleton(\"store\")))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "builder.stream(\"stream-topic\").join(filteredKTable,MockValueJoiner.TOSTRING_JOINER)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(topology.stateStores().size(),equalTo(1))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "final KTable<Bytes,String> filteredKTable = builder.table(\"table-topic\").filter(MockPredicate.allGoodPredicate(),Materialized.as(\"store\"))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "builder.stream(\"stream-topic\").join(mappedKTable,MockValueJoiner.TOSTRING_JOINER)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "shouldAllowJoinMaterializedMapValuedKTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(topology.processorConnectedStateStores(\"KTABLE-FILTER-0000000003\"),equalTo(Collections.singleton(\"store\")))@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "shouldAllowJoinMaterializedFilteredKTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "final KTable<Bytes,String> mappedKTable = builder.table(\"table-topic\").mapValues(MockMapper.noOpValueMapper(),Materialized.as(\"store\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final ProcessorTopology topology = builder.internalTopologyBuilder.rewriteTopology(new StreamsConfig(props)).build()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "shouldAllowJoinMaterializedFilteredKTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(topology.stateStores().size(),equalTo(2))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final KTable<Bytes,String> filteredKTable = builder.table(\"table-topic\").filter(MockPredicate.allGoodPredicate(),Materialized.as(\"store\"))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertThat(topology.processorConnectedStateStores(\"KTABLE-MAPVALUES-0000000003\"),equalTo(Collections.singleton(\"store\")))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0->1 [style = solid, label="filteredKTable"];
5->12 [style = dashed, label="0"];
11->6 [style = bold, label=""];
9->10 [style = bold, label=""];
7->8 [style = bold, label=""];
3->4 [style = bold, label=""];
13->11 [style = bold, label=""];
7->3 [style = bold, label=""];
0->10 [style = dashed, label="0"];
10->1 [style = solid, label="filteredKTable"];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
1->11 [style = dashed, label="0"];
0->1 [style = bold, label=""];
13->11 [style = solid, label="mappedKTable"];
0->13 [style = dashed, label="0"];
4->12 [style = bold, label=""];
3->8 [style = dashed, label="0"];
8->4 [style = bold, label=""];
14->13 [style = bold, label=""];
6->7 [style = bold, label=""];
10->1 [style = bold, label=""];
4->5 [style = bold, label=""];
}
