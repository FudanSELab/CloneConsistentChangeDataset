digraph {
2 [style = filled, label = "final MailboxExecutor executor = task.mailboxProcessor.getMainMailboxExecutor()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(numberOfProcessCalls,inputProcessor.currentNumProcessCalls)@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final AvailabilityTestInputProcessor inputProcessor = new AvailabilityTestInputProcessor(numberOfProcessCalls)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "executor.submit(null,\"This task will submit another task to execute after processing input once.\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final StreamTask task = new MockStreamTaskBuilder(environment).setStreamInputProcessor(inputProcessor).build()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(ioMetricGroup.getIdleTimeMsPerSecond().getCount(),is(0L))@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertThat(ioMetricGroup.getBackPressuredTimePerSecond().getCount(),Matchers.greaterThanOrEqualTo(sleepTime))@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "final RunnableWithException completeFutureTask = null@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final long sleepTime = 42@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "final int numberOfProcessCalls = 10@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TaskIOMetricGroup ioMetricGroup = task.getEnvironment().getMetricGroup().getIOMetricGroup()@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "task.invoke()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testProcessWithUnAvailableOutput['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "testProcessWithAvailableOutput['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testProcessWithUnAvailableOutput['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7->5 [style = bold, label=""];
12->9 [style = bold, label=""];
14->5 [style = bold, label=""];
5->6 [style = solid, label="numberOfProcessCalls"];
3->11 [style = bold, label=""];
13->10 [style = bold, label=""];
0->4 [style = bold, label=""];
10->4 [style = bold, label=""];
5->4 [style = solid, label="numberOfProcessCalls"];
3->0 [style = bold, label=""];
6->1 [style = bold, label=""];
9->13 [style = solid, label="sleepTime"];
1->2 [style = bold, label=""];
9->5 [style = bold, label=""];
0->13 [style = bold, label=""];
5->6 [style = bold, label=""];
8->3 [style = bold, label=""];
2->8 [style = bold, label=""];
1->0 [style = bold, label=""];
11->0 [style = bold, label=""];
}
