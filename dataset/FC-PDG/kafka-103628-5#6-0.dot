digraph {
10 [style = filled, label = "final String instanceId = \"instance\"@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "runUntil(null)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final short producerEpoch@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final String consumerGroupId@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final String memberId = \"member\"@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "client.prepareResponse(null,new AddOffsetsToTxnResponse(0,error))@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "final Errors error@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final long pid = 13131L@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "TransactionalRequestResult sendOffsetsResult = transactionManager.sendOffsetsToTransaction(singletonMap(tp,new OffsetAndMetadata(39L)),new ConsumerGroupMetadata(consumerGroupId,5,fencedMemberId,Optional.of(instanceId)))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertTrue(sendOffsetsResult.error() instanceof FencedInstanceIdException)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "transactionManager.beginTransaction()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "doInitTransactions(pid,epoch)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "final String fencedMemberId = \"fenced_member\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final long producerId@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final String consumerGroupId = \"consumer\"@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "prepareAddOffsetsToTxnResponse['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "prepareAddOffsetsToTxnResponse(Errors.NONE,consumerGroupId,pid,epoch)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "TransactionalRequestResult sendOffsetsResult = transactionManager.sendOffsetsToTransaction(singletonMap(tp,new OffsetAndMetadata(39L)),new ConsumerGroupMetadata(consumerGroupId,5,fencedMemberId,Optional.of(groupInstanceId)))@@@7@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertAbortableError()@@@29@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "prepareFindCoordinatorResponse(Errors.NONE,false,CoordinatorType.GROUP,consumerGroupId)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "prepareAddOffsetsToTxnResponse(Errors.NONE,consumerGroupId,producerId,epoch)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "final short epoch = 1@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "testFencedInstanceIdInTxnOffsetCommitByGroupMetadata['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "client.prepareResponse(null,new TxnOffsetCommitResponse(0,singletonMap(tp,Errors.FENCED_INSTANCE_ID)))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "doInitTransactions()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "client.prepareResponse(null,new TxnOffsetCommitResponse(0,singletonMap(tp,Errors.FENCED_INSTANCE_ID)))@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertFalse(sendOffsetsResult.isSuccessful())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testFencedInstanceIdInTxnOffsetCommitByGroupMetadata['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "runUntil(null)@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "final TopicPartition tp = new TopicPartition(\"foo\",0)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(transactionManager.lastError() instanceof FencedInstanceIdException)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertAbortableError()@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(sendOffsetsResult.isCompleted())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->3 [style = solid, label="consumerGroupId"];
5->10 [style = bold, label=""];
14->17 [style = solid, label="consumerGroupId"];
9->16 [style = solid, label="epoch"];
9->15 [style = solid, label="epoch"];
9->2 [style = bold, label=""];
3->1 [style = dashed, label="0"];
2->6 [style = bold, label=""];
29->27 [style = dotted, label="true"];
0->12 [style = bold, label=""];
26->1 [style = bold, label=""];
20->0 [style = bold, label=""];
1->3 [style = bold, label=""];
2->20 [style = solid, label="tp"];
3->15 [style = bold, label=""];
5->3 [style = solid, label="fencedMemberId"];
5->1 [style = solid, label="fencedMemberId"];
11->9 [style = bold, label=""];
12->7 [style = bold, label=""];
19->8 [style = bold, label=""];
5->25 [style = bold, label=""];
2->3 [style = solid, label="tp"];
2->0 [style = solid, label="tp"];
21->2 [style = bold, label=""];
30->32 [style = solid, label="error"];
1->22 [style = bold, label=""];
15->22 [style = dashed, label="0"];
6->5 [style = bold, label=""];
15->17 [style = bold, label=""];
14->15 [style = solid, label="consumerGroupId"];
20->23 [style = bold, label=""];
10->16 [style = bold, label=""];
29->28 [style = dotted, label="true"];
16->1 [style = bold, label=""];
11->16 [style = solid, label="pid"];
2->1 [style = solid, label="tp"];
29->32 [style = bold, label=""];
25->26 [style = bold, label=""];
24->17 [style = bold, label=""];
29->30 [style = dotted, label="true"];
23->12 [style = bold, label=""];
29->31 [style = dotted, label="true"];
22->24 [style = bold, label=""];
14->11 [style = bold, label=""];
7->19 [style = bold, label=""];
18->14 [style = bold, label=""];
11->15 [style = solid, label="pid"];
10->3 [style = solid, label="instanceId"];
8->13 [style = bold, label=""];
2->5 [style = bold, label=""];
17->20 [style = bold, label=""];
13->4 [style = bold, label=""];
}
