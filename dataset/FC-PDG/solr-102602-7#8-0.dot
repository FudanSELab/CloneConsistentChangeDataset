digraph {
21 [style = filled, label = "rawLockType = \"native\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "String lockPath@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "LOG.warn(\"No lockType configured, assuming 'hdfs'.\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return new SingleInstanceLockFactory()@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return new HdfsLockFactory(new Path(lockPath),getConf())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "createLockFactory['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "createLockFactory['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "return NoLockFactory.getNoLockFactory()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "return new SimpleFSLockFactory(new File(lockPath).toPath())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "null == rawLockType@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "return new SingleInstanceLockFactory()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "rawLockType = \"hdfs\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "return NoLockFactory.INSTANCE@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "lockType@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "createLockFactory['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String rawLockType@@@2@@@['1', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return HdfsLockFactory.INSTANCE@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "log.warn(\"No lockType configured, assuming 'native'.\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final String lockType = rawLockType.toLowerCase(Locale.ROOT).trim()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String lockPath@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String rawLockType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "return new NativeFSLockFactory(new File(lockPath).toPath())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\"Unrecognized lockType: \" + rawLockType)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2->20 [style = dotted, label="true"];
2->20 [style = bold, label=""];
2->19 [style = bold, label=""];
5->14 [style = dashed, label="0"];
17->18 [style = dotted, label="true"];
0->10 [style = dotted, label="true"];
11->14 [style = bold, label=""];
2->6 [style = bold, label=""];
2->1 [style = bold, label=""];
9->6 [style = solid, label="rawLockType"];
0->4 [style = dotted, label="true"];
22->21 [style = bold, label=""];
4->6 [style = solid, label="rawLockType"];
3->9 [style = dotted, label="true"];
10->22 [style = dashed, label="0"];
16->19 [style = bold, label=""];
9->0 [style = solid, label="rawLockType"];
4->21 [style = dashed, label="0"];
13->11 [style = bold, label=""];
4->7 [style = bold, label=""];
3->0 [style = bold, label=""];
1->11 [style = bold, label=""];
0->22 [style = dotted, label="true"];
0->7 [style = bold, label=""];
2->11 [style = dotted, label="true"];
2->19 [style = dotted, label="true"];
2->13 [style = bold, label=""];
6->20 [style = bold, label=""];
19->5 [style = bold, label=""];
1->13 [style = dashed, label="0"];
11->5 [style = bold, label=""];
8->1 [style = solid, label="lockPath"];
0->10 [style = bold, label=""];
17->0 [style = bold, label=""];
0->21 [style = dotted, label="true"];
5->6 [style = bold, label=""];
2->6 [style = dotted, label="true"];
2->1 [style = dotted, label="true"];
7->2 [style = bold, label=""];
1->16 [style = dashed, label="0"];
15->0 [style = bold, label=""];
12->6 [style = solid, label="rawLockType"];
17->9 [style = dotted, label="true"];
2->14 [style = bold, label=""];
0->22 [style = bold, label=""];
10->4 [style = bold, label=""];
15->12 [style = dotted, label="true"];
21->7 [style = bold, label=""];
12->0 [style = solid, label="rawLockType"];
2->14 [style = dotted, label="true"];
9->12 [style = dashed, label="0"];
9->20 [style = solid, label="rawLockType"];
2->5 [style = dotted, label="true"];
3->8 [style = dotted, label="true"];
7->2 [style = solid, label="lockType"];
21->20 [style = solid, label="rawLockType"];
2->11 [style = bold, label=""];
14->6 [style = bold, label=""];
2->13 [style = dotted, label="true"];
2->16 [style = dotted, label="true"];
2->5 [style = bold, label=""];
2->16 [style = bold, label=""];
}
