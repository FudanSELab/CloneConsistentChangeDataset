digraph {
8 [style = filled, label = "removerClient.removeWatchers()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "internalTryBasic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final CountDownLatch latch = new CountDownLatch(1)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "client.getConfig().usingWatcher(watcher).forEnsemble()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertTrue(new Timing().awaitLatch(latch))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "Assert.assertEquals(existWatches.size(),0)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertEquals(existWatches.size(),0)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertEquals(existWatches.size(),1)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Watcher watcher = new Watcher(){@Override public void process(WatchedEvent event){if (event.getType() == Event.EventType.DataWatchRemoved) {latch.countDown()}}}@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Watcher watcher = new Watcher(){@Override public void process(WatchedEvent event){if (event.getType() == Event.EventType.NodeDataChanged) {latch.countDown()}}}@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "WatcherRemoveCuratorFramework removerClient = client.newWatcherRemoveCuratorFramework()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertTrue(new Timing().awaitLatch(latch))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "return latch@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "setChangeWaiter['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "List<String> existWatches = WatchersDebug.getExistWatches(client.getZookeeperClient().getZooKeeper())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "removerClient.checkExists().usingWatcher(watcher).forPath(\"/hey\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(existWatches.size(),1)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "CuratorFramework client@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "CuratorFramework client@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "existWatches = WatchersDebug.getExistWatches(client.getZookeeperClient().getZooKeeper())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "internalTryBasic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7->12 [style = solid, label="latch"];
20->17 [style = bold, label=""];
7->2 [style = solid, label="latch"];
2->1 [style = bold, label=""];
12->1 [style = bold, label=""];
7->3 [style = bold, label=""];
6->15 [style = bold, label=""];
9->6 [style = bold, label=""];
19->16 [style = bold, label=""];
17->16 [style = solid, label="latch"];
17->7 [style = bold, label=""];
3->9 [style = bold, label=""];
9->19 [style = dashed, label="0"];
6->4 [style = bold, label=""];
11->5 [style = bold, label=""];
2->12 [style = dashed, label="0"];
8->2 [style = bold, label=""];
13->0 [style = dotted, label="true"];
4->15 [style = dashed, label="0"];
11->0 [style = dotted, label="true"];
13->5 [style = bold, label=""];
20->18 [style = dotted, label="true"];
0->18 [style = dashed, label="0"];
5->7 [style = bold, label=""];
4->8 [style = bold, label=""];
1->14 [style = bold, label=""];
1->10 [style = bold, label=""];
7->19 [style = bold, label=""];
15->8 [style = bold, label=""];
8->12 [style = bold, label=""];
10->14 [style = dashed, label="0"];
}
