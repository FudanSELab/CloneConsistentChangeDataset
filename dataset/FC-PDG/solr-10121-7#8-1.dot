digraph {
32 [style = filled, label = "NumberFormatException e@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "zkHostExpression.getParameter() instanceof StreamExpressionValue@@@41@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "null == zkHostExpression@@@35@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "zkHost = factory.getCollectionZkHost(collectionName)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "StreamExpressionNamedParameter sortExpression = factory.getNamedOperand(expression,\"sort\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "StreamExpressionNamedParameter sortExpression = factory.getNamedOperand(expression,SORT)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "int workersInt = 0@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "StreamFactory factory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "null == zkHost@@@44@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - topN '%s' is not a valid integer.\",expression,nStr))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "workersInt <= 0@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "ParallelStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "StreamExpression expression@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "init(streamComparator,nInt)@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "null == workersParam || null == workersParam.getParameter() || !(workersParam.getParameter() instanceof StreamExpressionValue)@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "nInt = Integer.parseInt(nStr)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String collectionName = factory.getValueOperand(expression,0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "null == sortExpression || !(sortExpression.getParameter() instanceof StreamExpressionValue)@@@31@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "String zkHost = null@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "StreamExpressionNamedParameter zkHostExpression = factory.getNamedOperand(expression,\"zkHost\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "String workersStr = ((StreamExpressionValue)workersParam.getParameter()).getValue()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - collectionName expected as first operand\",expression))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found\",expression))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "workersInt = Integer.parseInt(workersStr)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a single 'workers' parameter of type positive integer but didn't find one\",expression))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "expression.getParameters().size() != streamExpressions.size() + 3 + (null != zkHostExpression? 1: 0)@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "int nInt = 0@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "StreamExpressionNamedParameter workersParam = factory.getNamedOperand(expression,\"workers\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "GroupOperation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "StreamExpressionNamedParameter sortExpression = factory.getNamedOperand(expression,\"sort\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - zkHost not found for collection '%s'\",expression,collectionName))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "1 != streamExpressions.size()@@@28@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "StreamExpression expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting single 'sort' parameter telling us how to join the parallel streams but didn't find one\",expression))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "zkHost == null@@@37@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "StreamFactory factory@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "StreamComparator streamComparator = factory.constructComparator(((StreamExpressionValue)sortExpression.getParameter()).getValue(),)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "zkHost = factory.getDefaultZkHost()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - topN '%s' must be greater than 0.\",expression,nStr))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - workers '%s' is not a valid integer.\",expression,workersStr))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "List<StreamExpression> streamExpressions = factory.getExpressionOperandsRepresentingTypes(expression,,)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "zkHost = ((StreamExpressionValue)zkHostExpression.getParameter()).getValue()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a single stream but found %d\",expression,streamExpressions.size()))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "init(zkHost,collectionName,stream,workersInt,comp)@@@50@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "NumberFormatException e@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "GroupOperation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - workers '%s' must be greater than 0.\",expression,workersStr))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "StreamExpression expression@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "StreamComparator comp = factory.constructComparator(((StreamExpressionValue)sortExpression.getParameter()).getValue(),)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "streamFactory = factory@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "StreamExpressionNamedParameter nParam = factory.getNamedOperand(expression,\"n\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "null == collectionName@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "TupleStream stream = factory.constructStream(streamExpressions.get(0))@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "nInt <= 0@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11->53 [style = dashed, label="0"];
21->42 [style = bold, label=""];
5->9 [style = bold, label=""];
25->22 [style = bold, label=""];
41->50 [style = solid, label="comp"];
0->44 [style = dashed, label="0"];
51->45 [style = dotted, label="true"];
53->52 [style = dotted, label="true"];
18->30 [style = bold, label=""];
5->15 [style = bold, label=""];
42->51 [style = dotted, label="true"];
46->27 [style = solid, label="expression"];
29->26 [style = dotted, label="true"];
41->20 [style = bold, label=""];
11->7 [style = solid, label="nStr"];
31->24 [style = solid, label="workersInt"];
31->50 [style = solid, label="workersInt"];
33->50 [style = solid, label="zkHost"];
29->18 [style = bold, label=""];
42->17 [style = dotted, label="true"];
47->53 [style = solid, label="zkHostExpression"];
14->5 [style = solid, label="expression"];
45->25 [style = bold, label=""];
38->49 [style = bold, label=""];
1->10 [style = solid, label="nInt"];
33->25 [style = bold, label=""];
10->12 [style = bold, label=""];
37->38 [style = bold, label=""];
45->25 [style = solid, label="zkHost"];
46->49 [style = solid, label="expression"];
8->11 [style = bold, label=""];
27->29 [style = solid, label="collectionName"];
10->24 [style = dashed, label="0"];
42->19 [style = bold, label=""];
9->15 [style = dashed, label="0"];
53->29 [style = bold, label=""];
47->53 [style = bold, label=""];
24->28 [style = bold, label=""];
28->37 [style = bold, label=""];
30->28 [style = solid, label="workersStr"];
46->11 [style = solid, label="expression"];
12->37 [style = dashed, label="0"];
36->41 [style = bold, label=""];
25->36 [style = bold, label=""];
8->12 [style = solid, label="streamComparator"];
53->52 [style = bold, label=""];
1->31 [style = dashed, label="0"];
14->15 [style = solid, label="expression"];
47->42 [style = solid, label="zkHostExpression"];
45->50 [style = solid, label="zkHost"];
19->33 [style = dotted, label="true"];
9->8 [style = bold, label=""];
46->47 [style = solid, label="expression"];
10->7 [style = bold, label=""];
19->25 [style = bold, label=""];
23->48 [style = bold, label=""];
29->26 [style = bold, label=""];
17->51 [style = bold, label=""];
27->17 [style = solid, label="collectionName"];
13->32 [style = dashed, label="0"];
39->20 [style = solid, label="factory"];
5->27 [style = dashed, label="0"];
13->0 [style = dotted, label="true"];
16->14 [style = dotted, label="true"];
35->46 [style = dotted, label="true"];
51->25 [style = bold, label=""];
44->37 [style = bold, label=""];
34->38 [style = bold, label=""];
46->34 [style = solid, label="expression"];
46->23 [style = solid, label="expression"];
13->0 [style = bold, label=""];
21->25 [style = solid, label="zkHost"];
19->33 [style = bold, label=""];
4->9 [style = solid, label="expression"];
4->5 [style = solid, label="expression"];
17->50 [style = solid, label="zkHost"];
3->1 [style = bold, label=""];
30->43 [style = bold, label=""];
31->24 [style = bold, label=""];
0->12 [style = bold, label=""];
18->40 [style = bold, label=""];
11->1 [style = solid, label="nStr"];
46->48 [style = solid, label="expression"];
46->22 [style = solid, label="expression"];
38->49 [style = dotted, label="true"];
4->7 [style = solid, label="expression"];
42->19 [style = dotted, label="false"];
46->40 [style = solid, label="expression"];
51->45 [style = bold, label=""];
11->3 [style = bold, label=""];
2->6 [style = dotted, label="true"];
48->11 [style = bold, label=""];
7->28 [style = dashed, label="0"];
27->50 [style = solid, label="collectionName"];
2->4 [style = dotted, label="true"];
11->47 [style = bold, label=""];
16->5 [style = bold, label=""];
32->44 [style = bold, label=""];
40->30 [style = bold, label=""];
37->34 [style = dotted, label="true"];
32->44 [style = dotted, label="true"];
15->8 [style = bold, label=""];
2->5 [style = bold, label=""];
43->31 [style = bold, label=""];
20->50 [style = bold, label=""];
35->39 [style = dotted, label="true"];
35->27 [style = bold, label=""];
14->7 [style = solid, label="expression"];
30->31 [style = solid, label="workersStr"];
7->12 [style = bold, label=""];
27->22 [style = solid, label="collectionName"];
42->17 [style = bold, label=""];
46->26 [style = solid, label="expression"];
18->40 [style = dotted, label="true"];
24->28 [style = dotted, label="true"];
23->18 [style = solid, label="workersParam"];
49->21 [style = bold, label=""];
33->25 [style = solid, label="zkHost"];
6->46 [style = dashed, label="0"];
17->25 [style = solid, label="zkHost"];
46->52 [style = solid, label="expression"];
17->51 [style = solid, label="zkHost"];
37->34 [style = bold, label=""];
21->50 [style = solid, label="zkHost"];
22->36 [style = bold, label=""];
36->50 [style = solid, label="stream"];
24->37 [style = bold, label=""];
11->38 [style = solid, label="sortExpression"];
25->22 [style = dotted, label="true"];
38->21 [style = bold, label=""];
1->12 [style = solid, label="nInt"];
27->23 [style = bold, label=""];
52->29 [style = bold, label=""];
1->10 [style = bold, label=""];
46->28 [style = solid, label="expression"];
10->7 [style = dotted, label="true"];
16->6 [style = dotted, label="true"];
26->18 [style = bold, label=""];
}
