digraph {
0 [style = filled, label = "verify(,streamsMetrics)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final String operation = \"process-records\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final String operation = \"task-closed\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final String maxDescription = \"The maximum number of records processed within an iteration\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "when(streamsMetrics.threadLevelTagMap(THREAD_ID)).thenReturn(tagMap)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertThat(sensor,is(expectedSensor))@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final String totalDescription = \"The total number of closed tasks\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final Sensor sensor = ThreadMetrics.closeTaskSensor(THREAD_ID,streamsMetrics)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "shouldGetCloseTaskSensor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "replay(,streamsMetrics)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final String avgDescription = \"The average number of records processed within an iteration\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final String rateDescription = \"The average per-second number of closed tasks\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "expect(streamsMetrics.threadLevelSensor(THREAD_ID,operation,RecordingLevel.INFO)).andReturn(expectedSensor)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "when(streamsMetrics.threadLevelSensor(THREAD_ID,operation,RecordingLevel.INFO)).thenReturn(expectedSensor)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "shouldGetProcessRecordsSensor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "shouldGetProcessRecordsSensor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "expect(streamsMetrics.threadLevelTagMap(THREAD_ID)).andReturn(tagMap)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "StreamsMetricsImpl.addAvgAndMaxToSensor(expectedSensor,THREAD_LEVEL_GROUP,tagMap,operation,avgDescription,maxDescription)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "StreamsMetricsImpl.addInvocationRateAndCountToSensor(expectedSensor,THREAD_LEVEL_GROUP,tagMap,operation,rateDescription,totalDescription)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final Sensor sensor = ThreadMetrics.processRecordsSensor(THREAD_ID,streamsMetrics)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->18 [style = solid, label="totalDescription"];
0->9 [style = bold, label=""];
2->19 [style = dashed, label="0"];
7->1 [style = bold, label=""];
19->18 [style = solid, label="rateDescription"];
10->15 [style = bold, label=""];
4->17 [style = dashed, label="0"];
2->6 [style = bold, label=""];
8->1 [style = solid, label="avgDescription"];
11->4 [style = bold, label=""];
1->3 [style = bold, label=""];
10->3 [style = bold, label=""];
14->19 [style = bold, label=""];
1->18 [style = dashed, label="0"];
16->17 [style = bold, label=""];
8->14 [style = dashed, label="0"];
19->6 [style = bold, label=""];
12->1 [style = bold, label=""];
4->1 [style = solid, label="operation"];
3->0 [style = bold, label=""];
2->13 [style = bold, label=""];
3->9 [style = bold, label=""];
13->12 [style = bold, label=""];
6->13 [style = dashed, label="0"];
18->10 [style = bold, label=""];
8->2 [style = bold, label=""];
2->1 [style = solid, label="maxDescription"];
17->14 [style = bold, label=""];
15->0 [style = bold, label=""];
5->4 [style = bold, label=""];
7->18 [style = bold, label=""];
7->12 [style = dashed, label="0"];
3->15 [style = dashed, label="0"];
4->8 [style = bold, label=""];
3->9 [style = solid, label="sensor"];
6->7 [style = bold, label=""];
1->10 [style = bold, label=""];
17->18 [style = solid, label="operation"];
15->9 [style = solid, label="sensor"];
}
