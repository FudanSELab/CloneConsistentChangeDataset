digraph {
5 [style = filled, label = "DataFile dataFile2 = helper.writeFile(TestHelpers.Row.of(\"2020-03-21\",0),RandomGenericData.generate(SCHEMA,2,0L))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testFilterExp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<Record> expectedRecords = RandomGenericData.generate(SCHEMA,2,0L)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testProjection['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "List<Record> inputRecords = RandomGenericData.generate(SCHEMA,1,0L)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "DataFile dataFile1 = helper.writeFile(TestHelpers.Row.of(\"2020-03-20\",0),expectedRecords)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "expectedRecords.get(0).set(2,\"2020-03-20\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expectedRecords.get(1).set(2,\"2020-03-20\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertRecords(execute(table,filters,\"dt='2020-03-20'\"),expectedRecords,SCHEMA)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "List<Expression> filters = Collections.singletonList(Expressions.equal(\"dt\",\"2020-03-20\"))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "helper.appendToTable(dataFile1,dataFile2)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Table table = catalog.createTable(TableIdentifier.of(\"default\",\"t\"),SCHEMA,SPEC)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "GenericAppenderHelper helper = new GenericAppenderHelper(table,fileFormat,TEMPORARY_FOLDER)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertRows(execute(table,Collections.singletonList(\"data\")),Row.of(inputRecords.get(0).get(0)))@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertRecords(runWithFilter(Expressions.equal(\"dt\",\"2020-03-20\"),\"where dt='2020-03-20'\"),expectedRecords,SCHEMA)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "new GenericAppenderHelper(table,fileFormat,TEMPORARY_FOLDER).appendToTable(org.apache.iceberg.TestHelpers.Row.of(\"2020-03-20\",0),inputRecords)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testFilterExp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10->15 [style = dashed, label="0"];
9->0 [style = bold, label=""];
15->14 [style = bold, label=""];
16->8 [style = bold, label=""];
3->11 [style = solid, label="expectedRecords"];
3->6 [style = solid, label="expectedRecords"];
13->15 [style = solid, label="inputRecords"];
3->4 [style = solid, label="expectedRecords"];
8->3 [style = bold, label=""];
7->11 [style = dashed, label="0"];
8->14 [style = solid, label="table"];
8->6 [style = solid, label="table"];
3->13 [style = dashed, label="0"];
1->7 [style = bold, label=""];
1->11 [style = bold, label=""];
3->10 [style = bold, label=""];
5->1 [style = bold, label=""];
7->6 [style = solid, label="filters"];
9->14 [style = dashed, label="0"];
0->4 [style = bold, label=""];
4->1 [style = solid, label="dataFile1"];
12->8 [style = bold, label=""];
7->6 [style = bold, label=""];
5->1 [style = solid, label="dataFile2"];
8->0 [style = solid, label="table"];
10->9 [style = bold, label=""];
13->15 [style = bold, label=""];
4->5 [style = bold, label=""];
8->13 [style = bold, label=""];
2->8 [style = bold, label=""];
}
