digraph {
46 [style = filled, label = "Iterator<Object> publicIterator = publicCredentials.iterator()@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "OAuthBearerLoginModule loginModule3 = new OAuthBearerLoginModule()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "login1Commit1Logout1Login2Commit2Logout2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertSame(extensions(1(,publicCredentials.iterator().next())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Set<Object> publicCredentials = subject.getPublicCredentials()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "loginModule1.login()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "SaslExtensions(( extensions = new SaslExtensions((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@cd12c9@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertSame(tokens(0(,privateCredentials.iterator().next())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "assertSame(tokens(2(,privateCredentials.iterator().next())@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "assertSame(extensions(0(,publicCredentials.iterator().next())@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "login1Commit1Login2Abort2Login3Commit3Logout3['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "assertSame(extensions(2(,publicCredentials.iterator().next())@@@59@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Set<Object> privateCredentials = subject.getPrivateCredentials()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "loginModule2.initialize(subject,testTokenCallbackHandler,Collections.emptyMap(),Collections.emptyMap())@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertSame(extensions(0(,publicCredentials.iterator().next())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertNotSame(extensions(1(,publicIterator.next())@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(0,privateCredentials.size())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "loginModule1.logout()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "EasyMock.replay(tokens(0(,tokens(1()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertNotSame(extensions(1(,publicIterator.next())@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(2,publicCredentials.size())@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "loginModule2.commit()@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "EasyMock.replay(extensions(0(,extensions(1(,extensions(2()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "loginModule3.initialize(subject,testTokenCallbackHandler,Collections.emptyMap(),Collections.emptyMap())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "loginModule2.commit()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(0,publicCredentials.size())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertSame(tokens(1(,privateCredentials.iterator().next())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "loginModule2.initialize(subject,testTokenCallbackHandler,Collections.emptyMap(),Collections.emptyMap())@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "assertSame(tokens(0(,privateCredentials.iterator().next())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "OAuthBearerToken(( tokens = new OAuthBearerToken((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@cd12b6@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(0,publicCredentials.size())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(0,privateCredentials.size())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "OAuthBearerLoginModule loginModule2 = new OAuthBearerLoginModule()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "OAuthBearerLoginModule loginModule1 = new OAuthBearerLoginModule()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "loginModule1.initialize(subject,testTokenCallbackHandler,Collections.emptyMap(),Collections.emptyMap())@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "loginModule2.abort()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "login1Commit1Logout1Login2Commit2Logout2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(0,publicCredentials.size())@@@42@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(0,privateCredentials.size())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertSame(extensions(0(,publicCredentials.iterator().next())@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "loginModule2.login()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertSame(tokens(0(,privateCredentials.iterator().next())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertSame(tokens(0(,privateCredentials.iterator().next())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(0,privateCredentials.size())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "loginModule2.login()@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(0,publicCredentials.size())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "EasyMock.replay(extensions(0(,extensions(1()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(0,privateCredentials.size())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TestCallbackHandler testTokenCallbackHandler = new TestCallbackHandler(tokens,extensions)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Subject subject = new Subject()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertNotSame(tokens(1(,iterator.next())@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "loginModule1.commit()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(0,publicCredentials.size())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertNotSame(tokens(1(,iterator.next())@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(2,privateCredentials.size())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertSame(extensions(0(,publicCredentials.iterator().next())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "Iterator<Object> iterator = privateCredentials.iterator()@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "loginModule1.initialize(subject,testTokenCallbackHandler,Collections.emptyMap(),Collections.emptyMap())@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "loginModule2.logout()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "EasyMock.replay(tokens(0(,tokens(1(,tokens(2()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "loginModule1.logout()@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39->17 [style = bold, label=""];
58->55 [style = bold, label=""];
26->17 [style = bold, label=""];
38->36 [style = bold, label=""];
24->63 [style = solid, label="tokens"];
31->62 [style = solid, label="extensions"];
67->21 [style = bold, label=""];
21->15 [style = solid, label="subject"];
23->10 [style = bold, label=""];
59->46 [style = solid, label="iterator"];
53->52 [style = bold, label=""];
24->42 [style = solid, label="tokens"];
69->40 [style = bold, label=""];
14->19 [style = bold, label=""];
3->1 [style = bold, label=""];
1->33 [style = bold, label=""];
41->54 [style = bold, label=""];
19->27 [style = bold, label=""];
15->38 [style = dashed, label="0"];
21->26 [style = solid, label="subject"];
16->6 [style = bold, label=""];
31->61 [style = solid, label="extensions"];
31->34 [style = solid, label="extensions"];
9->14 [style = bold, label=""];
24->52 [style = solid, label="tokens"];
26->56 [style = bold, label=""];
63->64 [style = bold, label=""];
3->71 [style = dashed, label="0"];
24->60 [style = solid, label="tokens"];
26->39 [style = dashed, label="0"];
35->34 [style = bold, label=""];
40->11 [style = bold, label=""];
52->61 [style = bold, label=""];
28->38 [style = bold, label=""];
25->14 [style = bold, label=""];
65->44 [style = bold, label=""];
21->38 [style = solid, label="subject"];
31->71 [style = solid, label="extensions"];
35->69 [style = dashed, label="0"];
27->8 [style = bold, label=""];
37->21 [style = bold, label=""];
61->72 [style = bold, label=""];
60->43 [style = bold, label=""];
21->39 [style = solid, label="subject"];
0->16 [style = bold, label=""];
15->36 [style = bold, label=""];
8->22 [style = bold, label=""];
31->49 [style = solid, label="extensions"];
49->58 [style = bold, label=""];
11->26 [style = solid, label="testTokenCallbackHandler"];
32->29 [style = bold, label=""];
11->28 [style = bold, label=""];
6->23 [style = bold, label=""];
34->40 [style = dashed, label="0"];
27->53 [style = dashed, label="0"];
64->71 [style = bold, label=""];
57->63 [style = bold, label=""];
11->38 [style = solid, label="testTokenCallbackHandler"];
31->65 [style = solid, label="extensions"];
72->66 [style = bold, label=""];
33->5 [style = bold, label=""];
62->51 [style = bold, label=""];
24->35 [style = solid, label="tokens"];
31->69 [style = bold, label=""];
24->2 [style = solid, label="tokens"];
45->59 [style = bold, label=""];
28->15 [style = bold, label=""];
43->65 [style = bold, label=""];
66->41 [style = bold, label=""];
19->68 [style = dashed, label="0"];
24->31 [style = bold, label=""];
24->69 [style = solid, label="tokens"];
31->51 [style = solid, label="extensions"];
12->3 [style = bold, label=""];
21->47 [style = solid, label="subject"];
24->41 [style = solid, label="tokens"];
56->47 [style = bold, label=""];
21->7 [style = bold, label=""];
31->1 [style = solid, label="extensions"];
22->12 [style = bold, label=""];
68->53 [style = bold, label=""];
51->70 [style = bold, label=""];
29->9 [style = bold, label=""];
25->32 [style = bold, label=""];
54->49 [style = bold, label=""];
24->11 [style = solid, label="tokens"];
10->2 [style = bold, label=""];
70->57 [style = bold, label=""];
31->25 [style = solid, label="extensions"];
59->50 [style = bold, label=""];
44->45 [style = bold, label=""];
34->11 [style = bold, label=""];
11->15 [style = solid, label="testTokenCallbackHandler"];
24->50 [style = solid, label="tokens"];
50->42 [style = bold, label=""];
31->11 [style = solid, label="extensions"];
2->25 [style = bold, label=""];
42->48 [style = bold, label=""];
31->35 [style = bold, label=""];
46->62 [style = bold, label=""];
11->39 [style = solid, label="testTokenCallbackHandler"];
47->17 [style = bold, label=""];
36->26 [style = bold, label=""];
5->20 [style = bold, label=""];
48->46 [style = bold, label=""];
55->60 [style = bold, label=""];
11->47 [style = solid, label="testTokenCallbackHandler"];
31->40 [style = solid, label="extensions"];
14->68 [style = bold, label=""];
30->24 [style = bold, label=""];
36->39 [style = bold, label=""];
24->3 [style = solid, label="tokens"];
4->0 [style = bold, label=""];
18->4 [style = bold, label=""];
7->30 [style = bold, label=""];
13->21 [style = bold, label=""];
17->18 [style = bold, label=""];
}
