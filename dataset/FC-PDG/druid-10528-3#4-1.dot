digraph {
5 [style = filled, label = "final CompactSegments compactSegments = new CompactSegments(JSON_MAPPER,indexingServiceClient)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "verifySnapshot(compactSegments,AutoCompactionSnapshot.AutoCompactionScheduleStatus.RUNNING,dataSourceName,TOTAL_BYTE_PER_DATASOURCE - 120 - 40 * (compaction_run_count + 1),40 * (compaction_run_count + 1),1200,TOTAL_INTERVAL_PER_DATASOURCE - 3 - (compaction_run_count + 1),(compaction_run_count + 1),3,TOTAL_SEGMENT_PER_DATASOURCE - 12 - 4 * (compaction_run_count + 1),4 + 2 * (compaction_run_count),12)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "segments.add(beforeNoon)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "afterNoon = afterNoon.withLastCompactionState(new CompactionState(partitionsSpec,ImmutableMap.of()))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "verifySnapshot(compactSegments,AutoCompactionSnapshot.AutoCompactionScheduleStatus.RUNNING,dataSourceName,TOTAL_BYTE_PER_DATASOURCE - 120 - 40 * (compactionRunCount + 1),120 + 40 * (compactionRunCount + 1),0,TOTAL_INTERVAL_PER_DATASOURCE - 3 - (compactionRunCount + 1),3 + (compactionRunCount + 1),0,TOTAL_SEGMENT_PER_DATASOURCE - 12 - 4 * (compactionRunCount + 1),12 + 4 + 2 * (compactionRunCount),0)@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "Map<String,AutoCompactionSnapshot> autoCompactionSnapshots = compactSegments.getAutoCompactionSnapshot()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "j == 3@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "k < 4@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String dataSourceName = DATA_SOURCE_PREFIX + 1@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "afterNoon = afterNoon.withLastCompactionState(new CompactionState(partitionsSpec,ImmutableMap.of()))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "testMakeStatsForDataSourceWithSkipped['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "compaction_run_count++@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "List<DataSegment> segments = new ArrayList<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int k = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "j == 1@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "verifySnapshot(compactSegments,AutoCompactionSnapshot.AutoCompactionScheduleStatus.RUNNING,dataSourceName,TOTAL_BYTE_PER_DATASOURCE - 120 - 40 * (compaction_run_count + 1),120 + 40 * (compaction_run_count + 1),0,TOTAL_INTERVAL_PER_DATASOURCE - 3 - (compaction_run_count + 1),3 + (compaction_run_count + 1),0,TOTAL_SEGMENT_PER_DATASOURCE - 12 - 4 * (compaction_run_count + 1),12 + 4 + 2 * (compaction_run_count),0)@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "dataSources = DataSourcesSnapshot.fromUsedSegments(segments,ImmutableMap.of()).getUsedSegmentsTimelinesPerDataSource()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final CoordinatorStats stats = doCompactSegments(compactSegments)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "compactionRunCount < 8@@@32@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "testMakeStatsForDataSourceWithCompactedIntervalBetweenNonCompactedIntervals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "int compaction_run_count = 0@@@31@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "compaction_run_count < 8@@@32@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "DataSegment afterNoon = createSegment(dataSourceName,j,false,k)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testMakeStatsForDataSourceWithCompactedIntervalBetweenNonCompactedIntervals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "final TestDruidLeaderClient leaderClient = new TestDruidLeaderClient(JSON_MAPPER)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final CoordinatorStats stats = doCompactSegments(compactSegments)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "beforeNoon = beforeNoon.withSize(100)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "verifySnapshot(compactSegments,AutoCompactionSnapshot.AutoCompactionScheduleStatus.RUNNING,dataSourceName,0,TOTAL_BYTE_PER_DATASOURCE,0,0,TOTAL_INTERVAL_PER_DATASOURCE,0,0,12 + 16,0)@@@40@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(0,stats.getGlobalStat(CompactSegments.COMPACTION_TASK_COUNT))@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "k++@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(0,autoCompactionSnapshots.size())@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "DataSegment beforeNoon = createSegment(dataSourceName,j,true,k)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "afterNoon = afterNoon.withSize(100)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "beforeNoon = beforeNoon.withLastCompactionState(new CompactionState(partitionsSpec,ImmutableMap.of()))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "segments.add(afterNoon)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "compactionRunCount++@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "verifySnapshot(compactSegments,AutoCompactionSnapshot.AutoCompactionScheduleStatus.RUNNING,dataSourceName,0,TOTAL_BYTE_PER_DATASOURCE - 120,1200,0,TOTAL_INTERVAL_PER_DATASOURCE - 3,3,0,16,12)@@@40@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "afterNoon = afterNoon.withSize(100)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "leaderClient.start()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(1,stats.getGlobalStat(CompactSegments.COMPACTION_TASK_COUNT))@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "int compactionRunCount = 0@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "final HttpIndexingServiceClient indexingServiceClient = new HttpIndexingServiceClient(JSON_MAPPER,leaderClient)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->26 [style = bold, label=""];
33->35 [style = solid, label="compactionRunCount"];
3->40 [style = dashed, label="0"];
34->35 [style = solid, label="compactionRunCount"];
13->2 [style = solid, label="k"];
1->35 [style = solid, label="dataSourceName"];
6->34 [style = dashed, label="0"];
1->4 [style = solid, label="dataSourceName"];
20->37 [style = dashed, label="0"];
9->35 [style = bold, label=""];
12->2 [style = solid, label="k"];
30->11 [style = bold, label=""];
21->24 [style = dotted, label="true"];
2->29 [style = solid, label="beforeNoon"];
12->26 [style = solid, label="k"];
24->17 [style = bold, label=""];
31->30 [style = bold, label=""];
31->34 [style = dotted, label="true"];
21->37 [style = dotted, label="true"];
31->9 [style = dotted, label="true"];
7->22 [style = solid, label="leaderClient"];
36->6 [style = bold, label=""];
1->15 [style = solid, label="dataSourceName"];
28->33 [style = dashed, label="0"];
5->0 [style = solid, label="compactSegments"];
1->2 [style = solid, label="dataSourceName"];
12->8 [style = solid, label="k"];
10->6 [style = dotted, label="true"];
21->20 [style = dotted, label="true"];
24->41 [style = dashed, label="0"];
5->23 [style = bold, label=""];
8->17 [style = dotted, label="true"];
10->31 [style = dashed, label="0"];
34->31 [style = bold, label=""];
22->5 [style = solid, label="indexingServiceClient"];
15->36 [style = dashed, label="0"];
33->34 [style = solid, label="compactionRunCount"];
27->22 [style = bold, label=""];
22->5 [style = bold, label=""];
17->3 [style = dotted, label="true"];
21->37 [style = bold, label=""];
18->1 [style = bold, label=""];
16->33 [style = bold, label=""];
10->0 [style = bold, label=""];
1->38 [style = solid, label="dataSourceName"];
10->0 [style = dotted, label="true"];
8->29 [style = dotted, label="true"];
35->34 [style = bold, label=""];
5->36 [style = solid, label="compactSegments"];
13->26 [style = solid, label="k"];
3->29 [style = bold, label=""];
40->29 [style = bold, label=""];
8->25 [style = dotted, label="true"];
8->21 [style = dotted, label="true"];
3->25 [style = solid, label="afterNoon"];
31->35 [style = dotted, label="true"];
4->38 [style = dashed, label="0"];
28->15 [style = solid, label="compaction_run_count"];
8->2 [style = dotted, label="true"];
31->0 [style = bold, label=""];
37->41 [style = bold, label=""];
20->29 [style = solid, label="beforeNoon"];
11->4 [style = bold, label=""];
17->40 [style = bold, label=""];
6->10 [style = solid, label="compaction_run_count"];
40->25 [style = solid, label="afterNoon"];
10->9 [style = dotted, label="true"];
31->0 [style = dotted, label="true"];
37->29 [style = solid, label="beforeNoon"];
26->21 [style = bold, label=""];
15->35 [style = dashed, label="0"];
26->25 [style = solid, label="afterNoon"];
21->41 [style = dotted, label="true"];
28->6 [style = solid, label="compaction_run_count"];
8->2 [style = bold, label=""];
12->13 [style = solid, label="k"];
12->8 [style = bold, label=""];
6->10 [style = bold, label=""];
32->1 [style = bold, label=""];
34->31 [style = solid, label="compactionRunCount"];
1->26 [style = solid, label="dataSourceName"];
17->3 [style = bold, label=""];
39->1 [style = bold, label=""];
5->38 [style = solid, label="compactSegments"];
6->36 [style = solid, label="compaction_run_count"];
8->13 [style = dotted, label="true"];
28->10 [style = solid, label="compaction_run_count"];
5->30 [style = solid, label="compactSegments"];
24->25 [style = solid, label="afterNoon"];
10->30 [style = bold, label=""];
33->31 [style = solid, label="compactionRunCount"];
8->12 [style = bold, label=""];
41->25 [style = solid, label="afterNoon"];
9->36 [style = bold, label=""];
8->26 [style = dotted, label="true"];
23->16 [style = bold, label=""];
0->9 [style = bold, label=""];
11->38 [style = bold, label=""];
28->10 [style = bold, label=""];
25->13 [style = bold, label=""];
8->19 [style = bold, label=""];
29->25 [style = bold, label=""];
15->6 [style = bold, label=""];
17->40 [style = dotted, label="true"];
10->15 [style = dotted, label="true"];
10->36 [style = dotted, label="true"];
41->17 [style = bold, label=""];
28->36 [style = solid, label="compaction_run_count"];
21->20 [style = bold, label=""];
16->28 [style = bold, label=""];
5->15 [style = solid, label="compactSegments"];
9->15 [style = bold, label=""];
14->12 [style = bold, label=""];
7->27 [style = bold, label=""];
33->31 [style = bold, label=""];
5->4 [style = solid, label="compactSegments"];
1->14 [style = bold, label=""];
6->15 [style = solid, label="compaction_run_count"];
5->35 [style = solid, label="compactSegments"];
13->8 [style = bold, label=""];
20->24 [style = bold, label=""];
17->29 [style = bold, label=""];
21->17 [style = bold, label=""];
19->7 [style = bold, label=""];
1->36 [style = solid, label="dataSourceName"];
13->8 [style = solid, label="k"];
}
