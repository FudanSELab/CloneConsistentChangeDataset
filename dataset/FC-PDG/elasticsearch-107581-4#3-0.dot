digraph {
18 [style = filled, label = "infe = new IndexNotFoundException(\"no indices exist\",(String)null)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "IndexNotFoundException infe@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "throw infe@@@116@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "throw aliasesNotSupportedException(expression)@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "index.getState() == IndexMetadata.State.OPEN@@@102@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "addIndex(writeIndex,context)@@@78@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "IndexNotFoundException infe = new IndexNotFoundException((String)null)@@@114@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "infe = new IndexNotFoundException(expression)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.ALIAS && context.isResolveToWriteIndex()@@@67@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "!options.allowNoIndices()@@@17@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "indexNames(i++( = indexMetadata.getIndex().getName()@@@87@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.DATA_STREAM && context.includeDataStreams() == false@@@10@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "IndexMetadata writeIndex = indexAbstraction.getWriteIndex()@@@77@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "final Set<Index> concreteIndices = new HashSet<>(expressions.size())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "Context context@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "index.getState() == IndexMetadata.State.CLOSE@@@92@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "throw dataStreamsNotSupportedException(expression)@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "indexAbstraction.getIndices()@@@91@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "options.allowNoIndices() == false && concreteIndices.isEmpty()@@@113@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "String expression@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "IndexAbstraction indexAbstraction = metadata.getIndicesLookup().get(expression)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "indexExpressions.length == 1@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "return concreteIndices.toArray(new Index(((()@@@118@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "IndicesOptions options@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.ALIAS && context.getOptions().ignoreAliases()@@@56@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "infe = new IndexNotFoundException((String)null)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "addIndex(index,context)@@@103@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "throw new IllegalArgumentException(\"no write index is defined for alias (\" + indexAbstraction.getName() + \"(.\" + \" The write index may be explicitly disabled using is_write_index=false or the alias points to multiple\" + \" indices without one being designated as a write index\")@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "int i = 0@@@85@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "IndexMetadata index@@@91@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "aliasOrIndexExists['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "infe.setResources(\"index_expression\",expression)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "infe.setResources(\"index_expression\",indexExpressions)@@@115@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "failNoIndices@@@41@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "infe = new IndexNotFoundException((String)null)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return false@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "final boolean failNoIndices = indexExpressions.length == 1? !options.allowNoIndices(): !options.ignoreUnavailable()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.ALIAS && options.ignoreAliases()@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "IndexNotFoundException infe@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "return false@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String(( indexNames = new String((((@@@84@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "indexExpressions = new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13a16e3@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "infe = new IndexNotFoundException(\"no indices exist\",expression)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "concreteIndices.add(writeIndex.getIndex())@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "throw new IllegalArgumentException(indexAbstraction.getType().getDisplayName() + \" (\" + expression + \"( has more than one indices associated with it (\" + Arrays.toString(indexNames) + \"(, can't execute a single index op\")@@@89@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "return true@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "indexAbstraction == null@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Context context@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "throw new IllegalStateException(\"index state (\" + index.getState() + \"( not supported\")@@@108@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "concreteIndices.add(index.getIndex())@@@104@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.DATA_STREAM && context.isResolveToWriteIndex()@@@76@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "indexExpressions(0(.equals(Metadata.ALL)@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "concreteIndices.add(writeIndex.getIndex())@@@79@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "IndicesOptions options = context.getOptions()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.DATA_STREAM && options.includeDataStreams() == false@@@10@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
61 [style = filled, label = "expressions = expressionResolver.resolve(context,expressions)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "throw new IndexClosedException(index.getIndex())@@@94@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "return Index.EMPTY_ARRAY@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "expressions.isEmpty()@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Metadata metadata@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "indexAbstraction == null@@@40@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "final boolean failClosed = options.forbidClosedIndices() && options.ignoreUnavailable() == false@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "failClosed@@@93@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "aliasOrIndexExists['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "infe.setResources(\"index_expression\",indexExpressions)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "options.forbidClosedIndices() == false && addIndex(index,context)@@@97@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "IndicesOptions options@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
66 [style = filled, label = "throw infe@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "List<String> expressions = Arrays.asList(indexExpressions)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "indexAbstraction.getIndices().size() > 1 && !options.allowAliasesToMultipleIndices()@@@83@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "String indexExpressions@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "concreteIndices.add(index.getIndex())@@@98@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Metadata metadata@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
69 [style = filled, label = "expression.equals(Metadata.ALL)@@@43@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.DATA_STREAM && context.getOptions().includeDataStreams() == false@@@64@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "IndexAbstraction indexAbstraction = metadata.getIndicesLookup().get(expression)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Metadata metadata = context.getState().metadata()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "String expression@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
67 [style = filled, label = "writeIndex == null@@@69@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "addIndex(writeIndex,context)@@@72@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
86 [style = filled, label = "failNoIndices@@@57@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "concreteIndices['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "throw infe@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "IndexMetadata indexMetadata@@@86@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "indexExpressions == null || indexExpressions.length == 0@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "indexAbstraction.getIndices()@@@86@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "return false@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "IndexMetadata writeIndex = indexAbstraction.getWriteIndex()@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33->66 [style = dotted, label="true"];
75->66 [style = solid, label="infe"];
33->69 [style = dotted, label="true"];
67->39 [style = bold, label=""];
82->32 [style = dotted, label="true"];
74->22 [style = bold, label=""];
55->72 [style = bold, label=""];
22->31 [style = dotted, label="true"];
65->42 [style = bold, label=""];
60->48 [style = dotted, label="true"];
31->87 [style = bold, label=""];
68->24 [style = bold, label=""];
11->16 [style = dashed, label="0"];
2->5 [style = solid, label="indexAbstraction"];
5->1 [style = dotted, label="true"];
43->81 [style = bold, label=""];
73->61 [style = solid, label="context"];
52->55 [style = bold, label=""];
27->82 [style = bold, label=""];
43->81 [style = dotted, label="false"];
64->77 [style = bold, label=""];
31->74 [style = bold, label=""];
45->24 [style = bold, label=""];
60->59 [style = dotted, label="true"];
65->38 [style = solid, label="indexExpressions"];
63->83 [style = bold, label=""];
55->74 [style = bold, label=""];
56->53 [style = dotted, label="false"];
41->48 [style = bold, label=""];
87->74 [style = bold, label=""];
78->57 [style = dotted, label="true"];
85->61 [style = bold, label=""];
82->68 [style = bold, label=""];
77->33 [style = solid, label="failNoIndices"];
5->0 [style = bold, label=""];
56->74 [style = dotted, label="true"];
84->65 [style = bold, label=""];
33->46 [style = bold, label=""];
57->74 [style = bold, label=""];
47->51 [style = bold, label=""];
22->20 [style = dotted, label="false"];
52->74 [style = bold, label=""];
29->44 [style = bold, label=""];
82->32 [style = bold, label=""];
36->67 [style = solid, label="writeIndex"];
58->84 [style = bold, label=""];
36->67 [style = bold, label=""];
0->3 [style = dotted, label="true"];
13->15 [style = dotted, label="true"];
32->18 [style = bold, label=""];
81->44 [style = bold, label=""];
18->62 [style = solid, label="infe"];
62->40 [style = bold, label=""];
25->50 [style = solid, label="writeIndex"];
60->41 [style = dotted, label="true"];
41->48 [style = solid, label="indexNames"];
60->23 [style = bold, label=""];
0->3 [style = bold, label=""];
21->44 [style = bold, label=""];
86->29 [style = bold, label=""];
48->74 [style = bold, label=""];
56->30 [style = dotted, label="false"];
74->78 [style = bold, label=""];
9->2 [style = bold, label=""];
0->17 [style = bold, label=""];
51->24 [style = dotted, label="true"];
12->2 [style = solid, label="expression"];
39->26 [style = dotted, label="true"];
19->33 [style = dotted, label="true"];
64->78 [style = solid, label="failClosed"];
86->29 [style = dotted, label="true"];
65->85 [style = solid, label="indexExpressions"];
40->76 [style = bold, label=""];
86->72 [style = bold, label=""];
1->0 [style = bold, label=""];
73->50 [style = solid, label="context"];
68->62 [style = solid, label="infe"];
87->76 [style = bold, label=""];
56->25 [style = dotted, label="true"];
56->25 [style = bold, label=""];
72->38 [style = dotted, label="true"];
10->7 [style = bold, label=""];
50->49 [style = bold, label=""];
39->26 [style = bold, label=""];
60->74 [style = bold, label=""];
80->41 [style = bold, label=""];
55->76 [style = bold, label=""];
56->60 [style = dotted, label="false"];
9->8 [style = dotted, label="true"];
39->72 [style = bold, label=""];
3->10 [style = bold, label=""];
5->1 [style = bold, label=""];
60->80 [style = dotted, label="true"];
58->73 [style = dotted, label="true"];
84->42 [style = bold, label=""];
82->68 [style = dotted, label="false"];
22->20 [style = bold, label=""];
57->76 [style = bold, label=""];
7->6 [style = bold, label=""];
31->76 [style = bold, label=""];
77->86 [style = solid, label="failNoIndices"];
51->27 [style = bold, label=""];
9->4 [style = dotted, label="true"];
47->51 [style = dotted, label="true"];
20->74 [style = bold, label=""];
50->72 [style = bold, label=""];
26->76 [style = bold, label=""];
36->39 [style = solid, label="writeIndex"];
79->63 [style = solid, label="infe"];
86->76 [style = bold, label=""];
51->27 [style = dotted, label="true"];
85->61 [style = solid, label="expressions"];
81->21 [style = dotted, label="true"];
19->33 [style = bold, label=""];
50->49 [style = dotted, label="true"];
73->52 [style = solid, label="context"];
13->16 [style = dotted, label="true"];
44->56 [style = bold, label=""];
18->24 [style = bold, label=""];
32->18 [style = dotted, label="true"];
73->31 [style = solid, label="context"];
56->50 [style = dotted, label="true"];
67->54 [style = bold, label=""];
69->75 [style = dotted, label="false"];
17->6 [style = bold, label=""];
47->40 [style = bold, label=""];
52->55 [style = dotted, label="true"];
35->24 [style = solid, label="indexExpressions"];
74->78 [style = dotted, label="true"];
56->60 [style = bold, label=""];
70->34 [style = bold, label=""];
9->11 [style = dotted, label="true"];
23->80 [style = bold, label=""];
44->39 [style = dotted, label="true"];
69->75 [style = bold, label=""];
45->62 [style = solid, label="infe"];
78->52 [style = bold, label=""];
35->85 [style = solid, label="indexExpressions"];
69->70 [style = dotted, label="true"];
33->72 [style = bold, label=""];
10->6 [style = bold, label=""];
33->76 [style = bold, label=""];
54->39 [style = bold, label=""];
26->72 [style = bold, label=""];
81->21 [style = bold, label=""];
19->43 [style = dotted, label="false"];
51->37 [style = bold, label=""];
72->79 [style = dotted, label="true"];
28->64 [style = bold, label=""];
79->38 [style = bold, label=""];
84->65 [style = dotted, label="true"];
10->17 [style = dashed, label="0"];
77->85 [style = bold, label=""];
3->17 [style = bold, label=""];
76->19 [style = bold, label=""];
42->28 [style = bold, label=""];
46->69 [style = bold, label=""];
33->46 [style = dotted, label="true"];
13->14 [style = dotted, label="true"];
5->19 [style = dashed, label="0"];
19->43 [style = bold, label=""];
35->84 [style = solid, label="indexExpressions"];
2->5 [style = bold, label=""];
13->2 [style = bold, label=""];
73->39 [style = solid, label="context"];
31->72 [style = bold, label=""];
32->45 [style = bold, label=""];
34->66 [style = bold, label=""];
44->36 [style = bold, label=""];
49->76 [style = bold, label=""];
13->12 [style = dotted, label="true"];
70->66 [style = solid, label="infe"];
35->38 [style = solid, label="indexExpressions"];
52->76 [style = bold, label=""];
72->83 [style = bold, label=""];
33->34 [style = dotted, label="true"];
60->23 [style = dotted, label="true"];
74->22 [style = dotted, label="false"];
65->24 [style = solid, label="indexExpressions"];
22->31 [style = bold, label=""];
44->36 [style = dotted, label="true"];
52->72 [style = bold, label=""];
44->67 [style = dotted, label="true"];
72->63 [style = dotted, label="true"];
8->2 [style = solid, label="expression"];
50->76 [style = bold, label=""];
57->72 [style = bold, label=""];
51->82 [style = dotted, label="true"];
58->35 [style = dotted, label="true"];
60->71 [style = dotted, label="true"];
17->7 [style = bold, label=""];
78->52 [style = dotted, label="false"];
87->72 [style = bold, label=""];
78->57 [style = bold, label=""];
0->10 [style = bold, label=""];
31->87 [style = dotted, label="true"];
43->86 [style = bold, label=""];
20->76 [style = bold, label=""];
61->47 [style = bold, label=""];
32->45 [style = dotted, label="false"];
38->63 [style = bold, label=""];
20->72 [style = bold, label=""];
75->34 [style = bold, label=""];
72->79 [style = bold, label=""];
51->62 [style = dotted, label="true"];
17->7 [style = dotted, label="true"];
24->62 [style = bold, label=""];
69->70 [style = bold, label=""];
39->76 [style = bold, label=""];
51->37 [style = dotted, label="false"];
25->50 [style = bold, label=""];
44->56 [style = dotted, label="false"];
67->54 [style = dotted, label="true"];
10->7 [style = dotted, label="true"];
37->40 [style = bold, label=""];
66->44 [style = bold, label=""];
76->19 [style = solid, label="indexAbstraction"];
49->72 [style = bold, label=""];
43->86 [style = dotted, label="true"];
}
