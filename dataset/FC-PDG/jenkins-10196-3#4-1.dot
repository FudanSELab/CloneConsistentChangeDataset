digraph {
0 [style = filled, label = "CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(\"\",\"1\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: No such job ''\"))@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,Item.READ).invokeWithArgs(\"\",\"1\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "dummyRangeShouldFailIfJobNameIsEmptyOnEmptyJenkins['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "j.createFreeStyleProject(\"aProject\").scheduleBuild2(0).get()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(((FreeStyleProject)j.jenkins.getItem(\"aProject\")).getBuilds().size(),equalTo(1))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "dummyRangeShouldFailIfJobNameIsEmptyOnEmptyJenkins['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: No such job ' '\"))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(result,failedWith(3))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "dummyRangeShouldFailIfJobNameIsSpaceOnEmptyJenkins['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(\" \",\"1\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3->1 [style = bold, label=""];
11->2 [style = solid, label="result"];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
0->11 [style = dashed, label="0"];
1->10 [style = dashed, label="0"];
11->2 [style = bold, label=""];
9->6 [style = bold, label=""];
4->0 [style = bold, label=""];
0->2 [style = solid, label="result"];
8->2 [style = solid, label="result"];
3->10 [style = bold, label=""];
6->4 [style = bold, label=""];
5->6 [style = bold, label=""];
11->3 [style = solid, label="result"];
8->2 [style = bold, label=""];
7->6 [style = bold, label=""];
0->3 [style = solid, label="result"];
4->8 [style = bold, label=""];
0->8 [style = dashed, label="0"];
8->3 [style = solid, label="result"];
4->11 [style = bold, label=""];
}
