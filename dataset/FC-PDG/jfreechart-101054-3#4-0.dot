digraph {
20 [style = filled, label = "v2.setValue(new Double(12.3))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertTrue(v1.equals(v2))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(v1.getClass() == v2.getClass())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "DefaultKeyedValue v2 = new DefaultKeyedValue(\"Test\",45.5)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertFalse(v1.equals(v2))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "v1 = new DefaultKeyedValue(\"Test 1\",45.5)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "v1 = new DefaultKeyedValue(\"Test\",new Double(45.5))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "v2 = new DefaultKeyedValue(\"Test\",new Double(45.6))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "testEquals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "DefaultKeyedValue v1 = new DefaultKeyedValue(\"Test\",new Double(45.5))@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertFalse(v1.equals(v2))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertTrue(v2.equals(v1))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "DefaultKeyedValue v2 = new DefaultKeyedValue(\"Test\",new Double(45.5))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "DefaultKeyedValue v2 = (DefaultKeyedValue)v1.clone()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "DefaultKeyedValue v1 = new DefaultKeyedValue(\"Test\",45.5)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertTrue(v1 != v2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "v2 = new DefaultKeyedValue(\"Test 2\",new Double(45.5))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "v2 = new DefaultKeyedValue(\"Test\",45.6)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertFalse(v1.equals(v2))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "v2 = new DefaultKeyedValue(\"Test 2\",45.5)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "testEquals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(v1.equals(v2))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "v1 = new DefaultKeyedValue(\"Test\",45.5)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11->16 [style = bold, label=""];
5->10 [style = bold, label=""];
14->3 [style = bold, label=""];
1->10 [style = solid, label="v1"];
9->16 [style = dashed, label="0"];
23->6 [style = solid, label="v2"];
23->19 [style = solid, label="v2"];
14->3 [style = solid, label="v2"];
15->14 [style = bold, label=""];
16->5 [style = solid, label="v2"];
8->3 [style = bold, label=""];
13->0 [style = solid, label="v2"];
8->14 [style = dashed, label="0"];
7->8 [style = bold, label=""];
10->6 [style = bold, label=""];
9->23 [style = dashed, label="0"];
0->15 [style = bold, label=""];
1->23 [style = bold, label=""];
1->9 [style = bold, label=""];
1->22 [style = solid, label="v1"];
9->5 [style = solid, label="v2"];
0->7 [style = bold, label=""];
6->2 [style = bold, label=""];
6->12 [style = dashed, label="0"];
6->20 [style = bold, label=""];
12->13 [style = bold, label=""];
2->0 [style = bold, label=""];
22->18 [style = bold, label=""];
23->22 [style = bold, label=""];
23->22 [style = solid, label="v2"];
8->3 [style = solid, label="v2"];
18->6 [style = bold, label=""];
2->0 [style = solid, label="v2"];
10->12 [style = bold, label=""];
1->11 [style = dashed, label="0"];
2->13 [style = dashed, label="0"];
21->1 [style = bold, label=""];
7->15 [style = dashed, label="0"];
9->5 [style = bold, label=""];
16->5 [style = bold, label=""];
4->1 [style = bold, label=""];
20->19 [style = bold, label=""];
11->10 [style = solid, label="v1"];
13->0 [style = bold, label=""];
17->11 [style = bold, label=""];
}
