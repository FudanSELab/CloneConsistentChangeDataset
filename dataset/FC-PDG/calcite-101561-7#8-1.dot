digraph {
1 [style = filled, label = "final String query = \"select substring(\"brand_name\" from 2) \" + \"from \"product\"\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final String expectedPostgresql = \"SELECT SUBSTRING(\"brand_name\" FROM 2 FOR 3)\" + \"FROM \"foodmart\".\"product\"\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final String expectedMssql = \"SELECT SUBSTRING((brand_name(, 2, 3)\" + \"FROM (foodmart(.(product(\"@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "sql(query).withOracle().ok(expectedOracle).withPostgresql().ok(expectedPostgresql).withMysql().ok(expectedMysql).withMssql().ok(expectedMssql)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "sql(query).withOracle().ok(expectedOracle).withPostgresql().ok(expectedPostgresql).withSnowflake().ok(expectedSnowflake).withRedshift().ok(expectedRedshift).withMysql().ok(expectedMysql).withMssql().throws_(\"MSSQL SUBSTRING requires FROM and FOR arguments\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "final String expectedMysql = \"SELECT SUBSTRING(`brand_name` FROM 2 FOR 3)\" + \"FROM `foodmart`.`product`\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final String expectedOracle = \"SELECT SUBSTR(\"brand_name\", 2)\" + \"FROM \"foodmart\".\"product\"\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testSubstring['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final String expectedRedshift = expectedPostgresql@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "final String expectedSnowflake = expectedPostgresql@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "sql(query).withOracle().ok(expectedOracle).withPostgresql().ok(expectedPostgresql).withMysql().ok(expectedMysql).withMssql().throws_(\"MSSQL SUBSTRING requires FROM and FOR arguments\")@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "final String query = \"select substring(\"brand_name\" from 2 for 3) \" + \"from \"product\"\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final String expectedPostgresql = \"SELECT SUBSTRING(\"brand_name\" FROM 2)\" + \"FROM \"foodmart\".\"product\"\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testSubstringWithFor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testSubstring['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "final String expectedMysql = \"SELECT SUBSTRING(`brand_name` FROM 2)\" + \"FROM `foodmart`.`product`\"@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final String expectedOracle = \"SELECT SUBSTR(\"brand_name\", 2, 3)\" + \"FROM \"foodmart\".\"product\"\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->14 [style = dashed, label="0"];
5->7 [style = solid, label="expectedPostgresql"];
1->3 [style = bold, label=""];
2->9 [style = bold, label=""];
5->6 [style = solid, label="expectedPostgresql"];
8->1 [style = bold, label=""];
5->2 [style = bold, label=""];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
12->10 [style = bold, label=""];
3->12 [style = dashed, label="0"];
5->6 [style = bold, label=""];
15->11 [style = bold, label=""];
10->13 [style = bold, label=""];
5->10 [style = dashed, label="0"];
7->2 [style = bold, label=""];
2->13 [style = dashed, label="0"];
14->12 [style = bold, label=""];
15->11 [style = solid, label="expectedMssql"];
16->14 [style = bold, label=""];
4->1 [style = bold, label=""];
13->15 [style = bold, label=""];
0->9 [style = dashed, label="0"];
6->7 [style = bold, label=""];
}
