digraph {
32 [style = filled, label = "final int cCount = relC.getRowType().getFieldCount()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "call.transformTo(relBuilder.build())@@@41@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "return@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "split(bottomJoin.getCondition(),aBitSet,bottomIntersecting,bottomNonIntersecting)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "onMatchRight['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "new RexPermuteInputsShuttle(topMapping,newBottomJoin,relA).visitList(bottomIntersecting,newTopList)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "split(topJoin.getCondition(),aBitSet,intersecting,nonIntersecting)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "final List<RexNode> bottomNonIntersecting = new ArrayList<>()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "new RexPermuteInputsShuttle(bottomMapping,relC,relB).visitList(bottomNonIntersecting,newBottomList)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "final Join newBottomJoin = bottomJoin.copy(bottomJoin.getTraitSet(),newBottomCondition,relC,relB,bottomJoin.getJoinType(),bottomJoin.isSemiJoinDone())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final RexBuilder rexBuilder = cluster.getRexBuilder()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final List<RexNode> bottomIntersecting = new ArrayList<>()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final RelBuilder relBuilder = call.builder()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "onMatchLeft['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "RexNode newTopCondition = RexUtil.composeConjunction(rexBuilder,newTopList)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "relBuilder.push(newTopJoin)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "return@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "onMatchRight['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "final List<RexNode> newBottomList = new ArrayList<>()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "RelOptRuleCall call@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "RelOptRuleCall call@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "new RexPermuteInputsShuttle(bottomMapping,relC,relB).visitList(nonIntersecting,newBottomList)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "RelOptRuleCall call@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "final RelNode relC = call.rel(2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final Join bottomJoin = call.rel(1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "topJoin.getJoinType() != JoinRelType.INNER || bottomJoin.getJoinType() != JoinRelType.INNER@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "final RelOptCluster cluster = topJoin.getCluster()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final RelNode relA = bottomJoin.getLeft()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "relBuilder.project(relBuilder.fields(topMapping))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "new RexPermuteInputsShuttle(topMapping,newBottomJoin,relA).visitList(intersecting,newTopList)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "final Mappings.TargetMapping topMapping = Mappings.createShiftMapping(aCount + bCount + cCount,cCount + bCount,0,aCount,cCount,aCount,bCount,0,aCount + bCount,cCount)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final Mappings.TargetMapping bottomMapping = Mappings.createShiftMapping(aCount + bCount + cCount,cCount,aCount,bCount,0,aCount + bCount,cCount)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "final int aCount = relA.getRowType().getFieldCount()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "final ImmutableBitSet aBitSet = ImmutableBitSet.range(aCount)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "final Join topJoin = call.rel(0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "nonIntersecting.isEmpty()@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "RexNode newBottomCondition = RexUtil.composeConjunction(rexBuilder,newBottomList)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final List<RexNode> intersecting = new ArrayList<>()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "@SuppressWarnings(\"SuspiciousNameCombination\") final Join newTopJoin = topJoin.copy(topJoin.getTraitSet(),newTopCondition,newBottomJoin,relA,topJoin.getJoinType(),topJoin.isSemiJoinDone())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final List<RexNode> newTopList = new ArrayList<>()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final List<RexNode> nonIntersecting = new ArrayList<>()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final RelNode relB = bottomJoin.getRight()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final int bCount = relB.getRowType().getFieldCount()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2->3 [style = dotted, label="true"];
8->34 [style = solid, label="newBottomList"];
17->25 [style = bold, label=""];
8->34 [style = bold, label=""];
32->23 [style = solid, label="cCount"];
28->31 [style = dotted, label="true"];
33->13 [style = dotted, label="true"];
39->15 [style = bold, label=""];
16->37 [style = bold, label=""];
17->22 [style = solid, label="relA"];
7->17 [style = bold, label=""];
1->3 [style = dashed, label="0"];
28->10 [style = bold, label=""];
16->20 [style = solid, label="newTopList"];
25->27 [style = solid, label="relB"];
21->41 [style = solid, label="rexBuilder"];
12->21 [style = bold, label=""];
36->29 [style = bold, label=""];
9->26 [style = solid, label="intersecting"];
7->27 [style = solid, label="relC"];
40->11 [style = solid, label="topMapping"];
28->31 [style = bold, label=""];
8->5 [style = solid, label="newBottomList"];
21->5 [style = solid, label="rexBuilder"];
18->26 [style = bold, label=""];
37->20 [style = bold, label=""];
9->37 [style = solid, label="intersecting"];
4->42 [style = bold, label=""];
32->40 [style = solid, label="cCount"];
16->41 [style = solid, label="newTopList"];
18->26 [style = solid, label="nonIntersecting"];
29->23 [style = bold, label=""];
8->12 [style = solid, label="newBottomList"];
23->8 [style = bold, label=""];
30->6 [style = bold, label=""];
25->35 [style = bold, label=""];
15->19 [style = bold, label=""];
34->12 [style = bold, label=""];
11->24 [style = bold, label=""];
22->42 [style = solid, label="newTopJoin"];
38->23 [style = solid, label="aCount"];
39->29 [style = solid, label="aBitSet"];
38->14 [style = bold, label=""];
10->36 [style = bold, label=""];
38->39 [style = solid, label="aCount"];
22->4 [style = bold, label=""];
10->29 [style = solid, label="bottomIntersecting"];
1->13 [style = dashed, label="0"];
41->22 [style = solid, label="newTopCondition"];
21->5 [style = bold, label=""];
39->26 [style = solid, label="aBitSet"];
18->34 [style = solid, label="nonIntersecting"];
20->41 [style = bold, label=""];
27->22 [style = solid, label="newBottomJoin"];
9->18 [style = bold, label=""];
40->16 [style = bold, label=""];
16->37 [style = solid, label="newTopList"];
19->9 [style = bold, label=""];
36->12 [style = solid, label="bottomNonIntersecting"];
42->11 [style = bold, label=""];
15->9 [style = bold, label=""];
15->19 [style = dotted, label="true"];
31->10 [style = bold, label=""];
14->23 [style = solid, label="bCount"];
14->40 [style = solid, label="bCount"];
33->30 [style = bold, label=""];
32->39 [style = bold, label=""];
27->40 [style = bold, label=""];
5->27 [style = solid, label="newBottomCondition"];
35->38 [style = bold, label=""];
26->28 [style = bold, label=""];
5->27 [style = bold, label=""];
41->22 [style = bold, label=""];
6->7 [style = bold, label=""];
14->32 [style = bold, label=""];
10->20 [style = solid, label="bottomIntersecting"];
38->40 [style = solid, label="aCount"];
0->1 [style = dotted, label="true"];
36->29 [style = solid, label="bottomNonIntersecting"];
}
