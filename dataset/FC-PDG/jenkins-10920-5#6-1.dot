digraph {
3 [style = filled, label = "Assert.assertFalse(historyPageFilter.hasUpPage)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "HistoryPageFilter<ModelObject> historyPageFilter = newPage(5,null,null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "historyPageFilter.add(runs,queueItems)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(6),historyPageFilter.oldestOnPage)@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(10),historyPageFilter.runs.get(0).getEntryId())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertEquals(3,historyPageFilter.runs.size())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(10),historyPageFilter.newestOnPage)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "test_newerThan_doesntIncludeQueuedItems['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Iterable<ModelObject> runs = newRuns(1,10)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Assert.assertEquals(2,historyPageFilter.queueItems.size())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "HistoryPageFilter<ModelObject> historyPageFilter = newPage(5,5L,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertEquals(0,historyPageFilter.queueItems.size())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "List<Queue.Item> queueItems = newQueueItems(11,12)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertTrue(historyPageFilter.hasUpPage)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertEquals(5,historyPageFilter.runs.size())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertTrue(historyPageFilter.hasDownPage)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(12,historyPageFilter.queueItems.get(0).getEntryId())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "test_latest_longer_list['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "List<ModelObject> runs = newRuns(1,10)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "test_latest_longer_list['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "Assert.assertEquals(12,historyPageFilter.newestOnPage)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->18 [style = bold, label=""];
8->19 [style = dashed, label="0"];
1->10 [style = solid, label="runs"];
4->16 [style = dashed, label="0"];
3->18 [style = dashed, label="0"];
10->3 [style = bold, label=""];
20->14 [style = bold, label=""];
12->10 [style = solid, label="runs"];
1->0 [style = bold, label=""];
7->4 [style = bold, label=""];
16->19 [style = bold, label=""];
12->0 [style = bold, label=""];
11->2 [style = bold, label=""];
14->1 [style = bold, label=""];
1->12 [style = dashed, label="0"];
15->17 [style = bold, label=""];
0->10 [style = bold, label=""];
9->14 [style = dashed, label="0"];
8->5 [style = bold, label=""];
17->2 [style = bold, label=""];
3->7 [style = bold, label=""];
7->16 [style = bold, label=""];
0->10 [style = solid, label="queueItems"];
4->8 [style = bold, label=""];
5->11 [style = bold, label=""];
9->12 [style = bold, label=""];
13->9 [style = bold, label=""];
6->9 [style = bold, label=""];
9->1 [style = bold, label=""];
18->7 [style = bold, label=""];
19->15 [style = bold, label=""];
}
