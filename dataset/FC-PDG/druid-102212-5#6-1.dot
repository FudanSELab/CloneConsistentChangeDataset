digraph {
0 [style = filled, label = "client.getCurrentOffsets(TEST_ID,true)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "expectedException.expectMessage(\"org.apache.druid.java.util.common.IOE: Received status (500( and content ((\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "verifyAll()@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "expect(httpClient.go(EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.eq(TEST_HTTP_TIMEOUT))).andReturn(Futures.immediateFuture(responseHolder))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "EasyMock.expect(responseHolder.getContent()).andReturn(\"\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "expectedException.expect()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testInternalServerError['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "EasyMock.expect(responseHolder.getStatus()).andReturn(HttpResponseStatus.INTERNAL_SERVER_ERROR).times(2)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "expect(responseHolder.getContent()).andReturn(\"\")@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "replayAll()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testInternalServerError['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "EasyMock.expect(httpClient.go(EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.eq(TEST_HTTP_TIMEOUT))).andReturn(Futures.immediateFuture(responseHolder))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "expect(responseHolder.getStatus()).andReturn(HttpResponseStatus.INTERNAL_SERVER_ERROR).times(2)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testInternalServerError['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4->12 [style = bold, label=""];
2->12 [style = dashed, label="0"];
10->3 [style = bold, label=""];
1->4 [style = bold, label=""];
7->1 [style = bold, label=""];
4->2 [style = bold, label=""];
8->10 [style = dashed, label="0"];
9->10 [style = bold, label=""];
6->9 [style = dashed, label="0"];
12->9 [style = bold, label=""];
11->1 [style = bold, label=""];
2->6 [style = bold, label=""];
13->1 [style = bold, label=""];
3->0 [style = bold, label=""];
6->8 [style = bold, label=""];
0->5 [style = bold, label=""];
8->3 [style = bold, label=""];
}
