digraph {
18 [style = filled, label = "List<JoinableClause> joinableClauses = ImmutableList.of(factToRegion(JoinType.LEFT),regionToCountry(JoinType.LEFT))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "VirtualColumns virtualColumns = VirtualColumns.create(ImmutableList.of(new ExpressionVirtualColumn(\"v1\",\"concat('virtual-column-', \"channel\")\",ValueType.STRING,TestExprMacroTable.INSTANCE)))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(new SelectorFilter(\"v1\",\"virtual-column-#en.wikipedia\"),null,ImmutableSet.of())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(new SelectorFilter(\"channel\",\"#en.wikipedia\"),null,ImmutableSet.of())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertEquals(expectedFilterSplit,actualFilterSplit)@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "JoinFilterPreAnalysis joinFilterPreAnalysis = joinFilterPreAnalysisGroup.getPreAnalysisForSingleLevelMode()@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Assert.assertEquals(expectedFilterSplit,actualFilterSplit)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "test_filterPushDown_factToRegionToCountryLeftFilterOnChannel['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(joinFilterPreAnalysis)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,joinFilterPreAnalysis)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "test_filterPushDown_factToRegionToCountryLeftFilterOnChannel['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Filter originalFilter = new SelectorFilter(\"channel\",\"#en.wikipedia\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "JoinFilterPreAnalysisGroup joinFilterPreAnalysisGroup = makeDefaultConfigPreAnalysisGroup(originalFilter,joinableClauses,VirtualColumns.EMPTY)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(new SelectorFilter(\"channel\",\"#en.wikipedia\"),null,ImmutableSet.of())@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "JoinFilterPreAnalysis joinFilterPreAnalysis = simplePreAnalysis(joinableClauses,originalFilter)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Filter originalFilter = new AndFilter(ImmutableList.of(new SelectorFilter(\"v1\",\"virtual-column-#en.wikipedia\")))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "JoinTestHelper.verifyCursors(adapter.makeCursors(originalFilter,Intervals.ETERNITY,virtualColumns,Granularities.ALL,false,null),ImmutableList.of(\"page\",FACT_TO_REGION_PREFIX + \"regionName\",REGION_TO_COUNTRY_PREFIX + \"countryName\"),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c848a,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c8490,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c8496,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c849c,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c84a2,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c84a8,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c84ae,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c84b4,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c84ba,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c84c0,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c84c6,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c84cc,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c84d2,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c84d8))@@@11@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,joinFilterPreAnalysisGroup)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "JoinTestHelper.verifyCursors(adapter.makeCursors(originalFilter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",FACT_TO_REGION_PREFIX + \"regionName\",REGION_TO_COUNTRY_PREFIX + \"countryName\"),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c838e,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c8394,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c839a,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c83a0,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c83a6,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c83ac,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c83b2,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c83b8,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c83be,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c83c4,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c83ca,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c83d0,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c83d6,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c83dc))@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(joinFilterPreAnalysis)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(joinFilterPreAnalysis)@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11->13 [style = solid, label="expectedFilterSplit"];
19->18 [style = bold, label=""];
12->9 [style = solid, label="joinFilterPreAnalysis"];
7->1 [style = bold, label=""];
16->11 [style = bold, label=""];
8->4 [style = solid, label="originalFilter"];
2->6 [style = solid, label="joinFilterPreAnalysis"];
5->20 [style = bold, label=""];
2->6 [style = bold, label=""];
6->21 [style = bold, label=""];
5->6 [style = solid, label="joinableClauses"];
14->10 [style = solid, label="joinFilterPreAnalysisGroup"];
5->2 [style = solid, label="joinableClauses"];
7->3 [style = solid, label="expectedFilterSplit"];
1->3 [style = bold, label=""];
8->16 [style = solid, label="originalFilter"];
14->10 [style = bold, label=""];
11->12 [style = bold, label=""];
5->10 [style = solid, label="joinableClauses"];
1->3 [style = solid, label="actualFilterSplit"];
5->14 [style = bold, label=""];
2->1 [style = solid, label="joinFilterPreAnalysis"];
12->9 [style = bold, label=""];
5->4 [style = solid, label="originalFilter"];
3->4 [style = bold, label=""];
5->14 [style = solid, label="joinableClauses"];
6->10 [style = dashed, label="0"];
20->2 [style = bold, label=""];
5->20 [style = solid, label="originalFilter"];
6->4 [style = solid, label="virtualColumns"];
8->14 [style = solid, label="originalFilter"];
5->2 [style = bold, label=""];
9->13 [style = solid, label="actualFilterSplit"];
21->3 [style = solid, label="expectedFilterSplit"];
2->14 [style = dashed, label="0"];
8->5 [style = bold, label=""];
10->16 [style = bold, label=""];
20->2 [style = solid, label="joinFilterPreAnalysis"];
18->5 [style = bold, label=""];
0->8 [style = bold, label=""];
17->3 [style = solid, label="actualFilterSplit"];
17->3 [style = bold, label=""];
20->17 [style = solid, label="joinFilterPreAnalysis"];
18->2 [style = solid, label="joinableClauses"];
18->20 [style = solid, label="joinableClauses"];
6->7 [style = bold, label=""];
21->17 [style = bold, label=""];
15->8 [style = bold, label=""];
8->2 [style = solid, label="originalFilter"];
9->13 [style = bold, label=""];
}
