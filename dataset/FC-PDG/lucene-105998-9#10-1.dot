digraph {
25 [style = filled, label = "Directory dir = newDirectory()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "writer.commit()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "AtomicReader r = SlowCompositeReaderWrapper.wrap(reader)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "writer.shutdown()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(3,getValue(bdv,i))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "i++@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testDifferentDVFormatPerField['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "SortedDocValues sdv = r.getSortedDocValues(\"sorted\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "testUpdateSameDocMultipleTimes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "writer.addDocument(doc)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "dir.close()@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "doc.add(new BinaryDocValuesField(\"bdv\",toBytes(5L)))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "BytesRef term = sdv.get(i)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "reader.close()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "doc.add(new StringField(\"key\",\"doc\",Store.NO))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "doc.add(new SortedDocValuesField(\"sorted\",new BytesRef(\"value\")))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(new BytesRef(\"value\"),term)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i < r.maxDoc()@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final DirectoryReader reader = DirectoryReader.open(dir)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "reader.close()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int i = 0@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random()))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "IndexWriter writer = new IndexWriter(dir,conf)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "writer.updateBinaryDocValue(new Term(\"key\",\"doc\"),\"bdv\",toBytes(3L))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final AtomicReader r = SlowCompositeReaderWrapper.wrap(reader)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "writer.updateBinaryDocValue(new Term(\"key\",\"doc\"),\"bdv\",toBytes(17L))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "writer.addDocument(doc)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Document doc = new Document()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testDifferentDVFormatPerField['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "dir.close()@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "conf.setCodec(new Lucene49Codec(){@Override public DocValuesFormat getDocValuesFormatForField(String field){return new Lucene49DocValuesFormat()}})@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(17,getValue(bdv,i))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->24 [style = bold, label=""];
27->9 [style = solid, label="conf"];
25->9 [style = solid, label="dir"];
12->5 [style = bold, label=""];
5->23 [style = bold, label=""];
16->8 [style = bold, label=""];
6->22 [style = bold, label=""];
25->13 [style = bold, label=""];
2->1 [style = bold, label=""];
4->14 [style = solid, label="i"];
2->24 [style = dotted, label="true"];
26->25 [style = bold, label=""];
16->8 [style = solid, label="reader"];
8->3 [style = bold, label=""];
21->4 [style = solid, label="i"];
16->31 [style = solid, label="reader"];
20->5 [style = solid, label="doc"];
4->1 [style = solid, label="i"];
23->32 [style = bold, label=""];
29->25 [style = bold, label=""];
25->16 [style = solid, label="dir"];
9->20 [style = bold, label=""];
10->21 [style = bold, label=""];
4->2 [style = bold, label=""];
1->28 [style = dashed, label="0"];
11->9 [style = bold, label=""];
2->28 [style = dotted, label="true"];
13->11 [style = bold, label=""];
14->24 [style = solid, label="term"];
4->28 [style = solid, label="i"];
6->15 [style = bold, label=""];
19->25 [style = bold, label=""];
15->22 [style = bold, label=""];
21->2 [style = bold, label=""];
21->2 [style = solid, label="i"];
4->2 [style = solid, label="i"];
3->28 [style = solid, label="bdv"];
25->27 [style = bold, label=""];
3->10 [style = bold, label=""];
20->22 [style = solid, label="doc"];
2->0 [style = bold, label=""];
24->4 [style = bold, label=""];
13->27 [style = dashed, label="0"];
27->11 [style = bold, label=""];
21->14 [style = solid, label="i"];
2->1 [style = dotted, label="true"];
22->12 [style = bold, label=""];
16->31 [style = bold, label=""];
7->6 [style = bold, label=""];
2->4 [style = dotted, label="true"];
33->30 [style = bold, label=""];
2->33 [style = bold, label=""];
23->17 [style = bold, label=""];
0->18 [style = bold, label=""];
1->14 [style = bold, label=""];
3->21 [style = bold, label=""];
2->14 [style = dotted, label="true"];
13->9 [style = bold, label=""];
8->31 [style = dashed, label="0"];
20->7 [style = bold, label=""];
31->3 [style = bold, label=""];
21->28 [style = solid, label="i"];
21->1 [style = solid, label="i"];
2->28 [style = bold, label=""];
32->17 [style = bold, label=""];
17->16 [style = bold, label=""];
13->9 [style = solid, label="conf"];
28->4 [style = bold, label=""];
3->1 [style = solid, label="bdv"];
}
