digraph {
2 [style = filled, label = "SqlSessionFactory sqlSessionFactory@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(\"John\",person.getName())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "PersonMapper personMapper = sqlSession.getMapper()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "{sqlSession.close()}@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Pet pet2 = petMapper.select(3)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testMultipleReverseIncludes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertEquals(2,person.getPets().get(1).getId())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(2,pet2.getOwner().getId())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(Integer.valueOf(1),pet.getId())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "SqlSession sqlSession = sqlSessionFactory.openSession()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Person person = personMapper.select(1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testMultipleReverseIncludes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "MultipleReverseIncludePersonMapper personMapper = sqlSession.getMapper()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "{sqlSession.close()}@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(2,person.getPets().size())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals((Integer)1,person.getId())@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "PetMapper petMapper = sqlSession.getMapper()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "SqlSessionFactory sqlSessionFactory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Pet pet = personMapper.selectPet(1)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(1,person.getId())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(3,pet2.getId())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testCrossReference['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5->8 [style = bold, label=""];
6->4 [style = bold, label=""];
8->4 [style = bold, label=""];
1->0 [style = bold, label=""];
14->21 [style = bold, label=""];
0->7 [style = bold, label=""];
19->15 [style = bold, label=""];
17->14 [style = bold, label=""];
9->0 [style = bold, label=""];
6->19 [style = bold, label=""];
9->2 [style = dotted, label="true"];
21->10 [style = bold, label=""];
18->11 [style = dotted, label="true"];
12->5 [style = bold, label=""];
0->12 [style = bold, label=""];
10->13 [style = bold, label=""];
6->8 [style = dashed, label="0"];
15->16 [style = bold, label=""];
7->12 [style = dashed, label="0"];
7->5 [style = bold, label=""];
1->2 [style = dotted, label="true"];
16->17 [style = bold, label=""];
2->11 [style = dashed, label="0"];
13->20 [style = bold, label=""];
4->19 [style = dashed, label="0"];
4->3 [style = bold, label=""];
5->6 [style = bold, label=""];
18->0 [style = bold, label=""];
}
