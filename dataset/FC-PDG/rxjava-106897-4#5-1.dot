digraph {
1 [style = filled, label = "Flowable.range(1,2).buffer(1,new Supplier<List<Integer>>(){@Override public List<Integer> get(){if (++calls == 2) {throw new TestException()}return new ArrayList<>()}}).test().assertFailure(,Arrays.asList(1))@@@3@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "bufferSupplierCrash2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "Observable.range(1,2).buffer(1,new Supplier<List<Integer>>(){@Override public List<Integer> get(){if (++calls == 2) {throw new TestException()}return new ArrayList<Integer>()}}).test().assertFailure(,Arrays.asList(1))@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "bufferSupplierCrash2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "bufferSupplierCrash2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->3 [style = dashed, label="0"];
4->3 [style = bold, label=""];
0->1 [style = bold, label=""];
2->1 [style = bold, label=""];
}
