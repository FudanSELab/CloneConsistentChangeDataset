digraph {
13 [style = filled, label = "FragmentExecParams params = new FragmentExecParams(null)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Coordinator coordinator = new Coordinator(context,analyzer,planner)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "TupleDescriptor tupleDescriptor = new TupleDescriptor(new TupleId(-1))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Map<Integer,TNetworkAddress> bucketSeqToAddress = new HashMap<>()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "params = new FragmentExecParams(null)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Deencapsulation.setField(coordinator,\"bucketSeqToScanRange\",bucketSeqToScanRange)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "BucketSeqToScanRange bucketSeqToScanRange = new BucketSeqToScanRange()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i++@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Deencapsulation.invoke(coordinator,\"computeColocateJoinInstanceParam\",planFragmentId,5,params)@@@46@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "testComputeColocateJoinInstanceParam['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ScanRangeMap.put(scanNodeId,new ArrayList<>())@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "i++@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Assert.assertEquals(3,tempScanRangeParamsList.size())@@@36@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "int i = 0@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "scanRangeParamsList.add(new TScanRangeParams())@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "fragmentToBucketSeqToAddress.put(planFragmentId,bucketSeqToAddress)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Deencapsulation.invoke(coordinator,\"computeColocateJoinInstanceParam\",planFragmentId,3,params)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "params = new FragmentExecParams(null)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Assert.assertTrue(sb.toString().contains(\"range=(id1,range=(((\"))@@@36@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "OlapScanNode olapScanNode = new OlapScanNode(new PlanNodeId(scanNodeId),tupleDescriptor,\"test\")@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "bucketSeqToAddress.put(i,address)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "i++@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "Map<PlanFragmentId,Map<Integer,TNetworkAddress>> fragmentToBucketSeqToAddress = new HashMap<>()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "PlanFragment fragment = new PlanFragment(planFragmentId,olapScanNode,new DataPartition(TPartitionType.UNPARTITIONED))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertEquals(2,params.instanceExecParams.size())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Assert.assertEquals(3,params.instanceExecParams.size())@@@47@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "i < 3@@@24@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "bucketSeqToScanRange.put(i,ScanRangeMap)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Deencapsulation.invoke(coordinator,\"computeColocateJoinInstanceParam\",planFragmentId,2,params)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int i = 0@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Deencapsulation.setField(coordinator,\"fragmentIdToSeqToAddressMap\",fragmentToBucketSeqToAddress)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "params.appendTo(sb)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "testColocateJoinAssignment['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Map<PlanFragmentId,Set<Integer>> fragmentIdToScanNodeIds = new HashMap<>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Deencapsulation.setField(coordinator,\"fragmentIdToScanNodeIds\",fragmentIdToScanNodeIds)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "FragmentExecParams params = new FragmentExecParams(fragment)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "int scanNodeId = 1@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Deencapsulation.setField(coordinator,\"bucketSeqToScanRange\",bucketSeqToScanRange)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "List<TScanRangeParams> scanRangeParamsList = new ArrayList<>()@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "testComputeColocateJoinInstanceParam['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "PlanFragmentId planFragmentId = new PlanFragmentId(1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "ScanRangeMap.put(scanNodeId,scanRangeParamsList)@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "Deencapsulation.invoke(coordinator,\"computeColocateJoinInstanceParam\",planFragmentId,1,params)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "StringBuilder sb = new StringBuilder()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "i < 3@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Map<Integer,List<TScanRangeParams>> ScanRangeMap = new HashMap<>()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Deencapsulation.invoke(coordinator,\"computeColocateJoinInstanceParam\",planFragmentId,1,params)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "fragmentIdToScanNodeIds.get(planFragmentId).add(scanNodeId)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "FragmentExecParams params = new FragmentExecParams(null)@@@29@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "params = new FragmentExecParams(null)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(3,params.instanceExecParams.size())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "TNetworkAddress address = new TNetworkAddress()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "fragmentIdToScanNodeIds.put(planFragmentId,new HashSet<>())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->10 [style = bold, label=""];
2->18 [style = solid, label="planFragmentId"];
8->21 [style = solid, label="i"];
47->50 [style = solid, label="tupleDescriptor"];
15->33 [style = bold, label=""];
36->18 [style = solid, label="params"];
16->35 [style = solid, label="ScanRangeMap"];
18->13 [style = bold, label=""];
20->43 [style = solid, label="i"];
27->32 [style = bold, label=""];
20->11 [style = solid, label="i"];
9->30 [style = bold, label=""];
12->24 [style = bold, label=""];
0->21 [style = dotted, label="true"];
28->22 [style = bold, label=""];
36->18 [style = bold, label=""];
45->46 [style = bold, label=""];
43->11 [style = solid, label="i"];
20->30 [style = bold, label=""];
33->23 [style = bold, label=""];
34->0 [style = solid, label="i"];
14->50 [style = solid, label="scanNodeId"];
0->21 [style = bold, label=""];
35->18 [style = bold, label=""];
2->29 [style = solid, label="planFragmentId"];
11->36 [style = bold, label=""];
13->1 [style = bold, label=""];
2->4 [style = solid, label="planFragmentId"];
10->26 [style = solid, label="params"];
30->35 [style = bold, label=""];
2->31 [style = solid, label="planFragmentId"];
31->3 [style = bold, label=""];
5->6 [style = bold, label=""];
2->1 [style = solid, label="planFragmentId"];
30->20 [style = dotted, label="true"];
14->7 [style = bold, label=""];
32->38 [style = bold, label=""];
16->11 [style = solid, label="ScanRangeMap"];
24->31 [style = solid, label="coordinator"];
11->43 [style = bold, label=""];
24->2 [style = bold, label=""];
24->29 [style = solid, label="coordinator"];
9->20 [style = solid, label="i"];
2->38 [style = solid, label="planFragmentId"];
1->29 [style = bold, label=""];
1->29 [style = solid, label="params"];
5->28 [style = solid, label="fragmentToBucketSeqToAddress"];
33->6 [style = solid, label="bucketSeqToAddress"];
21->8 [style = bold, label=""];
4->17 [style = bold, label=""];
24->11 [style = solid, label="coordinator"];
2->6 [style = solid, label="planFragmentId"];
49->45 [style = solid, label="sb"];
24->18 [style = solid, label="coordinator"];
22->11 [style = solid, label="bucketSeqToScanRange"];
23->34 [style = bold, label=""];
20->35 [style = bold, label=""];
17->15 [style = bold, label=""];
42->41 [style = solid, label="scanRangeParamsList"];
2->48 [style = solid, label="planFragmentId"];
34->8 [style = solid, label="i"];
35->11 [style = bold, label=""];
14->19 [style = solid, label="scanNodeId"];
25->31 [style = solid, label="params"];
10->26 [style = bold, label=""];
24->27 [style = solid, label="coordinator"];
35->20 [style = bold, label=""];
8->0 [style = solid, label="i"];
37->41 [style = bold, label=""];
35->11 [style = dotted, label="true"];
6->28 [style = bold, label=""];
49->45 [style = bold, label=""];
8->0 [style = bold, label=""];
16->19 [style = bold, label=""];
20->35 [style = solid, label="i"];
22->16 [style = bold, label=""];
52->24 [style = bold, label=""];
24->26 [style = solid, label="coordinator"];
16->42 [style = bold, label=""];
29->25 [style = bold, label=""];
23->21 [style = solid, label="address"];
43->35 [style = bold, label=""];
14->41 [style = solid, label="scanNodeId"];
38->44 [style = bold, label=""];
13->1 [style = solid, label="params"];
26->27 [style = solid, label="params"];
9->35 [style = solid, label="i"];
31->3 [style = solid, label="params"];
25->31 [style = bold, label=""];
29->49 [style = bold, label=""];
24->1 [style = solid, label="coordinator"];
50->48 [style = solid, label="olapScanNode"];
9->30 [style = solid, label="i"];
40->24 [style = bold, label=""];
35->43 [style = dotted, label="true"];
39->25 [style = bold, label=""];
24->15 [style = solid, label="coordinator"];
2->26 [style = solid, label="planFragmentId"];
19->9 [style = bold, label=""];
48->51 [style = bold, label=""];
0->8 [style = dotted, label="true"];
48->51 [style = solid, label="fragment"];
34->21 [style = solid, label="i"];
20->30 [style = solid, label="i"];
42->37 [style = bold, label=""];
24->28 [style = solid, label="coordinator"];
30->11 [style = bold, label=""];
50->48 [style = bold, label=""];
14->17 [style = solid, label="scanNodeId"];
22->18 [style = solid, label="bucketSeqToScanRange"];
11->47 [style = bold, label=""];
24->38 [style = solid, label="coordinator"];
30->35 [style = dotted, label="true"];
26->27 [style = bold, label=""];
34->0 [style = bold, label=""];
51->29 [style = solid, label="params"];
32->38 [style = solid, label="params"];
51->29 [style = bold, label=""];
24->3 [style = solid, label="coordinator"];
2->3 [style = solid, label="planFragmentId"];
47->50 [style = bold, label=""];
7->4 [style = bold, label=""];
29->39 [style = bold, label=""];
2->14 [style = bold, label=""];
0->5 [style = bold, label=""];
2->27 [style = solid, label="planFragmentId"];
43->35 [style = solid, label="i"];
41->20 [style = bold, label=""];
19->42 [style = dashed, label="0"];
7->15 [style = solid, label="fragmentIdToScanNodeIds"];
}
