digraph {
12 [style = filled, label = "String expectedType@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "int numDocs@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "int i = 1@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int numDocs@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertMultiGetResponse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertThat(bulkItemResponses.size(),is(numDocs))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "List<BulkItemResponse> bulkItemResponses@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertMultiGetResponse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(multiGetItemResponse.getId(),equalTo(Integer.toString(i++)))@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(multiGetItemResponse.getType(),equalTo(\"_doc\"))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "MultiGetResponse multiGetResponse@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int numDocs@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertThat(bulkItemResponse.getId(),equalTo(Integer.toString(i++)))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(bulkItemResponse.getIndex(),equalTo(\"test\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(\"item \" + i + \" failed with cause: \" + bulkItemResponse.getFailureMessage(),bulkItemResponse.isFailed(),equalTo(false))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(bulkItemResponse.getType(),equalTo(expectedType))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertResponseItems['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(multiGetResponse.getResponses().length,equalTo(numDocs))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(multiGetItemResponse.getIndex(),equalTo(\"test\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->16 [style = bold, label=""];
1->4 [style = bold, label=""];
3->1 [style = bold, label=""];
10->14 [style = bold, label=""];
4->6 [style = bold, label=""];
16->10 [style = bold, label=""];
7->17 [style = dashed, label="0"];
12->16 [style = solid, label="expectedType"];
2->3 [style = bold, label=""];
18->15 [style = dotted, label="true"];
6->0 [style = bold, label=""];
5->3 [style = solid, label="numDocs"];
13->1 [style = bold, label=""];
0->10 [style = dashed, label="0"];
4->0 [style = bold, label=""];
1->11 [style = bold, label=""];
9->8 [style = dotted, label="true"];
1->0 [style = solid, label="i"];
6->16 [style = dashed, label="0"];
8->3 [style = solid, label="numDocs"];
18->12 [style = dotted, label="true"];
0->4 [style = bold, label=""];
2->7 [style = dotted, label="true"];
1->10 [style = solid, label="i"];
15->13 [style = solid, label="numDocs"];
18->13 [style = bold, label=""];
9->3 [style = bold, label=""];
18->17 [style = dotted, label="true"];
4->11 [style = dashed, label="0"];
9->7 [style = dotted, label="true"];
2->5 [style = dotted, label="true"];
10->14 [style = solid, label="i"];
14->11 [style = bold, label=""];
}
