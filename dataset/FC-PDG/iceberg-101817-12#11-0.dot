digraph {
27 [style = filled, label = "Assert.assertEquals(\"Should use 2 manifest files\",2,committedSnapshot.allManifests().size())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ManifestFile initialManifest = base.currentSnapshot().allManifests().get(0)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "long commitId = snap.snapshotId()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Assert.assertEquals(\"Second manifest should be the initial manifest with the old spec\",initialManifest,lastSnapshot.allManifests().get(1))@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "entry = ManifestFiles.read(committedSnapshot.allManifests().get(1),FILE_IO).entries().iterator().next()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "validateSnapshot(null,snap,1,FILE_A)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "PartitionSpec newSpec = PartitionSpec.builderFor(base.schema()).bucket(\"id\",8).bucket(\"data\",8).build()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "table.newAppend().appendFile(newFile).commit()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Snapshot snap2 = table.currentSnapshot()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertEquals(1001,field.fieldId())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(\"Should create 1 manifest for initial write\",1,base.currentSnapshot().allManifests().size())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "V2Assert.assertEquals(\"Snapshot sequence number should be 1\",1,snap2.sequenceNumber())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assert.assertEquals(1000,field.fieldId())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "validateSnapshot(null,snap,1,FILE_A,FILE_B)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "TableMetadata base = readMetadata()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "V2Assert.assertEquals(\"Last sequence number should be 2\",2,readMetadata().lastSequenceNumber())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(\"id_bucket\",field.name())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testManifestEntryFieldIdsForChangedPartitionSpecForV1Table['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "V1Assert.assertEquals(\"Table should end with last-sequence-number 0\",0,readMetadata().lastSequenceNumber())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(\"data_bucket\",field.name())@@@34@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "table.ops().commit(base,base.updatePartitionSpec(newSpec))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "DataFile newFile = DataFiles.builder(table.spec()).copy(FILE_B).build()@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "DataFile newFileC = DataFiles.builder(newSpec).copy(FILE_C).withPartitionPath(\"data_bucket=2/id_bucket=3\").build()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "PartitionSpec newSpec = PartitionSpec.builderFor(base.schema()).bucket(\"data\",16).bucket(\"id\",4).build()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "validateManifest(committedSnapshot.allManifests().get(0),seqs(2),ids(committedSnapshot.snapshotId()),files(newFile),statuses(Status.ADDED))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "table.newAppend().appendFile(newFileC).commit()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertEquals(\"Second manifest should be the initial manifest with the old spec\",initialManifest,committedSnapshot.allManifests().get(1))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "V2Assert.assertEquals(\"Snapshot sequence number should be 2\",2,committedSnapshot.sequenceNumber())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Snapshot snap = table.currentSnapshot()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testChangedPartitionSpec['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertEquals(\"data_bucket\",field.name())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "V2Assert.assertEquals(\"Snapshot sequence number should be 2\",2,lastSnapshot.sequenceNumber())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Types.NestedField field = ((PartitionData)entry.file().partition()).getPartitionType().fields().get(0)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "DataFile newFile = DataFiles.builder(table.spec()).withPath(\"/path/to/data-x.parquet\").withFileSizeInBytes(10).withPartitionPath(\"id_bucket=1/data_bucket=1\").withRecordCount(1).build()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "Assert.assertEquals(\"Should use 2 manifest files\",2,lastSnapshot.allManifests().size())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Snapshot committedSnapshot = table.currentSnapshot()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "field = ((PartitionData)entry.file().partition()).getPartitionType().fields().get(1)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "ManifestEntry<DataFile> entry = ManifestFiles.read(committedSnapshot.allManifests().get(0),FILE_IO).entries().iterator().next()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "table.newAppend().appendFile(FILE_A).commit()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "V2Assert.assertEquals(\"Last sequence number should be 1\",1,readMetadata().lastSequenceNumber())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(1000,field.fieldId())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "field = ((PartitionData)entry.file().partition()).getPartitionType().fields().get(0)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "V1Assert.assertEquals(\"Table should end with last-sequence-number 0\",0,readMetadata().lastSequenceNumber())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "validateManifest(initialManifest,seqs(1),ids(commitId),files(FILE_A),statuses(Status.ADDED))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testManifestEntryFieldIdsForChangedPartitionSpecForV1Table['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "table.newAppend().appendFile(FILE_A).appendFile(FILE_B).commit()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "validateManifest(initialManifest,seqs(1,1),ids(commitId,commitId),files(FILE_A,FILE_B),statuses(Status.ADDED,Status.ADDED))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "Snapshot lastSnapshot = table.currentSnapshot()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "validateManifest(lastSnapshot.allManifests().get(0),seqs(2),ids(lastSnapshot.snapshotId()),files(newFileC),statuses(Status.ADDED))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32->47 [style = dashed, label="0"];
11->28 [style = bold, label=""];
15->23 [style = bold, label=""];
5->10 [style = bold, label=""];
14->23 [style = solid, label="base"];
24->19 [style = solid, label="newFile"];
33->16 [style = bold, label=""];
42->37 [style = bold, label=""];
16->37 [style = dashed, label="0"];
29->30 [style = bold, label=""];
38->28 [style = bold, label=""];
35->41 [style = bold, label=""];
30->20 [style = bold, label=""];
39->13 [style = bold, label=""];
22->32 [style = solid, label="initialManifest"];
24->33 [style = dashed, label="0"];
26->29 [style = bold, label=""];
46->23 [style = solid, label="newSpec"];
1->27 [style = bold, label=""];
21->8 [style = bold, label=""];
22->26 [style = solid, label="initialManifest"];
7->48 [style = dashed, label="0"];
0->11 [style = bold, label=""];
48->9 [style = bold, label=""];
22->32 [style = bold, label=""];
47->46 [style = bold, label=""];
1->35 [style = bold, label=""];
31->21 [style = bold, label=""];
20->3 [style = bold, label=""];
15->23 [style = solid, label="newSpec"];
16->17 [style = bold, label=""];
44->14 [style = bold, label=""];
17->45 [style = dashed, label="0"];
45->48 [style = bold, label=""];
3->4 [style = bold, label=""];
10->6 [style = bold, label=""];
26->43 [style = dashed, label="0"];
34->11 [style = bold, label=""];
25->44 [style = bold, label=""];
19->41 [style = dashed, label="0"];
24->42 [style = dashed, label="0"];
17->7 [style = bold, label=""];
7->9 [style = bold, label=""];
33->19 [style = solid, label="newFile"];
24->16 [style = bold, label=""];
11->38 [style = dashed, label="0"];
18->22 [style = bold, label=""];
6->31 [style = bold, label=""];
40->39 [style = bold, label=""];
22->47 [style = solid, label="initialManifest"];
15->46 [style = dashed, label="0"];
25->12 [style = bold, label=""];
23->13 [style = bold, label=""];
28->44 [style = solid, label="snap"];
23->40 [style = bold, label=""];
19->26 [style = bold, label=""];
25->47 [style = solid, label="commitId"];
22->47 [style = bold, label=""];
12->14 [style = bold, label=""];
32->15 [style = bold, label=""];
22->43 [style = solid, label="initialManifest"];
12->44 [style = dashed, label="0"];
2->33 [style = bold, label=""];
28->25 [style = bold, label=""];
14->18 [style = bold, label=""];
37->45 [style = bold, label=""];
27->19 [style = bold, label=""];
36->38 [style = bold, label=""];
42->41 [style = solid, label="newFileC"];
2->24 [style = bold, label=""];
9->1 [style = bold, label=""];
41->43 [style = bold, label=""];
4->5 [style = bold, label=""];
46->23 [style = bold, label=""];
2->42 [style = bold, label=""];
28->12 [style = solid, label="snap"];
25->32 [style = solid, label="commitId"];
27->35 [style = dashed, label="0"];
13->2 [style = bold, label=""];
}
