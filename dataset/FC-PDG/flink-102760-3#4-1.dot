digraph {
10 [style = filled, label = "OneInputStreamOperator<Tuple2<String,Integer>,Tuple2<String,Integer>> operator = transform.getOperator()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "processElementAndEnsureOutput(winOperator,winOperator.getKeySelector(),BasicTypeInfo.STRING_TYPE_INFO,new Tuple2<>(\"hello\",1))@@@23@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testReduceWithEvictorAndProcessFunction['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertTrue(winOperator.getWindowAssigner() instanceof SlidingEventTimeWindows)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testReduceWithEvictorAndProcessFunction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertTrue(operator instanceof EvictingWindowOperator)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertTrue(winOperator.getEvictor() instanceof CountEvictor)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "DataStream<Tuple2<String,Integer>> window1 = source.windowAll(SlidingEventTimeWindows.of(Time.of(1,TimeUnit.SECONDS),Time.of(100,TimeUnit.MILLISECONDS))).evictor(CountEvictor.of(100)).reduce(reducer,new ProcessAllWindowFunction<Tuple2<String,Integer>,Tuple2<String,Integer>,TimeWindow>(){@Override public void process(Context context,Iterable<Tuple2<String,Integer>> elements,Collector<Tuple2<String,Integer>> out){for (Tuple2<String,Integer> in : elements){out.collect(in)}}})@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "EvictingWindowOperator<String,Tuple2<String,Integer>,?,?> winOperator = (EvictingWindowOperator<String,Tuple2<String,Integer>,?,?>)operator@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testReduceWithEvictorAndProcessFunction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "DummyReducer reducer = new DummyReducer()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "DataStream<Tuple2<String,Integer>> window1 = source.keyBy(0).window(SlidingEventTimeWindows.of(Time.of(1,TimeUnit.SECONDS),Time.of(100,TimeUnit.MILLISECONDS))).evictor(CountEvictor.of(100)).reduce(reducer,new ProcessWindowFunction<Tuple2<String,Integer>,Tuple2<String,Integer>,Tuple,TimeWindow>(){@Override public void process(Tuple tuple,Context context,Iterable<Tuple2<String,Integer>> elements,Collector<Tuple2<String,Integer>> out){for (Tuple2<String,Integer> in : elements){out.collect(in)}}})@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertTrue(winOperator.getTrigger() instanceof EventTimeTrigger)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(winOperator.getStateDescriptor() instanceof ListStateDescriptor)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "env.setStreamTimeCharacteristic(TimeCharacteristic.IngestionTime)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "OneInputTransformation<Tuple2<String,Integer>,Tuple2<String,Integer>> transform = (OneInputTransformation<Tuple2<String,Integer>,Tuple2<String,Integer>>)window1.getTransformation()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "DataStream<Tuple2<String,Integer>> source = env.fromElements(Tuple2.of(\"hello\",1),Tuple2.of(\"hello\",2))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->3 [style = bold, label=""];
5->8 [style = bold, label=""];
8->16 [style = dashed, label="0"];
7->11 [style = bold, label=""];
13->12 [style = solid, label="winOperator"];
0->13 [style = bold, label=""];
15->14 [style = bold, label=""];
16->6 [style = bold, label=""];
11->4 [style = bold, label=""];
8->6 [style = bold, label=""];
5->16 [style = solid, label="reducer"];
1->7 [style = bold, label=""];
13->1 [style = bold, label=""];
5->16 [style = bold, label=""];
3->9 [style = bold, label=""];
17->14 [style = bold, label=""];
6->10 [style = bold, label=""];
5->8 [style = solid, label="reducer"];
2->14 [style = bold, label=""];
10->0 [style = bold, label=""];
9->5 [style = bold, label=""];
4->12 [style = bold, label=""];
14->9 [style = bold, label=""];
10->0 [style = solid, label="operator"];
10->13 [style = solid, label="operator"];
}
