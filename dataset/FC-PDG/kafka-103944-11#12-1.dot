digraph {
2 [style = filled, label = "MetricName maxLagMetric = metrics.metricInstance(metricsRegistry.recordsLagMax)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertFalse(allMetrics.containsKey(partitionLagMetric))@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(50,(Double)recordsFetchLagMax.metricValue(),EPSILON)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "KafkaMetric partitionLag = allMetrics.get(partitionLagMetric)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "KafkaMetric partitionLag = allMetrics.get(partitionLagMetric)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int v = 0@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(50,(Double)partitionLag.metricValue(),EPSILON)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "testReadCommittedLagMetric['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "v++@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "subscriptions.seek(tp0,0)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "fetchRecords(tp0,builder.build(),Errors.NONE,200L,150L,0)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "subscriptions.seek(tp0,0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int v = 0@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "v < 3@@@21@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "MemoryRecordsBuilder builder = MemoryRecords.builder(ByteBuffer.allocate(1024),CompressionType.NONE,TimestampType.CREATE_TIME,0L)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "MetricName partitionLagMetric = metrics.metricName(\"records-lag\",metricGroup,tags)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "fetchRecords(tp0,MemoryRecords.EMPTY,Errors.NONE,100L,50L,0)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Metrics metrics = new Metrics()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(197,(Double)partitionLag.metricValue(),EPSILON)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(147,(Double)recordsFetchLagMax.metricValue(),EPSILON)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "KafkaMetric recordsFetchLagMax = allMetrics.get(maxLagMetric)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "v++@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(Double.NEGATIVE_INFINITY,(Double)recordsFetchLagMax.metricValue(),EPSILON)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "tags.put(\"partition\",String.valueOf(tp0.partition()))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "fetcher = createFetcher(subscriptions,metrics,new ByteArrayDeserializer(),new ByteArrayDeserializer(),Integer.MAX_VALUE,IsolationLevel.READ_COMMITTED)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testFetcherMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "subscriptions.unsubscribe()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(100,(Double)partitionLag.metricValue(),EPSILON)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "subscriptions.unsubscribe()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "tags.put(\"topic\",tp0.topic())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "subscriptions.assignFromUser(singleton(tp0))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertFalse(allMetrics.containsKey(partitionLagMetric))@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "v++@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "subscriptions.assignFromUser(singleton(tp0))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testFetcherMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(Double.NaN,(Double)recordsFetchLagMax.metricValue(),EPSILON)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "assertEquals(147,(Double)partitionLag.metricValue(),EPSILON)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Map<String,String> tags = new HashMap<>()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->3 [style = bold, label=""];
4->9 [style = bold, label=""];
31->37 [style = bold, label=""];
3->9 [style = solid, label="partitionLagMetric"];
23->5 [style = dotted, label="true"];
32->23 [style = bold, label=""];
8->5 [style = solid, label="v"];
23->5 [style = bold, label=""];
8->23 [style = bold, label=""];
2->19 [style = solid, label="maxLagMetric"];
33->15 [style = bold, label=""];
16->24 [style = solid, label="tags"];
10->24 [style = bold, label=""];
37->30 [style = bold, label=""];
0->5 [style = solid, label="v"];
28->38 [style = bold, label=""];
34->33 [style = bold, label=""];
22->29 [style = bold, label=""];
5->26 [style = bold, label=""];
36->28 [style = bold, label=""];
26->5 [style = solid, label="v"];
8->23 [style = solid, label="v"];
9->17 [style = bold, label=""];
24->15 [style = solid, label="partitionLagMetric"];
18->36 [style = bold, label=""];
5->22 [style = solid, label="v"];
5->18 [style = bold, label=""];
37->30 [style = solid, label="metrics"];
17->32 [style = dashed, label="0"];
18->36 [style = dashed, label="0"];
6->38 [style = dashed, label="0"];
11->19 [style = bold, label=""];
8->26 [style = solid, label="v"];
38->39 [style = bold, label=""];
4->33 [style = dashed, label="0"];
37->11 [style = solid, label="metrics"];
13->1 [style = bold, label=""];
29->18 [style = bold, label=""];
21->2 [style = bold, label=""];
14->7 [style = bold, label=""];
29->22 [style = solid, label="v"];
0->23 [style = solid, label="v"];
3->10 [style = bold, label=""];
19->34 [style = dashed, label="0"];
24->35 [style = solid, label="partitionLagMetric"];
18->22 [style = bold, label=""];
26->23 [style = solid, label="v"];
23->26 [style = dotted, label="true"];
0->23 [style = bold, label=""];
5->0 [style = bold, label=""];
22->28 [style = dashed, label="0"];
25->12 [style = bold, label=""];
3->1 [style = solid, label="partitionLagMetric"];
24->11 [style = bold, label=""];
30->7 [style = bold, label=""];
39->35 [style = bold, label=""];
6->13 [style = bold, label=""];
26->23 [style = bold, label=""];
5->18 [style = solid, label="v"];
5->29 [style = solid, label="v"];
20->12 [style = bold, label=""];
12->14 [style = bold, label=""];
17->15 [style = bold, label=""];
7->24 [style = solid, label="maxLagMetric"];
7->21 [style = bold, label=""];
18->22 [style = dotted, label="true"];
27->19 [style = bold, label=""];
19->4 [style = bold, label=""];
11->27 [style = dashed, label="0"];
15->32 [style = bold, label=""];
21->3 [style = solid, label="tags"];
8->0 [style = solid, label="v"];
29->18 [style = solid, label="v"];
24->27 [style = bold, label=""];
15->8 [style = bold, label=""];
23->18 [style = bold, label=""];
4->34 [style = bold, label=""];
23->0 [style = dotted, label="true"];
22->6 [style = bold, label=""];
18->29 [style = dotted, label="true"];
2->16 [style = bold, label=""];
}
