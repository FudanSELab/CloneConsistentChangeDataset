digraph {
13 [style = filled, label = "segments.getOrCreateSegmentIfLive(2,context,streamTime)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(3,segments.size())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "shouldGetSegmentsWithinTimeRange['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "updateStreamTimeAndCreateSegment(1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "segments.getOrCreateSegmentIfLive(3,context,streamTime)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(0,segments.get(0).id)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final List<KeyValueSegment> segments = this.segments.segments(0,2 * SEGMENT_INTERVAL)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "final List<TimestampedSegment> segments = this.segments.segments(0,2 * SEGMENT_INTERVAL)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "updateStreamTimeAndCreateSegment(0)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(2,segments.get(2).id)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(1,segments.get(1).id)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(3,segments.size())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "updateStreamTimeAndCreateSegment(0)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "segments.getOrCreateSegmentIfLive(1,context,streamTime)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "updateStreamTimeAndCreateSegment(2)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final List<KeyValueSegment> segments = this.segments.segments(0,2 * SEGMENT_INTERVAL,true)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertEquals(0,segments.get(0).id)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final long streamTime = updateStreamTimeAndCreateSegment(4)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "shouldGetSegmentsWithinTimeRangeOutOfOrder['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "updateStreamTimeAndCreateSegment(3)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(1,segments.get(1).id)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "updateStreamTimeAndCreateSegment(4)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "segments.getOrCreateSegmentIfLive(4,context,streamTime)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "shouldGetSegmentsWithinTimeRange['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "updateStreamTimeAndCreateSegment(1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(2,segments.get(2).id)@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
17->10 [style = bold, label=""];
16->11 [style = bold, label=""];
7->12 [style = bold, label=""];
3->6 [style = bold, label=""];
11->9 [style = bold, label=""];
24->22 [style = bold, label=""];
5->13 [style = solid, label="streamTime"];
22->3 [style = bold, label=""];
12->13 [style = bold, label=""];
6->5 [style = bold, label=""];
25->20 [style = bold, label=""];
23->24 [style = bold, label=""];
5->12 [style = solid, label="streamTime"];
8->2 [style = bold, label=""];
9->15 [style = bold, label=""];
2->14 [style = bold, label=""];
10->0 [style = bold, label=""];
15->4 [style = bold, label=""];
18->25 [style = bold, label=""];
7->18 [style = bold, label=""];
5->7 [style = bold, label=""];
5->7 [style = solid, label="streamTime"];
19->21 [style = bold, label=""];
14->16 [style = dashed, label="0"];
5->8 [style = solid, label="streamTime"];
13->8 [style = bold, label=""];
6->7 [style = bold, label=""];
20->19 [style = bold, label=""];
1->10 [style = bold, label=""];
14->11 [style = bold, label=""];
5->2 [style = solid, label="streamTime"];
2->16 [style = bold, label=""];
}
