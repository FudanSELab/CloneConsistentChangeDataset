digraph {
1 [style = filled, label = "assertEquals(Optional.of(\"89\"),first.getField(\"volume\"))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "assertEquals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn$_2$P$_2$S$_6$ crystals\"),second.getField(StandardField.TITLE))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "testImportEntriesMedline['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(\"article\",second.getType())@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertEquals(Optional.of(\"Degl'Innocenti, R. and Guarino, A. and Poberaj, G. and Gunter, P.\"),first.getField(\"author\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "assertEquals(Optional.of(\"3\"),second.getField(\"number\"))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(Optional.of(\"Effects of modafinil on cognitive performance and alertness during sleep deprivation.\"),first.getField(\"title\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(Optional.empty(),first.getField(\"month\"))@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testImportEntriesINSPEC['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(Optional.of(\"2006\"),first.getField(StandardField.YEAR))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "assertEquals(Optional.of(\"Second harmonic generation of continuous wave ultraviolet light and production of beta -BaB$_2$O$_4$ optical waveguides\"),first.getField(StandardField.TITLE))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "assertEquals(Optional.of(\"13\"),second.getField(\"volume\"))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(Optional.of(\"#jul#\"),first.getField(StandardField.MONTH))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "BibEntry first = entries.get(0)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(Optional.of(\"#jul#\"),first.getField(\"month\"))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "Path file = Paths.get(.getResource(\"IsiImporterTestMedline.isi\").toURI())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(Optional.of(\"89\"),first.getField(StandardField.VOLUME))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "assertEquals(Optional.of(\"Lorem ipsum abstract\"),first.getField(StandardField.ABSTRACT))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "BibEntry second = entries.get(1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(Optional.of(\"Lorem ipsum abstract\"),first.getField(\"abstract\"))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "assertEquals(\"article\",second.getType())@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "second = tmp@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(Optional.of(\"Aip\"),first.getField(StandardField.PUBLISHER))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "assertEquals(Optional.of(\"12\"),first.getField(\"volume\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(2,entries.size())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "first = second@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(Optional.of(\"Degl'Innocenti, R. and Guarino, A. and Poberaj, G. and Gunter, P.\"),first.getField(StandardField.AUTHOR))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "assertEquals(Optional.of(\"411--22\"),second.getField(\"pages\"))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(Optional.of(\"20\"),first.getField(\"number\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(Optional.of(\"Aip\"),first.getField(\"publisher\"))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "assertEquals(\"article\",first.getType())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "first.getField(\"title\").equals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn$_2$P$_2$S$_6$ crystals\"))@@@7@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "assertEquals(Optional.of(\"4\"),first.getField(StandardField.NUMBER))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertEquals(Optional.of(\"Second harmonic generation of continuous wave ultraviolet light and production of beta -BaB$_2$O$_4$ optical waveguides\"),first.getField(\"title\"))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "assertEquals(StandardEntryType.Article,second.getType())@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "assertEquals(Optional.of(\"2457--71\"),first.getField(\"pages\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testImportEntriesINSPEC['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "assertEquals(Optional.of(\"Estrogen therapy selectively enhances prefrontal cognitive processes: a randomized, double-blind, placebo-controlled study with functional magnetic resonance imaging in perimenopausal and recently postmenopausal women.\"),second.getField(\"title\"))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "first.getField(StandardField.TITLE).equals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn$_2$P$_2$S$_6$ crystals\"))@@@7@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "assertEquals(Optional.of(\"Curr Pharm Des\"),first.getField(\"journal\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(Optional.of(\"Applied Physics Letters\"),first.getField(\"journal\"))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertEquals(Optional.of(\"4\"),first.getField(\"number\"))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertEquals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn$_2$P$_2$S$_6$ crystals\"),second.getField(\"title\"))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "assertEquals(Optional.of(\"#may#\"),second.getField(\"month\"))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(\"article\",first.getType())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "assertEquals(Optional.of(\"2006\"),second.getField(\"year\"))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(Optional.of(\"Joffe, Hadine and Hall, Janet E. and Gruber, Staci and Sarmiento, Ingrid A. and Cohen, Lee S. and Yurgelun-Todd, Deborah and Martin, Kathryn A.\"),second.getField(\"author\"))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(Optional.of(\"Applied Physics Letters\"),first.getField(StandardField.JOURNAL))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "assertEquals(Optional.of(\"Wesensten, Nancy J.\"),first.getField(\"author\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertEquals(Optional.of(\"2006\"),first.getField(\"year\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "List<BibEntry> entries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "BibEntry tmp = first@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Path file = Paths.get(.getResource(\"IsiImporterTestInspec.isi\").toURI())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(StandardEntryType.Article,first.getType())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30->5 [style = dotted, label="true"];
8->5 [style = solid, label="first"];
4->18 [style = dotted, label="true"];
0->13 [style = bold, label=""];
27->28 [style = bold, label=""];
4->7 [style = dotted, label="true"];
4->30 [style = dashed, label="0"];
19->36 [style = bold, label=""];
10->22 [style = dashed, label="0"];
40->38 [style = bold, label=""];
26->12 [style = bold, label=""];
19->9 [style = bold, label=""];
15->0 [style = bold, label=""];
51->47 [style = bold, label=""];
21->1 [style = bold, label=""];
13->51 [style = dashed, label="0"];
15->33 [style = dashed, label="0"];
9->14 [style = bold, label=""];
12->46 [style = dashed, label="0"];
48->49 [style = bold, label=""];
47->48 [style = bold, label=""];
30->7 [style = dotted, label="true"];
38->11 [style = bold, label=""];
1->31 [style = dashed, label="0"];
43->51 [style = bold, label=""];
4->19 [style = bold, label=""];
18->19 [style = bold, label=""];
0->27 [style = dashed, label="0"];
2->4 [style = bold, label=""];
33->27 [style = bold, label=""];
13->28 [style = dashed, label="0"];
30->19 [style = bold, label=""];
3->34 [style = dashed, label="0"];
31->33 [style = bold, label=""];
5->7 [style = bold, label=""];
14->35 [style = dashed, label="0"];
36->50 [style = bold, label=""];
29->35 [style = bold, label=""];
14->6 [style = bold, label=""];
6->17 [style = bold, label=""];
13->10 [style = bold, label=""];
23->31 [style = bold, label=""];
49->45 [style = bold, label=""];
4->5 [style = dotted, label="true"];
46->16 [style = bold, label=""];
52->46 [style = bold, label=""];
16->8 [style = bold, label=""];
19->29 [style = bold, label=""];
11->21 [style = bold, label=""];
0->43 [style = dashed, label="0"];
45->53 [style = bold, label=""];
6->40 [style = dashed, label="0"];
35->25 [style = bold, label=""];
21->11 [style = dashed, label="0"];
11->41 [style = bold, label=""];
53->37 [style = bold, label=""];
8->2 [style = bold, label=""];
30->5 [style = bold, label=""];
30->18 [style = dotted, label="true"];
7->18 [style = bold, label=""];
4->5 [style = bold, label=""];
37->39 [style = bold, label=""];
14->50 [style = dashed, label="0"];
28->22 [style = bold, label=""];
24->23 [style = bold, label=""];
2->19 [style = bold, label=""];
42->43 [style = bold, label=""];
39->44 [style = bold, label=""];
1->15 [style = bold, label=""];
25->32 [style = bold, label=""];
2->7 [style = solid, label="second"];
10->3 [style = bold, label=""];
17->32 [style = dashed, label="0"];
12->16 [style = bold, label=""];
1->41 [style = dashed, label="0"];
17->11 [style = bold, label=""];
15->42 [style = dashed, label="0"];
9->29 [style = dashed, label="0"];
6->25 [style = dashed, label="0"];
22->34 [style = bold, label=""];
50->40 [style = bold, label=""];
11->24 [style = dashed, label="0"];
20->12 [style = bold, label=""];
2->30 [style = bold, label=""];
21->23 [style = dashed, label="0"];
32->24 [style = bold, label=""];
10->47 [style = dashed, label="0"];
5->18 [style = solid, label="tmp"];
41->42 [style = bold, label=""];
}
