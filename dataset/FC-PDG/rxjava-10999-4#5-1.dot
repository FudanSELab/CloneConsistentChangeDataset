digraph {
13 [style = filled, label = "Supplier<String> func = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Completable fromSupplierObservable = Completable.fromSupplier(func)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "verify(func).get()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "when(func.get()).thenAnswer(new Answer<String>(){@Override public String answer(InvocationOnMock invocation){observerLatch.countDown()try {funcLatch.await()}catch (InterruptedException e) return \"should_not_be_delivered\"}})@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "shouldNotDeliverResultIfSubscriberUnsubscribedBeforeEmission['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "verify(observer).onSubscribe(any())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "TestObserver<String> outer = new TestObserver<>(observer)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Observer<Object> observer = TestHelper.mockObserver()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Observable<String> fromSupplierObservable = Observable.fromSupplier(func)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "shouldNotDeliverResultIfSubscriberUnsubscribedBeforeEmission['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "TestObserver<String> outer = new TestObserver<String>(observer)@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "shouldNotDeliverResultIfSubscriberUnsubscribedBeforeEmission['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "fromSupplierObservable.subscribeOn(Schedulers.computation()).subscribe(outer)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final CountDownLatch observerLatch = new CountDownLatch(1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "verifyNoMoreInteractions(observer)@@@28@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "outer.dispose()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "funcLatch.countDown()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "observerLatch.await()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final CountDownLatch funcLatch = new CountDownLatch(1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->17 [style = bold, label=""];
13->10 [style = bold, label=""];
16->13 [style = bold, label=""];
0->4 [style = solid, label="observer"];
15->7 [style = bold, label=""];
0->15 [style = solid, label="observer"];
13->17 [style = solid, label="func"];
3->6 [style = bold, label=""];
10->3 [style = bold, label=""];
11->17 [style = dashed, label="0"];
4->7 [style = solid, label="outer"];
0->15 [style = bold, label=""];
4->7 [style = bold, label=""];
1->9 [style = bold, label=""];
8->1 [style = bold, label=""];
11->0 [style = bold, label=""];
17->0 [style = bold, label=""];
0->4 [style = bold, label=""];
15->7 [style = solid, label="outer"];
7->2 [style = bold, label=""];
4->15 [style = dashed, label="0"];
5->13 [style = bold, label=""];
14->12 [style = bold, label=""];
6->11 [style = bold, label=""];
18->13 [style = bold, label=""];
9->14 [style = bold, label=""];
0->12 [style = solid, label="observer"];
13->11 [style = solid, label="func"];
2->8 [style = bold, label=""];
}
