digraph {
12 [style = filled, label = "visitExpr['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "null != ctx.andOperator()@@@9@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "return new NotExpression(ctx.start.getStartIndex(),ctx.stop.getStopIndex(),(ExpressionSegment)visit(ctx.expr(0)))@@@16@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final ExprContext ctx@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "return new NotExpression(ctx.start.getStartIndex(),ctx.stop.getStopIndex(),(ExpressionSegment)visit(ctx.expr(0)))@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "visitExpr['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "visitExpr['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "null != ctx.orOperator()@@@12@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "null != ctx.LP_()@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "String text = ctx.start.getInputStream().getText(new Interval(ctx.start.getStartIndex(),ctx.stop.getStopIndex()))@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String operator = ctx.logicalOperator().getText()@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "return createBinaryOperationExpression(ctx,ctx.andOperator().getText())@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "null != ctx.logicalOperator()@@@9@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "return new BinaryOperationExpression(ctx.start.getStartIndex(),ctx.stop.getStopIndex(),left,right,operator,text)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ExpressionSegment left = (ExpressionSegment)visit(ctx.expr(0))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ExpressionSegment right = (ExpressionSegment)visit(ctx.expr(1))@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "return visit(ctx.booleanPrimary())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "return createBinaryOperationExpression(ctx,ctx.orOperator().getText())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "return visit(ctx.expr(0))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "null != ctx.booleanPrimary()@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11->7 [style = dotted, label="true"];
3->16 [style = solid, label="ctx"];
12->3 [style = dotted, label="true"];
13->17 [style = dotted, label="true"];
2->4 [style = solid, label="text"];
3->17 [style = solid, label="ctx"];
0->10 [style = dotted, label="true"];
18->16 [style = dotted, label="true"];
11->6 [style = bold, label=""];
0->4 [style = dotted, label="true"];
12->11 [style = bold, label=""];
19->11 [style = bold, label=""];
6->0 [style = bold, label=""];
9->10 [style = bold, label=""];
2->4 [style = bold, label=""];
1->4 [style = solid, label="left"];
1->9 [style = bold, label=""];
10->4 [style = solid, label="operator"];
15->3 [style = dotted, label="true"];
6->5 [style = bold, label=""];
13->17 [style = bold, label=""];
15->11 [style = bold, label=""];
5->0 [style = bold, label=""];
19->3 [style = dotted, label="true"];
0->1 [style = bold, label=""];
9->4 [style = solid, label="right"];
6->13 [style = bold, label=""];
5->13 [style = bold, label=""];
17->18 [style = bold, label=""];
7->6 [style = bold, label=""];
0->13 [style = dashed, label="0"];
0->8 [style = bold, label=""];
4->8 [style = bold, label=""];
16->14 [style = bold, label=""];
10->2 [style = bold, label=""];
0->2 [style = dotted, label="true"];
0->9 [style = dotted, label="true"];
18->14 [style = bold, label=""];
11->7 [style = bold, label=""];
13->18 [style = bold, label=""];
6->5 [style = dotted, label="true"];
0->1 [style = dotted, label="true"];
18->16 [style = bold, label=""];
}
