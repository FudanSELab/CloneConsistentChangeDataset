digraph {
11 [style = filled, label = "operatorStateBackend = operatorStateHandles@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Collection<OperatorStateHandle> operatorStateHandles = Collections.singletonList(new OperatorStateHandle(operatorStateMetadata,state))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "TaskInformation taskInformation = new TaskInformation(new JobVertexID(),\"test task name\",1,11,.getName(),taskConfig)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Collection<KeyedStateHandle> keyedStateFromBackend = Collections.emptyList()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "operatorStateStream = operatorStateHandles@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "TaskKvStateRegistry mockKvRegistry = mock()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "StreamStateHandle state@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "BlobCacheService blobService = new BlobCacheService(mock(),mock())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "when(networkEnvironment.createKvStateTaskRegistry(any(),any())).thenReturn(mock())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "JobManagerTaskRestore taskRestore = new JobManagerTaskRestore(1L,stateSnapshot)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "TaskInformation taskInformation = new TaskInformation(jobVertexID,\"test task name\",1,1,.getName(),taskConfig)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "NetworkEnvironment networkEnvironment = mock()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Collection<OperatorStateHandle> operatorStateHandles = Collections.singletonList(new OperatorStreamStateHandle(operatorStateMetadata,state))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "keyedStateFromStream = keyedStateHandles@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "Configuration taskConfig = new Configuration()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "OperatorStateHandle.StateMetaInfo metaInfo = new OperatorStateHandle.StateMetaInfo(new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1be979f,OperatorStateHandle.Mode.SPLIT_DISTRIBUTE)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "JobVertexID jobVertexID = new JobVertexID()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "streamConfig.setOperatorID(operatorID)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "OperatorSubtaskState operatorSubtaskState = new OperatorSubtaskState(new StateObjectCollection<>(operatorStateBackend),new StateObjectCollection<>(operatorStateStream),new StateObjectCollection<>(keyedStateFromBackend),new StateObjectCollection<>(keyedStateFromStream))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "CheckpointResponder checkpointResponder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "StreamConfig streamConfig@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "List<KeyedStateHandle> keyedStateHandles = Collections.singletonList(new KeyGroupsStateHandle(keyGroupRangeOffsets,state))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "StreamConfig streamConfig@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "OperatorID operatorID = OperatorID.fromJobVertexID(jobVertexID)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "cfg.setStateBackend(backend)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "return new Task(jobInformation,taskInformation,new ExecutionAttemptID(),new AllocationID(),0,0,Collections.emptyList(),Collections.emptyList(),0,mock(),mock(),networkEnvironment,mock(),taskStateManager,mock(),mock(),mock(),blobService,new BlobLibraryCacheManager(blobService.getPermanentBlobService(),FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,new String((((),new FileCache(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1be98ad),new TestingTaskManagerRuntimeInfo(),UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),mock(),mock(),mock())@@@43@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "when(network.createKvStateTaskRegistry(any(),any())).thenReturn(mockKvRegistry)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Configuration taskConfig@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Collection<OperatorStateHandle> operatorStateBackend = Collections.emptyList()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "mode@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "executionConfig.setFailTaskOnCheckpointError(failOnCheckpointErrors)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "createTask['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Configuration taskConfig@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "StreamStateHandle state@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "Collection<KeyedStateHandle> keyedStateFromStream = Collections.emptyList()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "keyedStateFromBackend = keyedStateHandles@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "taskStateManager.setTaskStateSnapshotsByCheckpointId(Collections.singletonMap(taskRestore.getRestoreCheckpointId(),taskRestore.getTaskStateSnapshot()))@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
53 [style = filled, label = "return new Task(jobInformation,taskInformation,new ExecutionAttemptID(),new AllocationID(),0,0,Collections.emptyList(),Collections.emptyList(),0,mock(),mock(),network,mock(),new TestTaskStateManager(),mock(),mock(),checkpointResponder,blobService,new BlobLibraryCacheManager(blobService.getPermanentBlobService(),FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,new String((((),new FileCache(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1be9984),new TestingTaskManagerRuntimeInfo(),UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),mock(),mock(),Executors.directExecutor())@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "when(network.getTaskEventDispatcher()).thenReturn(taskEventDispatcher)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Collection<OperatorStateHandle> operatorStateStream = Collections.emptyList()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Map<String,OperatorStateHandle.StateMetaInfo> operatorStateMetadata = new HashMap<>(1)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "OperatorSubtaskState operatorSubtaskState = new OperatorSubtaskState(operatorStateBackend,operatorStateStream,keyedStateFromBackend,keyedStateFromStream)@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "KeyGroupRangeOffsets keyGroupRangeOffsets = new KeyGroupRangeOffsets(new KeyGroupRange(0,0))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "NetworkEnvironment network = mock()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "stateSnapshot.putSubtaskStateByOperatorID(operatorID,operatorSubtaskState)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "createTask['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "boolean failOnCheckpointErrors@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "operatorStateMetadata.put(DefaultOperatorStateBackend.DEFAULT_OPERATOR_STATE_NAME,metaInfo)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "throw new IllegalArgumentException()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "TaskEventDispatcher taskEventDispatcher = new TaskEventDispatcher()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "JobInformation jobInformation = new JobInformation(new JobID(),\"test job name\",new SerializedValue<>(new ExecutionConfig()),new Configuration(),Collections.emptyList(),Collections.emptyList())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "StreamConfig cfg = new StreamConfig(taskConfig)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "cfg.setOperatorID(new OperatorID())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "when(networkEnvironment.getTaskEventDispatcher()).thenReturn(taskEventDispatcher)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "createTask['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "TestTaskStateManager taskStateManager = new TestTaskStateManager()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "TaskStateSnapshot stateSnapshot = new TaskStateSnapshot()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "taskStateManager.setReportedCheckpointId(taskRestore.getRestoreCheckpointId())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "StateBackend backend@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "cfg.setStreamOperator(op)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "ExecutionConfig executionConfig = new ExecutionConfig()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "int mode@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
62 [style = filled, label = "JobInformation jobInformation = new JobInformation(new JobID(),\"test job name\",new SerializedValue<>(executionConfig),new Configuration(),Collections.emptyList(),Collections.emptyList())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "StreamOperator<?> op@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "taskStateManager.setJobManagerTaskStateSnapshotsByCheckpointId(Collections.singletonMap(taskRestore.getRestoreCheckpointId(),taskRestore.getTaskStateSnapshot()))@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "TaskEventDispatcher taskEventDispatcher = new TaskEventDispatcher()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "BlobCacheService blobService = new BlobCacheService(mock(),mock())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->5 [style = solid, label="taskEventDispatcher"];
61->56 [style = bold, label=""];
5->20 [style = bold, label=""];
49->55 [style = dotted, label="true"];
19->17 [style = solid, label="jobVertexID"];
59->65 [style = solid, label="mockKvRegistry"];
28->9 [style = bold, label=""];
40->32 [style = solid, label="operatorSubtaskState"];
43->11 [style = solid, label="operatorStateHandles"];
21->18 [style = bold, label=""];
15->30 [style = solid, label="taskInformation"];
23->29 [style = bold, label=""];
26->12 [style = bold, label=""];
37->29 [style = solid, label="operatorStateHandles"];
29->2 [style = bold, label=""];
18->22 [style = bold, label=""];
63->66 [style = bold, label=""];
0->37 [style = solid, label="state"];
55->56 [style = solid, label="backend"];
37->31 [style = bold, label=""];
7->43 [style = bold, label=""];
45->42 [style = dotted, label="true"];
66->53 [style = solid, label="blobService"];
23->29 [style = dotted, label="true"];
9->38 [style = bold, label=""];
13->14 [style = bold, label=""];
27->2 [style = bold, label=""];
25->40 [style = bold, label=""];
57->46 [style = bold, label=""];
18->2 [style = solid, label="operatorStateBackend"];
27->40 [style = solid, label="keyedStateFromStream"];
36->6 [style = bold, label=""];
27->2 [style = solid, label="keyedStateFromStream"];
23->25 [style = bold, label=""];
33->16 [style = bold, label=""];
47->63 [style = solid, label="taskEventDispatcher"];
38->48 [style = dashed, label="0"];
35->37 [style = solid, label="operatorStateMetadata"];
47->48 [style = bold, label=""];
62->53 [style = solid, label="jobInformation"];
39->43 [style = solid, label="state"];
49->54 [style = dotted, label="true"];
21->2 [style = solid, label="keyedStateFromStream"];
17->13 [style = solid, label="operatorID"];
7->37 [style = bold, label=""];
16->26 [style = bold, label=""];
49->64 [style = dotted, label="true"];
45->44 [style = dotted, label="true"];
11->2 [style = solid, label="operatorStateBackend"];
31->25 [style = solid, label="keyedStateHandles"];
37->11 [style = solid, label="operatorStateHandles"];
21->40 [style = solid, label="keyedStateFromStream"];
25->2 [style = bold, label=""];
46->60 [style = bold, label=""];
49->51 [style = dotted, label="true"];
56->58 [style = bold, label=""];
33->30 [style = solid, label="blobService"];
41->30 [style = bold, label=""];
28->24 [style = dotted, label="true"];
36->6 [style = solid, label="metaInfo"];
50->53 [style = solid, label="taskInformation"];
22->2 [style = solid, label="operatorStateStream"];
19->15 [style = solid, label="jobVertexID"];
23->27 [style = dotted, label="true"];
4->15 [style = solid, label="taskConfig"];
23->10 [style = bold, label=""];
22->40 [style = solid, label="operatorStateStream"];
20->2 [style = solid, label="keyedStateFromBackend"];
45->39 [style = dotted, label="true"];
29->40 [style = bold, label=""];
10->2 [style = bold, label=""];
52->62 [style = bold, label=""];
25->2 [style = solid, label="keyedStateFromBackend"];
20->40 [style = solid, label="keyedStateFromBackend"];
6->7 [style = bold, label=""];
45->24 [style = dotted, label="true"];
64->52 [style = solid, label="failOnCheckpointErrors"];
15->33 [style = bold, label=""];
39->31 [style = solid, label="state"];
14->8 [style = solid, label="stateSnapshot"];
29->40 [style = solid, label="operatorStateStream"];
54->53 [style = solid, label="checkpointResponder"];
0->31 [style = solid, label="state"];
57->46 [style = solid, label="taskConfig"];
8->3 [style = bold, label=""];
40->19 [style = bold, label=""];
19->17 [style = bold, label=""];
48->53 [style = solid, label="network"];
16->30 [style = solid, label="taskStateManager"];
28->1 [style = dotted, label="true"];
16->53 [style = dashed, label="0"];
17->32 [style = solid, label="operatorID"];
12->41 [style = dashed, label="0"];
58->62 [style = solid, label="executionConfig"];
59->47 [style = bold, label=""];
26->41 [style = bold, label=""];
32->8 [style = bold, label=""];
23->10 [style = dotted, label="true"];
28->0 [style = dotted, label="true"];
60->61 [style = bold, label=""];
2->32 [style = solid, label="operatorSubtaskState"];
24->64 [style = dashed, label="0"];
38->34 [style = bold, label=""];
31->27 [style = solid, label="keyedStateHandles"];
10->40 [style = bold, label=""];
28->4 [style = dotted, label="true"];
17->13 [style = bold, label=""];
23->11 [style = bold, label=""];
24->15 [style = solid, label="taskConfig"];
22->35 [style = bold, label=""];
14->32 [style = bold, label=""];
29->2 [style = solid, label="operatorStateStream"];
45->9 [style = bold, label=""];
65->63 [style = bold, label=""];
23->25 [style = dotted, label="true"];
43->31 [style = bold, label=""];
2->19 [style = bold, label=""];
24->23 [style = solid, label="mode"];
31->23 [style = bold, label=""];
23->27 [style = bold, label=""];
51->60 [style = solid, label="op"];
66->53 [style = bold, label=""];
25->40 [style = solid, label="keyedStateFromBackend"];
34->5 [style = bold, label=""];
43->29 [style = solid, label="operatorStateHandles"];
35->43 [style = solid, label="operatorStateMetadata"];
12->30 [style = bold, label=""];
3->15 [style = bold, label=""];
44->23 [style = solid, label="mode"];
11->40 [style = solid, label="operatorStateBackend"];
11->40 [style = bold, label=""];
11->2 [style = bold, label=""];
37->43 [style = dashed, label="0"];
38->30 [style = solid, label="networkEnvironment"];
7->31 [style = solid, label="keyGroupRangeOffsets"];
20->21 [style = bold, label=""];
5->63 [style = dashed, label="0"];
18->40 [style = solid, label="operatorStateBackend"];
3->30 [style = solid, label="jobInformation"];
62->50 [style = bold, label=""];
27->40 [style = bold, label=""];
58->52 [style = bold, label=""];
48->65 [style = bold, label=""];
2->40 [style = dashed, label="0"];
35->36 [style = bold, label=""];
49->57 [style = bold, label=""];
34->65 [style = dashed, label="0"];
57->50 [style = solid, label="taskConfig"];
50->59 [style = bold, label=""];
23->11 [style = dotted, label="true"];
}
