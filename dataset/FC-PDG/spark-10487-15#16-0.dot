digraph {
7 [style = filled, label = "StructType schema = new StructType(new StructField((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a717fe)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Word2VecModel model = word2Vec.fit(documentDF)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Dataset<Row> documentDF = spark.createDataFrame(data,schema)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Dataset<Row> documentDF = spark.createDataFrame(Arrays.asList(RowFactory.create(Arrays.asList(\"Hi I heard about Spark\".split(\" \"))),RowFactory.create(Arrays.asList(\"I wish Java could use case classes\".split(\" \"))),RowFactory.create(Arrays.asList(\"Logistic regression models are neat\".split(\" \")))),schema)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testJavaWord2Vec['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "main['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<Row> data = Arrays.asList(RowFactory.create(Arrays.asList(\"Hi I heard about Spark\".split(\" \"))),RowFactory.create(Arrays.asList(\"I wish Java could use case classes\".split(\" \"))),RowFactory.create(Arrays.asList(\"Logistic regression models are neat\".split(\" \"))))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Word2Vec word2Vec = new Word2Vec().setInputCol(\"text\").setOutputCol(\"result\").setVectorSize(3).setMinCount(0)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "SparkSession spark = SparkSession.builder().appName(\"JavaWord2VecExample\").getOrCreate()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testJavaWord2Vec['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Word2Vec word2Vec = new Word2Vec().setInputCol(\"text\").setOutputCol(\"result\").setVectorSize(3).setMinCount(0)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(3,polyFeatures.length)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Assert.assertEquals(polyFeatures.length,3)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "Vector vector = (Vector)row.get(1)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "spark.stop()@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Dataset<Row> result = model.transform(documentDF)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "StructType schema = new StructType(new StructField((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a718b6)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "System.out.println(\"Text: \" + text + \" => Vector: \" + vector + \"\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "String(( args@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "List<String> text = row.getList(0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Word2VecModel model = word2Vec.fit(documentDF)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17->10 [style = bold, label=""];
15->1 [style = solid, label="documentDF"];
6->3 [style = bold, label=""];
19->18 [style = bold, label=""];
10->14 [style = bold, label=""];
2->1 [style = bold, label=""];
18->11 [style = bold, label=""];
16->20 [style = dotted, label="true"];
14->15 [style = solid, label="schema"];
16->17 [style = bold, label=""];
6->5 [style = solid, label="documentDF"];
12->1 [style = bold, label=""];
1->13 [style = bold, label=""];
7->6 [style = solid, label="schema"];
4->7 [style = bold, label=""];
1->9 [style = bold, label=""];
8->7 [style = bold, label=""];
3->0 [style = bold, label=""];
15->5 [style = bold, label=""];
5->1 [style = bold, label=""];
13->19 [style = bold, label=""];
19->18 [style = solid, label="vector"];
6->0 [style = solid, label="documentDF"];
5->12 [style = bold, label=""];
2->9 [style = dashed, label="0"];
7->6 [style = bold, label=""];
10->15 [style = solid, label="data"];
18->13 [style = bold, label=""];
13->18 [style = solid, label="text"];
14->15 [style = bold, label=""];
1->2 [style = bold, label=""];
9->1 [style = bold, label=""];
15->12 [style = solid, label="documentDF"];
0->5 [style = bold, label=""];
}
