digraph {
44 [style = filled, label = "driver.flushState()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final int(( expectedKeys@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "doTestJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "driver.flushState()@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "@SuppressWarnings(\"unchecked\") final KTableValueGetterSupplier<Integer,String> getterSupplier = ((KTableImpl<Integer,String,String>)joined).valueGetterSupplier()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "driver.flushState()@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "driver.flushState()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "i++@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"YYY\" + expectedKeys(i())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "final MockProcessor<Integer,String> processor = supplier.theCapturedProcessor()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "testOuterJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "i++@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+Y0\"),kv(1,\"XX1+Y1\"))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "driver.setTime(0L)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "i < 2@@@45@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "driver.process(topic1,null,\"XX\" + 1)@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "i < 2@@@27@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "driver.process(topic2,expectedKeys(i(,null)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c34dcb@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "checkJoinedValues(getter,kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"YY\" + expectedKey))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final KTable<Integer,String> joined@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "stream1 = builder.stream(topic1,consumed)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,\"X\" + expectedKeys(i())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "checkJoinedValues(getter,kv(0,null),kv(1,null))@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "final int(( expectedKeys@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "processor.checkAndClearProcessResult(\"0:null\",\"1:null\")@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "final StreamsBuilder builder@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "driver.setUp(builder,stateDir,Serdes.Integer(),Serdes.String())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "final MockProcessor<Integer,String> processor = supplier.theCapturedProcessor()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int i = 0@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"0:X0+YY0\",\"1:X1+YY1\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "processor.checkAndClearProcessResult()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YYY0\",\"0:X0+YYY0\",\"0:XX0+YYY0\",\"1:X1+YYY1\",\"1:X1+YYY1\",\"1:XX1+YYY1\")@@@49@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "checkJoinedValues(getter,kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@62@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "final KTableValueGetterSupplier<Integer,String> getterSupplier = ((KTableImpl<Integer,String,String>)joined).valueGetterSupplier()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+YY0\"),kv(1,\"XX1+YY1\"),kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "joined = stream1.outerJoin(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(ofMillis(100)),Joined.with(Serdes.Integer(),Serdes.String(),Serdes.String()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "i++@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "i++@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "i++@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "doTestJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "final KTable<Integer,String> joined@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "int i = 0@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "joined.process(supplier)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "int i = 0@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "driver.flushState()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "driver.process(topic2,expectedKey,\"YY\" + expectedKey)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "processor.checkAndClearProcessResult(\"2:XX2+YY2\",\"3:XX3+YY3\")@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier = new MockProcessorSupplier<>()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "stream2 = builder.stream(topic2,consumed)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "i < 2@@@48@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "int i = 0@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"X\" + expectedKey))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "driver.flushState()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "i < 2@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final KTableValueGetter<Integer,String> getter = getterSupplier.get()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "final KStream<Integer,String> stream1@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "final KStream<Integer,String> stream2@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "int i = 0@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "final KStream<Integer,String> joined@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+Y0\",\"0:XX0+YY0\",\"1:XX1+Y1\",\"1:XX1+YY1\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "driver.flushState()@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int i = 0@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XX\" + expectedKey))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "i < 2@@@21@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\",\"2:X2+null\",\"3:X3+null\")@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "getter.init(driver.context())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81->32 [style = solid, label="i"];
60->47 [style = solid, label="i"];
73->61 [style = solid, label="i"];
52->28 [style = dotted, label="true"];
50->3 [style = dotted, label="true"];
21->39 [style = solid, label="getter"];
86->69 [style = bold, label=""];
19->83 [style = solid, label="i"];
19->61 [style = solid, label="i"];
11->9 [style = bold, label=""];
61->64 [style = bold, label=""];
9->6 [style = bold, label=""];
47->22 [style = bold, label=""];
62->6 [style = bold, label=""];
21->46 [style = bold, label=""];
17->53 [style = bold, label=""];
1->70 [style = solid, label="i"];
26->25 [style = solid, label="i"];
76->60 [style = bold, label=""];
34->24 [style = bold, label=""];
70->72 [style = solid, label="i"];
60->47 [style = bold, label=""];
28->52 [style = bold, label=""];
39->51 [style = bold, label=""];
52->25 [style = dotted, label="true"];
10->25 [style = solid, label="expectedKeys"];
73->61 [style = bold, label=""];
56->8 [style = bold, label=""];
50->45 [style = bold, label=""];
19->61 [style = bold, label=""];
19->15 [style = bold, label=""];
19->15 [style = solid, label="i"];
31->22 [style = solid, label="i"];
60->32 [style = solid, label="i"];
10->4 [style = solid, label="expectedKeys"];
13->14 [style = bold, label=""];
81->47 [style = bold, label=""];
83->73 [style = bold, label=""];
59->84 [style = bold, label=""];
33->7 [style = bold, label=""];
25->28 [style = bold, label=""];
22->72 [style = dashed, label="0"];
1->62 [style = solid, label="i"];
74->78 [style = bold, label=""];
21->17 [style = solid, label="getter"];
61->73 [style = dotted, label="true"];
51->66 [style = dashed, label="0"];
58->54 [style = dotted, label="true"];
42->8 [style = solid, label="builder"];
85->25 [style = bold, label=""];
4->19 [style = bold, label=""];
61->83 [style = bold, label=""];
40->0 [style = bold, label=""];
55->25 [style = solid, label="expectedKeys"];
2->18 [style = bold, label=""];
49->38 [style = bold, label=""];
24->40 [style = bold, label=""];
14->86 [style = dashed, label="0"];
67->72 [style = solid, label="expectedKeys"];
1->11 [style = bold, label=""];
67->32 [style = solid, label="expectedKeys"];
50->35 [style = dotted, label="true"];
19->73 [style = solid, label="i"];
41->30 [style = bold, label=""];
18->1 [style = bold, label=""];
27->86 [style = bold, label=""];
21->33 [style = solid, label="getter"];
7->23 [style = bold, label=""];
19->4 [style = solid, label="i"];
50->10 [style = dotted, label="true"];
32->81 [style = bold, label=""];
81->47 [style = solid, label="i"];
31->47 [style = bold, label=""];
58->55 [style = dotted, label="true"];
25->65 [style = bold, label=""];
0->47 [style = solid, label="i"];
1->62 [style = bold, label=""];
37->56 [style = dashed, label="0"];
60->81 [style = solid, label="i"];
36->43 [style = bold, label=""];
12->17 [style = bold, label=""];
45->36 [style = bold, label=""];
47->81 [style = dotted, label="true"];
78->85 [style = bold, label=""];
23->41 [style = bold, label=""];
21->30 [style = solid, label="getter"];
21->16 [style = solid, label="getter"];
63->74 [style = bold, label=""];
0->22 [style = solid, label="i"];
47->77 [style = bold, label=""];
70->62 [style = solid, label="i"];
11->75 [style = dashed, label="0"];
47->32 [style = dotted, label="true"];
51->29 [style = bold, label=""];
5->16 [style = bold, label=""];
26->52 [style = bold, label=""];
27->39 [style = bold, label=""];
47->32 [style = bold, label=""];
21->1 [style = solid, label="getter"];
50->42 [style = dotted, label="true"];
47->22 [style = dotted, label="true"];
30->5 [style = bold, label=""];
4->83 [style = dashed, label="0"];
31->47 [style = solid, label="i"];
6->13 [style = bold, label=""];
55->22 [style = solid, label="expectedKeys"];
67->83 [style = solid, label="expectedKeys"];
15->48 [style = bold, label=""];
58->42 [style = dotted, label="true"];
79->71 [style = bold, label=""];
37->8 [style = bold, label=""];
67->79 [style = bold, label=""];
69->66 [style = bold, label=""];
10->22 [style = solid, label="expectedKeys"];
80->85 [style = solid, label="supplier"];
62->70 [style = dotted, label="true"];
34->76 [style = bold, label=""];
80->63 [style = bold, label=""];
0->31 [style = solid, label="i"];
77->1 [style = bold, label=""];
82->80 [style = bold, label=""];
25->32 [style = dashed, label="0"];
28->25 [style = solid, label="i"];
58->57 [style = dotted, label="true"];
72->70 [style = bold, label=""];
65->34 [style = bold, label=""];
26->52 [style = solid, label="i"];
84->67 [style = bold, label=""];
66->68 [style = bold, label=""];
70->62 [style = bold, label=""];
22->31 [style = bold, label=""];
53->4 [style = solid, label="i"];
26->28 [style = solid, label="i"];
68->19 [style = bold, label=""];
43->37 [style = bold, label=""];
52->34 [style = bold, label=""];
47->31 [style = dotted, label="true"];
14->44 [style = bold, label=""];
32->2 [style = bold, label=""];
15->4 [style = dotted, label="true"];
20->33 [style = bold, label=""];
61->83 [style = dotted, label="true"];
28->52 [style = solid, label="i"];
0->47 [style = bold, label=""];
29->12 [style = bold, label=""];
1->72 [style = solid, label="i"];
46->26 [style = bold, label=""];
52->25 [style = bold, label=""];
71->82 [style = bold, label=""];
62->72 [style = dotted, label="true"];
53->19 [style = solid, label="i"];
15->19 [style = dotted, label="true"];
73->83 [style = solid, label="i"];
48->20 [style = bold, label=""];
62->72 [style = bold, label=""];
58->45 [style = bold, label=""];
15->4 [style = bold, label=""];
55->4 [style = solid, label="expectedKeys"];
38->21 [style = bold, label=""];
53->15 [style = solid, label="i"];
8->49 [style = bold, label=""];
53->15 [style = bold, label=""];
6->75 [style = bold, label=""];
44->27 [style = bold, label=""];
75->27 [style = bold, label=""];
43->56 [style = bold, label=""];
21->13 [style = solid, label="getter"];
74->78 [style = solid, label="stream2"];
}
