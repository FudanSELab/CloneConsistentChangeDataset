digraph {
21 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "values.put(\"c\",3.1)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "values.put(\"c\",3.1)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "values.put(\"d\",4)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b,c,d)\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "values.put(\"a\",1.1)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "values.clear()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(269.5791D,result)@@@28@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "values.put(\"b\",2)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "values.put(\"a\",1.1)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "Assert.assertEquals(6 * 123456789123456789L,result)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "values.put(\"b\",123456789123456789L)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "values.put(\"c\",3)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "values.put(\"d\",4)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "values.put(\"d\",4.12345678)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "values.put(\"b\",2.1)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "values.clear()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "Assert.assertEquals(14.6D,result)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "values.put(\"b\",2.1)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "values.clear()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "values.put(\"d\",4.1)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "values.clear()@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "values.put(\"b\",2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "values.put(\"a\",123456789123456789L)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "values.clear()@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "values.put(\"b\",4.12345678)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "values.clear()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "multManyFieldsWithValues['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "Assert.assertEquals(24L,result)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "addManyFieldsWithManySubAdds['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "values.clear()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "values.put(\"a\",1.1)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "values.put(\"a\",1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "values.put(\"a\",4.12345678)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Assert.assertEquals(14.2D,result)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Assert.assertEquals(14L,result)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "values.put(\"c\",123456789123456789L)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "values.clear()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "multManyFieldsWithValues['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "values.put(\"b\",2.1)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "values.put(\"d\",123456789123456789L)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Assert.assertEquals(6 * 4.12345678,result)@@@52@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "values.put(\"c\",4.12345678)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Assert.assertEquals(24D,result)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"add(add(a,b),add(c,d),add(c,a))\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "Assert.assertEquals(14.623456789123456,result)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "values.put(\"d\",4.123456789123456)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "values.put(\"c\",3)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Object result@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->25 [style = bold, label=""];
8->10 [style = bold, label=""];
40->38 [style = solid, label="result"];
51->37 [style = solid, label="result"];
11->33 [style = dashed, label="0"];
0->32 [style = solid, label="result"];
10->39 [style = solid, label="result"];
50->56 [style = bold, label=""];
21->24 [style = bold, label=""];
25->14 [style = bold, label=""];
44->53 [style = bold, label=""];
0->15 [style = bold, label=""];
7->9 [style = bold, label=""];
31->50 [style = bold, label=""];
20->16 [style = bold, label=""];
45->38 [style = bold, label=""];
0->28 [style = solid, label="result"];
1->12 [style = bold, label=""];
4->58 [style = dashed, label="0"];
21->35 [style = bold, label=""];
10->13 [style = solid, label="result"];
8->22 [style = solid, label="result"];
32->20 [style = bold, label=""];
22->13 [style = bold, label=""];
55->37 [style = bold, label=""];
46->42 [style = bold, label=""];
30->41 [style = bold, label=""];
0->19 [style = solid, label="result"];
14->21 [style = solid, label="result"];
15->28 [style = dashed, label="0"];
19->20 [style = bold, label=""];
3->11 [style = bold, label=""];
53->30 [style = bold, label=""];
3->33 [style = bold, label=""];
51->55 [style = solid, label="result"];
26->4 [style = bold, label=""];
35->57 [style = bold, label=""];
29->20 [style = bold, label=""];
34->59 [style = bold, label=""];
40->45 [style = solid, label="result"];
38->46 [style = bold, label=""];
19->32 [style = dashed, label="0"];
31->56 [style = solid, label="result"];
9->1 [style = bold, label=""];
43->34 [style = bold, label=""];
14->21 [style = bold, label=""];
6->17 [style = bold, label=""];
28->29 [style = bold, label=""];
48->58 [style = bold, label=""];
47->31 [style = bold, label=""];
49->44 [style = bold, label=""];
16->23 [style = bold, label=""];
15->19 [style = bold, label=""];
14->24 [style = solid, label="result"];
13->39 [style = dashed, label="0"];
52->43 [style = bold, label=""];
25->21 [style = solid, label="result"];
54->36 [style = bold, label=""];
10->22 [style = solid, label="result"];
22->39 [style = bold, label=""];
18->8 [style = bold, label=""];
31->50 [style = solid, label="result"];
4->5 [style = bold, label=""];
23->18 [style = bold, label=""];
0->15 [style = solid, label="result"];
10->22 [style = bold, label=""];
36->47 [style = bold, label=""];
56->49 [style = bold, label=""];
8->10 [style = solid, label="result"];
14->35 [style = solid, label="result"];
33->6 [style = bold, label=""];
11->6 [style = bold, label=""];
59->40 [style = bold, label=""];
39->3 [style = bold, label=""];
12->0 [style = bold, label=""];
25->14 [style = solid, label="result"];
57->52 [style = bold, label=""];
27->4 [style = bold, label=""];
5->2 [style = bold, label=""];
13->3 [style = bold, label=""];
51->55 [style = bold, label=""];
41->51 [style = bold, label=""];
24->35 [style = dashed, label="0"];
58->5 [style = bold, label=""];
40->45 [style = bold, label=""];
2->7 [style = bold, label=""];
42->54 [style = bold, label=""];
15->32 [style = bold, label=""];
0->28 [style = bold, label=""];
}
