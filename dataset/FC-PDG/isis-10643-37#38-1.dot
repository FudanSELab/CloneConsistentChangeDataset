digraph {
7 [style = filled, label = "setup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "facetedMethod = FacetedMethod.createForProperty(,\"firstName\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "objectAssociation = new ObjectAssociationAbstract(facetedMethod,FeatureType.PROPERTY,objectSpecification){@Override public ObjectAdapter get(final ObjectAdapter fromObject,final InteractionInitiatedBy interactionInitiatedBy){return null}@Override public boolean isEmpty(final ObjectAdapter adapter,final InteractionInitiatedBy interactionInitiatedBy){return false}@Override public ObjectAdapter(( getChoices(final ObjectAdapter object,final InteractionInitiatedBy interactionInitiatedBy){return null}@Override public ObjectAdapter getDefault(final ObjectAdapter adapter){return null}@Override public void toDefault(final ObjectAdapter target){}@Override public UsabilityContext<?> createUsableInteractionContext(final ManagedObject target,final InteractionInitiatedBy interactionInitiatedBy,Where where){return null}@Override public VisibilityContext<?> createVisibleInteractionContext(final ManagedObject targetObjectAdapter,final InteractionInitiatedBy interactionInitiatedBy,Where where){return null}@Override public boolean containsDoOpFacet(final Class<? extends Facet> facetType){return false}@Override public boolean hasAutoComplete(){return false}@Override public ObjectAdapter(( getAutoComplete(ObjectAdapter object,String searchArg,final InteractionInitiatedBy interactionInitiatedBy){return null}@Override public int getAutoCompleteMinLength(){return 0}}@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "objectAssociation = new ObjectAssociationAbstract(facetedMethod,FeatureType.PROPERTY,objectSpecification,mockServicesInjector){@Override public ObjectAdapter get(final ObjectAdapter fromObject,final InteractionInitiatedBy interactionInitiatedBy){return null}@Override public boolean isEmpty(final ObjectAdapter adapter,final InteractionInitiatedBy interactionInitiatedBy){return false}@Override public ObjectAdapter(( getChoices(final ObjectAdapter object,final InteractionInitiatedBy interactionInitiatedBy){return null}@Override public ObjectAdapter getDefault(final ObjectAdapter adapter){return null}@Override public void toDefault(final ObjectAdapter target){}@Override public UsabilityContext<?> createUsableInteractionContext(final ManagedObject target,final InteractionInitiatedBy interactionInitiatedBy,Where where){return null}@Override public VisibilityContext<?> createVisibleInteractionContext(final ManagedObject targetObjectAdapter,final InteractionInitiatedBy interactionInitiatedBy,Where where){return null}@Override public boolean containsDoOpFacet(final Class<? extends Facet> facetType){return false}@Override public boolean hasAutoComplete(){return false}@Override public ObjectAdapter(( getAutoComplete(ObjectAdapter object,String searchArg,final InteractionInitiatedBy interactionInitiatedBy){return null}@Override public int getAutoCompleteMinLength(){return 0}}@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "setup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "setup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "objectAssociation = new ObjectAssociationAbstract(facetedMethod,FeatureType.PROPERTY,mockObjectSpecification,mockServicesInjector){@Override public ObjectAdapter get(final ObjectAdapter fromObject,final InteractionInitiatedBy interactionInitiatedBy){return null}@Override public boolean isEmpty(final ObjectAdapter adapter,final InteractionInitiatedBy interactionInitiatedBy){return false}@Override public ObjectAdapter(( getChoices(final ObjectAdapter object,final InteractionInitiatedBy interactionInitiatedBy){return null}@Override public ObjectAdapter getDefault(final ObjectAdapter adapter){return null}@Override public void toDefault(final ObjectAdapter target){}@Override public UsabilityContext<?> createUsableInteractionContext(final ManagedObject target,final InteractionInitiatedBy interactionInitiatedBy,final Where where){return null}@Override public VisibilityContext<?> createVisibleInteractionContext(final ManagedObject targetObjectAdapter,final InteractionInitiatedBy interactionInitiatedBy,final Where where){return null}@Override public boolean containsDoOpFacet(final Class<? extends Facet> facetType){return false}@Override public boolean hasAutoComplete(){return false}@Override public ObjectAdapter(( getAutoComplete(final ObjectAdapter object,final String searchArg,final InteractionInitiatedBy interactionInitiatedBy){return null}@Override public int getAutoCompleteMinLength(){return 0}}@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "context.checking(new Expectations(){})@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
1->0 [style = solid, label="facetedMethod"];
5->1 [style = bold, label=""];
3->6 [style = bold, label=""];
0->4 [style = dashed, label="0"];
7->1 [style = bold, label=""];
1->4 [style = solid, label="facetedMethod"];
3->4 [style = bold, label=""];
1->6 [style = solid, label="facetedMethod"];
2->1 [style = bold, label=""];
3->0 [style = bold, label=""];
0->6 [style = dashed, label="0"];
}
