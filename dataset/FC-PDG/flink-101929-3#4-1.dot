digraph {
1 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final File folder = TEMPORARY_FOLDER.newFolder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "stream.addSink(StreamingFileSink.forBulkFormat(Path.fromLocalFile(folder),avroWriterFactory).withBucketAssigner(new UniqueBucketAssigner<>(\"test\")).build())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "env.execute()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "validateResults(folder,new SpecificDatumReader<>(),data)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "env.setParallelism(1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "DataStream<Address> stream = env.addSource(new FiniteTestSource<>(data),TypeInformation.of())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testWriteParquetAvroSpecific['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "List<Address> data = Arrays.asList(new Address(1,\"a\",\"b\",\"c\",\"12345\"),new Address(2,\"p\",\"q\",\"r\",\"12345\"),new Address(3,\"x\",\"y\",\"z\",\"12345\"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testWriteAvroSpecific['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "validateResults(folder,SpecificData.get(),data)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final List<Address> data = Arrays.asList(new Address(1,\"a\",\"b\",\"c\",\"12345\"),new Address(2,\"p\",\"q\",\"r\",\"12345\"),new Address(3,\"x\",\"y\",\"z\",\"12345\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testWriteAvroSpecific['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "stream.addSink(StreamingFileSink.forBulkFormat(Path.fromLocalFile(folder),ParquetAvroWriters.forSpecificRecord()).build())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "File folder = TEMPORARY_FOLDER.newFolder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "env.enableCheckpointing(100)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "stream.addSink(StreamingFileSink.forBulkFormat(Path.fromLocalFile(folder),avroWriterFactory).build())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "AvroWriterFactory<Address> avroWriterFactory = AvroWriters.forSpecificRecord()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
8->10 [style = bold, label=""];
16->13 [style = bold, label=""];
10->15 [style = bold, label=""];
12->5 [style = bold, label=""];
1->14 [style = dashed, label="0"];
6->18 [style = bold, label=""];
16->18 [style = solid, label="folder"];
3->18 [style = dashed, label="0"];
11->6 [style = bold, label=""];
7->11 [style = dashed, label="0"];
15->6 [style = bold, label=""];
2->9 [style = bold, label=""];
9->10 [style = bold, label=""];
9->8 [style = bold, label=""];
0->3 [style = solid, label="data"];
13->18 [style = solid, label="data"];
10->7 [style = bold, label=""];
5->16 [style = dashed, label="0"];
5->3 [style = solid, label="folder"];
5->0 [style = bold, label=""];
0->10 [style = solid, label="data"];
0->1 [style = bold, label=""];
0->13 [style = dashed, label="0"];
7->6 [style = bold, label=""];
7->15 [style = dashed, label="0"];
13->10 [style = solid, label="data"];
1->2 [style = bold, label=""];
14->2 [style = bold, label=""];
4->5 [style = bold, label=""];
13->14 [style = bold, label=""];
17->16 [style = bold, label=""];
10->11 [style = bold, label=""];
}
