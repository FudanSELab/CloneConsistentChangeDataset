digraph {
13 [style = filled, label = "assertThat(config.getConfigurationFactory().getName(),is(.getName()))@@@29@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(config.isSafeRowBoundsEnabled(),is(true))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "shouldSuccessfullyLoadXMLConfigFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertThat(config.getJdbcTypeForNull(),is(JdbcType.NULL))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertThat(config.isSafeRowBoundsEnabled(),is(false))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertThat(config.getLogPrefix(),is(\"mybatis_\"))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "XMLConfigBuilder builder = new XMLConfigBuilder(inputStream)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(config.isMapUnderscoreToCamelCase(),is(true))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(config.getLogImpl().getName(),is(.getName()))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(config.getLocalCacheScope(),is(LocalCacheScope.SESSION))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertThat(config.getProxyFactory(),is(instanceOf()))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(config.isLazyLoadingEnabled(),is(true))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertThat(config.isCacheEnabled(),is(true))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertThat(config.isAggressiveLazyLoading(),is(true))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertThat(config.getDefaultScriptingLanuageInstance(),is(instanceOf()))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertNull(config.getDefaultFetchSize())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "InputStream inputStream = Resources.getResourceAsStream(resource)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertNull(config.getLogImpl())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertThat(config.isSafeResultHandlerEnabled(),is(true))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Configuration config = builder.parse()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertThat(config.getDefaultExecutorType(),is(ExecutorType.SIMPLE))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertThat(config.getLazyLoadTriggerMethods(),is((Set<String>)new HashSet<String>(Arrays.asList(\"equals\",\"clone\",\"hashCode\",\"toString\"))))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertThat(config.isCacheEnabled(),is(false))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(config.getDefaultFetchSize(),is(100))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(config.getProxyFactory(),is(instanceOf()))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertThat(config.isCallSettersOnNulls(),is(false))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertThat(config.isLazyLoadingEnabled(),is(false))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertThat(config.getAutoMappingBehavior(),is(AutoMappingBehavior.PARTIAL))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(config.getAutoMappingBehavior(),is(AutoMappingBehavior.NONE))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "shouldSuccessfullyLoadXMLConfigFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertThat(config.isUseGeneratedKeys(),is(false))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(config.isUseGeneratedKeys(),is(true))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertNull(config.getConfigurationFactory())@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertThat(config.getDefaultScriptingLanuageInstance(),is(instanceOf()))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(config.isMultipleResultSetsEnabled(),is(false))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertThat(config.isMultipleResultSetsEnabled(),is(true))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertThat(config.getVfsImpl().getName(),is(.getName()))@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertThat(config.isUseColumnLabel(),is(false))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertThat(config.getJdbcTypeForNull(),is(JdbcType.OTHER))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(config.isSafeResultHandlerEnabled(),is(false))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "shouldSuccessfullyLoadMinimalXMLConfigFile['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(config.isAggressiveLazyLoading(),is(false))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertThat(config.isUseColumnLabel(),is(true))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(config.isCallSettersOnNulls(),is(true))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(config.getDefaultStatementTimeout(),is(10))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(config.getLazyLoadTriggerMethods(),is((Set<String>)new HashSet<String>(Arrays.asList(\"equals\",\"clone\",\"hashCode\",\"toString\",\"xxx\"))))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(config.getLocalCacheScope(),is(LocalCacheScope.STATEMENT))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(config.getDefaultExecutorType(),is(ExecutorType.BATCH))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertNull(config.getDefaultStatementTimeout())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertThat(config.isMapUnderscoreToCamelCase(),is(false))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertNull(config.getLogPrefix())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertNotNull(config)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8->16 [style = bold, label=""];
4->31 [style = dashed, label="0"];
38->17 [style = solid, label="resource"];
14->36 [style = dashed, label="0"];
36->51 [style = bold, label=""];
46->49 [style = bold, label=""];
16->43 [style = dashed, label="0"];
11->20 [style = bold, label=""];
17->11 [style = solid, label="inputStream"];
22->51 [style = dashed, label="0"];
19->5 [style = bold, label=""];
24->39 [style = dashed, label="0"];
27->13 [style = bold, label=""];
4->25 [style = bold, label=""];
1->17 [style = solid, label="resource"];
1->38 [style = dashed, label="0"];
12->15 [style = bold, label=""];
30->43 [style = bold, label=""];
40->45 [style = bold, label=""];
35->42 [style = bold, label=""];
23->49 [style = dashed, label="0"];
0->19 [style = bold, label=""];
6->13 [style = bold, label=""];
50->48 [style = bold, label=""];
41->36 [style = bold, label=""];
25->18 [style = bold, label=""];
7->35 [style = dashed, label="0"];
31->32 [style = bold, label=""];
15->2 [style = bold, label=""];
21->10 [style = bold, label=""];
52->39 [style = bold, label=""];
48->31 [style = bold, label=""];
6->27 [style = bold, label=""];
23->21 [style = bold, label=""];
7->3 [style = bold, label=""];
16->12 [style = bold, label=""];
20->46 [style = solid, label="config"];
8->30 [style = dashed, label="0"];
44->34 [style = bold, label=""];
5->52 [style = dashed, label="0"];
33->30 [style = bold, label=""];
37->38 [style = bold, label=""];
28->1 [style = bold, label=""];
20->46 [style = bold, label=""];
51->35 [style = bold, label=""];
10->48 [style = dashed, label="0"];
25->32 [style = dashed, label="0"];
5->24 [style = bold, label=""];
10->4 [style = bold, label=""];
42->40 [style = bold, label=""];
22->7 [style = bold, label=""];
3->0 [style = bold, label=""];
26->1 [style = bold, label=""];
34->41 [style = bold, label=""];
1->17 [style = bold, label=""];
12->44 [style = dashed, label="0"];
38->17 [style = bold, label=""];
17->11 [style = bold, label=""];
45->52 [style = bold, label=""];
39->29 [style = bold, label=""];
18->33 [style = dashed, label="0"];
29->53 [style = bold, label=""];
53->47 [style = bold, label=""];
9->23 [style = bold, label=""];
2->14 [style = bold, label=""];
20->9 [style = bold, label=""];
18->8 [style = bold, label=""];
24->6 [style = bold, label=""];
32->33 [style = bold, label=""];
21->50 [style = dashed, label="0"];
43->44 [style = bold, label=""];
15->34 [style = dashed, label="0"];
0->40 [style = dashed, label="0"];
49->50 [style = bold, label=""];
14->22 [style = bold, label=""];
}
