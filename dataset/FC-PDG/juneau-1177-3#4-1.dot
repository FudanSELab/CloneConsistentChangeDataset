digraph {
7 [style = filled, label = "return Optional.empty()@@@4@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "MethodEntry<V> e@@@3@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "Constructor<?> c@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ofType == null || ofType.isInstance(e.value)@@@3@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Class<? extends V> ofType@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "methodEntries@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "find['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "find['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "e.matches(c)@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "e.matches(m)@@@3@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "!noConstructorEntries@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "ConstructorEntry<V> e@@@3@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "methodEntries@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "Class<? extends V> ofType@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "constructorEntries@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "return Optional.of(e.value)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "e.matches(m)@@@3@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Method m@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "find['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "return Optional.of(e.value)@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ofType == null || ofType.isInstance(e.value)@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ofType == null || ofType.isInstance(e.value)@@@3@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "!noMethodEntries@@@3@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Class<? extends V> ofType@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "MethodEntry<V> e@@@3@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "return Optional.ofNullable(e.value)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "!noMethodEntries@@@3@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
13->10 [style = bold, label=""];
18->24 [style = bold, label=""];
19->18 [style = bold, label=""];
26->7 [style = bold, label=""];
14->12 [style = dotted, label="true"];
18->25 [style = dotted, label="true"];
20->26 [style = bold, label=""];
20->26 [style = dotted, label="true"];
18->24 [style = dotted, label="true"];
14->17 [style = bold, label=""];
10->17 [style = bold, label=""];
19->21 [style = dotted, label="true"];
3->9 [style = solid, label="m"];
5->0 [style = dotted, label="true"];
2->9 [style = bold, label=""];
5->3 [style = dotted, label="true"];
3->22 [style = dashed, label="0"];
9->7 [style = bold, label=""];
13->10 [style = dotted, label="true"];
26->24 [style = bold, label=""];
1->7 [style = bold, label=""];
16->3 [style = dotted, label="true"];
10->7 [style = bold, label=""];
22->20 [style = solid, label="ofType"];
1->9 [style = bold, label=""];
14->7 [style = bold, label=""];
24->20 [style = bold, label=""];
17->7 [style = bold, label=""];
14->17 [style = dotted, label="true"];
14->15 [style = dotted, label="true"];
13->17 [style = bold, label=""];
0->1 [style = solid, label="ofType"];
5->6 [style = bold, label=""];
6->4 [style = dotted, label="true"];
6->9 [style = dotted, label="true"];
11->17 [style = solid, label="m"];
6->8 [style = dotted, label="true"];
13->7 [style = bold, label=""];
9->17 [style = dashed, label="0"];
24->20 [style = dotted, label="true"];
9->26 [style = dashed, label="0"];
19->22 [style = dotted, label="true"];
9->1 [style = dotted, label="true"];
16->14 [style = bold, label=""];
3->13 [style = solid, label="ofType"];
21->24 [style = solid, label="c"];
1->2 [style = bold, label=""];
17->13 [style = bold, label=""];
2->7 [style = bold, label=""];
6->9 [style = bold, label=""];
1->2 [style = dotted, label="true"];
6->7 [style = bold, label=""];
17->13 [style = dotted, label="true"];
16->11 [style = dotted, label="true"];
9->1 [style = bold, label=""];
18->7 [style = bold, label=""];
24->7 [style = bold, label=""];
20->24 [style = bold, label=""];
20->7 [style = bold, label=""];
18->23 [style = dotted, label="true"];
}
