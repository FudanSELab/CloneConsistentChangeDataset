digraph {
39 [style = filled, label = "supervisor.resetInternal(resetMetadata)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "KafkaDataSourceMetadata resetMetadata = new KafkaDataSourceMetadata(new SeekableStreamStartSequenceNumbers<>(topic,ImmutableMap.of(1,1000L,2,1000L),ImmutableSet.of()))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "verifyAll()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testResetDataSourceMetadata['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "supervisor.start()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "KafkaDataSourceMetadata expectedMetadata = new KafkaDataSourceMetadata(new SeekableStreamStartSequenceNumbers<>(topic,ImmutableMap.of(0,1000L),ImmutableSet.of()))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(captureDataSource.getValue(),DATASOURCE)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "Capture<DataSourceMetadata> captureDataSourceMetadata = EasyMock.newCapture()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "NullPointerException npe@@@25@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Capture<String> captureDataSource = EasyMock.newCapture()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expect(taskMaster.getTaskRunner()).andReturn(Optional.of(taskRunner)).anyTimes()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "expect(taskMaster.getTaskQueue()).andReturn(Optional.of(taskQueue)).anyTimes()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "KafkaDataSourceMetadata kafkaDataSourceMetadata = new KafkaDataSourceMetadata(new SeekableStreamStartSequenceNumbers<>(topic,ImmutableMap.of(0,1000L,1,1000L,2,1000L),ImmutableSet.of()))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(DATASOURCE,captureDataSource.getValue())@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "EasyMock.replay(indexerMetadataStorageCoordinator)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "replay(indexerMetadataStorageCoordinator)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "KafkaDataSourceMetadata resetMetadata = new KafkaDataSourceMetadata(new SeekableStreamStartSequenceNumbers<>(topic,ImmutableMap.of(1,1000L,2,1000L),ImmutableSet.of()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "EasyMock.expect(taskMaster.getTaskRunner()).andReturn(Optional.of(taskRunner)).anyTimes()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "expect(indexerMetadataStorageCoordinator.resetDataSourceMetadata(capture(captureDataSource),capture(captureDataSourceMetadata))).andReturn(true)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "replay(indexerMetadataStorageCoordinator)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "EasyMock.expect(taskStorage.getActiveTasks()).andReturn(ImmutableList.of()).anyTimes()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "Assert.assertEquals(expectedMetadata,captureDataSourceMetadata.getValue())@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "replayAll()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertNull(npe.getCause())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "taskRunner.registerListener(EasyMock.anyObject(),EasyMock.anyObject())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "EasyMock.expect(indexerMetadataStorageCoordinator.resetDataSourceMetadata(EasyMock.capture(captureDataSource),EasyMock.capture(captureDataSourceMetadata))).andReturn(true)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "expect(indexerMetadataStorageCoordinator.getDataSourceMetadata(DATASOURCE)).andReturn(null)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "verifyAll()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "supervisor.runInternal()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "EasyMock.expect(indexerMetadataStorageCoordinator.getDataSourceMetadata(DATASOURCE)).andReturn(kafkaDataSourceMetadata)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Assert.assertEquals(captureDataSourceMetadata.getValue(),expectedMetadata)@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "expect(taskStorage.getActiveTasks()).andReturn(ImmutableList.of()).anyTimes()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "EasyMock.expect(taskRunner.getRunningTasks()).andReturn(Collections.EMPTY_LIST).anyTimes()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "EasyMock.expect(taskMaster.getTaskQueue()).andReturn(Optional.of(taskQueue)).anyTimes()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "testResetNoDataSourceMetadata['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "EasyMock.reset(indexerMetadataStorageCoordinator)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "expect(taskRunner.getRunningTasks()).andReturn(Collections.EMPTY_LIST).anyTimes()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertTrue(npe.getCause() == null)@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "supervisor = getTestableSupervisor(1,1,true,\"PT1H\",null,null)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "supervisor.resetInternal(resetMetadata)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "expect(indexerMetadataStorageCoordinator.getDataSourceMetadata(DATASOURCE)).andReturn(kafkaDataSourceMetadata)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "taskRunner.registerListener(anyObject(),anyObject())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "verifyAll()@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testResetDataSourceMetadata['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24->10 [style = bold, label=""];
0->16 [style = bold, label=""];
20->17 [style = bold, label=""];
13->43 [style = dashed, label="0"];
3->25 [style = bold, label=""];
25->23 [style = bold, label=""];
36->29 [style = bold, label=""];
28->31 [style = bold, label=""];
11->21 [style = bold, label=""];
33->4 [style = bold, label=""];
30->27 [style = bold, label=""];
3->19 [style = solid, label="resetMetadata"];
12->32 [style = bold, label=""];
12->20 [style = bold, label=""];
17->30 [style = bold, label=""];
21->37 [style = dashed, label="0"];
19->17 [style = bold, label=""];
5->29 [style = dashed, label="0"];
6->34 [style = dashed, label="0"];
29->34 [style = bold, label=""];
16->19 [style = bold, label=""];
26->19 [style = bold, label=""];
8->36 [style = dashed, label="0"];
38->39 [style = bold, label=""];
2->30 [style = dashed, label="0"];
7->3 [style = bold, label=""];
14->7 [style = bold, label=""];
23->28 [style = bold, label=""];
13->28 [style = dashed, label="0"];
42->4 [style = bold, label=""];
16->26 [style = dashed, label="0"];
37->22 [style = bold, label=""];
31->26 [style = bold, label=""];
7->13 [style = solid, label="kafkaDataSourceMetadata"];
43->38 [style = bold, label=""];
12->20 [style = dotted, label="true"];
5->6 [style = bold, label=""];
8->5 [style = bold, label=""];
17->2 [style = bold, label=""];
18->4 [style = bold, label=""];
35->37 [style = bold, label=""];
21->22 [style = bold, label=""];
23->13 [style = bold, label=""];
1->24 [style = bold, label=""];
25->27 [style = solid, label="expectedMetadata"];
12->32 [style = dotted, label="true"];
6->11 [style = bold, label=""];
39->23 [style = bold, label=""];
2->15 [style = bold, label=""];
40->41 [style = bold, label=""];
0->31 [style = dashed, label="0"];
9->14 [style = bold, label=""];
10->40 [style = bold, label=""];
25->15 [style = solid, label="expectedMetadata"];
4->8 [style = bold, label=""];
10->9 [style = bold, label=""];
4->36 [style = bold, label=""];
20->32 [style = dashed, label="0"];
22->1 [style = bold, label=""];
34->35 [style = bold, label=""];
15->27 [style = dashed, label="0"];
7->28 [style = solid, label="kafkaDataSourceMetadata"];
41->43 [style = bold, label=""];
32->17 [style = bold, label=""];
40->39 [style = solid, label="resetMetadata"];
13->0 [style = bold, label=""];
11->35 [style = dashed, label="0"];
}
