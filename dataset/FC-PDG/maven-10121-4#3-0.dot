digraph {
27 [style = filled, label = "File someFile = new File(mavenHomeDir,\"some-file\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "configuration.setAlwaysUnpack(true)@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "createTestZip(zipDestination)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testCreateDistWithExistingDistribution['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "FileUtils.touch(zipDestination)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Assert.assertTrue(Files.isDirectory(mavenHomeDir))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "Files.createDirectories(mavenHomeDir)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Assert.assertEquals(localDistribution,pathAssembler.getDistribution(configuration))@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertTrue(zipDestination.exists())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "FileUtils.touch(garbage)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "Assert.assertFalse(Files.exists(homeDir.resolve(\"garbage\")))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "Assert.assertTrue(Files.exists(zipDestination))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "File homeDir = install.createDist(configuration)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(mavenHomeDir,homeDir)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testCreateDistWithExistingZipAndDistAndAlwaysDownloadTrue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "Files.createFile(garbage.toPath())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "Assert.assertTrue(Files.exists(homeDir.resolve(\"bin/mvn\")))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Assert.assertEquals(distributionDir,localDistribution.getDistributionDir())@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(distributionDir,localDistribution.getDistributionDir())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(zipDestination,localDistribution.getZipFile())@@@16@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "Assert.assertEquals(zipDestination,localDistribution.getZipFile())@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Path homeDir = install.createDist(configuration)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "Assert.assertTrue(new File(homeDir,\"bin/mvn\").exists())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "mavenHomeDir.mkdirs()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "File garbage = new File(mavenHomeDir,\"garbage\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "Assert.assertFalse(new File(homeDir,\"garbage\").exists())@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "testCreateDistWithExistingZipAndDistAndAlwaysDownloadTrue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertTrue(mavenHomeDir.isDirectory())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "FileUtils.touch(someFile)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "File garbage = mavenHomeDir.resolve(\"garbage\").toFile()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "Assert.assertTrue(new File(homeDir,\"some-file\").exists())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23->16 [style = bold, label=""];
7->23 [style = dashed, label="0"];
12->20 [style = dashed, label="0"];
9->11 [style = bold, label=""];
21->0 [style = bold, label=""];
28->30 [style = bold, label=""];
17->6 [style = bold, label=""];
7->10 [style = bold, label=""];
0->19 [style = bold, label=""];
15->21 [style = bold, label=""];
11->15 [style = dashed, label="0"];
0->19 [style = dashed, label="0"];
1->3 [style = bold, label=""];
5->18 [style = bold, label=""];
4->22 [style = dashed, label="0"];
30->29 [style = bold, label=""];
11->2 [style = bold, label=""];
27->26 [style = solid, label="someFile"];
8->7 [style = bold, label=""];
20->22 [style = bold, label=""];
6->14 [style = bold, label=""];
22->3 [style = bold, label=""];
19->7 [style = solid, label="homeDir"];
29->27 [style = bold, label=""];
25->24 [style = bold, label=""];
26->0 [style = bold, label=""];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
24->4 [style = bold, label=""];
9->14 [style = dashed, label="0"];
9->29 [style = dashed, label="0"];
12->4 [style = bold, label=""];
10->12 [style = bold, label=""];
7->23 [style = bold, label=""];
0->8 [style = bold, label=""];
9->11 [style = solid, label="garbage"];
0->8 [style = solid, label="homeDir"];
14->15 [style = bold, label=""];
4->1 [style = bold, label=""];
7->25 [style = bold, label=""];
10->16 [style = dashed, label="0"];
6->30 [style = dashed, label="0"];
13->6 [style = bold, label=""];
6->9 [style = bold, label=""];
16->20 [style = bold, label=""];
19->7 [style = bold, label=""];
10->25 [style = dashed, label="0"];
27->26 [style = bold, label=""];
}
