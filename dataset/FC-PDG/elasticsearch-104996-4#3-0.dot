digraph {
4 [style = filled, label = "expectedDocCount.put(datesForDayInterval.get(1),2)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "testIntervalMonth['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testSearchAndReduceCase(new MatchAllDocsQuery(),Arrays.asList(\"2017-02-01\",\"2017-02-02\",\"2017-02-02\",\"2017-02-03\",\"2017-02-03\",\"2017-02-03\",\"2017-02-05\"),null,null)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "testSearchCase(DEFAULT_QUERY,datesForDayInterval,null,null)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "testSearchAndReduceCase(new MatchAllDocsQuery(),Arrays.asList(\"2017-01-01\",\"2017-02-02\",\"2017-02-03\",\"2017-03-04\",\"2017-03-05\",\"2017-03-06\"),null,null)@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "expectedDocCount.put(datesForDayInterval.get(0),1)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "testIntervalDay['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "expectedDocCount.put(datesForDayInterval.get(6),1)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "testIntervalDay['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testSearchCase(new MatchAllDocsQuery(),Arrays.asList(\"2017-02-01\",\"2017-02-02\",\"2017-02-02\",\"2017-02-03\",\"2017-02-03\",\"2017-02-03\",\"2017-02-05\"),null,null)@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final List<DateTime> datesForDayInterval = Arrays.asList(new DateTime(2017,2,1,0,0,0,DateTimeZone.UTC),new DateTime(2017,2,2,0,0,0,DateTimeZone.UTC),new DateTime(2017,2,2,0,0,0,DateTimeZone.UTC),new DateTime(2017,2,3,0,0,0,DateTimeZone.UTC),new DateTime(2017,2,3,0,0,0,DateTimeZone.UTC),new DateTime(2017,2,3,0,0,0,DateTimeZone.UTC),new DateTime(2017,2,5,0,0,0,DateTimeZone.UTC))@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "testSearchCase(new MatchAllDocsQuery(),Arrays.asList(\"2017-01-01\",\"2017-02-02\",\"2017-02-03\",\"2017-03-04\",\"2017-03-05\",\"2017-03-06\"),null,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testSearchAndReduceCase(DEFAULT_QUERY,datesForDayInterval,null,null)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "final Map<DateTime,Integer> expectedDocCount = new HashMap<>()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "expectedDocCount.put(datesForDayInterval.get(3),3)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4->9 [style = bold, label=""];
12->14 [style = bold, label=""];
2->12 [style = dashed, label="0"];
3->6 [style = bold, label=""];
10->3 [style = bold, label=""];
0->2 [style = bold, label=""];
13->12 [style = bold, label=""];
1->5 [style = dashed, label="0"];
8->5 [style = bold, label=""];
9->7 [style = bold, label=""];
7->8 [style = bold, label=""];
1->14 [style = dashed, label="0"];
3->8 [style = solid, label="datesForDayInterval"];
3->5 [style = solid, label="datesForDayInterval"];
2->1 [style = bold, label=""];
6->11 [style = bold, label=""];
11->4 [style = bold, label=""];
}
