digraph {
9 [style = filled, label = "List<Thread> threads = new ArrayList<Thread>()@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i++@@@117@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int i = 0@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "i++@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final AtomicLong operations = new AtomicLong(10000)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "threads.add(thread)@@@188@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Thread thread = new Thread(\"READER\" + i){@Override public void run(){try {while (operations.decrementAndGet() >= 0) {int id = rand.nextInt(100) < 25? lastId: rand.nextInt(ndocs)boolean realTime = rand.nextInt(100) < percentRealtimeQueryDocInfo infoif (realTime) {info = model.get(id)}{synchronized (this) {info = committedModel.get(id)}}if (VERBOSE) {verbose(\"querying id\",id)}SolrQueryRequest sreqif (realTime) {sreq = req(\"wt\",\"json\",\"qt\",\"/get\",\"ids\",Integer.toString(id))}{sreq = req(\"wt\",\"json\",\"q\",\"id:\" + Integer.toString(id),\"omitHeader\",\"true\")}String response = h.query(sreq)Map rsp = (Map)ObjectBuilder.fromJSON(response)List doclist = (List)(((Map)rsp.get(\"response\")).get(\"docs\"))if (doclist.size() == 0) {}{assertEquals(1,doclist.size())long foundVal = (Long)(((Map)doclist.get(0)).get(field))long foundVer = (Long)(((Map)doclist.get(0)).get(\"_version_\"))if (foundVer < Math.abs(info.version) || (foundVer == info.version && foundVal != info.val)) {log.error(\"ERROR, id=\" + id + \" found=\" + response + \" model\" + info)assertTrue(false)}}}}catch (Throwable e) }}@@@138@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "int i = 0@@@135@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final int softCommitPercent = 30 + random().nextInt(75)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int i = 0@@@115@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "final AtomicLong operations = new AtomicLong(50000)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "i < nReadThreads@@@136@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "int nReadThreads = 5 + random().nextInt(25)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final AtomicInteger numCommitting = new AtomicInteger()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "threads.add(thread)@@@133@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final AtomicLong testVersion = new AtomicLong(0)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final int ndocs = 5 + (random().nextBoolean()? random().nextInt(25): random().nextInt(200))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "thread.join()@@@194@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "threads.add(thread)@@@178@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "clearIndex()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final int deleteByQueryPercent = random().nextInt(8)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "i < nWriteThreads@@@21@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testStressReorderVersions['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Thread thread = new Thread(\"WRITER\" + i){@Override public void run(){try {while (operations.get() > 0) {int oper = rand.nextInt(100)if (oper < commitPercent) {if (numCommitting.incrementAndGet() <= maxConcurrentCommits) {Map<Integer,DocInfo> newCommittedModellong versionsynchronized (this) {newCommittedModel = new HashMap<Integer,DocInfo>(model)version = snapshotCount++}if (rand.nextInt(100) < softCommitPercent) {verbose(\"softCommit start\")assertU(TestHarness.commit(\"softCommit\",\"true\"))verbose(\"softCommit end\")}{verbose(\"hardCommit start\")assertU(commit())verbose(\"hardCommit end\")}synchronized (this) {if (version >= committedModelClock) {if (VERBOSE) {verbose(\"installing new committedModel version=\" + committedModelClock)}committedModel = newCommittedModelcommittedModelClock = version}}}numCommitting.decrementAndGet()continue}int idif (rand.nextBoolean()) {id = rand.nextInt(ndocs)}{id = lastId}boolean before = rand.nextBoolean()if (before) {lastId = id}DocInfo info = model.get(id)long val = info.vallong nextVal = Math.abs(val) + 1long version = testVersion.incrementAndGet()if (rand.nextBoolean()) Thread.yield()if (oper < commitPercent + deletePercent) {verbose(\"deleting id\",id,\"val=\",nextVal,\"version\",version)Long returnedVersion = deleteAndGetVersion(Integer.toString(id),params(\"_version_\",Long.toString(-version),DISTRIB_UPDATE_PARAM,FROM_LEADER))if (returnedVersion != null) {assertEquals(-version,returnedVersion.longValue())}synchronized (model) {DocInfo currInfo = model.get(id)if (Math.abs(version) > Math.abs(currInfo.version)) {model.put(id,new DocInfo(version,-nextVal))}}verbose(\"deleting id\",id,\"val=\",nextVal,\"version\",version,\"DONE\")}if (oper < commitPercent + deletePercent + deleteByQueryPercent) {verbose(\"deleteByQuery id\",id,\"val=\",nextVal,\"version\",version)Long returnedVersion = deleteByQueryAndGetVersion(\"id:\" + Integer.toString(id),params(\"_version_\",Long.toString(-version),DISTRIB_UPDATE_PARAM,FROM_LEADER))if (returnedVersion != null) {assertEquals(-version,returnedVersion.longValue())}synchronized (model) {DocInfo currInfo = model.get(id)if (Math.abs(version) > Math.abs(currInfo.version)) {model.put(id,new DocInfo(version,-nextVal))}}verbose(\"deleteByQuery id\",id,\"val=\",nextVal,\"version\",version,\"DONE\")}{verbose(\"adding id\",id,\"val=\",nextVal,\"version\",version)Long returnedVersion = addAndGetVersion(sdoc(\"id\",Integer.toString(id),field,Long.toString(nextVal),\"_version_\",Long.toString(version)),params(DISTRIB_UPDATE_PARAM,FROM_LEADER))if (returnedVersion != null) {assertEquals(version,returnedVersion.longValue())}synchronized (model) {DocInfo currInfo = model.get(id)if (version > currInfo.version) {model.put(id,new DocInfo(version,nextVal))}}if (VERBOSE) {verbose(\"adding id\",id,\"val=\",nextVal,\"version\",version,\"DONE\")}}if (!before) {lastId = id}}}catch (Throwable e) }}@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i < nReadThreads@@@116@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "testStressReorderVersions['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertU(commit())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Thread thread = new Thread(\"READER\" + i){@Override public void run(){try {while (operations.decrementAndGet() >= 0) {int id = rand.nextInt(100) < 25? lastId: rand.nextInt(ndocs)boolean realTime = rand.nextInt(100) < percentRealtimeQueryDocInfo infoif (realTime) {info = model.get(id)}{synchronized (this) {info = committedModel.get(id)}}if (VERBOSE) {verbose(\"querying id\",id)}SolrQueryRequest sreqif (realTime) {sreq = req(\"wt\",\"json\",\"qt\",\"/get\",\"ids\",Integer.toString(id))}{sreq = req(\"wt\",\"json\",\"q\",\"id:\" + Integer.toString(id),\"omitHeader\",\"true\")}String response = h.query(sreq)Map rsp = (Map)ObjectBuilder.fromJSON(response)List doclist = (List)(((Map)rsp.get(\"response\")).get(\"docs\"))if (doclist.size() == 0) {}{assertEquals(1,doclist.size())boolean isLive = (Boolean)(((Map)doclist.get(0)).get(lfield))long foundVer = (Long)(((Map)doclist.get(0)).get(vfield))if (isLive) {long foundVal = (Long)(((Map)doclist.get(0)).get(field))if (foundVer < Math.abs(info.version) || (foundVer == info.version && foundVal != info.val)) {log.error(\"ERROR, id=\" + id + \" found=\" + response + \" model\" + info)assertTrue(false)}}{assertNull(((Map)doclist.get(0)).get(field))if (foundVer < Math.abs(info.version)) {log.error(\"ERROR, id=\" + id + \" found=\" + response + \" model\" + info)assertTrue(false)}}}}}catch (Throwable e) }}@@@118@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "thread.start()@@@181@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "int nWriteThreads = 5 + random().nextInt(25)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final int maxConcurrentCommits = nWriteThreads@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "thread.start()@@@191@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final int commitPercent = 5 + random().nextInt(20)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testStressReorderVersions['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "i++@@@137@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "threads.add(thread)@@@113@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "List<Thread> threads = new ArrayList<>()@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "verbose(\"commitPercent\",commitPercent,\"softCommitPercent\",softCommitPercent,\"deletePercent\",deletePercent,\"deleteByQueryPercent\",deleteByQueryPercent,\"ndocs\",ndocs,\"nWriteThreads\",nWriteThreads,\"percentRealtimeQuery\",percentRealtimeQuery,\"operations\",operations,\"nReadThreads\",nReadThreads)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final int deletePercent = 4 + random().nextInt(25)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final int percentRealtimeQuery = 75@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "initModel(ndocs)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
33->34 [style = solid, label="i"];
20->40 [style = dashed, label="0"];
20->26 [style = bold, label=""];
32->12 [style = bold, label=""];
22->28 [style = solid, label="ndocs"];
27->28 [style = bold, label=""];
5->1 [style = dotted, label="true"];
1->5 [style = solid, label="i"];
11->12 [style = dotted, label="true"];
39->14 [style = bold, label=""];
19->11 [style = bold, label=""];
20->27 [style = solid, label="operations"];
37->33 [style = solid, label="i"];
3->18 [style = bold, label=""];
18->22 [style = bold, label=""];
34->24 [style = bold, label=""];
17->14 [style = bold, label=""];
10->12 [style = bold, label=""];
22->23 [style = solid, label="ndocs"];
1->2 [style = solid, label="i"];
0->34 [style = solid, label="percentRealtimeQuery"];
9->21 [style = bold, label=""];
40->26 [style = bold, label=""];
0->40 [style = bold, label=""];
19->11 [style = solid, label="i"];
18->23 [style = solid, label="deleteByQueryPercent"];
22->2 [style = solid, label="ndocs"];
9->30 [style = dashed, label="0"];
12->23 [style = solid, label="i"];
31->14 [style = bold, label=""];
11->16 [style = bold, label=""];
7->1 [style = bold, label=""];
2->7 [style = solid, label="thread"];
21->19 [style = bold, label=""];
16->2 [style = solid, label="i"];
11->10 [style = dotted, label="true"];
12->11 [style = bold, label=""];
3->23 [style = solid, label="deletePercent"];
11->37 [style = bold, label=""];
35->33 [style = dotted, label="true"];
4->0 [style = bold, label=""];
26->27 [style = solid, label="nReadThreads"];
26->27 [style = bold, label=""];
33->35 [style = solid, label="i"];
15->9 [style = bold, label=""];
16->1 [style = solid, label="i"];
5->7 [style = dotted, label="true"];
29->11 [style = solid, label="nWriteThreads"];
23->10 [style = bold, label=""];
0->20 [style = bold, label=""];
12->11 [style = solid, label="i"];
35->34 [style = bold, label=""];
14->6 [style = bold, label=""];
26->5 [style = solid, label="nReadThreads"];
25->27 [style = solid, label="commitPercent"];
13->24 [style = bold, label=""];
8->3 [style = bold, label=""];
22->29 [style = bold, label=""];
23->32 [style = bold, label=""];
3->27 [style = solid, label="deletePercent"];
24->33 [style = bold, label=""];
0->27 [style = solid, label="percentRealtimeQuery"];
30->21 [style = bold, label=""];
4->23 [style = solid, label="maxConcurrentCommits"];
8->23 [style = solid, label="softCommitPercent"];
5->13 [style = bold, label=""];
26->35 [style = solid, label="nReadThreads"];
16->5 [style = bold, label=""];
29->27 [style = solid, label="nWriteThreads"];
37->35 [style = bold, label=""];
37->34 [style = solid, label="i"];
34->24 [style = solid, label="thread"];
5->2 [style = dotted, label="true"];
19->23 [style = solid, label="i"];
37->35 [style = solid, label="i"];
11->32 [style = dotted, label="true"];
22->34 [style = solid, label="ndocs"];
33->35 [style = bold, label=""];
29->4 [style = bold, label=""];
28->15 [style = bold, label=""];
35->24 [style = dotted, label="true"];
11->23 [style = dotted, label="true"];
15->30 [style = bold, label=""];
0->2 [style = solid, label="percentRealtimeQuery"];
8->27 [style = solid, label="softCommitPercent"];
25->23 [style = solid, label="commitPercent"];
22->27 [style = solid, label="ndocs"];
18->27 [style = solid, label="deleteByQueryPercent"];
5->2 [style = bold, label=""];
19->12 [style = solid, label="i"];
16->5 [style = solid, label="i"];
23->32 [style = solid, label="thread"];
40->27 [style = solid, label="operations"];
35->34 [style = dotted, label="true"];
25->8 [style = bold, label=""];
36->38 [style = bold, label=""];
2->7 [style = bold, label=""];
35->36 [style = bold, label=""];
23->10 [style = solid, label="thread"];
11->23 [style = bold, label=""];
6->25 [style = bold, label=""];
29->4 [style = solid, label="nWriteThreads"];
}
