digraph {
10 [style = filled, label = "final Expr expression@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "Parser.findRequiredBindings(expression).size() != 1@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "SingleStringInputCachingExpressionColumnValueSelector['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final Supplier<Object> inputSupplier = ExpressionSelectors.supplierFromDimensionSelector(selector)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "arrayEvalCache = null@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final Expr expression@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "throw new ISE(\"WTF?! Expected expression with just one binding\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "SingleLongInputCachingExpressionColumnValueSelector['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "selector.getValueCardinality() == DimensionSelector.CARDINALITY_UNKNOWN@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "this.bindings = null@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "this.expression = Preconditions.checkNotNull(expression,\"expression\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "selector.getValueCardinality() <= CACHE_SIZE@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "lruEvalCache = null@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "throw new ISE(\"Selector must have a dictionary\")@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final ColumnValueSelector selector@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "this.selector = Preconditions.checkNotNull(selector,\"selector\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final DimensionSelector selector@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "arrayEvalCache = new ExprEval((((@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final boolean useLruCache@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "this.lruEvalCache = useLruCache? new LruEvalCache(): null@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "final Expr expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "SingleLongInputCachingExpressionColumnValueSelector['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "lruEvalCache = new LruEvalCache(expression,bindings)@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final ColumnValueSelector selector@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
0->3 [style = bold, label=""];
10->3 [style = solid, label="expression"];
4->1 [style = dotted, label="true"];
3->19 [style = solid, label="expression"];
6->11 [style = dashed, label="0"];
12->15 [style = bold, label=""];
6->0 [style = solid, label="selector"];
17->19 [style = dotted, label="false"];
5->6 [style = dotted, label="true"];
18->17 [style = bold, label=""];
8->7 [style = dotted, label="true"];
1->0 [style = bold, label=""];
3->12 [style = bold, label=""];
8->10 [style = dotted, label="true"];
16->22 [style = dotted, label="true"];
15->18 [style = bold, label=""];
18->14 [style = dotted, label="true"];
17->23 [style = bold, label=""];
6->22 [style = dashed, label="0"];
17->23 [style = dotted, label="true"];
22->3 [style = solid, label="expression"];
4->0 [style = bold, label=""];
3->9 [style = bold, label=""];
11->9 [style = solid, label="useLruCache"];
21->0 [style = solid, label="selector"];
23->13 [style = bold, label=""];
5->4 [style = bold, label=""];
0->12 [style = solid, label="selector"];
8->11 [style = dotted, label="true"];
16->21 [style = dotted, label="true"];
4->1 [style = bold, label=""];
8->4 [style = bold, label=""];
16->4 [style = bold, label=""];
20->19 [style = bold, label=""];
2->3 [style = solid, label="expression"];
17->13 [style = dotted, label="true"];
18->14 [style = bold, label=""];
18->17 [style = dotted, label="false"];
7->0 [style = solid, label="selector"];
5->2 [style = dotted, label="true"];
17->20 [style = bold, label=""];
17->20 [style = dotted, label="false"];
15->19 [style = solid, label="bindings"];
}
