digraph {
18 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "d1.add(1.1,2.2,\"R3\",\"C1\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "fail(e.toString())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "CloneNotSupportedException e@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "DefaultStatisticalCategoryDataset d2 = (DefaultStatisticalCategoryDataset)TestUtils.serialised(d1)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "DefaultStatisticalCategoryDataset d2 = null@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertFalse(d1.equals(d2))@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "d1.add(3.3,4.4,\"R1\",\"C2\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "d1.add(1.1,2.2,\"R1\",\"C1\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "DefaultStatisticalCategoryDataset d1 = new DefaultStatisticalCategoryDataset()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "d1.add(null,new Double(5.5),\"R1\",\"C3\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testSerialization1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "d1.add(new Double(6.6),null,\"R2\",\"C3\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(d1 != d2)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "DefaultStatisticalCategoryDataset d2 = (DefaultStatisticalCategoryDataset)TestUtilities.serialised(d1)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "testSerialization1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(d1,d2)@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "d2 = (DefaultStatisticalCategoryDataset)d1.clone()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertTrue(d1.equals(d2))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16->15 [style = bold, label=""];
4->3 [style = bold, label=""];
9->0 [style = bold, label=""];
3->1 [style = bold, label=""];
11->4 [style = bold, label=""];
4->0 [style = solid, label="d1"];
10->17 [style = bold, label=""];
4->9 [style = solid, label="d1"];
15->19 [style = bold, label=""];
1->7 [style = bold, label=""];
6->2 [style = bold, label=""];
6->14 [style = bold, label=""];
13->17 [style = bold, label=""];
4->17 [style = solid, label="d1"];
2->0 [style = bold, label=""];
12->10 [style = bold, label=""];
2->14 [style = dashed, label="0"];
12->10 [style = dotted, label="true"];
2->9 [style = dashed, label="0"];
13->19 [style = solid, label="d2"];
5->4 [style = bold, label=""];
7->6 [style = bold, label=""];
4->2 [style = solid, label="d1"];
13->16 [style = solid, label="d2"];
2->0 [style = solid, label="d2"];
8->4 [style = bold, label=""];
14->13 [style = bold, label=""];
6->9 [style = bold, label=""];
17->18 [style = bold, label=""];
9->0 [style = solid, label="d2"];
13->17 [style = solid, label="d2"];
18->16 [style = bold, label=""];
}
