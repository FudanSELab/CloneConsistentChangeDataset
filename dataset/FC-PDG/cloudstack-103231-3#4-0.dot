digraph {
14 [style = filled, label = "final URI uri = URI.create(\"http://localhost\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final URI uri = URI.create(\"pvlan://200-p200\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "final String networkTag = \"/105\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final LibvirtRequestWrapper wrapper = LibvirtRequestWrapper.getInstance()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testPvlanSetupCommandDhcpDelete['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "when(libvirtComputingResource.getTimeout()).thenReturn(Duration.ZERO)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final String op = \"delete\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "fail(e.getMessage())@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "final String dhcpName = \"dhcp\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertNotNull(wrapper)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testPvlanSetupCommandDhcpAdd['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ifaces.add(nic)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "when(libvirtComputingResource.getGuestBridgeName()).thenReturn(guestBridgeName)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final Answer answer = wrapper.execute(command,libvirtComputingResource)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final List<InterfaceDef> ifaces = new ArrayList<InterfaceDef>()@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "final InterfaceDef nic = Mockito.mock()@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "final Connect conn = Mockito.mock()@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "verify(libvirtComputingResource,times(1)).getLibvirtUtilitiesHelper()@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "final String op = \"add\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final String dhcpIp = \"127.0.0.1\"@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "when(libvirtComputingResource.getOvsPvlanDhcpHostPath()).thenReturn(ovsPvlanDhcpHostPath)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final PvlanSetupCommand command = PvlanSetupCommand.createDhcpSetup(op,uri,networkTag,dhcpName,dhcpMac,dhcpIp)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testPvlanSetupCommandDhcpAdd['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "final String ovsPvlanDhcpHostPath = \"/pvlan\"@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "when(libvirtComputingResource.getLibvirtUtilitiesHelper()).thenReturn(libvirtUtilitiesHelper)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final String guestBridgeName = \"br0\"@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final LibvirtUtilitiesHelper libvirtUtilitiesHelper = Mockito.mock()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertFalse(answer.getResult())@@@20@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "when(libvirtComputingResource.getInterfaces(conn,dhcpName)).thenReturn(ifaces)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "verify(libvirtUtilitiesHelper,times(1)).getConnectionByVmName(dhcpName)@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "final LibvirtException e@@@25@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "when(libvirtUtilitiesHelper.getConnectionByVmName(dhcpName)).thenReturn(conn)@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "final String dhcpMac = \"00:00:00:00\"@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27->13 [style = bold, label=""];
25->24 [style = solid, label="dhcpMac"];
15->23 [style = bold, label=""];
23->5 [style = solid, label="nic"];
23->5 [style = bold, label=""];
24->1 [style = solid, label="command"];
0->17 [style = bold, label=""];
8->19 [style = bold, label=""];
31->32 [style = bold, label=""];
12->22 [style = bold, label=""];
26->1 [style = bold, label=""];
25->9 [style = bold, label=""];
18->19 [style = bold, label=""];
16->24 [style = solid, label="dhcpName"];
32->14 [style = bold, label=""];
30->24 [style = solid, label="uri"];
16->25 [style = bold, label=""];
22->32 [style = dashed, label="0"];
11->19 [style = bold, label=""];
3->4 [style = bold, label=""];
17->19 [style = bold, label=""];
22->30 [style = bold, label=""];
11->15 [style = bold, label=""];
20->10 [style = bold, label=""];
22->24 [style = solid, label="op"];
6->27 [style = bold, label=""];
1->28 [style = bold, label=""];
30->21 [style = bold, label=""];
0->17 [style = solid, label="ovsPvlanDhcpHostPath"];
27->7 [style = solid, label="conn"];
19->26 [style = bold, label=""];
6->13 [style = bold, label=""];
14->30 [style = dashed, label="0"];
10->0 [style = bold, label=""];
14->24 [style = solid, label="uri"];
19->26 [style = solid, label="wrapper"];
9->24 [style = solid, label="dhcpIp"];
21->16 [style = bold, label=""];
7->18 [style = bold, label=""];
21->24 [style = solid, label="networkTag"];
5->7 [style = bold, label=""];
16->4 [style = solid, label="dhcpName"];
13->20 [style = bold, label=""];
6->11 [style = solid, label="libvirtUtilitiesHelper"];
32->24 [style = solid, label="op"];
28->3 [style = bold, label=""];
15->18 [style = solid, label="ifaces"];
29->22 [style = bold, label=""];
13->20 [style = solid, label="guestBridgeName"];
22->14 [style = bold, label=""];
24->6 [style = bold, label=""];
9->24 [style = bold, label=""];
14->21 [style = bold, label=""];
2->8 [style = dotted, label="true"];
2->8 [style = bold, label=""];
24->13 [style = bold, label=""];
17->11 [style = bold, label=""];
}
