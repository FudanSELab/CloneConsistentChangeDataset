digraph {
35 [style = filled, label = "Map<String,List<TopicPartition>> assignment = assignor.assign(partitionsPerTopic,subscriptions)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertTrue(assignor.isSticky())@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "String topic = \"topic\"@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testAssignmentWithConflictingPreviousGenerations['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "List<TopicPartition> c1partitions0 = partitions(tp0,tp1,tp4)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "List<TopicPartition> c3partitions0 = partitions(tp3,tp4,tp5)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "List<TopicPartition> c2partitions = assignment.get(consumer2)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Map<String,Integer> partitionsPerTopic = new HashMap<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "TopicPartition tp1 = new TopicPartition(topic,1)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(c1partitions.size() == 2 && c2partitions.size() == 2 && c3partitions.size() == 2)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String consumer3 = \"consumer3\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "subscriptions.put(consumer3,new Subscription(topics(topic),StickyAssignor.serializeTopicPartitionAssignment(new ConsumerUserData(c3partitions0,Optional.of(2)))))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "subscriptions.put(consumer2,new Subscription(topics(topic),serializeTopicPartitionAssignmentToOldSchema(c2partitions0)))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "TopicPartition tp3 = new TopicPartition(topic,3)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "subscriptions.put(consumer2,new Subscription(topics(topic),StickyAssignor.serializeTopicPartitionAssignment(new ConsumerUserData(c2partitions0,Optional.of(1)))))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(c3partitions0.containsAll(c3partitions))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(isFullyBalanced(assignment))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(c2partitions0.containsAll(c2partitions))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "subscriptions.put(consumer2,new Subscription(topics(topic)))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "subscriptions.put(consumer1,new Subscription(topics(topic)))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(c1partitions0.containsAll(c1partitions))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "List<TopicPartition> c1partitions = assignment.get(consumer1)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(isFullyBalanced(assignment))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String consumer2 = \"consumer2\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "String consumer1 = \"consumer1\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "subscriptions.put(consumer1,new Subscription(topics(topic),StickyAssignor.serializeTopicPartitionAssignment(new ConsumerUserData(c1partitions0,Optional.of(1)))))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "List<TopicPartition> c1partitions0 = partitions(tp0,tp2)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(c2partitions0.containsAll(c2partitions))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "subscriptions.put(consumer3,new Subscription(topics(topic)))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "partitionsPerTopic.put(topic,3)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "partitionsPerTopic.put(topic,6)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "TopicPartition tp4 = new TopicPartition(topic,4)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "List<TopicPartition> c3partitions = assignment.get(consumer3)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "TopicPartition tp2 = new TopicPartition(topic,2)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "List<TopicPartition> c2partitions0 = partitions(tp0,tp2,tp3)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertTrue(c1partitions.size() == 1 && c2partitions.size() == 1 && c3partitions.size() == 1)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "testSchemaBackwardCompatibility['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "List<TopicPartition> c2partitions0 = partitions(tp1)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertTrue(assignor.isSticky())@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "TopicPartition tp0 = new TopicPartition(topic,0)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Map<String,Subscription> subscriptions = new HashMap<>()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testAssignmentWithConflictingPreviousGenerations['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "TopicPartition tp5 = new TopicPartition(topic,5)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(c1partitions0.containsAll(c1partitions))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31->25 [style = solid, label="topic"];
31->26 [style = solid, label="topic"];
1->2 [style = solid, label="assignment"];
33->42 [style = solid, label="tp1"];
11->14 [style = bold, label=""];
31->33 [style = solid, label="topic"];
31->20 [style = solid, label="topic"];
36->28 [style = bold, label=""];
18->30 [style = bold, label=""];
31->5 [style = solid, label="topic"];
26->9 [style = bold, label=""];
31->23 [style = solid, label="topic"];
11->30 [style = solid, label="consumer3"];
27->18 [style = solid, label="c2partitions0"];
35->32 [style = solid, label="assignment"];
25->44 [style = bold, label=""];
43->4 [style = bold, label=""];
32->10 [style = solid, label="c2partitions"];
22->8 [style = bold, label=""];
8->28 [style = solid, label="consumer2"];
1->19 [style = solid, label="assignment"];
33->25 [style = bold, label=""];
22->38 [style = solid, label="consumer1"];
14->35 [style = solid, label="partitionsPerTopic"];
14->1 [style = solid, label="partitionsPerTopic"];
42->37 [style = solid, label="c2partitions0"];
23->12 [style = bold, label=""];
19->15 [style = bold, label=""];
31->18 [style = solid, label="topic"];
8->11 [style = bold, label=""];
23->29 [style = solid, label="tp3"];
4->35 [style = solid, label="subscriptions"];
14->20 [style = bold, label=""];
21->13 [style = bold, label=""];
8->13 [style = solid, label="consumer2"];
33->9 [style = solid, label="tp1"];
28->18 [style = bold, label=""];
5->33 [style = bold, label=""];
31->21 [style = solid, label="topic"];
4->21 [style = bold, label=""];
7->0 [style = bold, label=""];
32->7 [style = bold, label=""];
4->1 [style = solid, label="subscriptions"];
7->6 [style = solid, label="c3partitions"];
14->43 [style = bold, label=""];
24->5 [style = bold, label=""];
6->2 [style = bold, label=""];
44->38 [style = solid, label="c1partitions0"];
8->32 [style = solid, label="consumer2"];
38->37 [style = bold, label=""];
28->3 [style = solid, label="c2partitions"];
18->37 [style = dashed, label="0"];
12->29 [style = solid, label="tp4"];
27->29 [style = bold, label=""];
25->27 [style = solid, label="tp2"];
42->38 [style = bold, label=""];
0->16 [style = bold, label=""];
44->42 [style = bold, label=""];
13->24 [style = bold, label=""];
22->21 [style = solid, label="consumer1"];
4->32 [style = solid, label="subscriptions"];
28->39 [style = bold, label=""];
35->7 [style = solid, label="assignment"];
31->13 [style = solid, label="topic"];
1->3 [style = bold, label=""];
36->1 [style = solid, label="c1partitions"];
8->18 [style = solid, label="consumer2"];
29->30 [style = solid, label="c3partitions0"];
10->6 [style = bold, label=""];
5->9 [style = solid, label="tp0"];
25->44 [style = solid, label="tp2"];
22->28 [style = solid, label="consumer1"];
9->27 [style = bold, label=""];
31->12 [style = solid, label="topic"];
12->42 [style = dashed, label="0"];
9->28 [style = solid, label="c1partitions0"];
31->38 [style = solid, label="topic"];
26->29 [style = solid, label="tp5"];
5->27 [style = solid, label="tp0"];
39->40 [style = bold, label=""];
31->24 [style = solid, label="topic"];
12->9 [style = solid, label="tp4"];
41->31 [style = bold, label=""];
37->35 [style = bold, label=""];
4->2 [style = solid, label="subscriptions"];
20->43 [style = dashed, label="0"];
8->37 [style = solid, label="consumer2"];
22->3 [style = solid, label="consumer1"];
2->19 [style = bold, label=""];
31->22 [style = bold, label=""];
30->1 [style = bold, label=""];
11->7 [style = solid, label="consumer3"];
11->24 [style = solid, label="consumer3"];
16->10 [style = bold, label=""];
25->23 [style = bold, label=""];
17->31 [style = bold, label=""];
31->28 [style = solid, label="topic"];
12->26 [style = bold, label=""];
22->36 [style = solid, label="consumer1"];
5->44 [style = solid, label="tp0"];
20->4 [style = bold, label=""];
34->22 [style = bold, label=""];
7->45 [style = bold, label=""];
29->28 [style = bold, label=""];
20->21 [style = bold, label=""];
40->1 [style = bold, label=""];
23->27 [style = solid, label="tp3"];
23->44 [style = dashed, label="0"];
11->39 [style = solid, label="consumer3"];
3->16 [style = solid, label="c1partitions"];
35->36 [style = bold, label=""];
3->32 [style = bold, label=""];
31->37 [style = solid, label="topic"];
0->40 [style = dashed, label="0"];
31->43 [style = solid, label="topic"];
31->30 [style = solid, label="topic"];
}
