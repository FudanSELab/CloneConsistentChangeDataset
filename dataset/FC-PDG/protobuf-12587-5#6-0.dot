digraph {
27 [style = filled, label = "return MALFORMED@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "return MALFORMED@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "throw new ArrayIndexOutOfBoundsException(String.format(\"Array length=%d, index=%d, limit=%d\",bytes.length,index,limit))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int state@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "long offset = index@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "byte(( bytes@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "int byte2 = (byte)~(state >> 8)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "byte3 = UnsafeUtil.getByte(bytes,offset++)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "byte2 > (byte)0xBF || (((byte1 << 28) + (byte2 - (byte)0x90)) >> 30) != 0 || byte3 > (byte)0xBF || UnsafeUtil.getByte(bytes,offset++) > (byte)0xBF@@@48@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "byte1 < (byte)0xC2 || UnsafeUtil.getByte(bytes,offset++) > (byte)0xBF@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "offset >= offsetLimit@@@44@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "partialIsValidUtf8['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "byte2 == 0@@@20@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "byte1 < (byte)0xC2 || UnsafeUtil.getByte(address++) > (byte)0xBF@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "throw new ArrayIndexOutOfBoundsException(String.format(\"buffer limit=%d, index=%d, limit=%d\",buffer.limit(),index,limit))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "final int byte1 = (byte)state@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "byte3 = UnsafeUtil.getByte(address++)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "(index | limit | bytes.length - limit) < 0@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "final int limit@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return MALFORMED@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "address >= addressLimit@@@44@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "return incompleteStateFor(byte1,byte2)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "final int state@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "final int index@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final int index@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "offset >= offsetLimit@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "int byte2 = (byte)~(state >> 8)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "return incompleteStateFor(byte1,byte2,byte3)@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "byte2 > (byte)0xBF || (((byte1 << 28) + (byte2 - (byte)0x90)) >> 30) != 0 || byte3 > (byte)0xBF || UnsafeUtil.getByte(address++) > (byte)0xBF@@@48@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "byte2 = UnsafeUtil.getByte(bytes,offset++)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "address >= addressLimit@@@22@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final long offsetLimit = getArrayBaseOffset() + limit@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "offset >= offsetLimit@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "state != COMPLETE@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "long address = addressOffset(buffer) + index@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "final long offsetLimit = limit@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "byte2 = UnsafeUtil.getByte(address++)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "byte3 == 0@@@42@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return incompleteStateFor(byte1,byte2)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "ByteBuffer buffer@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "byte1 < (byte)0xF0@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final int limit@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "(index | limit | buffer.limit() - limit) < 0@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "byte2 > (byte)0xBF || (byte1 == (byte)0xE0 && byte2 < (byte)0xA0) || (byte1 == (byte)0xED && byte2 >= (byte)0xA0) || UnsafeUtil.getByte(bytes,offset++) > (byte)0xBF@@@26@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "address >= addressLimit@@@35@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "offset >= offsetLimit@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "byte(( bytes@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "long offset = getArrayBaseOffset() + index@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "byte2 = UnsafeUtil.getByte(address++)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "return partialIsValidUtf8(address,(int)(addressLimit - address))@@@53@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "partialIsValidUtf8Direct['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "return partialIsValidUtf8(bytes,offset,(int)(offsetLimit - offset))@@@53@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "int byte1 = (byte)state@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "address >= addressLimit@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "int byte3 = 0@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "partialIsValidUtf8['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "final int index@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "byte2 = UnsafeUtil.getByte(bytes,offset++)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "byte1 < (byte)0xE0@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "byte2 > (byte)0xBF || (byte1 == (byte)0xE0 && byte2 < (byte)0xA0) || (byte1 == (byte)0xED && byte2 >= (byte)0xA0) || UnsafeUtil.getByte(address++) > (byte)0xBF@@@26@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "final long addressLimit = address + (limit - index)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "int state@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "byte3 = (byte)(state >> 16)@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "byte2 == 0@@@33@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "return state@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
62->33 [style = solid, label="state"];
4->0 [style = solid, label="byte2"];
26->16 [style = solid, label="offset"];
58->50 [style = bold, label=""];
34->6 [style = solid, label="offset"];
5->63 [style = bold, label=""];
10->28 [style = solid, label="offsetLimit"];
0->13 [style = bold, label=""];
55->61 [style = solid, label="addressLimit"];
21->11 [style = dotted, label="true"];
12->2 [style = dotted, label="false"];
15->21 [style = bold, label=""];
23->51 [style = dashed, label="0"];
1->16 [style = solid, label="offset"];
24->4 [style = dotted, label="true"];
28->25 [style = dotted, label="true"];
35->10 [style = solid, label="limit"];
11->64 [style = bold, label=""];
48->31 [style = solid, label="byte2"];
64->8 [style = bold, label=""];
39->14 [style = bold, label=""];
29->46 [style = dashed, label="0"];
15->20 [style = dotted, label="true"];
46->31 [style = bold, label=""];
13->49 [style = bold, label=""];
57->60 [style = solid, label="address"];
31->1 [style = bold, label=""];
37->49 [style = solid, label="byte2"];
48->61 [style = bold, label=""];
15->21 [style = dotted, label="true"];
12->9 [style = bold, label=""];
64->31 [style = solid, label="byte1"];
34->1 [style = solid, label="offset"];
13->1 [style = bold, label=""];
6->29 [style = bold, label=""];
7->14 [style = bold, label=""];
4->36 [style = solid, label="offset"];
6->29 [style = solid, label="offset"];
13->59 [style = bold, label=""];
36->0 [style = bold, label=""];
1->49 [style = dashed, label="0"];
15->8 [style = dotted, label="true"];
8->52 [style = dotted, label="true"];
26->30 [style = dotted, label="true"];
24->33 [style = dotted, label="false"];
64->8 [style = solid, label="byte1"];
59->31 [style = solid, label="byte3"];
28->50 [style = dashed, label="0"];
41->23 [style = solid, label="bytes"];
9->51 [style = solid, label="byte2"];
35->40 [style = solid, label="index"];
42->36 [style = solid, label="offsetLimit"];
12->51 [style = dotted, label="true"];
28->25 [style = bold, label=""];
52->30 [style = dotted, label="true"];
44->55 [style = solid, label="index"];
9->23 [style = solid, label="byte2"];
57->63 [style = solid, label="address"];
54->53 [style = bold, label=""];
4->36 [style = bold, label=""];
20->0 [style = solid, label="byte1"];
64->25 [style = solid, label="byte1"];
49->63 [style = bold, label=""];
2->24 [style = bold, label=""];
6->1 [style = solid, label="byte3"];
29->1 [style = bold, label=""];
57->52 [style = solid, label="address"];
54->62 [style = dotted, label="true"];
22->33 [style = solid, label="state"];
33->13 [style = solid, label="byte3"];
14->18 [style = dotted, label="true"];
17->1 [style = solid, label="bytes"];
55->63 [style = solid, label="addressLimit"];
41->4 [style = solid, label="bytes"];
41->6 [style = solid, label="bytes"];
20->31 [style = solid, label="byte1"];
54->45 [style = dotted, label="true"];
42->15 [style = bold, label=""];
60->11 [style = dotted, label="true"];
36->0 [style = dotted, label="true"];
17->26 [style = solid, label="bytes"];
13->6 [style = dotted, label="true"];
39->35 [style = dotted, label="true"];
12->3 [style = dotted, label="true"];
44->57 [style = solid, label="index"];
13->59 [style = dotted, label="true"];
38->33 [style = solid, label="state"];
62->64 [style = solid, label="state"];
38->20 [style = solid, label="state"];
12->23 [style = dotted, label="true"];
48->49 [style = solid, label="address"];
40->21 [style = solid, label="offset"];
17->6 [style = solid, label="bytes"];
34->21 [style = solid, label="offset"];
40->26 [style = solid, label="offset"];
64->52 [style = solid, label="byte1"];
40->4 [style = solid, label="offset"];
57->55 [style = bold, label=""];
60->64 [style = bold, label=""];
10->21 [style = solid, label="offsetLimit"];
35->14 [style = solid, label="index"];
46->31 [style = dotted, label="true"];
61->13 [style = bold, label=""];
41->1 [style = solid, label="bytes"];
22->15 [style = solid, label="state"];
38->15 [style = solid, label="state"];
56->57 [style = bold, label=""];
27->16 [style = bold, label=""];
39->43 [style = dotted, label="true"];
32->25 [style = solid, label="byte2"];
3->51 [style = bold, label=""];
57->55 [style = solid, label="address"];
42->28 [style = solid, label="offsetLimit"];
33->13 [style = bold, label=""];
41->16 [style = solid, label="bytes"];
52->63 [style = solid, label="address"];
37->31 [style = solid, label="byte2"];
12->37 [style = bold, label=""];
34->40 [style = dashed, label="0"];
32->28 [style = solid, label="offset"];
43->14 [style = solid, label="limit"];
35->62 [style = dashed, label="0"];
48->61 [style = solid, label="address"];
40->32 [style = solid, label="offset"];
26->16 [style = bold, label=""];
3->58 [style = dotted, label="true"];
24->61 [style = dotted, label="true"];
20->8 [style = bold, label=""];
33->49 [style = solid, label="byte3"];
3->23 [style = bold, label=""];
6->59 [style = dashed, label="0"];
2->1 [style = solid, label="byte3"];
6->31 [style = solid, label="byte3"];
49->63 [style = solid, label="address"];
41->26 [style = solid, label="bytes"];
58->25 [style = solid, label="byte2"];
44->53 [style = solid, label="index"];
13->46 [style = dotted, label="true"];
12->24 [style = dotted, label="false"];
21->11 [style = bold, label=""];
1->16 [style = bold, label=""];
13->29 [style = dotted, label="true"];
23->27 [style = dotted, label="true"];
15->60 [style = dotted, label="true"];
61->0 [style = dotted, label="true"];
51->27 [style = bold, label=""];
61->0 [style = bold, label=""];
64->51 [style = solid, label="byte1"];
35->14 [style = solid, label="limit"];
35->18 [style = solid, label="index"];
20->1 [style = solid, label="byte1"];
7->35 [style = dotted, label="true"];
14->18 [style = bold, label=""];
53->56 [style = bold, label=""];
3->58 [style = bold, label=""];
49->5 [style = bold, label=""];
7->22 [style = dotted, label="true"];
37->1 [style = solid, label="byte2"];
7->17 [style = dotted, label="true"];
55->60 [style = solid, label="addressLimit"];
51->27 [style = dotted, label="true"];
52->63 [style = bold, label=""];
51->63 [style = bold, label=""];
34->23 [style = solid, label="offset"];
9->3 [style = solid, label="byte2"];
59->46 [style = bold, label=""];
21->60 [style = dashed, label="0"];
10->55 [style = dashed, label="0"];
57->48 [style = solid, label="address"];
45->56 [style = solid, label="limit"];
55->50 [style = solid, label="addressLimit"];
34->16 [style = solid, label="offset"];
44->56 [style = solid, label="index"];
62->11 [style = solid, label="state"];
64->0 [style = solid, label="byte1"];
4->31 [style = solid, label="byte2"];
12->37 [style = dotted, label="false"];
4->6 [style = solid, label="offset"];
18->34 [style = bold, label=""];
18->40 [style = bold, label=""];
54->44 [style = dotted, label="true"];
4->1 [style = solid, label="byte2"];
34->26 [style = solid, label="offset"];
31->49 [style = bold, label=""];
20->12 [style = solid, label="byte1"];
40->6 [style = solid, label="offset"];
34->4 [style = solid, label="offset"];
32->23 [style = solid, label="byte2"];
45->53 [style = solid, label="limit"];
8->52 [style = bold, label=""];
52->30 [style = bold, label=""];
19->18 [style = solid, label="index"];
30->63 [style = bold, label=""];
45->55 [style = solid, label="limit"];
2->49 [style = solid, label="byte3"];
5->16 [style = bold, label=""];
59->49 [style = solid, label="address"];
24->33 [style = bold, label=""];
18->56 [style = dashed, label="0"];
36->13 [style = bold, label=""];
51->63 [style = solid, label="address"];
32->58 [style = dashed, label="0"];
10->29 [style = solid, label="offsetLimit"];
20->23 [style = solid, label="byte1"];
57->49 [style = solid, label="address"];
12->1 [style = dotted, label="false"];
53->56 [style = dotted, label="true"];
23->16 [style = solid, label="offset"];
28->23 [style = bold, label=""];
16->63 [style = dashed, label="0"];
10->36 [style = solid, label="offsetLimit"];
17->32 [style = solid, label="bytes"];
24->48 [style = dotted, label="true"];
17->23 [style = solid, label="bytes"];
55->15 [style = bold, label=""];
42->21 [style = solid, label="offsetLimit"];
9->3 [style = bold, label=""];
48->0 [style = solid, label="byte2"];
37->24 [style = solid, label="byte2"];
37->2 [style = bold, label=""];
22->11 [style = solid, label="state"];
22->20 [style = solid, label="state"];
40->1 [style = solid, label="offset"];
13->6 [style = bold, label=""];
4->48 [style = dashed, label="0"];
57->51 [style = solid, label="address"];
40->23 [style = solid, label="offset"];
24->36 [style = dotted, label="true"];
8->12 [style = bold, label=""];
42->16 [style = solid, label="offsetLimit"];
25->51 [style = bold, label=""];
12->13 [style = dotted, label="false"];
3->28 [style = dotted, label="true"];
11->20 [style = bold, label=""];
59->46 [style = solid, label="address"];
8->26 [style = dotted, label="true"];
15->60 [style = bold, label=""];
23->16 [style = bold, label=""];
50->25 [style = dotted, label="true"];
14->53 [style = dashed, label="0"];
3->32 [style = dotted, label="true"];
3->50 [style = dotted, label="true"];
17->4 [style = solid, label="bytes"];
10->16 [style = solid, label="offsetLimit"];
41->32 [style = solid, label="bytes"];
8->12 [style = dotted, label="false"];
10->15 [style = bold, label=""];
23->27 [style = bold, label=""];
17->16 [style = solid, label="bytes"];
7->19 [style = dotted, label="true"];
25->23 [style = bold, label=""];
53->57 [style = bold, label=""];
40->16 [style = solid, label="offset"];
39->38 [style = dotted, label="true"];
48->59 [style = solid, label="address"];
29->31 [style = bold, label=""];
46->49 [style = bold, label=""];
20->64 [style = dashed, label="0"];
20->26 [style = solid, label="byte1"];
14->34 [style = bold, label=""];
64->49 [style = solid, label="byte1"];
8->26 [style = bold, label=""];
27->63 [style = bold, label=""];
58->50 [style = solid, label="address"];
58->51 [style = solid, label="address"];
43->18 [style = solid, label="limit"];
49->5 [style = dotted, label="true"];
34->10 [style = bold, label=""];
15->16 [style = bold, label=""];
10->42 [style = dashed, label="0"];
12->49 [style = dotted, label="false"];
50->25 [style = bold, label=""];
26->30 [style = bold, label=""];
35->18 [style = solid, label="limit"];
15->64 [style = dotted, label="true"];
20->25 [style = solid, label="byte1"];
24->4 [style = bold, label=""];
54->47 [style = dotted, label="true"];
21->20 [style = bold, label=""];
19->34 [style = solid, label="index"];
33->1 [style = solid, label="byte3"];
38->11 [style = solid, label="state"];
55->46 [style = solid, label="addressLimit"];
57->59 [style = solid, label="address"];
34->57 [style = dashed, label="0"];
50->51 [style = bold, label=""];
39->41 [style = dotted, label="true"];
34->32 [style = solid, label="offset"];
62->15 [style = solid, label="state"];
36->61 [style = dashed, label="0"];
47->57 [style = solid, label="buffer"];
60->11 [style = bold, label=""];
26->52 [style = dashed, label="0"];
64->12 [style = solid, label="byte1"];
19->14 [style = solid, label="index"];
43->42 [style = solid, label="limit"];
3->32 [style = bold, label=""];
30->16 [style = bold, label=""];
15->63 [style = bold, label=""];
20->8 [style = solid, label="byte1"];
2->13 [style = solid, label="byte3"];
32->28 [style = bold, label=""];
40->42 [style = bold, label=""];
14->40 [style = bold, label=""];
1->5 [style = dotted, label="true"];
57->58 [style = solid, label="address"];
24->48 [style = bold, label=""];
42->29 [style = solid, label="offsetLimit"];
12->9 [style = dotted, label="true"];
29->31 [style = dotted, label="true"];
}
