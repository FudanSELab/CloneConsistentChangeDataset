digraph {
21 [style = filled, label = "long(( expectedTimestamps = new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@b83efd@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ByteBuffer buffer = ByteBuffer.allocate(1024)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "builder.append(1L,\"c\".getBytes(),\"3\".getBytes())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(expectedTimestamps(i++(,record.timestamp())@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(TimestampType.LOG_APPEND_TIME,batch.timestampType())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "builder.append(0L,\"c\".getBytes(),\"3\".getBytes())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "builder.append(0L,\"b\".getBytes(),\"2\".getBytes())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(logAppendTime,info.maxTimestamp)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(2L,info.shallowOffsetOfMaxTimestamp)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "buffer.position(bufferOffset)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "MemoryRecordsBuilder builder = new MemoryRecordsBuilder(buffer,Record.MAGIC_VALUE_V1,compressionType,TimestampType.CREATE_TIME,0L,logAppendTime,buffer.capacity())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "MemoryRecords records = builder.build()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(logAppendTime,record.timestamp())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "assertEquals(2L,info.shallowOffsetOfMaxTimestamp)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "builder.append(2L,\"b\".getBytes(),\"2\".getBytes())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "buildUsingCreateTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "buildUsingLogAppendTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "buildUsingLogAppendTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(TimestampType.CREATE_TIME,record.timestampType())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(2L,info.maxTimestamp)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(TimestampType.LOG_APPEND_TIME,record.timestampType())@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "assertEquals(1L,info.shallowOffsetOfMaxTimestamp)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(logAppendTime,record.timestamp())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "MemoryRecordsBuilder.RecordsInfo info = builder.info()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "int i = 0@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "compressionType == CompressionType.NONE@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "builder.append(0L,\"a\".getBytes(),\"1\".getBytes())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "MemoryRecordsBuilder builder = new MemoryRecordsBuilder(buffer,Record.MAGIC_VALUE_V1,compressionType,TimestampType.LOG_APPEND_TIME,0L,logAppendTime,buffer.capacity())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "long logAppendTime = System.currentTimeMillis()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "MemoryRecordsBuilder builder = new MemoryRecordsBuilder(buffer,RecordBatch.MAGIC_VALUE_V1,compressionType,TimestampType.LOG_APPEND_TIME,0L,logAppendTime,RecordBatch.NO_PRODUCER_ID,RecordBatch.NO_PRODUCER_EPOCH,RecordBatch.NO_SEQUENCE,false,RecordBatch.UNKNOWN_PARTITION_LEADER_EPOCH,buffer.capacity())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9->20 [style = dashed, label="0"];
17->10 [style = bold, label=""];
16->15 [style = bold, label=""];
24->28 [style = bold, label=""];
10->14 [style = solid, label="buffer"];
4->16 [style = dashed, label="0"];
1->23 [style = solid, label="logAppendTime"];
19->29 [style = bold, label=""];
1->15 [style = solid, label="logAppendTime"];
3->18 [style = dashed, label="0"];
0->2 [style = bold, label=""];
18->19 [style = bold, label=""];
1->14 [style = solid, label="logAppendTime"];
21->24 [style = solid, label="expectedTimestamps"];
11->23 [style = dashed, label="0"];
2->9 [style = bold, label=""];
7->4 [style = bold, label=""];
15->16 [style = bold, label=""];
23->0 [style = bold, label=""];
1->23 [style = bold, label=""];
21->28 [style = bold, label=""];
1->11 [style = bold, label=""];
20->5 [style = bold, label=""];
4->28 [style = dashed, label="0"];
8->1 [style = bold, label=""];
10->23 [style = solid, label="buffer"];
29->27 [style = bold, label=""];
26->27 [style = bold, label=""];
25->20 [style = bold, label=""];
11->0 [style = bold, label=""];
10->8 [style = bold, label=""];
13->3 [style = bold, label=""];
3->7 [style = bold, label=""];
12->4 [style = bold, label=""];
14->0 [style = bold, label=""];
0->25 [style = bold, label=""];
10->11 [style = solid, label="buffer"];
19->26 [style = bold, label=""];
11->14 [style = dashed, label="0"];
5->13 [style = bold, label=""];
6->10 [style = bold, label=""];
12->24 [style = dashed, label="0"];
7->16 [style = bold, label=""];
22->10 [style = bold, label=""];
2->25 [style = dashed, label="0"];
12->15 [style = dashed, label="0"];
9->5 [style = bold, label=""];
4->12 [style = bold, label=""];
28->24 [style = bold, label=""];
1->12 [style = solid, label="logAppendTime"];
27->24 [style = solid, label="i"];
19->29 [style = dotted, label="false"];
1->14 [style = bold, label=""];
1->11 [style = solid, label="logAppendTime"];
1->3 [style = solid, label="logAppendTime"];
7->26 [style = dashed, label="0"];
27->21 [style = bold, label=""];
13->18 [style = bold, label=""];
19->26 [style = dotted, label="true"];
}
