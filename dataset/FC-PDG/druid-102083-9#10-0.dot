digraph {
7 [style = filled, label = "kind@@@43@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "return getBoundTimeDimFilter(flippedKind,boundRefKey,rhsInterval,rhsAligned)@@@93@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "RexNode lhs = operands.get(0)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final DruidExpression druidExpression = toDruidExpression(plannerContext,querySignature.getRowSignature(),operand)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "lhs = rhs@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "final DimFilter equalFilter@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "final RowSignature rowSignature@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "filter = Bounds.greaterThanOrEqualTo(boundRefKey,val)@@@120@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "final RexNode rexNode@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
107 [style = filled, label = "final RexLiteral rhsLiteral = (RexLiteral)rhs@@@97@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
114 [style = filled, label = "return null@@@141@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "return null@@@108@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "SqlTypeName.CHAR_TYPES.contains(rhsLiteral.getTypeName())@@@101@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "extractionFn = null@@@81@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
141 [style = filled, label = "return getBoundTimeDimFilter(operatorKind,boundRefKey,rhsInterval,rhsAligned)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "return null@@@84@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "final BoundRefKey boundRefKey = new BoundRefKey(column,extractionFn,comparator)@@@111@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
123 [style = filled, label = "filter = Bounds.greaterThanOrEqualTo(boundRefKey,val)@@@120@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
140 [style = filled, label = "final SqlKind operatorKind@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "return conversion.toDruidFilter(plannerContext,rowSignature,virtualColumnRegistry,rexNode)@@@137@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "final RexNode operand = Iterables.getOnlyElement(((RexCall)rexNode).getOperands())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "column = virtualLhs.getOutputName()@@@83@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "conversion == null@@@133@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "return null@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "final ExtractionFn extractionFn@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
130 [style = filled, label = "filter = Bounds.greaterThan(boundRefKey,val)@@@118@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "flippedKind = SqlKind.LESS_THAN_OR_EQUAL@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
124 [style = filled, label = "granularity != null@@@88@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
122 [style = filled, label = "final Granularity granularity = ExtractionFns.toQueryGranularity(extractionFn)@@@87@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
106 [style = filled, label = "rexNode instanceof RexCall@@@130@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
92 [style = filled, label = "column = lhsExpression.getSimpleExtraction().getColumn()@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
129 [style = filled, label = "final DruidExpression lhsExpression = toDruidExpression(plannerContext,rowSignature,lhs)@@@63@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "final Interval rhsInterval = granularity.bucket(DateTimes.utc(rhsMillis))@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "RexNode x = lhs@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
126 [style = filled, label = "filter = Bounds.lessThan(boundRefKey,val)@@@122@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "kind == SqlKind.EQUALS || kind == SqlKind.NOT_EQUALS || kind == SqlKind.GREATER_THAN || kind == SqlKind.GREATER_THAN_OR_EQUAL || kind == SqlKind.LESS_THAN || kind == SqlKind.LESS_THAN_OR_EQUAL@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "VirtualColumn virtualLhs = querySignature.getOrCreateVirtualColumnForExpression(plannerContext,lhsExpression,lhs.getType().getSqlTypeName())@@@79@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
61 [style = filled, label = "RexNode rhs = operands.get(1)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "return toSimpleLeafFilter(plannerContext,rowSignature,virtualColumnRegistry,Iterables.getOnlyElement(((RexCall)rexNode).getOperands()))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "final VirtualColumn virtualColumn = querySignature.getOrCreateVirtualColumnForExpression(plannerContext,druidExpression,operand.getType().getSqlTypeName())@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "filter = new NotDimFilter(Bounds.equalTo(boundRefKey,val))@@@116@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "kind == SqlKind.IS_NULL || kind == SqlKind.IS_NOT_NULL@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "boolean flip = false@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "val = String.valueOf(RexLiteral.value(rhsLiteral))@@@99@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "filter = new NotDimFilter(Bounds.equalTo(boundRefKey,val))@@@116@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "filter = Bounds.equalTo(boundRefKey,val)@@@114@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "final PlannerContext plannerContext@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
98 [style = filled, label = "druidExpression.isSimpleExtraction()@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "flippedKind@@@113@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "return new NotDimFilter(toSimpleLeafFilter(plannerContext,rowSignature,virtualColumnRegistry,Iterables.getOnlyElement(((RexCall)rexNode).getOperands())))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "return toSimpleLeafFilter(plannerContext,querySignature,Iterables.getOnlyElement(((RexCall)rexNode).getOperands()))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
128 [style = filled, label = "virtualColumnRegistry != null@@@78@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
68 [style = filled, label = "final long rhsMillis = Calcites.calciteDateTimeLiteralToJoda(rhs,plannerContext.getTimeZone()).getMillis()@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "final String val@@@96@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final PlannerContext plannerContext@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final BoundRefKey boundRefKey = new BoundRefKey(column,null,StringComparators.NUMERIC)@@@92@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return new NotDimFilter(toSimpleLeafFilter(plannerContext,querySignature,Iterables.getOnlyElement(((RexCall)rexNode).getOperands())))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "final SqlOperatorConversion conversion = plannerContext.getOperatorTable().lookupOperatorConversion(operator)@@@132@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final BoundRefKey boundRefKey = new BoundRefKey(column,null,StringComparators.NUMERIC)@@@92@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "return null@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "flippedKind = kind@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "equalFilter = new SelectorDimFilter(virtualColumn.getOutputName(),NullHandling.defaultStringValue(),null)@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
79 [style = filled, label = "flippedKind = SqlKind.GREATER_THAN@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "DimFilter filter = conversion.toDruidFilter(plannerContext,querySignature,rexNode)@@@137@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
91 [style = filled, label = "val = String.valueOf(Calcites.calciteDateTimeLiteralToJoda(rhsLiteral,plannerContext.getTimeZone()).getMillis())@@@105@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "return kind == SqlKind.IS_NOT_NULL? new NotDimFilter(equalFilter): equalFilter@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "druidExpression == null@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "filter = Bounds.lessThan(boundRefKey,val)@@@122@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "queryGranularity != null@@@68@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "SqlTypeName.TIMESTAMP == rhsLiteral.getTypeName() || SqlTypeName.DATE == rhsLiteral.getTypeName()@@@104@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "filter = Bounds.lessThanOrEqualTo(boundRefKey,val)@@@124@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "rhs.getKind() != SqlKind.LITERAL@@@60@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "final long rhsMillis = Calcites.calciteDateTimeLiteralToJoda(rhs,plannerContext.getTimeZone()).getMillis()@@@89@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "final DimFilter filter@@@112@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "filter = Bounds.lessThanOrEqualTo(boundRefKey,val)@@@124@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "kind == SqlKind.IS_TRUE || kind == SqlKind.IS_NOT_FALSE@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
127 [style = filled, label = "equalFilter = new SelectorDimFilter(virtualColumn.getOutputName(),NullHandling.defaultStringValue(),null)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "final DruidExpression lhsExpression = toDruidExpression(plannerContext,querySignature.getRowSignature(),lhs)@@@63@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "final boolean rhsAligned = rhsInterval.getStartMillis() == rhsMillis@@@91@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "filter = Bounds.greaterThan(boundRefKey,val)@@@118@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final DimFilter filter@@@112@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "filter != null@@@138@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "SqlTypeName.TIMESTAMP == rhsLiteral.getTypeName() || SqlTypeName.DATE == rhsLiteral.getTypeName()@@@104@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "val = String.valueOf(RexLiteral.stringValue(rhsLiteral))@@@102@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "return null@@@134@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
135 [style = filled, label = "final Granularity granularity@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
112 [style = filled, label = "column = virtualLhs.getOutputName()@@@80@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "return buildTimeFloorFilter(ColumnHolder.TIME_COLUMN_NAME,queryGranularity,flippedKind,rhsMillis)@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "virtualColumn == null@@@22@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
101 [style = filled, label = "final VirtualColumn virtualColumn = virtualColumnRegistry.getOrCreateVirtualColumnForExpression(plannerContext,druidExpression,operand.getType().getSqlTypeName())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "final DruidQuerySignature querySignature@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return null@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "flippedKind = kind@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "lhsExpression.isSimpleExtraction()@@@74@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
119 [style = filled, label = "column.equals(ColumnHolder.TIME_COLUMN_NAME) && extractionFn instanceof TimeFormatExtractionFn@@@86@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
80 [style = filled, label = "lhsExpression == null@@@64@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final SqlKind flippedKind@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "return filter@@@139@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "filter = Bounds.equalTo(boundRefKey,val)@@@114@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
115 [style = filled, label = "throw new IllegalStateException(\"WTF?! Shouldn't have got here...\")@@@126@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "conversion == null@@@133@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "flippedKind = SqlKind.LESS_THAN@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
132 [style = filled, label = "VirtualColumn virtualLhs = virtualColumnRegistry.getOrCreateVirtualColumnForExpression(plannerContext,lhsExpression,lhs.getType().getSqlTypeName())@@@79@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "throw new ISE(\"WTF?! Kind(%s( not expected here\",kind)@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "Preconditions.checkState(operands.size() == 2,\"WTF?! Expected 2 operands, got(%,d(\",operands.size())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "return filter@@@128@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
70 [style = filled, label = "return null@@@81@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
139 [style = filled, label = "final BoundRefKey boundRefKey = new BoundRefKey(column,null,StringComparators.NUMERIC)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
131 [style = filled, label = "final StringComparator comparator = Calcites.getStringComparatorForSqlTypeName(lhs.getType().getSqlTypeName())@@@110@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
94 [style = filled, label = "extractionFn = lhsExpression.getSimpleExtraction().getExtractionFn()@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "final boolean rhsAligned = rhsInterval.getStartMillis() == rhsMillis@@@91@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "final SqlOperator operator = ((RexCall)rexNode).getOperator()@@@131@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "final RexNode rexNode@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
134 [style = filled, label = "final long rhsMillis@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "return null@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "@Nullable final VirtualColumnRegistry virtualColumnRegistry@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "toSimpleLeafFilter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "flip = true@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
136 [style = filled, label = "final Interval rhsInterval = granularity.bucket(DateTimes.utc(rhsMillis))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
137 [style = filled, label = "final String column@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "return null@@@144@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "final String column@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "lhs.getKind() == SqlKind.LITERAL && rhs.getKind() != SqlKind.LITERAL@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "throw new IllegalStateException(\"WTF?! Shouldn't have got here...\")@@@126@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "final SqlKind kind = rexNode.getKind()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "flippedKind = SqlKind.GREATER_THAN_OR_EQUAL@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "final List<RexNode> operands = ((RexCall)rexNode).getOperands()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "final SqlOperatorConversion conversion = plannerContext.getOperatorTable().lookupOperatorConversion(operator)@@@132@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "rhs = x@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "final Granularity queryGranularity = toQueryGranularity(lhsExpression,plannerContext.getExprMacroTable())@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "flip@@@42@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
125 [style = filled, label = "final DruidExpression druidExpression = toDruidExpression(plannerContext,rowSignature,operand)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
88 [style = filled, label = "virtualLhs == null@@@80@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
133 [style = filled, label = "final boolean rhsAligned = rhsInterval.getStartMillis() == rhsMillis@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "kind == SqlKind.IS_FALSE || kind == SqlKind.IS_NOT_TRUE@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "SqlTypeName.NUMERIC_TYPES.contains(rhsLiteral.getTypeName())@@@98@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
104 [style = filled, label = "virtualColumnRegistry != null@@@20@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
138 [style = filled, label = "buildTimeFloorFilter['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "equalFilter = new SelectorDimFilter(druidExpression.getSimpleExtraction().getColumn(),NullHandling.defaultStringValue(),druidExpression.getSimpleExtraction().getExtractionFn())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "final RexLiteral rhsLiteral = (RexLiteral)rhs@@@97@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "return null@@@141@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
118 [style = filled, label = "toSimpleLeafFilter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16->37 [style = solid, label="val"];
35->77 [style = bold, label=""];
12->106 [style = dotted, label="false"];
68->35 [style = bold, label=""];
12->99 [style = dotted, label="true"];
71->11 [style = bold, label=""];
89->12 [style = dotted, label="false"];
59->113 [style = solid, label="val"];
91->123 [style = solid, label="val"];
75->47 [style = dotted, label="true"];
27->40 [style = solid, label="plannerContext"];
27->81 [style = solid, label="plannerContext"];
29->0 [style = bold, label=""];
89->12 [style = bold, label=""];
12->77 [style = dotted, label="true"];
89->1 [style = dotted, label="true"];
12->97 [style = dotted, label="true"];
110->117 [style = solid, label="rowSignature"];
57->9 [style = dotted, label="true"];
67->12 [style = solid, label="kind"];
31->1 [style = bold, label=""];
44->53 [style = bold, label=""];
124->54 [style = dotted, label="true"];
10->0 [style = solid, label="lhs"];
16->113 [style = solid, label="val"];
131->52 [style = solid, label="comparator"];
12->61 [style = dotted, label="true"];
53->13 [style = dotted, label="true"];
29->14 [style = bold, label=""];
67->85 [style = solid, label="kind"];
97->119 [style = solid, label="extractionFn"];
75->52 [style = bold, label=""];
124->53 [style = dotted, label="true"];
27->62 [style = solid, label="plannerContext"];
103->52 [style = solid, label="extractionFn"];
30->111 [style = solid, label="filter"];
121->25 [style = bold, label=""];
89->31 [style = dotted, label="true"];
26->51 [style = solid, label="filter"];
41->88 [style = dotted, label="false"];
10->61 [style = bold, label=""];
94->11 [style = solid, label="extractionFn"];
126->111 [style = bold, label=""];
52->126 [style = solid, label="boundRefKey"];
14->95 [style = solid, label="flippedKind"];
34->33 [style = bold, label=""];
71->30 [style = dotted, label="true"];
12->111 [style = dotted, label="true"];
130->111 [style = bold, label=""];
18->84 [style = bold, label=""];
136->133 [style = bold, label=""];
60->39 [style = dotted, label="true"];
12->86 [style = dotted, label="true"];
59->126 [style = solid, label="val"];
14->30 [style = solid, label="flippedKind"];
59->20 [style = solid, label="val"];
54->44 [style = bold, label=""];
129->132 [style = solid, label="lhsExpression"];
43->33 [style = bold, label=""];
40->46 [style = solid, label="lhsExpression"];
17->96 [style = bold, label=""];
5->60 [style = solid, label="conversion"];
124->86 [style = bold, label=""];
46->99 [style = solid, label="queryGranularity"];
4->22 [style = bold, label=""];
72->119 [style = bold, label=""];
30->45 [style = dotted, label="true"];
79->86 [style = solid, label="flippedKind"];
29->0 [style = dotted, label="true"];
86->126 [style = solid, label="val"];
12->106 [style = bold, label=""];
36->78 [style = solid, label="flip"];
23->84 [style = bold, label=""];
112->103 [style = bold, label=""];
47->42 [style = solid, label="val"];
14->78 [style = bold, label=""];
40->129 [style = dashed, label="0"];
72->54 [style = solid, label="extractionFn"];
54->44 [style = dotted, label="true"];
93->35 [style = solid, label="flippedKind"];
70->19 [style = bold, label=""];
16->11 [style = solid, label="val"];
42->51 [style = bold, label=""];
11->20 [style = solid, label="boundRefKey"];
99->68 [style = bold, label=""];
88->70 [style = dotted, label="true"];
52->116 [style = bold, label=""];
1->125 [style = dashed, label="0"];
44->53 [style = solid, label="granularity"];
20->51 [style = bold, label=""];
14->35 [style = solid, label="flippedKind"];
104->15 [style = bold, label=""];
57->120 [style = dotted, label="true"];
69->95 [style = solid, label="flippedKind"];
12->131 [style = dotted, label="true"];
91->30 [style = solid, label="val"];
103->119 [style = solid, label="extractionFn"];
11->111 [style = bold, label=""];
47->37 [style = solid, label="val"];
60->81 [style = dotted, label="false"];
8->117 [style = dotted, label="true"];
104->127 [style = dotted, label="true"];
121->25 [style = solid, label="conversion"];
73->78 [style = solid, label="flip"];
57->89 [style = dotted, label="false"];
95->86 [style = bold, label=""];
98->76 [style = dotted, label="true"];
91->45 [style = solid, label="val"];
37->51 [style = bold, label=""];
5->60 [style = bold, label=""];
107->108 [style = bold, label=""];
88->19 [style = bold, label=""];
110->120 [style = solid, label="rowSignature"];
59->131 [style = bold, label=""];
81->39 [style = dashed, label="0"];
52->130 [style = solid, label="boundRefKey"];
98->50 [style = bold, label=""];
99->77 [style = bold, label=""];
124->95 [style = dotted, label="true"];
94->54 [style = solid, label="extractionFn"];
11->6 [style = solid, label="boundRefKey"];
12->25 [style = bold, label=""];
134->133 [style = solid, label="rhsMillis"];
19->11 [style = solid, label="column"];
57->89 [style = bold, label=""];
67->57 [style = solid, label="kind"];
46->99 [style = bold, label=""];
16->126 [style = solid, label="val"];
118->102 [style = dotted, label="true"];
112->13 [style = solid, label="column"];
0->28 [style = bold, label=""];
107->59 [style = solid, label="rhsLiteral"];
138->139 [style = bold, label=""];
89->125 [style = dotted, label="true"];
102->101 [style = solid, label="plannerContext"];
89->96 [style = dotted, label="true"];
77->97 [style = bold, label=""];
86->11 [style = solid, label="val"];
25->100 [style = bold, label=""];
110->39 [style = solid, label="rowSignature"];
52->71 [style = bold, label=""];
1->50 [style = solid, label="druidExpression"];
134->136 [style = solid, label="rhsMillis"];
41->62 [style = dotted, label="false"];
102->120 [style = solid, label="plannerContext"];
12->129 [style = dotted, label="true"];
59->71 [style = bold, label=""];
3->23 [style = solid, label="equalFilter"];
102->39 [style = solid, label="plannerContext"];
118->105 [style = dotted, label="true"];
12->73 [style = dotted, label="true"];
25->100 [style = dotted, label="true"];
85->30 [style = solid, label="flippedKind"];
33->129 [style = bold, label=""];
39->84 [style = bold, label=""];
56->32 [style = solid, label="querySignature"];
78->7 [style = bold, label=""];
67->8 [style = bold, label=""];
54->16 [style = bold, label=""];
12->46 [style = dotted, label="true"];
12->54 [style = dotted, label="true"];
75->47 [style = bold, label=""];
12->51 [style = dotted, label="true"];
97->52 [style = solid, label="extractionFn"];
49->67 [style = bold, label=""];
109->128 [style = solid, label="virtualColumnRegistry"];
67->21 [style = solid, label="kind"];
79->30 [style = solid, label="flippedKind"];
128->132 [style = bold, label=""];
118->67 [style = bold, label=""];
29->36 [style = dotted, label="true"];
140->141 [style = solid, label="operatorKind"];
11->45 [style = solid, label="boundRefKey"];
103->122 [style = solid, label="extractionFn"];
110->129 [style = solid, label="rowSignature"];
119->86 [style = bold, label=""];
47->6 [style = solid, label="val"];
62->88 [style = solid, label="virtualLhs"];
12->55 [style = bold, label=""];
41->19 [style = dotted, label="false"];
93->86 [style = solid, label="flippedKind"];
60->81 [style = bold, label=""];
30->6 [style = dotted, label="true"];
59->64 [style = solid, label="val"];
12->74 [style = dotted, label="true"];
79->95 [style = solid, label="flippedKind"];
91->126 [style = solid, label="val"];
49->27 [style = dotted, label="true"];
91->113 [style = solid, label="val"];
78->85 [style = dotted, label="false"];
50->82 [style = bold, label=""];
3->23 [style = bold, label=""];
25->84 [style = bold, label=""];
10->40 [style = solid, label="lhs"];
128->72 [style = bold, label=""];
59->42 [style = solid, label="val"];
92->52 [style = solid, label="column"];
12->78 [style = dotted, label="true"];
47->20 [style = solid, label="val"];
27->9 [style = solid, label="plannerContext"];
12->119 [style = dotted, label="true"];
58->96 [style = bold, label=""];
11->26 [style = bold, label=""];
128->103 [style = dotted, label="true"];
81->87 [style = bold, label=""];
67->43 [style = solid, label="kind"];
65->40 [style = bold, label=""];
90->59 [style = bold, label=""];
47->45 [style = solid, label="val"];
82->15 [style = dotted, label="true"];
71->126 [style = dotted, label="true"];
109->104 [style = solid, label="virtualColumnRegistry"];
12->41 [style = dotted, label="true"];
91->6 [style = solid, label="val"];
64->51 [style = solid, label="filter"];
115->111 [style = bold, label=""];
85->35 [style = solid, label="flippedKind"];
71->123 [style = dotted, label="true"];
9->120 [style = dashed, label="0"];
138->135 [style = dotted, label="true"];
110->125 [style = solid, label="rowSignature"];
85->95 [style = solid, label="flippedKind"];
102->125 [style = solid, label="plannerContext"];
94->122 [style = solid, label="extractionFn"];
44->95 [style = solid, label="rhsInterval"];
41->92 [style = bold, label=""];
91->131 [style = bold, label=""];
108->16 [style = dotted, label="true"];
30->37 [style = dotted, label="true"];
30->38 [style = dotted, label="true"];
34->71 [style = solid, label="flippedKind"];
71->126 [style = bold, label=""];
41->62 [style = bold, label=""];
112->52 [style = solid, label="column"];
30->38 [style = bold, label=""];
102->132 [style = solid, label="plannerContext"];
98->3 [style = dotted, label="false"];
59->130 [style = solid, label="val"];
50->82 [style = solid, label="virtualColumn"];
61->28 [style = solid, label="rhs"];
67->23 [style = solid, label="kind"];
59->45 [style = solid, label="val"];
21->33 [style = bold, label=""];
45->51 [style = solid, label="filter"];
52->11 [style = solid, label="boundRefKey"];
31->125 [style = bold, label=""];
62->88 [style = bold, label=""];
11->37 [style = solid, label="boundRefKey"];
57->120 [style = bold, label=""];
27->1 [style = solid, label="plannerContext"];
8->117 [style = bold, label=""];
125->101 [style = solid, label="druidExpression"];
34->35 [style = solid, label="flippedKind"];
49->83 [style = dotted, label="true"];
80->46 [style = bold, label=""];
12->14 [style = dotted, label="true"];
91->130 [style = solid, label="val"];
122->124 [style = solid, label="granularity"];
100->5 [style = bold, label=""];
33->40 [style = bold, label=""];
106->51 [style = dotted, label="true"];
69->33 [style = bold, label=""];
106->114 [style = dotted, label="false"];
0->48 [style = solid, label="x"];
7->79 [style = dotted, label="true"];
31->1 [style = solid, label="operand"];
97->41 [style = bold, label=""];
13->95 [style = solid, label="rhsMillis"];
7->43 [style = dotted, label="true"];
12->90 [style = dotted, label="true"];
61->74 [style = solid, label="rhs"];
72->44 [style = solid, label="extractionFn"];
54->44 [style = solid, label="rhsMillis"];
41->72 [style = dotted, label="false"];
64->51 [style = bold, label=""];
124->54 [style = bold, label=""];
104->15 [style = dotted, label="false"];
30->20 [style = bold, label=""];
29->48 [style = dotted, label="true"];
103->119 [style = bold, label=""];
62->132 [style = dashed, label="0"];
101->127 [style = bold, label=""];
104->101 [style = dotted, label="true"];
102->117 [style = solid, label="plannerContext"];
92->13 [style = solid, label="column"];
7->69 [style = bold, label=""];
107->16 [style = solid, label="rhsLiteral"];
128->112 [style = dotted, label="true"];
69->35 [style = solid, label="flippedKind"];
7->93 [style = bold, label=""];
71->115 [style = dotted, label="true"];
40->62 [style = solid, label="lhsExpression"];
58->17 [style = bold, label=""];
86->123 [style = solid, label="val"];
108->90 [style = dotted, label="false"];
13->95 [style = solid, label="boundRefKey"];
133->141 [style = solid, label="rhsAligned"];
106->25 [style = dotted, label="true"];
21->86 [style = solid, label="flippedKind"];
71->123 [style = bold, label=""];
27->50 [style = solid, label="plannerContext"];
7->43 [style = bold, label=""];
86->113 [style = solid, label="val"];
125->58 [style = solid, label="druidExpression"];
12->63 [style = dotted, label="true"];
60->39 [style = bold, label=""];
8->57 [style = bold, label=""];
16->64 [style = solid, label="val"];
91->20 [style = solid, label="val"];
31->125 [style = solid, label="operand"];
129->80 [style = solid, label="lhsExpression"];
138->134 [style = dotted, label="true"];
67->89 [style = solid, label="kind"];
19->22 [style = solid, label="column"];
59->30 [style = solid, label="val"];
30->42 [style = bold, label=""];
24->47 [style = dotted, label="false"];
83->110 [style = dashed, label="0"];
94->44 [style = solid, label="extractionFn"];
67->8 [style = solid, label="kind"];
93->95 [style = solid, label="flippedKind"];
41->128 [style = dotted, label="false"];
41->94 [style = dotted, label="true"];
83->81 [style = solid, label="rexNode"];
16->123 [style = solid, label="val"];
24->47 [style = bold, label=""];
129->46 [style = solid, label="lhsExpression"];
19->72 [style = bold, label=""];
74->59 [style = solid, label="rhsLiteral"];
53->22 [style = dotted, label="true"];
12->11 [style = dotted, label="true"];
80->2 [style = dotted, label="true"];
56->81 [style = solid, label="querySignature"];
12->10 [style = dotted, label="true"];
77->13 [style = solid, label="column"];
90->24 [style = bold, label=""];
90->59 [style = dotted, label="true"];
94->119 [style = solid, label="extractionFn"];
53->4 [style = dotted, label="true"];
89->23 [style = dotted, label="true"];
61->29 [style = bold, label=""];
7->21 [style = dotted, label="true"];
105->106 [style = solid, label="rexNode"];
54->53 [style = solid, label="rhsMillis"];
131->52 [style = bold, label=""];
60->18 [style = dotted, label="false"];
1->58 [style = solid, label="druidExpression"];
30->42 [style = dotted, label="true"];
59->11 [style = solid, label="val"];
25->39 [style = bold, label=""];
92->22 [style = solid, label="column"];
25->39 [style = dotted, label="false"];
12->116 [style = dotted, label="true"];
104->101 [style = bold, label=""];
71->11 [style = dotted, label="true"];
91->11 [style = solid, label="val"];
37->51 [style = solid, label="filter"];
71->113 [style = bold, label=""];
12->26 [style = dotted, label="true"];
51->84 [style = bold, label=""];
30->64 [style = bold, label=""];
116->71 [style = bold, label=""];
95->86 [style = solid, label="rhsInterval"];
80->2 [style = bold, label=""];
29->28 [style = dotted, label="true"];
109->120 [style = solid, label="virtualColumnRegistry"];
30->20 [style = dotted, label="true"];
71->115 [style = bold, label=""];
119->124 [style = dotted, label="true"];
86->30 [style = solid, label="val"];
24->91 [style = bold, label=""];
57->9 [style = bold, label=""];
87->18 [style = bold, label=""];
85->33 [style = bold, label=""];
71->11 [style = solid, label="comparator"];
116->111 [style = solid, label="filter"];
13->95 [style = bold, label=""];
98->104 [style = bold, label=""];
128->72 [style = dotted, label="false"];
109->39 [style = solid, label="virtualColumnRegistry"];
53->13 [style = bold, label=""];
32->84 [style = bold, label=""];
106->114 [style = bold, label=""];
34->86 [style = solid, label="flippedKind"];
100->5 [style = solid, label="operator"];
8->32 [style = bold, label=""];
12->29 [style = dotted, label="true"];
59->6 [style = solid, label="val"];
93->30 [style = solid, label="flippedKind"];
16->130 [style = solid, label="val"];
85->86 [style = solid, label="flippedKind"];
77->52 [style = solid, label="column"];
24->75 [style = bold, label=""];
51->121 [style = bold, label=""];
99->68 [style = dotted, label="true"];
123->111 [style = bold, label=""];
7->93 [style = dotted, label="true"];
30->37 [style = bold, label=""];
28->40 [style = solid, label="lhs"];
10->129 [style = solid, label="lhs"];
28->129 [style = solid, label="lhs"];
12->30 [style = dotted, label="true"];
47->71 [style = bold, label=""];
127->23 [style = solid, label="equalFilter"];
91->42 [style = solid, label="val"];
119->122 [style = bold, label=""];
34->95 [style = solid, label="flippedKind"];
16->74 [style = bold, label=""];
7->34 [style = bold, label=""];
12->16 [style = dotted, label="true"];
87->66 [style = bold, label=""];
66->18 [style = bold, label=""];
22->86 [style = bold, label=""];
53->16 [style = bold, label=""];
28->48 [style = bold, label=""];
12->25 [style = dotted, label="false"];
16->30 [style = solid, label="val"];
59->37 [style = solid, label="val"];
92->94 [style = bold, label=""];
67->7 [style = solid, label="kind"];
124->44 [style = dotted, label="true"];
133->141 [style = bold, label=""];
95->4 [style = bold, label=""];
22->86 [style = solid, label="boundRefKey"];
65->129 [style = bold, label=""];
4->86 [style = solid, label="rhsAligned"];
21->95 [style = solid, label="flippedKind"];
87->66 [style = dotted, label="true"];
12->52 [style = dotted, label="true"];
94->54 [style = bold, label=""];
74->91 [style = solid, label="rhsLiteral"];
91->71 [style = bold, label=""];
113->111 [style = solid, label="filter"];
71->30 [style = bold, label=""];
12->40 [style = dotted, label="true"];
86->130 [style = solid, label="val"];
105->39 [style = solid, label="rexNode"];
72->11 [style = solid, label="extractionFn"];
118->110 [style = dotted, label="true"];
48->74 [style = solid, label="rhs"];
7->69 [style = dotted, label="true"];
7->34 [style = dotted, label="true"];
38->51 [style = bold, label=""];
21->35 [style = solid, label="flippedKind"];
40->80 [style = solid, label="lhsExpression"];
11->42 [style = solid, label="boundRefKey"];
27->32 [style = solid, label="plannerContext"];
30->6 [style = bold, label=""];
102->129 [style = solid, label="plannerContext"];
41->128 [style = bold, label=""];
60->87 [style = dotted, label="false"];
129->80 [style = bold, label=""];
55->63 [style = bold, label=""];
81->66 [style = solid, label="filter"];
63->73 [style = bold, label=""];
25->60 [style = dotted, label="true"];
7->79 [style = bold, label=""];
73->10 [style = bold, label=""];
47->64 [style = solid, label="val"];
21->71 [style = solid, label="flippedKind"];
76->23 [style = solid, label="equalFilter"];
12->33 [style = dotted, label="true"];
138->140 [style = dotted, label="true"];
86->107 [style = bold, label=""];
53->95 [style = solid, label="rhsAligned"];
91->37 [style = solid, label="val"];
113->111 [style = bold, label=""];
71->130 [style = dotted, label="true"];
89->98 [style = dotted, label="true"];
52->123 [style = solid, label="boundRefKey"];
106->51 [style = bold, label=""];
78->7 [style = dotted, label="true"];
89->58 [style = dotted, label="true"];
71->113 [style = dotted, label="true"];
93->71 [style = solid, label="flippedKind"];
11->111 [style = solid, label="filter"];
94->52 [style = solid, label="extractionFn"];
36->14 [style = bold, label=""];
109->117 [style = solid, label="virtualColumnRegistry"];
137->139 [style = solid, label="column"];
16->131 [style = bold, label=""];
98->50 [style = dotted, label="false"];
54->53 [style = dotted, label="true"];
71->130 [style = bold, label=""];
126->111 [style = solid, label="filter"];
122->124 [style = bold, label=""];
25->5 [style = dotted, label="true"];
11->64 [style = solid, label="boundRefKey"];
93->33 [style = bold, label=""];
75->52 [style = dotted, label="false"];
1->58 [style = bold, label=""];
76->23 [style = bold, label=""];
108->90 [style = bold, label=""];
47->131 [style = bold, label=""];
46->35 [style = solid, label="queryGranularity"];
88->70 [style = bold, label=""];
20->51 [style = solid, label="filter"];
90->24 [style = dotted, label="false"];
42->51 [style = solid, label="filter"];
118->109 [style = dotted, label="true"];
136->141 [style = solid, label="rhsInterval"];
33->65 [style = bold, label=""];
14->86 [style = solid, label="flippedKind"];
6->51 [style = solid, label="filter"];
98->76 [style = bold, label=""];
16->6 [style = solid, label="val"];
12->71 [style = dotted, label="true"];
94->119 [style = bold, label=""];
82->3 [style = bold, label=""];
83->25 [style = solid, label="rexNode"];
132->112 [style = bold, label=""];
138->137 [style = dotted, label="true"];
45->51 [style = bold, label=""];
91->64 [style = solid, label="val"];
130->111 [style = solid, label="filter"];
6->51 [style = bold, label=""];
74->90 [style = bold, label=""];
96->98 [style = bold, label=""];
78->85 [style = bold, label=""];
86->16 [style = bold, label=""];
40->80 [style = bold, label=""];
9->84 [style = bold, label=""];
89->31 [style = bold, label=""];
123->111 [style = solid, label="filter"];
16->42 [style = solid, label="val"];
15->3 [style = bold, label=""];
99->35 [style = dotted, label="true"];
69->71 [style = solid, label="flippedKind"];
119->122 [style = dotted, label="true"];
12->80 [style = dotted, label="true"];
21->30 [style = solid, label="flippedKind"];
16->20 [style = solid, label="val"];
49->56 [style = dotted, label="true"];
58->17 [style = dotted, label="true"];
85->71 [style = solid, label="flippedKind"];
59->123 [style = solid, label="val"];
79->33 [style = bold, label=""];
12->108 [style = dotted, label="true"];
52->30 [style = solid, label="boundRefKey"];
24->75 [style = dotted, label="false"];
68->35 [style = solid, label="rhsMillis"];
24->91 [style = dotted, label="true"];
34->30 [style = solid, label="flippedKind"];
16->45 [style = solid, label="val"];
8->57 [style = dotted, label="false"];
128->132 [style = dotted, label="true"];
52->113 [style = solid, label="boundRefKey"];
51->121 [style = solid, label="operator"];
15->23 [style = bold, label=""];
96->23 [style = solid, label="equalFilter"];
2->46 [style = bold, label=""];
56->9 [style = solid, label="querySignature"];
139->141 [style = solid, label="boundRefKey"];
48->36 [style = bold, label=""];
30->111 [style = bold, label=""];
69->86 [style = solid, label="flippedKind"];
48->107 [style = solid, label="rhs"];
125->58 [style = bold, label=""];
81->87 [style = solid, label="filter"];
72->54 [style = bold, label=""];
124->13 [style = dotted, label="true"];
8->32 [style = dotted, label="true"];
33->65 [style = dotted, label="true"];
127->23 [style = bold, label=""];
12->107 [style = dotted, label="true"];
108->16 [style = bold, label=""];
98->82 [style = dotted, label="false"];
98->104 [style = dotted, label="false"];
79->35 [style = solid, label="flippedKind"];
13->4 [style = solid, label="rhsMillis"];
26->30 [style = bold, label=""];
92->11 [style = solid, label="column"];
30->64 [style = dotted, label="true"];
53->86 [style = dotted, label="true"];
69->30 [style = solid, label="flippedKind"];
79->71 [style = solid, label="flippedKind"];
97->122 [style = solid, label="extractionFn"];
106->121 [style = dotted, label="true"];
61->107 [style = solid, label="rhs"];
12->55 [style = dotted, label="true"];
32->117 [style = dashed, label="0"];
53->95 [style = dotted, label="true"];
41->92 [style = dotted, label="true"];
7->21 [style = bold, label=""];
139->136 [style = bold, label=""];
14->71 [style = solid, label="flippedKind"];
82->15 [style = bold, label=""];
30->45 [style = bold, label=""];
}
