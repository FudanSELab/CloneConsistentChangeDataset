digraph {
13 [style = filled, label = "final Windowed<String> key = new Windowed<>(\"hey\",new TimeWindow(0,100L))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final Windowed<String> key = new Windowed<>(\"hey\",new TimeWindow(0L,100L))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final Change<Long> value = ARBITRARY_CHANGE@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "finalResultsWithZeroGraceAtWindowEndShouldImmediatelyEmit['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final long timestamp = 100L@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "finalResultsWithZeroGraceAtWindowEndShouldImmediatelyEmit['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "context.setRecordMetadata(\"\",0,0L,null,timestamp)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(capturedForward.timestamp(),is(timestamp))@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final KTableSuppressProcessor<Windowed<String>,Long> processor = harness.processor@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Harness<Windowed<String>,Long> harness = new Harness<>(finalResults(ofMillis(0L)),timeWindowedSerdeFrom(,100L),Long())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "processor.process(key,value)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(capturedForward.keyValue(),is(new KeyValue<>(key,value)))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(context.forwarded(),hasSize(1))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "context.setStreamTime(timestamp)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final MockProcessorContext.CapturedForward capturedForward = context.forwarded().get(0)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final MockInternalProcessorContext context = harness.context@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final Change<Long> value = new Change<>(null,ARBITRARY_LONG)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final Harness<Windowed<String>,Long> harness = new Harness<>(untilTimeLimit(ofMillis(0),maxRecords(0)),timeWindowedSerdeFrom(,100L),Long())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "suppressShouldNotDropTombstonesForTimeWindows['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2->17 [style = bold, label=""];
16->18 [style = bold, label=""];
5->3 [style = solid, label="value"];
7->12 [style = solid, label="timestamp"];
5->9 [style = bold, label=""];
13->17 [style = dashed, label="0"];
13->3 [style = solid, label="key"];
13->9 [style = solid, label="key"];
9->10 [style = bold, label=""];
3->12 [style = bold, label=""];
7->8 [style = bold, label=""];
5->9 [style = solid, label="value"];
4->0 [style = bold, label=""];
2->13 [style = bold, label=""];
0->7 [style = bold, label=""];
15->3 [style = solid, label="value"];
6->18 [style = dashed, label="0"];
6->4 [style = bold, label=""];
1->6 [style = bold, label=""];
18->4 [style = bold, label=""];
8->2 [style = bold, label=""];
11->3 [style = bold, label=""];
15->9 [style = bold, label=""];
7->2 [style = solid, label="timestamp"];
17->15 [style = bold, label=""];
13->5 [style = bold, label=""];
17->3 [style = solid, label="key"];
17->9 [style = solid, label="key"];
7->8 [style = solid, label="timestamp"];
5->15 [style = dashed, label="0"];
14->6 [style = bold, label=""];
8->13 [style = bold, label=""];
10->11 [style = bold, label=""];
15->9 [style = solid, label="value"];
}
