digraph {
9 [style = filled, label = "expected.put(2,\"bbbb\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Function<String,String> duplicateErr = new Function<String,String>(){@Override public String apply(String t1){if (\"bb\".equals(t1)) {throw new RuntimeException(\"Forced failure\")}return t1 + t1}}@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "verify(singleObserver,never()).onSuccess(expected)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "verify(singleObserver,times(1)).onError(any())@@@21@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "mapped.subscribe(singleObserver)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expected.put(1,\"aa\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "toMapWithErrorInValueSelector['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "toMapWithErrorInValueSelector['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "toMapWithErrorInValueSelector['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "expected.put(4,\"dddddddd\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "expected.put(3,\"cccccc\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Observable<String> source = Observable.just(\"a\",\"bb\",\"ccc\",\"dddd\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Flowable<String> source = Flowable.just(\"a\",\"bb\",\"ccc\",\"dddd\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Map<Integer,String> expected = new HashMap<>()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Single<Map<Integer,String>> mapped = source.toMap(lengthFunc,duplicateErr)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Map<Integer,String> expected = new HashMap<Integer,String>()@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
9->11 [style = bold, label=""];
12->5 [style = bold, label=""];
5->9 [style = bold, label=""];
15->14 [style = bold, label=""];
12->6 [style = solid, label="expected"];
8->6 [style = bold, label=""];
6->0 [style = bold, label=""];
2->4 [style = solid, label="duplicateErr"];
2->4 [style = bold, label=""];
7->3 [style = bold, label=""];
1->12 [style = dashed, label="0"];
3->2 [style = bold, label=""];
10->8 [style = bold, label=""];
13->3 [style = bold, label=""];
11->10 [style = bold, label=""];
4->12 [style = bold, label=""];
4->1 [style = bold, label=""];
14->2 [style = bold, label=""];
3->14 [style = dashed, label="0"];
1->6 [style = solid, label="expected"];
}
