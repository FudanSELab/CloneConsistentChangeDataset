digraph {
20 [style = filled, label = "readMessage['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final int length = readRawVarint32()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final ExtensionRegistryLite extensionRegistry@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "throw InvalidProtocolBufferException.recursionLimitExceeded()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "readMessage['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "readMessage['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final int oldLimit = pushLimit(length)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "--recursionDepth@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "popLimit(oldLimit)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "checkRecursionLimit()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "int length = readRawVarint32()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final ExtensionRegistryLite extensionRegistry@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "final MessageLite.Builder builder@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "--recursionDepth@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "getBytesUntilLimit() != 0@@@12@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "return result@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "T result = parser.parsePartialFrom(this,extensionRegistry)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "throw InvalidProtocolBufferException.truncatedMessage()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "recursionDepth >= recursionLimit@@@4@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final ExtensionRegistryLite extensionRegistry@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "++recursionDepth@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final int oldLimit = pushLimit(length)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "final Parser<T> parser@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "++recursionDepth@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "checkLastTagWas(0)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
9->0 [style = bold, label=""];
24->2 [style = bold, label=""];
5->23 [style = bold, label=""];
4->6 [style = bold, label=""];
2->6 [style = bold, label=""];
16->7 [style = solid, label="oldLimit"];
12->17 [style = bold, label=""];
18->15 [style = dotted, label="true"];
18->12 [style = bold, label=""];
0->11 [style = bold, label=""];
9->22 [style = dashed, label="0"];
18->8 [style = dotted, label="true"];
12->6 [style = solid, label="length"];
20->21 [style = dotted, label="true"];
8->21 [style = dashed, label="0"];
1->9 [style = solid, label="extensionRegistry"];
2->4 [style = bold, label=""];
10->7 [style = bold, label=""];
3->22 [style = bold, label=""];
2->17 [style = dashed, label="0"];
19->22 [style = solid, label="extensionRegistry"];
12->16 [style = solid, label="length"];
0->7 [style = bold, label=""];
3->9 [style = bold, label=""];
6->5 [style = solid, label="oldLimit"];
13->1 [style = dotted, label="true"];
12->2 [style = bold, label=""];
15->6 [style = solid, label="extensionRegistry"];
7->5 [style = bold, label=""];
24->6 [style = solid, label="length"];
13->12 [style = bold, label=""];
10->5 [style = bold, label=""];
22->0 [style = bold, label=""];
22->23 [style = solid, label="result"];
13->8 [style = dotted, label="true"];
11->10 [style = bold, label=""];
12->24 [style = dashed, label="0"];
2->4 [style = dotted, label="true"];
16->14 [style = bold, label=""];
20->19 [style = dotted, label="true"];
20->24 [style = bold, label=""];
0->11 [style = dotted, label="true"];
14->6 [style = bold, label=""];
10->7 [style = dotted, label="true"];
11->7 [style = bold, label=""];
17->16 [style = bold, label=""];
}
