digraph {
22 [style = filled, label = "final TxnOffsetCommitRequest request@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "assertEquals(expectedOffsets,request.offsets())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(throttleTimeMs,response.throttleTimeMs())@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "errorsMap.put(new TopicPartition(topicOne,partitionOne),Errors.NOT_COORDINATOR)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Map<TopicPartition,Long> expectedOffsets = new HashMap<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "expectedOffsets.put(new TopicPartition(topicTwo,partitionTwo),offset)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "OffsetCommitResponse response = request.getErrorResponse(throttleTimeMs,Errors.NOT_COORDINATOR.exception())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "List<TxnOffsetCommitRequestTopic> expectedTopics = Arrays.asList(new TxnOffsetCommitRequestTopic().setName(topicOne).setPartitions(Collections.singletonList(new TxnOffsetCommitRequestPartition().setPartitionIndex(partitionOne).setCommittedOffset(offset).setCommittedLeaderEpoch(leaderEpoch).setCommittedMetadata(metadata))),new TxnOffsetCommitRequestTopic().setName(topicTwo).setPartitions(Collections.singletonList(new TxnOffsetCommitRequestPartition().setPartitionIndex(partitionTwo).setCommittedOffset(offset).setCommittedLeaderEpoch(leaderEpoch).setCommittedMetadata(metadata))))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "request = builderWithGroupMetadata.build(version)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "assertEquals(expectedTopics,TxnOffsetCommitRequest.getTopics(request.offsets()))@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "testConstructor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "version++@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(offsets,request.offsets())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Map<TopicPartition,Errors> errorsMap = new HashMap<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "request = builder.build(version)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testConstructor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(Collections.singletonMap(Errors.NOT_COORDINATOR,2),response.errorCounts())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "errorsMap.put(new TopicPartition(topicTwo,partitionTwo),Errors.NOT_COORDINATOR)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "OffsetCommitRequest request = builder.build(version)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "version < 3@@@11@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(throttleTimeMs,response.throttleTimeMs())@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "version < 3@@@9@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertEquals(errorsMap,response.errors())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "OffsetCommitRequest.Builder builder = new OffsetCommitRequest.Builder(data)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testConstructor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertEquals(Collections.singletonMap(Errors.NOT_COORDINATOR,2),response.errorCounts())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(Collections.singletonMap(Errors.NOT_COORDINATOR,2),response.errorCounts())@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(throttleTimeMs,response.throttleTimeMs())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "short version = 0@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "version <= ApiKeys.TXN_OFFSET_COMMIT.latestVersion()@@@8@@@['1', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "request = builder.build(version)@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "expectedOffsets.put(new TopicPartition(topicOne,partitionOne),offset)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "TxnOffsetCommitResponse response = request.getErrorResponse(throttleTimeMs,Errors.NOT_COORDINATOR.exception())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
9->22 [style = bold, label=""];
4->10 [style = bold, label=""];
10->16 [style = solid, label="version"];
15->2 [style = bold, label=""];
16->9 [style = dotted, label="true"];
7->11 [style = bold, label=""];
6->0 [style = solid, label="version"];
8->15 [style = bold, label=""];
26->32 [style = bold, label=""];
21->20 [style = dotted, label="false"];
4->18 [style = solid, label="expectedTopics"];
16->13 [style = dotted, label="true"];
6->16 [style = solid, label="version"];
17->24 [style = dashed, label="0"];
16->24 [style = bold, label=""];
6->24 [style = solid, label="version"];
16->17 [style = dotted, label="true"];
3->14 [style = bold, label=""];
16->30 [style = dotted, label="true"];
22->21 [style = bold, label=""];
8->32 [style = dashed, label="0"];
4->7 [style = solid, label="expectedTopics"];
20->3 [style = bold, label=""];
10->13 [style = solid, label="version"];
16->17 [style = bold, label=""];
25->29 [style = bold, label=""];
21->17 [style = dotted, label="true"];
11->9 [style = bold, label=""];
2->4 [style = bold, label=""];
16->23 [style = dotted, label="true"];
19->8 [style = bold, label=""];
14->7 [style = bold, label=""];
6->13 [style = solid, label="version"];
3->18 [style = bold, label=""];
10->3 [style = solid, label="version"];
16->7 [style = dotted, label="true"];
29->27 [style = bold, label=""];
0->14 [style = bold, label=""];
15->25 [style = dashed, label="0"];
30->28 [style = bold, label=""];
21->20 [style = bold, label=""];
5->6 [style = bold, label=""];
10->16 [style = bold, label=""];
13->3 [style = bold, label=""];
24->31 [style = bold, label=""];
32->31 [style = solid, label="expectedOffsets"];
16->1 [style = dotted, label="true"];
6->16 [style = bold, label=""];
12->8 [style = bold, label=""];
28->23 [style = bold, label=""];
13->0 [style = dotted, label="true"];
23->6 [style = bold, label=""];
27->10 [style = bold, label=""];
2->29 [style = dashed, label="0"];
10->6 [style = solid, label="version"];
32->25 [style = bold, label=""];
31->30 [style = bold, label=""];
10->0 [style = solid, label="version"];
8->7 [style = solid, label="errorsMap"];
17->3 [style = bold, label=""];
16->14 [style = dotted, label="true"];
16->5 [style = dotted, label="true"];
16->24 [style = dotted, label="true"];
0->30 [style = dashed, label="0"];
10->24 [style = solid, label="version"];
13->3 [style = dotted, label="false"];
17->13 [style = bold, label=""];
16->28 [style = dotted, label="true"];
9->1 [style = bold, label=""];
16->11 [style = dotted, label="true"];
16->31 [style = dotted, label="true"];
21->17 [style = bold, label=""];
4->22 [style = bold, label=""];
18->14 [style = bold, label=""];
16->6 [style = dotted, label="true"];
13->0 [style = bold, label=""];
8->9 [style = solid, label="errorsMap"];
6->3 [style = solid, label="version"];
}
