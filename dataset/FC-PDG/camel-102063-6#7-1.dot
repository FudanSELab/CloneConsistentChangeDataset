digraph {
15 [style = filled, label = "context.getRegistry().bind(\"activemqCF\",connectionFactory)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "testRestartWithStopStart['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "context.addRoutes(routeBuilder)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertMockEndpointsSatisfied()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "template.sendBody(\"sjms2:queue:test\",\"Hello World\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "template.sendBody(\"sjms:queue:test\",\"Hello World\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "context.start()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "context.stop()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "resetMocks()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "getMockEndpoint(\"mock:test\").expectedMessageCount(1)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testRestartWithStopStart['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "template.sendBody(\"sjms:queue:test\",\"Hello World\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertMockEndpointsSatisfied()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testRestartWithStopStart['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "context.stop()@@@21@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "template = context.createProducerTemplate()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "RouteBuilder routeBuilder = new RouteBuilder(context){@Override public void configure(){from(\"sjms2:queue:test\").to(\"mock:test\")}}@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "context.start()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "getMockEndpoint(\"mock:test\").expectedMessageCount(1)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "template.sendBody(\"sjms2:queue:test\",\"Hello World\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->3 [style = bold, label=""];
16->3 [style = bold, label=""];
17->10 [style = bold, label=""];
15->2 [style = bold, label=""];
1->8 [style = bold, label=""];
11->6 [style = bold, label=""];
4->13 [style = bold, label=""];
12->15 [style = bold, label=""];
0->11 [style = bold, label=""];
6->17 [style = dashed, label="0"];
1->18 [style = dashed, label="0"];
10->7 [style = bold, label=""];
13->1 [style = bold, label=""];
12->2 [style = bold, label=""];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
6->10 [style = bold, label=""];
5->4 [style = bold, label=""];
8->9 [style = bold, label=""];
11->17 [style = bold, label=""];
18->8 [style = bold, label=""];
3->5 [style = solid, label="routeBuilder"];
9->12 [style = bold, label=""];
19->3 [style = bold, label=""];
13->18 [style = bold, label=""];
}
