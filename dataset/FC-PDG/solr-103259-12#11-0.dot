digraph {
16 [style = filled, label = "assertU(adoc(\"id\",\"999\",fieldName,\"70,70\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assumeFalse(\"Multivalue not supported for this field\",fieldName.equals(\"pointvector\") || fieldName.equals(\"bbox\"))@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertJQ(req(\"q\",radiusQuery(3,4,9,\"distance\",null),\"fl\",\"id,score\",\"sort\",\"score asc\"),1e-3,\"/response/docs/(0(/id=='100'\",\"/response/docs/(0(/score==2.827493\",\"/response/docs/(1(/id=='101'\",\"/response/docs/(1(/score==5.089807\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testSortMultiVal['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "RandomizedTest.assumeFalse(\"Multivalue not supported for this field\",fieldName.equals(\"pointvector\") || fieldName.equals(\"bbox\"))@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertU(adoc(\"id\",\"100\",fieldName,\"1,2\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertJQ(req(\"q\",radiusQuery(3,4,0.000001,\"distance\",\"false\"),\"fl\",\"id,score\",\"sort\",\"score asc\"),1e-3,\"/response/docs/(0(/id=='100'\",\"/response/docs/(0(/score==2.827493\",\"/response/docs/(1(/id=='101'\",\"/response/docs/(1(/score==5.089807\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertU(adoc(\"id\",\"101\",fieldName,\"4,-1\",fieldName,\"3,5\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertU(adoc(\"id\",\"100\",fieldName,\"1,2\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertJQ(req(\"q\",radiusQuery(3,4,9,\"distance\",null),\"fl\",\"id,score\",\"sort\",\"score asc\"),1e-4,\"/response/docs/(0(/id=='101'\",\"/response/docs/(0(/score==0.99862987\")@@@8@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertU(commit())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testSortMultiVal['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertJQ(req(\"q\",radiusQuery(3,4,9,null,null),\"fl\",\"id,score\"),1e-9,\"/response/docs/(0(/score==1.0\",\"/response/docs/(1(/score==1.0\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assumeTrue(\"dist sorting not supported on field \" + fieldName,canCalcDistance)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "testSort['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertJQ(req(\"q\",\"-id:999\",\"fl\",\"id,score\",\"sort\",\"query($sortQuery) asc\",\"sortQuery\",radiusQuery(3,4,9,\"distance\",null)),1e-4,\"/response/docs/(0(/id=='100'\",\"/response/docs/(1(/id=='101'\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertU(adoc(\"id\",\"101\",fieldName,\"4,-1\"))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertJQ(req(\"q\",radiusQuery(3,4,9,\"recipDistance\",null),\"fl\",\"id,score\",\"sort\",\"score desc\"),1e-3,\"/response/docs/(0(/id=='100'\",\"/response/docs/(0(/score==0.3099695\",\"/response/docs/(1(/id=='101'\",\"/response/docs/(1(/score==0.19970943\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertJQ(req(\"q\",radiusQuery(4,0,9,\"distance\",null),\"fl\",\"id,score\",\"sort\",\"score asc\"),1e-4,\"/response/docs/(0(/id=='101'\",\"/response/docs/(1(/id=='100'\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertJQ(req(\"q\",\"-id:999\",\"fl\",\"id,score\",\"sort\",\"query($sortQuery) asc\",\"sortQuery\",radiusQuery(4,0,9,\"distance\",null)),1e-4,\"/response/docs/(0(/id=='101'\",\"/response/docs/(1(/id=='100'\")@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19->5 [style = bold, label=""];
16->19 [style = bold, label=""];
14->11 [style = bold, label=""];
7->2 [style = bold, label=""];
2->0 [style = dashed, label="0"];
3->5 [style = bold, label=""];
4->1 [style = bold, label=""];
2->3 [style = bold, label=""];
11->10 [style = bold, label=""];
0->16 [style = bold, label=""];
10->13 [style = bold, label=""];
12->18 [style = bold, label=""];
8->7 [style = bold, label=""];
5->12 [style = bold, label=""];
0->2 [style = bold, label=""];
9->8 [style = bold, label=""];
18->14 [style = bold, label=""];
17->0 [style = bold, label=""];
5->6 [style = bold, label=""];
1->0 [style = bold, label=""];
15->17 [style = bold, label=""];
}
