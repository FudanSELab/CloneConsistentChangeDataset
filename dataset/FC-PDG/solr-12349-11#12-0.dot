digraph {
35 [style = filled, label = "selectedFields = new HashMap<String,String>()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - evaluators must be given a name, like 'add(...) as result' but found %d evaluators without names\",expression,evaluatorExpressions.size()))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "2 != parts.length@@@30@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "operations = new ArrayList<>()@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "value = value.substring(1,value.length() - 1)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "StreamFactory factory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "selectedEvaluators = new LinkedHashMap<>()@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "true@@@46@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "RecordCountStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "t instanceof EvaluatorException@@@47@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "boolean handled = false@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "List<StreamExpressionParameter> selectAsFieldsExpressions = factory.getOperandsOfType(expression,)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "1 != streamExpressions.size()@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "StreamExpression expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Throwable t = e@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "selectedEvaluators.put(factory.constructEvaluator(asValueExpression),asName)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "expression.getParameters().size() != streamExpressions.size()@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "StreamExpression expression@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "value.toLowerCase(Locale.ROOT).contains(\" as \")@@@28@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting at least one select field but found %d\",expression,streamExpressions.size()))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "value.length() > 2 && value.startsWith(\"\"\") && value.endsWith(\"\"\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "String value = selectField.getValue().trim()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "String asName = parts(1(.trim()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "!handled@@@57@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "throw new IOException(t)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "StreamExpressionValue selectField = (StreamExpressionValue)parameter@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "List<StreamExpression> evaluatorExpressions = factory.getExpressionOperandsRepresentingTypes(expression,)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "selectedEvaluators = new LinkedHashMap()@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "stream = factory.constructStream(streamExpressions.get(0))@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "handled = true@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "stream = factory.constructStream(streamExpressions.get(0))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "asValue.contains(\"(\")@@@36@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found\",expression))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "selectedFields.put(asValue,asName)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "selectedFields.put(value,value)@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "expression.getParameters().size() != streamExpressions.size() + selectAsFieldsExpressions.size() + operationExpressions.size()@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "t == null@@@51@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting select field of form 'fieldA' or 'fieldA as alias' but found %s\",expression,value))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "List<StreamExpression> operationExpressions = factory.getExpressionOperandsRepresentingTypes(expression,)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "StreamExpression expression@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "SelectStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "Throwable e@@@44@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "operations.add(factory.constructOperation(expr))@@@67@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "SelectStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "0 != evaluatorExpressions.size()@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String(( parts = value.split(\"(?i) as \")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "0 == selectAsFieldsExpressions.size()@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a single stream but found %d\",expression,streamExpressions.size()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "StreamFactory factory@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "StreamExpression asValueExpression = StreamExpressionParser.parse(asValue)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String asValue = parts(0(.trim()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting single stream but found %d (must be TupleStream types)\",expression,streamExpressions.size()))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "List<StreamExpression> streamExpressions = factory.getExpressionOperandsRepresentingTypes(expression,,)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "factory.doesRepresentTypes(asValueExpression,)@@@39@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "t = t.getCause()@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->38 [style = solid, label="asValueExpression"];
35->48 [style = bold, label=""];
48->3 [style = bold, label=""];
30->20 [style = bold, label=""];
36->29 [style = bold, label=""];
10->24 [style = bold, label=""];
6->39 [style = dotted, label="true"];
17->14 [style = dotted, label="true"];
12->42 [style = dotted, label="true"];
9->31 [style = solid, label="expression"];
8->33 [style = solid, label="expression"];
8->31 [style = solid, label="expression"];
52->51 [style = dotted, label="true"];
15->7 [style = dotted, label="true"];
25->11 [style = dotted, label="true"];
12->7 [style = bold, label=""];
29->18 [style = bold, label=""];
37->3 [style = bold, label=""];
2->23 [style = bold, label=""];
5->25 [style = solid, label="t"];
49->24 [style = bold, label=""];
23->22 [style = bold, label=""];
3->19 [style = bold, label=""];
17->14 [style = bold, label=""];
38->7 [style = bold, label=""];
47->46 [style = dotted, label="true"];
36->18 [style = bold, label=""];
21->48 [style = dashed, label="0"];
8->13 [style = solid, label="expression"];
28->11 [style = solid, label="t"];
21->3 [style = bold, label=""];
18->13 [style = dotted, label="true"];
17->38 [style = dotted, label="true"];
13->34 [style = bold, label=""];
16->40 [style = bold, label=""];
50->51 [style = solid, label="expression"];
8->41 [style = solid, label="expression"];
19->2 [style = solid, label="value"];
15->40 [style = dotted, label="true"];
7->37 [style = bold, label=""];
53->20 [style = bold, label=""];
27->41 [style = dotted, label="true"];
14->38 [style = bold, label=""];
10->26 [style = bold, label=""];
1->0 [style = bold, label=""];
27->16 [style = bold, label=""];
20->52 [style = bold, label=""];
15->16 [style = dotted, label="true"];
19->6 [style = bold, label=""];
44->17 [style = bold, label=""];
35->21 [style = bold, label=""];
15->27 [style = dotted, label="true"];
38->32 [style = bold, label=""];
15->17 [style = dotted, label="true"];
15->2 [style = dotted, label="false"];
9->41 [style = solid, label="expression"];
19->41 [style = solid, label="value"];
9->0 [style = solid, label="expression"];
10->24 [style = dotted, label="true"];
33->36 [style = bold, label=""];
7->23 [style = bold, label=""];
30->9 [style = dotted, label="true"];
42->7 [style = bold, label=""];
36->29 [style = dotted, label="true"];
34->35 [style = bold, label=""];
52->51 [style = bold, label=""];
6->39 [style = bold, label=""];
12->25 [style = dotted, label="true"];
0->31 [style = bold, label=""];
8->20 [style = solid, label="expression"];
26->33 [style = dotted, label="true"];
18->34 [style = bold, label=""];
2->3 [style = bold, label=""];
15->44 [style = dotted, label="true"];
33->24 [style = dashed, label="0"];
38->32 [style = dotted, label="true"];
45->28 [style = dotted, label="true"];
53->50 [style = dotted, label="true"];
40->37 [style = solid, label="asName"];
20->1 [style = bold, label=""];
28->12 [style = bold, label=""];
16->37 [style = solid, label="asValue"];
6->15 [style = bold, label=""];
43->7 [style = bold, label=""];
8->1 [style = solid, label="expression"];
50->20 [style = solid, label="expression"];
24->26 [style = bold, label=""];
11->5 [style = bold, label=""];
47->9 [style = dotted, label="true"];
5->42 [style = solid, label="t"];
31->10 [style = bold, label=""];
8->24 [style = solid, label="expression"];
25->5 [style = bold, label=""];
41->16 [style = bold, label=""];
30->8 [style = dotted, label="true"];
39->41 [style = solid, label="value"];
9->1 [style = solid, label="expression"];
9->20 [style = solid, label="expression"];
40->44 [style = bold, label=""];
9->24 [style = solid, label="expression"];
8->29 [style = solid, label="expression"];
39->15 [style = bold, label=""];
15->2 [style = bold, label=""];
9->33 [style = solid, label="expression"];
52->49 [style = bold, label=""];
26->36 [style = bold, label=""];
40->32 [style = solid, label="asName"];
28->25 [style = solid, label="t"];
9->29 [style = solid, label="expression"];
51->49 [style = bold, label=""];
42->12 [style = bold, label=""];
45->28 [style = bold, label=""];
32->43 [style = bold, label=""];
39->2 [style = solid, label="value"];
37->23 [style = bold, label=""];
7->3 [style = bold, label=""];
15->4 [style = dotted, label="true"];
7->37 [style = dotted, label="true"];
17->7 [style = bold, label=""];
38->43 [style = dotted, label="true"];
12->5 [style = dotted, label="true"];
49->24 [style = dotted, label="true"];
25->11 [style = bold, label=""];
12->25 [style = bold, label=""];
50->24 [style = solid, label="expression"];
4->27 [style = bold, label=""];
27->41 [style = bold, label=""];
15->4 [style = bold, label=""];
47->20 [style = bold, label=""];
18->13 [style = bold, label=""];
45->12 [style = dotted, label="true"];
5->42 [style = bold, label=""];
49->26 [style = bold, label=""];
53->54 [style = dotted, label="true"];
26->33 [style = bold, label=""];
9->54 [style = dashed, label="0"];
5->11 [style = solid, label="t"];
16->14 [style = solid, label="asValue"];
8->0 [style = solid, label="expression"];
14->32 [style = solid, label="asValueExpression"];
9->13 [style = solid, label="expression"];
}
