digraph {
9 [style = filled, label = "testConcreteWriteIndexWithNoWriteIndexWithSingleIndex['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "ClusterState state = ClusterState.builder(new ClusterName(\"_name\")).metadata(mdBuilder).build()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "DocWriteRequest request = randomFrom(new IndexRequest(\"test-alias\"),new UpdateRequest(\"test-alias\",\"_id\"),new DeleteRequest(\"test-alias\"))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "Arrays.sort(strings)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Metadata.Builder mdBuilder = Metadata.builder().put(indexBuilder(\"test-0\").state(State.OPEN).putAlias(AliasMetadata.builder(\"test-alias\").writeIndex(randomFrom(test0WriteIndex,null)))).put(indexBuilder(\"test-1\").state(State.OPEN).putAlias(AliasMetadata.builder(\"test-alias\").writeIndex(randomFrom(test0WriteIndex == false,null))))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "String(( strings = indexNameExpressionResolver.indexAliases(state,\"test-0\",null,true,new HashSet<>(Arrays.asList(\"test-0\",\"test-1\",\"test-alias\")))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(exception.getMessage(),equalTo(\"no write index is defined for alias (test-alias(.\" + \" The write index may be explicitly disabled using is_write_index=false or the alias points to multiple\" + \" indices without one being designated as a write index\"))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ClusterState state = ClusterState.builder(new ClusterName(\"_name\")).metadata(mdBuilder).build()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Metadata.Builder mdBuilder = Metadata.builder().put(indexBuilder(\"test-0\").state(State.OPEN).putAlias(AliasMetadata.builder(\"test-alias\").writeIndex(false)))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testConcreteWriteIndexWithNoWriteIndexWithSingleIndex['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testAliasResolutionNotAllowingMultipleIndices['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(exception.getMessage(),endsWith(\", can't execute a single index op\"))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "IllegalArgumentException exception = expectThrows(,null)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertArrayEquals(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@146d315,strings)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "boolean test0WriteIndex = randomBoolean()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "DocWriteRequest<?> request = randomFrom(new IndexRequest(\"test-alias\"),new UpdateRequest(\"test-alias\",\"_id\"),new DeleteRequest(\"test-alias\"))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Arrays.sort(strings)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "IllegalArgumentException exception = expectThrows(,null)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
4->10 [style = bold, label=""];
5->8 [style = bold, label=""];
12->13 [style = solid, label="test0WriteIndex"];
5->17 [style = solid, label="state"];
1->5 [style = solid, label="state"];
5->8 [style = solid, label="strings"];
11->12 [style = bold, label=""];
4->2 [style = bold, label=""];
5->17 [style = bold, label=""];
5->4 [style = solid, label="strings"];
2->10 [style = dashed, label="0"];
9->6 [style = bold, label=""];
6->1 [style = bold, label=""];
12->13 [style = bold, label=""];
2->0 [style = bold, label=""];
17->4 [style = solid, label="strings"];
5->17 [style = dashed, label="0"];
10->0 [style = bold, label=""];
7->6 [style = bold, label=""];
13->5 [style = bold, label=""];
16->14 [style = bold, label=""];
14->15 [style = bold, label=""];
8->4 [style = bold, label=""];
17->16 [style = solid, label="strings"];
17->4 [style = bold, label=""];
4->16 [style = bold, label=""];
}
