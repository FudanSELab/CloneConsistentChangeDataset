digraph {
10 [style = filled, label = "when(con2.getInputStream()).thenReturn(someZippedContent())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertTrue(d.installIfNecessaryFrom(url,null,\"\"))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "when(con.getHeaderField(\"Location\")).thenReturn(someUrl)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final FilePath d = new FilePath(tmp)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "File tmp = temp.getRoot()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "when(con2.getResponseCode()).thenReturn(HttpURLConnection.HTTP_OK)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "when(con.getResponseCode()).thenReturn(HttpURLConnection.HTTP_OK)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "when(con.getResponseCode()).thenReturn(HttpURLConnection.HTTP_MOVED_TEMP)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "installIfNecessaryFollowsRedirects['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(d.installIfNecessaryFrom(url,new StreamTaskListener(baos),message))@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "FilePath.UrlFactory urlFactory = mock()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "URL url2 = someUrlToZipFile(con2)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final URL url = someUrlToZipFile(con)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "String message = \"going ahead\"@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final HttpURLConnection con = mock()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "ByteArrayOutputStream baos = new ByteArrayOutputStream()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final HttpURLConnection con2 = mock()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "installIfNecessaryPerformsInstallation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "installIfNecessaryPerformsInstallation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "String someUrl = url2.toExternalForm()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "d.setUrlFactory(urlFactory)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertTrue(d.installIfNecessaryFrom(url,null,\"message if failed\"))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "when(urlFactory.newURL(someUrl)).thenReturn(url2)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "when(con.getInputStream()).thenReturn(someZippedContent())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->15 [style = solid, label="con2"];
5->9 [style = bold, label=""];
20->11 [style = solid, label="message"];
4->13 [style = bold, label=""];
6->9 [style = dashed, label="0"];
18->15 [style = bold, label=""];
1->6 [style = solid, label="url"];
14->10 [style = bold, label=""];
1->18 [style = bold, label=""];
10->21 [style = bold, label=""];
7->3 [style = solid, label="tmp"];
3->4 [style = bold, label=""];
7->3 [style = bold, label=""];
1->11 [style = solid, label="url"];
8->7 [style = bold, label=""];
13->1 [style = bold, label=""];
19->16 [style = bold, label=""];
0->7 [style = bold, label=""];
22->4 [style = bold, label=""];
17->7 [style = bold, label=""];
15->16 [style = solid, label="url2"];
3->23 [style = bold, label=""];
23->22 [style = bold, label=""];
21->20 [style = bold, label=""];
23->22 [style = solid, label="urlFactory"];
5->6 [style = bold, label=""];
4->1 [style = solid, label="con"];
2->18 [style = dashed, label="0"];
16->14 [style = bold, label=""];
4->1 [style = bold, label=""];
1->2 [style = bold, label=""];
1->9 [style = solid, label="url"];
15->12 [style = bold, label=""];
12->19 [style = bold, label=""];
21->11 [style = solid, label="baos"];
12->19 [style = solid, label="someUrl"];
2->5 [style = bold, label=""];
20->11 [style = bold, label=""];
}
