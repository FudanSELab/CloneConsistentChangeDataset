digraph {
4 [style = filled, label = "open.onNext(1)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertTrue(open.hasSubscribers())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertFalse(open.hasObservers())@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "TestSubscriber<Flowable<Integer>> ts = new TestSubscriber<Flowable<Integer>>()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "TestObserver<Observable<Integer>> to = new TestObserver<Observable<Integer>>()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertFalse(close.hasSubscribers())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "open.onNext(1)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(open.hasObservers())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertFalse(close.hasObservers())@@@29@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "final PublishSubject<Integer> close = PublishSubject.create()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "noUnsubscribeAndNoLeak['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final PublishProcessor<Integer> close = PublishProcessor.create()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertFalse(ts.isCancelled())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(close.hasObservers())@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "close.onNext(1)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertFalse(open.hasSubscribers())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "source.window(open,new Function<Integer,Observable<Integer>>(){@Override public Observable<Integer> apply(Integer t){return close}}).doOnNext(new Consumer<Observable<Integer>>(){@Override public void accept(Observable<Integer> w){w.subscribe(Functions.emptyConsumer(),Functions.emptyConsumer())}}).subscribe(to)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertFalse(close.hasSubscribers())@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertTrue(close.hasSubscribers())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "source.onComplete()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(close.hasObservers())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "PublishProcessor<Integer> open = PublishProcessor.create()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "source.onComplete()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(open.hasObservers())@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ts.assertNoErrors()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "close.onNext(1)@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "ts.assertComplete()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "noUnsubscribeAndNoLeak['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "to.assertComplete()@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "ts.assertValueCount(1)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "to.assertValueCount(1)@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "PublishProcessor<Integer> source = PublishProcessor.create()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "PublishSubject<Integer> open = PublishSubject.create()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "noUnsubscribeAndNoLeak['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "to.assertNoErrors()@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "source.onNext(1)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "source.window(open,new Function<Integer,Flowable<Integer>>(){@Override public Flowable<Integer> apply(Integer t){return close}}).subscribe(ts)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "PublishSubject<Integer> source = PublishSubject.create()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertFalse(close.hasObservers())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
8->10 [style = bold, label=""];
16->0 [style = bold, label=""];
30->33 [style = bold, label=""];
3->1 [style = bold, label=""];
21->0 [style = bold, label=""];
28->34 [style = bold, label=""];
9->2 [style = bold, label=""];
1->27 [style = dashed, label="0"];
1->15 [style = bold, label=""];
26->36 [style = bold, label=""];
27->30 [style = bold, label=""];
4->13 [style = bold, label=""];
3->38 [style = dashed, label="0"];
15->30 [style = dashed, label="0"];
38->27 [style = bold, label=""];
26->36 [style = solid, label="ts"];
10->17 [style = bold, label=""];
11->12 [style = bold, label=""];
24->38 [style = bold, label=""];
25->29 [style = bold, label=""];
7->8 [style = bold, label=""];
12->9 [style = bold, label=""];
22->23 [style = bold, label=""];
36->11 [style = bold, label=""];
35->24 [style = bold, label=""];
0->7 [style = bold, label=""];
4->32 [style = dashed, label="0"];
20->18 [style = bold, label=""];
31->26 [style = bold, label=""];
10->26 [style = dashed, label="0"];
18->22 [style = bold, label=""];
5->6 [style = bold, label=""];
5->35 [style = dashed, label="0"];
34->37 [style = bold, label=""];
37->31 [style = bold, label=""];
6->24 [style = dashed, label="0"];
15->20 [style = bold, label=""];
12->25 [style = bold, label=""];
23->19 [style = bold, label=""];
2->29 [style = dashed, label="0"];
2->14 [style = bold, label=""];
9->25 [style = dashed, label="0"];
29->14 [style = bold, label=""];
13->5 [style = bold, label=""];
0->34 [style = dashed, label="0"];
7->37 [style = dashed, label="0"];
10->17 [style = solid, label="to"];
8->31 [style = dashed, label="0"];
32->13 [style = bold, label=""];
17->36 [style = dashed, label="0"];
14->32 [style = bold, label=""];
13->35 [style = bold, label=""];
17->4 [style = bold, label=""];
14->4 [style = bold, label=""];
17->11 [style = bold, label=""];
}
