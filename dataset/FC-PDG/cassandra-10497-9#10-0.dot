digraph {
19 [style = filled, label = "rm = new Mutation(\"Keyspace1\",ROW.getKey())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "rm.delete(\"Standard1\",cellname(\"col4\"),2L)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "cf.addColumn(expiringColumn(\"col2\",\"val2\",1L,60))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final Keyspace keyspace = Keyspace.open(\"Keyspace1\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final DecoratedKey ROW = Util.dk(\"row5\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "reTest(keyspace.getColumnFamilyStore(\"Standard1\"),verify)@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testGetSliceFromBasic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Mutation rm = new Mutation(\"Keyspace1\",ROW.key,cf)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "cf.addColumn(column(\"col1\",\"val1\",1L))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "rm.apply()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "rm = new Mutation(\"Keyspace1\",ROW.key)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "cf.addColumn(column(\"col5\",\"val5\",1L))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "cf.addColumn(column(\"col3\",\"val3\",1L))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testGetSliceFromBasic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "final DecoratedKey ROW = Util.dk(\"row1\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testGetSliceWithExpiration['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "reTest(keyspace.getColumnFamilyStore(\"Standard1\"),verify)@@@39@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "cf.addColumn(column(\"col9\",\"val9\",1L))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "cf.addColumn(column(\"col7\",\"val7\",1L))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Runnable verify = new WrappedRunnable(){public void runMayThrow(){ColumnFamily cfcf = cfStore.getColumnFamily(ROW,Composites.EMPTY,Composites.EMPTY,false,2,System.currentTimeMillis())assertColumns(cf,\"col1\",\"col2\")assertColumns(ColumnFamilyStore.removeDeleted(cf,Integer.MAX_VALUE),\"col1\")cf = cfStore.getColumnFamily(ROW,cellname(\"col2\"),Composites.EMPTY,false,1,System.currentTimeMillis())assertColumns(cf,\"col2\")assertColumns(ColumnFamilyStore.removeDeleted(cf,Integer.MAX_VALUE))}}@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final ColumnFamilyStore cfStore = keyspace.getColumnFamilyStore(\"Standard1\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "cf.addColumn(column(\"col4\",\"val4\",1L))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ColumnFamily cf = ArrayBackedSortedColumns.factory.create(\"Keyspace1\",\"Standard1\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Mutation rm = new Mutation(\"Keyspace1\",ROW.getKey(),cf)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "rm.apply()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
5->10 [style = bold, label=""];
3->1 [style = bold, label=""];
9->2 [style = bold, label=""];
14->13 [style = solid, label="cf"];
2->3 [style = bold, label=""];
12->24 [style = solid, label="verify"];
18->15 [style = bold, label=""];
1->12 [style = solid, label="ROW"];
23->12 [style = solid, label="ROW"];
0->11 [style = bold, label=""];
14->18 [style = solid, label="cf"];
15->6 [style = bold, label=""];
6->0 [style = bold, label=""];
11->12 [style = bold, label=""];
16->17 [style = bold, label=""];
12->24 [style = bold, label=""];
15->19 [style = bold, label=""];
19->0 [style = bold, label=""];
21->2 [style = bold, label=""];
20->2 [style = bold, label=""];
23->14 [style = bold, label=""];
17->7 [style = bold, label=""];
14->12 [style = solid, label="cf"];
3->23 [style = bold, label=""];
10->13 [style = bold, label=""];
12->8 [style = bold, label=""];
6->19 [style = dashed, label="0"];
22->10 [style = bold, label=""];
10->4 [style = bold, label=""];
7->18 [style = bold, label=""];
12->8 [style = solid, label="verify"];
1->14 [style = bold, label=""];
15->12 [style = bold, label=""];
13->15 [style = bold, label=""];
13->18 [style = dashed, label="0"];
5->22 [style = bold, label=""];
1->23 [style = dashed, label="0"];
4->16 [style = bold, label=""];
14->5 [style = bold, label=""];
}
