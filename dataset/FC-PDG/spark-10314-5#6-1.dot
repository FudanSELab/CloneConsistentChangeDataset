digraph {
28 [style = filled, label = "Assert.assertTrue(iterator.next())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "appendRow(batch,makeKeyRow(3,\"C\"),makeValueRow(3,3))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "UnsafeRow value2 = iterator.getValue()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertTrue(iterator.next())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "UnsafeRow retrievedValue2 = batch.getValueRow(2)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Assert.assertTrue(checkKey(key1,11,11))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "iteratorTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertTrue(checkKey(key3,33,33))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Assert.assertTrue(checkKey(retrievedKey2,22,22))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "appendRow(batch,makeKeyRow(22,22),makeValueRow(2,2))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "UnsafeRow key1 = iterator.getKey()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "RowBasedKeyValueBatch batch = RowBasedKeyValueBatch.allocate(keySchema,valueSchema,taskMemoryManager,DEFAULT_CAPACITY)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "{batch.close()}@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "UnsafeRow value1 = iterator.getValue()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertTrue(iterator.next())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "UnsafeRow value1 = iterator.getValue()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assert.assertTrue(checkValue(value2,2,2))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "UnsafeRow key2 = iterator.getKey()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "org.apache.spark.unsafe.KVIterator<UnsafeRow,UnsafeRow> iterator = batch.rowIterator()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "iteratorTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "UnsafeRow retrievedKey2 = batch.getKeyRow(1)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertEquals(3,batch.numRows())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertFalse(iterator.next())@@@32@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "UnsafeRow retrievedValue1 = batch.getValueRow(1)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "appendRow(batch,makeKeyRow(33,33),makeValueRow(3,3))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "appendRow(batch,makeKeyRow(1,\"A\"),makeValueRow(1,1))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "appendRow(batch,makeKeyRow(2,\"B\"),makeValueRow(2,2))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertTrue(checkKey(retrievedKey1,11,11))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "fixedLengthTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertTrue(checkKey(key1,1,\"A\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Assert.assertTrue(checkValue(retrievedValue2,3,3))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Assert.assertTrue(checkValue(retrievedValue1,2,2))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertTrue(checkValue(value1,1,1))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "UnsafeRow key3 = iterator.getKey()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertTrue(iterator.next())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "UnsafeRow value3 = iterator.getValue()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "UnsafeRow retrievedKey1 = batch.getKeyRow(0)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Assert.assertFalse(iterator.next())@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "org.apache.spark.unsafe.KVIterator<UnsafeRow,UnsafeRow> iterator = batch.rowIterator()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(iterator.next())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "appendRow(batch,makeKeyRow(1,\"A\"),makeValueRow(1,1))@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "appendRow(batch,makeKeyRow(11,11),makeValueRow(1,1))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "Assert.assertTrue(checkValue(value3,3,3))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertTrue(checkValue(value1,1,1))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Assert.assertTrue(checkKey(key2,22,22))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertEquals(3,batch.numRows())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "UnsafeRow key1 = iterator.getKey()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29->26 [style = solid, label="key3"];
4->10 [style = bold, label=""];
28->29 [style = bold, label=""];
26->42 [style = bold, label=""];
13->43 [style = dashed, label="0"];
7->17 [style = bold, label=""];
10->15 [style = bold, label=""];
46->34 [style = bold, label=""];
24->21 [style = solid, label="batch"];
24->13 [style = solid, label="batch"];
33->15 [style = bold, label=""];
5->26 [style = dashed, label="0"];
11->33 [style = dashed, label="0"];
14->19 [style = solid, label="key1"];
16->6 [style = bold, label=""];
36->31 [style = bold, label=""];
8->3 [style = bold, label=""];
9->8 [style = solid, label="key2"];
4->15 [style = solid, label="value1"];
41->9 [style = bold, label=""];
15->7 [style = solid, label="key3"];
6->0 [style = bold, label=""];
31->38 [style = bold, label=""];
21->38 [style = dashed, label="0"];
45->28 [style = bold, label=""];
0->11 [style = solid, label="key1"];
11->19 [style = bold, label=""];
4->33 [style = bold, label=""];
3->4 [style = bold, label=""];
17->23 [style = bold, label=""];
1->9 [style = bold, label=""];
15->5 [style = bold, label=""];
8->4 [style = solid, label="value2"];
35->37 [style = solid, label="retrievedKey2"];
20->18 [style = bold, label=""];
43->40 [style = bold, label=""];
10->5 [style = solid, label="key3"];
25->24 [style = bold, label=""];
19->1 [style = bold, label=""];
29->27 [style = bold, label=""];
0->14 [style = bold, label=""];
15->7 [style = solid, label="value3"];
11->1 [style = solid, label="value1"];
23->22 [style = bold, label=""];
3->33 [style = solid, label="key1"];
30->35 [style = bold, label=""];
37->46 [style = bold, label=""];
7->44 [style = solid, label="key2"];
5->17 [style = solid, label="value3"];
24->21 [style = bold, label=""];
35->37 [style = bold, label=""];
14->19 [style = solid, label="value1"];
39->41 [style = solid, label="retrievedValue2"];
12->8 [style = bold, label=""];
34->39 [style = bold, label=""];
17->45 [style = solid, label="value2"];
46->34 [style = solid, label="retrievedValue1"];
42->32 [style = bold, label=""];
27->42 [style = solid, label="value3"];
5->7 [style = bold, label=""];
39->41 [style = bold, label=""];
40->30 [style = bold, label=""];
12->3 [style = solid, label="key2"];
9->12 [style = bold, label=""];
17->44 [style = bold, label=""];
18->21 [style = bold, label=""];
8->44 [style = dashed, label="0"];
44->45 [style = bold, label=""];
24->2 [style = solid, label="batch"];
14->11 [style = bold, label=""];
40->30 [style = solid, label="retrievedKey1"];
12->3 [style = solid, label="value2"];
18->31 [style = dashed, label="0"];
38->43 [style = bold, label=""];
21->13 [style = bold, label=""];
13->2 [style = bold, label=""];
27->26 [style = bold, label=""];
2->16 [style = bold, label=""];
}
