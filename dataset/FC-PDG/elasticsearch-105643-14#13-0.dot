digraph {
21 [style = filled, label = "when(metadata.indices()).thenReturn(ImmutableOpenMap.of())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "when(state.metadata()).thenReturn(metadata)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "AtomicBoolean responseCalled = new AtomicBoolean(false)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Metadata metadata = mock()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ComposableIndexTemplate t1 = new ComposableIndexTemplate(Collections.singletonList(\"missing_*\"),new Template(Settings.builder().put(IndexSettings.DEFAULT_PIPELINE.getKey(),\"pipeline2\").build(),null,null),null,null,null,null,null,null)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "AtomicBoolean responseCalled = new AtomicBoolean(false)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "verify(ingestService).executeBulkRequest(eq(1),bulkDocsItr.capture(),failureHandler.capture(),completionHandler.capture(),any(),eq(Names.WRITE))@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "templateMetadataBuilder.put(\"template4\",IndexTemplateMetadata.builder(\"template4\").patterns(Arrays.asList(\"nope\")).order(4).settings(Settings.builder().put(IndexSettings.DEFAULT_PIPELINE.getKey(),\"pipeline4\").build()).build())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "when(metadata.getTemplates()).thenReturn(templateMetadataBuilder.build())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(\"pipeline2\",indexRequest.getPipeline())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Metadata metadata = Metadata.builder().put(\"my-template\",t1).build()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ComposableIndexTemplate t1 = new ComposableIndexTemplate(Collections.singletonList(\"missing_*\"),new Template(Settings.builder().put(IndexSettings.DEFAULT_PIPELINE.getKey(),\"pipeline2\").build(),null,null),null,null,null,null,null)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "verify(ingestService).executeBulkRequest(eq(1),bulkDocsItr.capture(),failureHandler.capture(),completionHandler.capture(),any(),eq(Names.WRITE))@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "indexRequest.source(Collections.emptyMap())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "when(state.getMetadata()).thenReturn(metadata)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ImmutableOpenMap.Builder<String,IndexTemplateMetadata> templateMetadataBuilder = ImmutableOpenMap.builder()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testFindDefaultPipelineFromV2TemplateMatch['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "Exception exception = new Exception(\"fake exception\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testFindDefaultPipelineFromTemplateMatch['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ActionTestUtils.execute(singleItemBulkWriteAction,null,indexRequest,ActionListener.wrap(null,null))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "indexRequest.source(Collections.emptyMap())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "when(state.getMetadata()).thenReturn(metadata)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ClusterState state = clusterService.state()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "when(metadata.templates()).thenReturn(templateMetadataBuilder.build())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "when(state.metadata()).thenReturn(metadata)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "templateMetadataBuilder.put(\"template1\",IndexTemplateMetadata.builder(\"template1\").patterns(Arrays.asList(\"missing_index\")).order(1).settings(Settings.builder().put(IndexSettings.DEFAULT_PIPELINE.getKey(),\"pipeline1\").build()).build())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "IndexRequest indexRequest = new IndexRequest(\"missing_index\").id(\"id\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testFindDefaultPipelineFromV2TemplateMatch['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "templateMetadataBuilder.put(\"template2\",IndexTemplateMetadata.builder(\"template2\").patterns(Arrays.asList(\"missing_*\")).order(2).settings(Settings.builder().put(IndexSettings.DEFAULT_PIPELINE.getKey(),\"pipeline2\").build()).build())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "IndexRequest indexRequest = new IndexRequest(\"missing_index\").id(\"id\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "AtomicBoolean failureCalled = new AtomicBoolean(false)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "templateMetadataBuilder.put(\"template3\",IndexTemplateMetadata.builder(\"template3\").patterns(Arrays.asList(\"missing*\")).order(3).build())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25->0 [style = bold, label=""];
13->10 [style = bold, label=""];
30->17 [style = bold, label=""];
12->5 [style = bold, label=""];
23->30 [style = bold, label=""];
4->6 [style = bold, label=""];
20->26 [style = bold, label=""];
17->6 [style = solid, label="metadata"];
31->24 [style = bold, label=""];
11->4 [style = bold, label=""];
8->14 [style = bold, label=""];
16->25 [style = bold, label=""];
6->0 [style = bold, label=""];
3->12 [style = bold, label=""];
26->19 [style = bold, label=""];
7->8 [style = bold, label=""];
28->16 [style = bold, label=""];
17->4 [style = solid, label="metadata"];
2->13 [style = bold, label=""];
29->28 [style = bold, label=""];
10->3 [style = solid, label="metadata"];
18->22 [style = bold, label=""];
21->29 [style = bold, label=""];
6->31 [style = bold, label=""];
2->14 [style = dashed, label="0"];
8->2 [style = bold, label=""];
24->21 [style = bold, label=""];
0->1 [style = bold, label=""];
19->23 [style = bold, label=""];
29->0 [style = solid, label="indexRequest"];
10->9 [style = solid, label="metadata"];
9->3 [style = bold, label=""];
0->18 [style = bold, label=""];
10->9 [style = bold, label=""];
5->11 [style = bold, label=""];
14->13 [style = bold, label=""];
12->6 [style = solid, label="indexRequest"];
27->8 [style = bold, label=""];
15->8 [style = bold, label=""];
17->4 [style = bold, label=""];
8->13 [style = bold, label=""];
13->20 [style = bold, label=""];
}
