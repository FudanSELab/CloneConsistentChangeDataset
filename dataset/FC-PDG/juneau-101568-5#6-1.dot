digraph {
10 [style = filled, label = "assertStream(stream(x,\" / files/test1/dir/dir/\" + p + \" / \")).asString().contains(\"(home:/files/test1/dir/dir/\" + p + \"(\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertStream(stream(x,\"files/test1/\" + p)).asString().contains(\"(home:/files/test1/\" + p + \"(\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertStream(stream(x,\"/test1/dir/dir/\" + p + \"/\")).asString().contains(\"(home:/files/test1/dir/dir/\" + p + \"(\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertStream(stream(x,\"test1/dir/\" + p)).asString().contains(\"(home:/files/test1/dir/\" + p + \"(\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertStream(stream(x,\"/test1/dir/\" + p + \"/\")).asString().contains(\"(home:/files/test1/dir/\" + p + \"(\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertStream(stream(x,\"test1/dir/dir/\" + p)).asString().contains(\"(home:/files/test1/dir/dir/\" + p + \"(\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "String(( badPatterns = {\"test1/bad.txt\",\"test1/../test1/_a.txt\",\"bad.txt\",null,\"\",\".\",\"..\"}@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String(( patterns = {\"_a.txt\",\"_b\",\".c\",\".d.txt\",\"e.txt\",\"f\",\"g_foo.txt\",\"h.foo.txt\",\"i_foo\"}@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertStream(stream(x,\"files/test1/dir/\" + p)).asString().contains(\"(home:/files/test1/dir/\" + p + \"(\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertStream(stream(x,\"test1/\" + p)).asString().contains(\"(home:/files/test1/\" + p + \"(\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "FileFinder x = FileFinder.create().dir(\"files\").build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertStream(stream(x,p)).isNull()@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertStream(stream(x,\"/test1/\" + p + \"/\")).asString().contains(\"(home:/files/test1/\" + p + \"(\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertStream(stream(x,\"files/test1/dir/dir/\" + p)).asString().contains(\"(home:/files/test1/dir/dir/\" + p + \"(\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertStream(stream(x,p)).doesNotExist()@@@19@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "b02_fileSystem_subDir['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "b01_fileSystem_rootDir['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "FileFinder x = FileFinder.create().dir(\".\").build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "b01_fileSystem_rootDir['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertStream(stream(x,\" / files/test1/\" + p + \" / \")).asString().contains(\"(home:/files/test1/\" + p + \"(\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertStream(stream(x,\" / files/test1/dir/\" + p + \" / \")).asString().contains(\"(home:/files/test1/dir/\" + p + \"(\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
16->18 [style = bold, label=""];
20->13 [style = bold, label=""];
3->17 [style = dashed, label="0"];
4->6 [style = bold, label=""];
8->15 [style = dashed, label="0"];
0->2 [style = bold, label=""];
6->11 [style = dashed, label="0"];
1->18 [style = dashed, label="0"];
1->0 [style = bold, label=""];
19->17 [style = bold, label=""];
7->8 [style = bold, label=""];
0->20 [style = dashed, label="0"];
3->10 [style = bold, label=""];
18->20 [style = bold, label=""];
13->19 [style = bold, label=""];
9->18 [style = bold, label=""];
15->9 [style = bold, label=""];
12->8 [style = bold, label=""];
2->13 [style = dashed, label="0"];
8->9 [style = bold, label=""];
10->4 [style = bold, label=""];
14->15 [style = bold, label=""];
10->16 [style = dashed, label="0"];
16->4 [style = bold, label=""];
9->1 [style = bold, label=""];
4->11 [style = bold, label=""];
10->1 [style = bold, label=""];
5->19 [style = dashed, label="0"];
17->16 [style = bold, label=""];
2->5 [style = bold, label=""];
}
