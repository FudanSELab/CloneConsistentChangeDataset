digraph {
32 [style = filled, label = "setUp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "serverInventoryView = EasyMock.createMock()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "dataSourcesSnapshot = EasyMock.createNiceMock()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "loadManagementPeons = new ConcurrentHashMap<>()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "EasyMock.replay(configManager)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "EasyMock.expect(configManager.watch(EasyMock.eq(CoordinatorCompactionConfig.CONFIG_KEY),EasyMock.anyObject(),EasyMock.anyObject())).andReturn(new AtomicReference(CoordinatorCompactionConfig.empty())).anyTimes()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "pathChildrenCache = new PathChildrenCache(curator,LOADPATH,true,true,Execs.singleThreaded(\"coordinator_test_path_children_cache-%d\"))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "druidCoordinatorConfig = new TestDruidCoordinatorConfig(new Duration(COORDINATOR_START_DELAY),new Duration(COORDINATOR_PERIOD),null,null,null,new Duration(COORDINATOR_PERIOD),null,null,null,null,null,null,null,null,null,null,10,new Duration(\"PT0s\"))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "curator.create().creatingParentsIfNeeded().forPath(LOADPATH)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "EasyMock.expect(configManager.watch(EasyMock.eq(CoordinatorDynamicConfig.CONFIG_KEY),EasyMock.anyObject(),EasyMock.anyObject())).andReturn(new AtomicReference<>(CoordinatorDynamicConfig.builder().build())).anyTimes()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "segmentsMetadataManager = EasyMock.createNiceMock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "setupServerAndCurator()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "curator.blockUntilConnected()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "coordinator = new DruidCoordinator(druidCoordinatorConfig,new ZkPathsConfig(){@Override public String getBase(){return \"druid\"}},configManager,segmentsMetadataManager,baseView,metadataRuleManager,null,new NoopServiceEmitter(),scheduledExecutorFactory,null,null,new NoopServiceAnnouncer(){@Override public void announce(DruidNode node){leaderAnnouncerLatch.countDown()}@Override public void unannounce(DruidNode node){leaderUnannouncerLatch.countDown()}},druidNode,loadManagementPeons,null,null,new CoordinatorCustomDutyGroups(ImmutableSet.of()),new CostBalancerStrategyFactory(),EasyMock.createNiceMock(),new TestDruidLeaderSelector(),null,ZkEnablementConfig.ENABLED)@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "leaderUnannouncerLatch = new CountDownLatch(1)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "druidNode = new DruidNode(\"hey\",\"what\",false,1234,null,true,false)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "druidServer = EasyMock.createMock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "coordinator = new DruidCoordinator(druidCoordinatorConfig,new ZkPathsConfig(){@Override public String getBase(){return \"druid\"}},configManager,segmentsMetadataManager,serverInventoryView,metadataRuleManager,null,serviceEmitter,scheduledExecutorFactory,null,null,new NoopServiceAnnouncer(){@Override public void announce(DruidNode node){leaderAnnouncerLatch.countDown()}@Override public void unannounce(DruidNode node){leaderUnannouncerLatch.countDown()}},druidNode,loadManagementPeons,null,new HashSet<>(),new CostBalancerStrategyFactory(),EasyMock.createNiceMock(),new TestDruidLeaderSelector(),null,ZkEnablementConfig.ENABLED)@@@32@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "configManager = EasyMock.createNiceMock()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "EasyMock.expect(configManager.watch(EasyMock.eq(CoordinatorDynamicConfig.CONFIG_KEY),EasyMock.anyObject(),EasyMock.anyObject())).andReturn(new AtomicReference(CoordinatorDynamicConfig.builder().build())).anyTimes()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "leaderUnannouncerLatch = new CountDownLatch(1)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "loadQueuePeon = new CuratorLoadQueuePeon(curator,LOADPATH,objectMapper,Execs.scheduledSingleThreaded(\"coordinator_test_load_queue_peon_scheduled-%d\"),Execs.singleThreaded(\"coordinator_test_load_queue_peon-%d\"),druidCoordinatorConfig)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "leaderAnnouncerLatch = new CountDownLatch(1)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "druidNode = new DruidNode(\"hey\",\"what\",false,1234,null,true,false)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "curator.create().creatingParentsIfNeeded().forPath(SOURCE_LOAD_PATH)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "scheduledExecutorFactory = null@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "coordinatorRuntimeParams = EasyMock.createNiceMock()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "destinationLoadQueueChildrenCache = new PathChildrenCache(curator,DESTINATION_LOAD_PATH,true,true,Execs.singleThreaded(\"coordinator_test_path_children_cache_dest-%d\"))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "curator.create().creatingParentsIfNeeded().forPath(DESTINATION_LOAD_PATH)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "JacksonConfigManager configManager = EasyMock.createNiceMock()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "destinationLoadQueuePeon = new CuratorLoadQueuePeon(curator,DESTINATION_LOAD_PATH,objectMapper,peonExec,callbackExec,druidCoordinatorConfig)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "curator.create().creatingParentsIfNeeded().forPath(SEGPATH)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "loadManagementPeons = new ConcurrentHashMap<>()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "leaderAnnouncerLatch = new CountDownLatch(1)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "sourceLoadQueueChildrenCache = new PathChildrenCache(curator,SOURCE_LOAD_PATH,true,true,Execs.singleThreaded(\"coordinator_test_path_children_cache_src-%d\"))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "loadQueuePeon.start()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "sourceLoadQueuePeon = new CuratorLoadQueuePeon(curator,SOURCE_LOAD_PATH,objectMapper,peonExec,callbackExec,druidCoordinatorConfig)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "metadataRuleManager = EasyMock.createNiceMock()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "scheduledExecutorFactory = new ScheduledExecutorFactory(){@Override public ScheduledExecutorService create(int corePoolSize,final String nameFormat){return Executors.newSingleThreadScheduledExecutor()}}@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "objectMapper = new DefaultObjectMapper()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "curator.start()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39->16 [style = bold, label=""];
34->40 [style = bold, label=""];
41->29 [style = solid, label="druidNode"];
30->20 [style = bold, label=""];
11->25 [style = bold, label=""];
24->0 [style = bold, label=""];
37->30 [style = bold, label=""];
33->29 [style = solid, label="scheduledExecutorFactory"];
0->2 [style = bold, label=""];
3->16 [style = dashed, label="0"];
23->4 [style = bold, label=""];
23->35 [style = dashed, label="0"];
10->35 [style = bold, label=""];
5->15 [style = bold, label=""];
15->26 [style = solid, label="loadManagementPeons"];
37->24 [style = solid, label="configManager"];
42->31 [style = bold, label=""];
12->16 [style = bold, label=""];
38->41 [style = bold, label=""];
16->17 [style = bold, label=""];
17->26 [style = solid, label="druidCoordinatorConfig"];
8->13 [style = bold, label=""];
2->10 [style = bold, label=""];
9->26 [style = solid, label="scheduledExecutorFactory"];
17->7 [style = solid, label="druidCoordinatorConfig"];
13->29 [style = solid, label="metadataRuleManager"];
31->11 [style = bold, label=""];
36->39 [style = bold, label=""];
16->7 [style = solid, label="objectMapper"];
16->19 [style = solid, label="objectMapper"];
18->24 [style = solid, label="configManager"];
41->28 [style = bold, label=""];
17->19 [style = solid, label="druidCoordinatorConfig"];
9->33 [style = dashed, label="0"];
17->38 [style = bold, label=""];
14->26 [style = bold, label=""];
19->5 [style = bold, label=""];
13->37 [style = bold, label=""];
11->29 [style = solid, label="segmentsMetadataManager"];
18->22 [style = bold, label=""];
13->26 [style = solid, label="metadataRuleManager"];
28->33 [style = bold, label=""];
27->11 [style = bold, label=""];
22->20 [style = bold, label=""];
10->23 [style = bold, label=""];
15->9 [style = bold, label=""];
11->26 [style = solid, label="segmentsMetadataManager"];
37->29 [style = solid, label="configManager"];
6->11 [style = bold, label=""];
28->29 [style = solid, label="loadManagementPeons"];
22->30 [style = dashed, label="0"];
39->17 [style = solid, label="druidCoordinatorConfig"];
31->29 [style = solid, label="serverInventoryView"];
17->3 [style = bold, label=""];
18->37 [style = dashed, label="0"];
4->12 [style = bold, label=""];
21->7 [style = bold, label=""];
3->21 [style = bold, label=""];
25->8 [style = bold, label=""];
1->14 [style = bold, label=""];
39->29 [style = solid, label="druidCoordinatorConfig"];
18->26 [style = solid, label="configManager"];
21->17 [style = dashed, label="0"];
35->36 [style = bold, label=""];
9->1 [style = bold, label=""];
20->24 [style = bold, label=""];
32->42 [style = bold, label=""];
7->19 [style = bold, label=""];
33->34 [style = bold, label=""];
5->26 [style = solid, label="druidNode"];
36->17 [style = solid, label="objectMapper"];
13->18 [style = bold, label=""];
40->29 [style = bold, label=""];
}
