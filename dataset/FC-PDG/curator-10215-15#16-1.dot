digraph {
13 [style = filled, label = "assertNodeExists(observer,path)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Trigger createdWatchTrigger = Trigger.created()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "CuratorFramework curator = newCurator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(deletionTrigger.firedWithin(timing.multiple(1.5).forSessionSleep().seconds(),TimeUnit.SECONDS))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "node.debugCreateNodeLatch = new CountDownLatch(1)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "PersistentEphemeralNode node = new PersistentEphemeralNode(curator,PersistentEphemeralNode.Mode.EPHEMERAL,PATH,new byte(((()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "CuratorFramework observer = newCurator()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Stat stat = curator.checkExists().usingWatcher(createdWatchTrigger).forPath(originalNode)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "i++@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "node.start()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertTrue(stat != null || creationTrigger.firedWithin(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "node.debugCreateNodeLatch.countDown()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testRecreatesNodeWhenSessionReconnectsMultipleTimes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "String originalNode = node.getActualPath()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testRecreatesNodeWhenSessionReconnectsMultipleTimes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "String path = node.getActualPath()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i < 5@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "node.start()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertTrue(stat != null || createdWatchTrigger.firedWithin(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "KillSession.kill(curator.getZookeeperClient().getZooKeeper())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Trigger deletionTrigger = Trigger.deleted()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testRecreatesNodeWhenItGetsDeleted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Trigger creationTrigger = Trigger.created()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Stat stat = observer.checkExists().usingWatcher(creationTrigger).forPath(path)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "{CloseableUtils.closeQuietly(node)}@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "node.waitForInitialCreate(timing.forWaiting().seconds(),TimeUnit.SECONDS)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "observer.checkExists().usingWatcher(deletionTrigger).forPath(path)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int i = 0@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertNodeExists(curator,originalNode)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "{node.close()}@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "curator.delete().forPath(originalNode)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->6 [style = dotted, label="true"];
17->8 [style = bold, label=""];
30->29 [style = solid, label="originalNode"];
4->5 [style = dotted, label="true"];
18->3 [style = bold, label=""];
25->28 [style = bold, label=""];
10->15 [style = bold, label=""];
14->30 [style = bold, label=""];
11->4 [style = solid, label="i"];
4->1 [style = dotted, label="true"];
4->10 [style = dotted, label="true"];
19->20 [style = bold, label=""];
4->0 [style = dotted, label="true"];
11->4 [style = bold, label=""];
30->23 [style = bold, label=""];
9->13 [style = solid, label="path"];
4->20 [style = dotted, label="true"];
4->11 [style = dotted, label="true"];
0->11 [style = bold, label=""];
29->25 [style = bold, label=""];
15->6 [style = bold, label=""];
4->2 [style = bold, label=""];
6->19 [style = bold, label=""];
30->23 [style = solid, label="originalNode"];
4->15 [style = dotted, label="true"];
12->1 [style = bold, label=""];
13->23 [style = dashed, label="0"];
8->2 [style = solid, label="node"];
13->16 [style = bold, label=""];
9->5 [style = solid, label="path"];
4->19 [style = dotted, label="true"];
3->23 [style = solid, label="curator"];
8->7 [style = bold, label=""];
8->22 [style = bold, label=""];
20->5 [style = bold, label=""];
7->14 [style = bold, label=""];
23->29 [style = bold, label=""];
28->27 [style = solid, label="stat"];
16->11 [style = solid, label="i"];
17->13 [style = solid, label="observer"];
5->0 [style = bold, label=""];
3->8 [style = bold, label=""];
3->8 [style = solid, label="curator"];
9->1 [style = solid, label="path"];
30->28 [style = solid, label="originalNode"];
4->12 [style = bold, label=""];
3->17 [style = bold, label=""];
14->9 [style = bold, label=""];
28->27 [style = bold, label=""];
16->4 [style = solid, label="i"];
16->4 [style = bold, label=""];
22->14 [style = bold, label=""];
4->12 [style = dotted, label="true"];
1->10 [style = bold, label=""];
5->0 [style = solid, label="stat"];
24->3 [style = bold, label=""];
9->30 [style = dashed, label="0"];
21->3 [style = bold, label=""];
9->13 [style = bold, label=""];
27->26 [style = bold, label=""];
}
