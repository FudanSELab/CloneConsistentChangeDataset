digraph {
17 [style = filled, label = "List<ModelObject> itemList = newRuns(6,10)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(true,historyPageFilter.hasDownPage)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(true,historyPageFilter.hasDownPage)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "historyPageFilter.add(itemList)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertFalse(historyPageFilter.hasUpPage)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Assert.assertEquals(0,historyPageFilter.runs.size())@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "test_laterItemsNotEvaluated['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(10),historyPageFilter.newestOnPage)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(6),historyPageFilter.oldestOnPage)@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "test_newerThan_gt_newest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "HistoryPageFilter<ModelObject> historyPageFilter = newPage(5,11L,null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(false,historyPageFilter.hasUpPage)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "test_newerThan_gt_newest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "itemList.add(new ExplodingMockRun(queueId))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "historyPageFilter.add(itemList)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "HistoryPageFilter<ModelObject> historyPageFilter = newPage(5,null,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "int queueId = 5@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "queueId >= 1@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "queueId--@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertEquals(5,historyPageFilter.runs.size())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertTrue(historyPageFilter.hasDownPage)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "Assert.assertEquals(false,historyPageFilter.hasUpPage)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "List<ModelObject> itemList = newRuns(1,10)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20->11 [style = dotted, label="true"];
16->10 [style = bold, label=""];
17->16 [style = solid, label="itemList"];
9->4 [style = bold, label=""];
11->21 [style = bold, label=""];
18->19 [style = bold, label=""];
3->6 [style = bold, label=""];
1->0 [style = bold, label=""];
19->17 [style = bold, label=""];
20->21 [style = dotted, label="true"];
4->22 [style = dashed, label="0"];
21->20 [style = solid, label="queueId"];
15->11 [style = solid, label="queueId"];
2->4 [style = bold, label=""];
15->21 [style = solid, label="queueId"];
6->1 [style = bold, label=""];
5->2 [style = bold, label=""];
1->17 [style = dashed, label="0"];
21->20 [style = bold, label=""];
20->16 [style = bold, label=""];
2->9 [style = dashed, label="0"];
10->12 [style = bold, label=""];
15->20 [style = bold, label=""];
7->6 [style = bold, label=""];
6->19 [style = dashed, label="0"];
0->8 [style = bold, label=""];
17->15 [style = bold, label=""];
8->9 [style = bold, label=""];
5->8 [style = dashed, label="0"];
1->0 [style = solid, label="itemList"];
13->14 [style = bold, label=""];
15->20 [style = solid, label="queueId"];
12->22 [style = bold, label=""];
22->13 [style = bold, label=""];
21->11 [style = solid, label="queueId"];
0->5 [style = bold, label=""];
20->11 [style = bold, label=""];
}
