digraph {
24 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "testLeaseTooLong['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr).withExtraTimeSec(20)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "long commitTimeSec = response.getBuildTimeSeconds()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.CATCH_UP)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "Assert.assertTrue((fsmMap.containsKey(segmentNameStr)))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withOffset(s3Offset).withSegmentName(segmentNameStr)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "testStoppedConsumeDuringCompletion['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Request.Params params@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.COMMIT_CONTINUE)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.COMMIT)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "response = segmentCompletionMgr.segmentCommitStart(params)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "final int leaseTimeSec = 20@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "response = segmentCompletionMgr.segmentCommitEnd(params,true,false)@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "segmentCompletionMgr._secconds = 5@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "response = segmentCompletionMgr.segmentStoppedConsuming(params)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "segmentCompletionMgr._secconds += 5@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "response = segmentCompletionMgr.segmentCommitEnd(params,true,false,CommittingSegmentDescriptor.fromSegmentCompletionReqParams(params))@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "Assert.assertEquals(response.getStatus(),ControllerResponseStatus.PROCESSED)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "response = segmentCompletionMgr.extendBuildTime(params)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "Assert.assertEquals(response.getOffset(),s2Offset)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "segmentManager._stoppedSegmentName = null@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertTrue(commitTimeSec > 0)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "segmentCompletionMgr._secconds += leaseTimeSec@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr).withExtraTimeSec(leaseTimeSec)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "Assert.assertFalse((fsmMap.containsKey(segmentNameStr)))@@@45@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "segmentCompletionMgr._secconds = startTime + commitTimeSec - 1@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertFalse(fsmMap.containsKey(segmentNameStr))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "Assert.assertEquals(response.getStatus(),ControllerResponseStatus.FAILED)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "Assert.assertEquals(response.getStatus(),ControllerResponseStatus.PROCESSED)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "segmentManager._stoppedInstance = null@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final String reason = \"IAmLazy\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.KEEP)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withOffset(s3Offset).withSegmentName(segmentNameStr).withReason(reason)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assert.assertFalse(fsmMap.containsKey(segmentNameStr))@@@47@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.COMMIT_SUCCESS)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "response = segmentCompletionMgr.extendBuildTime(params)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.PROCESSED)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.CATCH_UP)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withOffset(s1Offset).withSegmentName(segmentNameStr)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(new LLCSegmentName(segmentNameStr),segmentManager._stoppedSegmentName)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "response = segmentCompletionMgr.extendBuildTime(params)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "segmentCompletionMgr._secconds + leaseTimeSec <= startTime + SegmentCompletionManager.getMaxCommitTimeForAllSegmentsSeconds()@@@35@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testStoppedConsumeDuringCompletion['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "segmentCompletionMgr._secconds = startTime@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withOffset(s1Offset).withSegmentName(segmentNameStr)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(s3,segmentManager._stoppedInstance)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "final long startTime = 5@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr).withExtraTimeSec(leaseTimeSec)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "Assert.assertTrue((fsmMap.containsKey(segmentNameStr)))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "SegmentCompletionProtocol.Response response@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->67 [style = bold, label=""];
18->3 [style = bold, label=""];
34->61 [style = bold, label=""];
53->69 [style = bold, label=""];
38->44 [style = bold, label=""];
26->10 [style = bold, label=""];
54->63 [style = bold, label=""];
55->49 [style = bold, label=""];
65->57 [style = bold, label=""];
27->28 [style = bold, label=""];
67->65 [style = solid, label="startTime"];
12->70 [style = dashed, label="0"];
68->66 [style = bold, label=""];
24->39 [style = bold, label=""];
19->23 [style = solid, label="params"];
13->18 [style = solid, label="params"];
65->48 [style = bold, label=""];
60->50 [style = bold, label=""];
65->51 [style = dotted, label="true"];
17->48 [style = dashed, label="0"];
42->5 [style = solid, label="params"];
65->58 [style = dotted, label="true"];
46->21 [style = bold, label=""];
40->11 [style = bold, label=""];
9->67 [style = dashed, label="0"];
0->8 [style = solid, label="params"];
61->62 [style = solid, label="params"];
33->25 [style = bold, label=""];
21->1 [style = bold, label=""];
0->8 [style = bold, label=""];
70->68 [style = bold, label=""];
37->32 [style = bold, label=""];
20->43 [style = bold, label=""];
56->70 [style = bold, label=""];
9->29 [style = bold, label=""];
17->22 [style = solid, label="params"];
19->23 [style = solid, label="commitTimeSec"];
63->51 [style = bold, label=""];
29->72 [style = dashed, label="0"];
51->65 [style = solid, label="_secconds"];
4->21 [style = bold, label=""];
57->60 [style = bold, label=""];
31->27 [style = solid, label="params"];
58->54 [style = bold, label=""];
5->34 [style = dashed, label="0"];
49->52 [style = solid, label="params"];
71->21 [style = bold, label=""];
31->27 [style = bold, label=""];
26->10 [style = solid, label="params"];
7->42 [style = bold, label=""];
39->62 [style = dashed, label="0"];
16->20 [style = bold, label=""];
14->6 [style = bold, label=""];
13->18 [style = bold, label=""];
72->37 [style = bold, label=""];
2->41 [style = bold, label=""];
8->33 [style = bold, label=""];
48->58 [style = bold, label=""];
22->58 [style = dashed, label="0"];
47->40 [style = bold, label=""];
44->26 [style = solid, label="params"];
3->45 [style = bold, label=""];
56->70 [style = solid, label="params"];
32->14 [style = bold, label=""];
29->37 [style = bold, label=""];
67->72 [style = solid, label="startTime"];
67->72 [style = bold, label=""];
25->17 [style = bold, label=""];
1->9 [style = bold, label=""];
59->53 [style = bold, label=""];
41->12 [style = solid, label="params"];
40->54 [style = dashed, label="0"];
66->55 [style = bold, label=""];
5->24 [style = bold, label=""];
51->65 [style = bold, label=""];
50->64 [style = bold, label=""];
57->60 [style = solid, label="params"];
41->12 [style = bold, label=""];
69->57 [style = solid, label="leaseTimeSec"];
67->34 [style = solid, label="startTime"];
61->62 [style = bold, label=""];
48->58 [style = solid, label="params"];
36->19 [style = bold, label=""];
22->40 [style = bold, label=""];
69->51 [style = solid, label="leaseTimeSec"];
69->65 [style = bold, label=""];
62->59 [style = bold, label=""];
30->38 [style = bold, label=""];
22->47 [style = dashed, label="0"];
17->47 [style = solid, label="params"];
17->47 [style = bold, label=""];
9->41 [style = solid, label="reason"];
12->15 [style = bold, label=""];
34->7 [style = bold, label=""];
52->38 [style = bold, label=""];
69->65 [style = solid, label="leaseTimeSec"];
17->22 [style = bold, label=""];
15->16 [style = bold, label=""];
69->48 [style = solid, label="leaseTimeSec"];
16->66 [style = dashed, label="0"];
35->51 [style = dashed, label="0"];
11->63 [style = dashed, label="0"];
11->35 [style = bold, label=""];
43->30 [style = bold, label=""];
25->65 [style = dashed, label="0"];
10->36 [style = bold, label=""];
28->2 [style = bold, label=""];
39->0 [style = bold, label=""];
6->31 [style = bold, label=""];
19->34 [style = solid, label="commitTimeSec"];
49->52 [style = bold, label=""];
44->26 [style = bold, label=""];
15->68 [style = dashed, label="0"];
19->23 [style = bold, label=""];
65->48 [style = dotted, label="true"];
23->34 [style = bold, label=""];
34->65 [style = solid, label="_secconds"];
42->5 [style = bold, label=""];
41->56 [style = dashed, label="0"];
2->56 [style = bold, label=""];
35->13 [style = bold, label=""];
37->32 [style = solid, label="params"];
65->63 [style = dotted, label="true"];
65->54 [style = dotted, label="true"];
}
