digraph {
25 [style = filled, label = "AtomicReference<SimulateDocumentResult> holder = new AtomicReference<>()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "TestProcessor processor = new TestProcessor(null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "SimulateDocumentBaseResult simulateDocumentBaseResult = (SimulateDocumentBaseResult)actualItemResponse@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Exception exception = simulateDocumentBaseResult.getFailure()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Pipeline pipeline = new Pipeline(\"_id\",\"_description\",version,new CompoundProcessor(processor1,processor2))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "latch.await()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(actualItemResponse,instanceOf())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Pipeline pipeline = new Pipeline(\"_id\",\"_description\",version,new CompoundProcessor(processor,processor))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(simulateDocumentBaseResult.getIngestDocument(),nullValue())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(processor.getInvokedCounter(),equalTo(1))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Pipeline pipeline = new Pipeline(\"_id\",\"_description\",version,null,new CompoundProcessor(processor1,processor2))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "CountDownLatch latch = new CountDownLatch(1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testExecuteItemWithFailure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "AtomicReference<SimulateDocumentResult> holder = new AtomicReference<>()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "CountDownLatch latch = new CountDownLatch(1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(exception,instanceOf())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testDropDocument['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "SimulateDocumentBaseResult simulateDocumentBaseResult = (SimulateDocumentBaseResult)actualItemResponse@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(exception.getMessage(),equalTo(\"java.lang.RuntimeException: processor failed\"))@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "latch.await()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "SimulateDocumentResult actualItemResponse = holder.get()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "executionService.executeDocument(pipeline,ingestDocument,false,null)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "TestProcessor processor1 = new TestProcessor(null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Processor processor2 = new DropProcessor.Factory().create(Map.of(),null,null,Map.of())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(simulateDocumentBaseResult.getFailure(),instanceOf())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "SimulateDocumentResult actualItemResponse = holder.get()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testDropDocument['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9->22 [style = bold, label=""];
4->13 [style = solid, label="actualItemResponse"];
3->7 [style = solid, label="pipeline"];
26->7 [style = bold, label=""];
0->13 [style = bold, label=""];
17->1 [style = bold, label=""];
22->19 [style = bold, label=""];
7->10 [style = bold, label=""];
4->6 [style = bold, label=""];
20->26 [style = bold, label=""];
0->17 [style = bold, label=""];
5->3 [style = solid, label="processor1"];
0->9 [style = solid, label="actualItemResponse"];
5->14 [style = solid, label="processor1"];
23->18 [style = solid, label="exception"];
6->17 [style = dashed, label="0"];
6->0 [style = bold, label=""];
12->3 [style = solid, label="processor2"];
13->1 [style = bold, label=""];
15->5 [style = bold, label=""];
1->9 [style = bold, label=""];
26->24 [style = solid, label="pipeline"];
5->20 [style = dashed, label="0"];
9->19 [style = dashed, label="0"];
25->24 [style = bold, label=""];
11->5 [style = bold, label=""];
0->1 [style = solid, label="actualItemResponse"];
4->0 [style = solid, label="actualItemResponse"];
8->2 [style = bold, label=""];
5->12 [style = bold, label=""];
3->8 [style = bold, label=""];
19->23 [style = bold, label=""];
12->14 [style = bold, label=""];
10->4 [style = bold, label=""];
20->26 [style = solid, label="processor"];
14->8 [style = bold, label=""];
12->3 [style = bold, label=""];
7->25 [style = bold, label=""];
14->7 [style = solid, label="pipeline"];
2->7 [style = bold, label=""];
18->21 [style = bold, label=""];
3->14 [style = dashed, label="0"];
24->6 [style = bold, label=""];
16->20 [style = bold, label=""];
12->14 [style = solid, label="processor2"];
23->18 [style = bold, label=""];
}
