digraph {
5 [style = filled, label = "s2b.add(new Task(\"T2\",new Date(11),new Date(22)))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "c2.add(s1b)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(c2.equals(c1))@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "s1b.add(new Task(\"T2\",new Date(11),new Date(22)))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "TaskSeries s2b = new TaskSeries(\"S\")@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "c1.add(s1)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "s2b.add(new Task(\"T1\",new Date(1),new Date(2)))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "TaskSeries<String> s2 = CloneUtils.clone(s1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testEquals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "TaskSeries<String> s1 = new TaskSeries<>(\"S\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "TaskSeries s1 = new TaskSeries(\"S\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "s1.add(new Task(\"T2\",new Date(11),new Date(22)))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "s2.add(new Task(\"T2\",new Date(11),new Date(22)))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "TaskSeriesCollection c1 = new TaskSeriesCollection()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "s1.add(new Task(\"T3\",new Date(22),new Date(33)))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "s2.add(new Task(\"T3\",new Date(22),new Date(33)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertTrue(s1.getClass() == s2.getClass())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "s1.add(new Task(\"T1\",new Date(1),new Date(2)))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "TaskSeries s1b = new TaskSeries(\"S\")@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "c2.add(s2b)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "s2.add(new Task(\"T1\",new Date(1),new Date(2)))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertTrue(s1 != s2)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertTrue(s1.equals(s2))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertTrue(s1.equals(s2))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "TaskSeries<String> s1 = new TaskSeries<>(\"S\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "TaskSeries s2 = new TaskSeries(\"S\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "testEquals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "TaskSeriesCollection c2 = new TaskSeriesCollection()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "TaskSeries<String> s1b = new TaskSeries<>(\"S\")@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "TaskSeries<String> s2b = new TaskSeries<>(\"S\")@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "s1b.add(new Task(\"T1\",new Date(1),new Date(2)))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "TaskSeries<String> s2 = new TaskSeries<>(\"S\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "c1.add(s2)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertFalse(s1.equals(s2))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(c1.equals(c2))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->10 [style = bold, label=""];
35->29 [style = solid, label="s2"];
35->28 [style = solid, label="s2"];
15->23 [style = bold, label=""];
16->13 [style = bold, label=""];
27->32 [style = bold, label=""];
20->11 [style = solid, label="s2"];
35->32 [style = solid, label="s2"];
35->29 [style = bold, label=""];
28->30 [style = bold, label=""];
22->19 [style = bold, label=""];
18->30 [style = dashed, label="0"];
12->7 [style = solid, label="c2"];
0->2 [style = bold, label=""];
31->35 [style = solid, label="s1"];
23->4 [style = bold, label=""];
10->3 [style = bold, label=""];
14->17 [style = bold, label=""];
3->6 [style = bold, label=""];
6->2 [style = solid, label="s2b"];
30->34 [style = bold, label=""];
24->0 [style = solid, label="s1b"];
6->19 [style = bold, label=""];
31->29 [style = solid, label="s1"];
7->8 [style = bold, label=""];
11->24 [style = bold, label=""];
12->0 [style = bold, label=""];
13->11 [style = bold, label=""];
3->22 [style = bold, label=""];
32->26 [style = bold, label=""];
18->0 [style = solid, label="s1b"];
11->18 [style = bold, label=""];
15->35 [style = bold, label=""];
16->8 [style = solid, label="c1"];
20->4 [style = bold, label=""];
6->22 [style = dashed, label="0"];
13->26 [style = dashed, label="0"];
19->5 [style = bold, label=""];
11->28 [style = dashed, label="0"];
29->27 [style = bold, label=""];
20->35 [style = dashed, label="0"];
18->10 [style = bold, label=""];
23->11 [style = solid, label="s2"];
5->12 [style = bold, label=""];
1->16 [style = bold, label=""];
15->20 [style = bold, label=""];
22->2 [style = solid, label="s2b"];
17->15 [style = bold, label=""];
9->14 [style = bold, label=""];
21->13 [style = solid, label="s1"];
20->23 [style = dashed, label="0"];
33->31 [style = bold, label=""];
14->21 [style = dashed, label="0"];
4->1 [style = bold, label=""];
35->34 [style = solid, label="s2"];
26->28 [style = bold, label=""];
2->7 [style = bold, label=""];
31->17 [style = bold, label=""];
21->17 [style = bold, label=""];
14->13 [style = solid, label="s1"];
25->21 [style = bold, label=""];
18->24 [style = dashed, label="0"];
14->31 [style = dashed, label="0"];
}
