digraph {
13 [style = filled, label = "CodedInputStream in = CodedInputStream.newInstance(message.toByteArray())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(WireFormat.WIRETYPE_LENGTH_DELIMITED,WireFormat.getTagWireType(tag))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "testPackedSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "in.skipField(tag)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(WireFormat.WIRETYPE_LENGTH_DELIMITED,WireFormat.getTagWireType(tag))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TestAllTypes message = builder.build()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "!in.isAtEnd()@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testPackedSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "TestAllTypes message = TestAllTypes.newBuilder().addRepeatedInt32(1234).addRepeatedNestedEnum(NestedEnum.BAR).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "TestAllTypes.Builder builder = TestAllTypes.newBuilder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int tag = in.readTag()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testPackedSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "builder.addRepeatedNestedEnum(TestAllTypes.NestedEnum.BAZ)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "builder.addRepeatedInt32(4321)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(WireFormat.getTagWireType(tag)).isEqualTo(WireFormat.WIRETYPE_LENGTH_DELIMITED)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "in.skipField(tag)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "int tag = in.readTag()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->6 [style = dotted, label="true"];
0->3 [style = bold, label=""];
14->3 [style = bold, label=""];
4->5 [style = dotted, label="true"];
15->13 [style = bold, label=""];
5->1 [style = solid, label="tag"];
9->0 [style = bold, label=""];
4->1 [style = dotted, label="true"];
11->6 [style = bold, label=""];
12->15 [style = bold, label=""];
4->11 [style = dotted, label="true"];
14->4 [style = solid, label="tag"];
7->8 [style = bold, label=""];
16->4 [style = dotted, label="true"];
3->4 [style = bold, label=""];
10->7 [style = bold, label=""];
13->16 [style = bold, label=""];
16->3 [style = dotted, label="true"];
5->1 [style = bold, label=""];
6->4 [style = bold, label=""];
1->6 [style = bold, label=""];
1->11 [style = dashed, label="0"];
5->6 [style = solid, label="tag"];
16->14 [style = dotted, label="true"];
8->9 [style = bold, label=""];
7->15 [style = dashed, label="0"];
16->14 [style = bold, label=""];
5->11 [style = bold, label=""];
2->7 [style = bold, label=""];
14->3 [style = solid, label="tag"];
4->5 [style = bold, label=""];
4->16 [style = bold, label=""];
}
