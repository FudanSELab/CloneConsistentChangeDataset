digraph {
81 [style = filled, label = "psb.set(BEAN_notBeanPackages,stringList(a.notBeanPackages_replace()))@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
113 [style = filled, label = "psb.setIfNotEmpty(BEAN_typePropertyName,string(a.typePropertyName()))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "!a.timeZone().isEmpty()@@@35@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "psb.set(BEAN_beansRequireSettersForGetters,bool(a.beansRequireSettersForGetters()))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
58 [style = filled, label = "a.dictionary_replace().length != 0@@@7@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
62 [style = filled, label = "!a.detectRecursions().isEmpty()@@@39@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
105 [style = filled, label = "psb.setIfNotEmpty(BEAN_beansRequireDefaultConstructor,bool(a.beansRequireDefaultConstructor()))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "psb.set(BEAN_findFluentSetters,bool(a.findFluentSetters()))@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
134 [style = filled, label = "psb.set(XML_enableNamespaces,bool(a.enableNamespaces()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "psb.set(BEANTRAVERSE_ignoreRecursions,bool(a.ignoreRecursions()))@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
125 [style = filled, label = "a.resolver() != @@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
112 [style = filled, label = "psb.setIfNotEmpty(BEAN_sortProperties,bool(a.sortProperties()))@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "psb.set(BEAN_beanConstructorVisibility,visibility(a.beanConstructorVisibility(),\"beanConstructorVisibility\"))@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
149 [style = filled, label = "!a.enableNamespaces().isEmpty()@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "psb.set(CONTEXT_timeZone,timeZone(a.timeZone()))@@@35@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "psb.setIfNotEmpty(BEAN_ignoreInvocationExceptionsOnGetters,bool(a.ignoreInvocationExceptionsOnGetters()))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
87 [style = filled, label = "psb.setIfNotEmpty(BEAN_disableInterfaceProxies,bool(a.disableInterfaceProxies()))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
111 [style = filled, label = "psb.setIfNotEmpty(BEAN_findFluentSetters,bool(a.findFluentSetters()))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "!a.useJavaBeanIntrospector().isEmpty()@@@38@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "!a.disableBeansRequireSomeProperties().isEmpty()@@@14@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
78 [style = filled, label = "PropertyStoreBuilder psb@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "psb.setIfNotEmpty(BEANTRAVERSE_ignoreRecursions,bool(a.ignoreRecursions()))@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
129 [style = filled, label = "!a.validating().isEmpty()@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
141 [style = filled, label = "psb.set(XML_reporter,a.reporter())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "psb.set(BEAN_propertyNamer,a.propertyNamer())@@@31@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "AnnotationInfo<BeanConfig> ai@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
76 [style = filled, label = "!a.disableIgnoreUnknownNullBeanProperties().isEmpty()@@@23@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
61 [style = filled, label = "!a.mediaType().isEmpty()@@@26@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "!a.ignoreRecursions().isEmpty()@@@40@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "!a.findFluentSetters().isEmpty()@@@17@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "!a.disableInterfaceProxies().isEmpty()@@@37@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
130 [style = filled, label = "VarResolverSession vr@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "psb.set(BEANTRAVERSE_maxDepth,integer(a.maxDepth(),\"maxDepth\"))@@@42@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
148 [style = filled, label = "!a.preserveRootElement().isEmpty()@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "a.notBeanPackages_replace().length != 0@@@30@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
115 [style = filled, label = "psb.setIfNotEmpty(BEAN_beanFieldVisibility,visibility(a.beanFieldVisibility(),\"beanFieldVisibility\"))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
132 [style = filled, label = "a.reporter() != @@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
127 [style = filled, label = "psb.set(XML_validating,bool(a.validating()))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "psb.set(BEAN_disableBeansRequireSomeProperties,bool(a.disableBeansRequireSomeProperties()))@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "psb.setIfNotEmpty(CONTEXT_timeZone,timeZone(a.timeZone()))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
136 [style = filled, label = "a.eventAllocator() != @@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
147 [style = filled, label = "a.namespaces().length > 0@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
97 [style = filled, label = "psb.setIfNotEmpty(BEAN_beanConstructorVisibility,visibility(a.beanConstructorVisibility(),\"beanConstructorVisibility\"))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
116 [style = filled, label = "psb.setIfNotEmpty(BEAN_useEnumNames,bool(a.useEnumNames()))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
140 [style = filled, label = "XmlConfig a = ai.getAnnotation()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "psb.set(BEAN_disableIgnoreUnknownNullBeanProperties,bool(a.disableIgnoreUnknownNullBeanProperties()))@@@23@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "!a.locale().isEmpty()@@@25@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "!a.ignoreInvocationExceptionsOnGetters().isEmpty()@@@18@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
107 [style = filled, label = "psb.setIfNotEmpty(BEAN_swaps,a.swaps_replace())@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "a.swaps().length != 0@@@33@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "psb.set(BEAN_useEnumNames,bool(a.useEnumNames()))@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "psb.set(BEAN_ignoreInvocationExceptionsOnGetters,bool(a.ignoreInvocationExceptionsOnGetters()))@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "!a.typePropertyName().isEmpty()@@@15@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "a.notBeanClasses().length != 0@@@27@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
146 [style = filled, label = "psb.set(XML_addNamespaceUrisToRoot,bool(a.addNamespaceUrisToRoot()))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "a.notBeanClasses_replace().length != 0@@@28@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "asList(a.interfaces()).stream().map(null).forEach(null)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
96 [style = filled, label = "psb.setIfNotEmpty(BEAN_beanClassVisibility,visibility(a.beanClassVisibility(),\"beanClassVisibility\"))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
102 [style = filled, label = "psb.setIfNotEmpty(BEAN_disableIgnoreUnknownNullBeanProperties,bool(a.disableIgnoreUnknownNullBeanProperties()))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
108 [style = filled, label = "psb.setIfNotEmpty(BEAN_disableIgnoreMissingSetters,bool(a.disableIgnoreMissingSetters()))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
110 [style = filled, label = "psb.setIfNotEmpty(BEAN_beanMethodVisibility,visibility(a.beanMethodVisibility(),\"beanMethodVisibility\"))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
109 [style = filled, label = "psb.setIfNotEmpty(BEANTRAVERSE_detectRecursions,bool(a.detectRecursions()))@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
133 [style = filled, label = "!a.defaultNamespace().isEmpty()@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "psb.set(BEAN_beanDictionary,a.dictionary_replace())@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "AnnotationInfo<BeanConfig> ai@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "psb.set(BEAN_beanClassVisibility,visibility(a.beanClassVisibility(),\"beanClassVisibility\"))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
99 [style = filled, label = "apply['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
100 [style = filled, label = "psb.setIfNotEmpty(BEAN_disableBeansRequireSomeProperties,bool(a.disableBeansRequireSomeProperties()))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "psb.set(BEAN_typePropertyName,string(a.typePropertyName()))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "!a.beansRequireDefaultConstructor().isEmpty()@@@11@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "psb.set(BEAN_beanMethodVisibility,visibility(a.beanMethodVisibility(),\"beanMethodVisibility\"))@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "psb.setIfNotEmpty(BEAN_notBeanClasses,a.notBeanClasses())@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
66 [style = filled, label = "!a.beanFieldVisibility().isEmpty()@@@8@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "psb.set(CONTEXT_locale,locale(a.locale()))@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "VarResolverSession vr@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
138 [style = filled, label = "!a.disableAutoDetectNamespaces().isEmpty()@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "psb.set(CONTEXT_mediaType,mediaType(a.mediaType()))@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "!a.beanConstructorVisibility().isEmpty()@@@5@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
142 [style = filled, label = "psb.set(XML_addBeanTypes,bool(a.addBeanTypes()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
98 [style = filled, label = "psb.setIfNotEmpty(BEAN_beanMapPutReturnsOldValue,bool(a.beanMapPutReturnsOldValue()))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
67 [style = filled, label = "psb.prependTo(BEAN_beanDictionary,a.dictionary())@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "psb.setIfNotEmpty(BEAN_ignoreInvocationExceptionsOnSetters,bool(a.ignoreInvocationExceptionsOnSetters()))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "psb.set(BEAN_beansRequireSerializable,bool(a.beansRequireSerializable()))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "psb.set(BEAN_beansRequireDefaultConstructor,bool(a.beansRequireDefaultConstructor()))@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "!a.maxDepth().isEmpty()@@@42@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "psb.set(BEAN_notBeanClasses,a.notBeanClasses_replace())@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
128 [style = filled, label = "psb.set(XML_preserveRootElement,bool(a.preserveRootElement()))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "!a.beansRequireSettersForGetters().isEmpty()@@@13@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "a.dictionary().length != 0@@@6@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
80 [style = filled, label = "!a.disableIgnoreTransientFields().isEmpty()@@@21@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "!a.initialDepth().isEmpty()@@@41@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
74 [style = filled, label = "apply['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "!a.sortProperties().isEmpty()@@@32@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "psb.set(BEANTRAVERSE_detectRecursions,bool(a.detectRecursions()))@@@39@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "VarResolverSession vr@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
46 [style = filled, label = "psb.set(BEAN_ignoreUnknownBeanProperties,bool(a.ignoreUnknownBeanProperties()))@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "psb.set(BEAN_disableIgnoreTransientFields,bool(a.disableIgnoreTransientFields()))@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "!a.debug().isEmpty()@@@16@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "!a.beanMethodVisibility().isEmpty()@@@10@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
122 [style = filled, label = "psb.prependTo(BEAN_beanDictionary,a.dictionary())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "psb.set(BEAN_sortProperties,bool(a.sortProperties()))@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
68 [style = filled, label = "psb.prependTo(BEAN_annotations,BeanAnnotation.create(c).interfaceClass(c).build())@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "!a.beanClassVisibility().isEmpty()@@@4@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "psb.setIfNotEmpty(BEAN_notBeanPackages,stringList(a.notBeanPackages_replace()))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "psb.set(CONTEXT_debug,bool(a.debug()))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
57 [style = filled, label = "BeanConfig a = ai.getAnnotation()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "psb.set(BEAN_beanMapPutReturnsOldValue,bool(a.beanMapPutReturnsOldValue()))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
121 [style = filled, label = "psb.prependTo(BEAN_swaps,a.swaps())@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "psb.addTo(BEAN_notBeanPackages,stringList(a.notBeanPackages()))@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
139 [style = filled, label = "apply['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "psb.set(BEAN_ignoreInvocationExceptionsOnSetters,bool(a.ignoreInvocationExceptionsOnSetters()))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "psb.set(BEANTRAVERSE_initialDepth,integer(a.initialDepth(),\"initialDepth\"))@@@41@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "psb.set(BEAN_disableIgnoreMissingSetters,bool(a.disableIgnoreMissingSetters()))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
135 [style = filled, label = "psb.set(XML_namespaces,Namespace.createArray(stringList(a.namespaces())))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "!a.ignoreUnknownBeanProperties().isEmpty()@@@22@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "!a.ignoreInvocationExceptionsOnSetters().isEmpty()@@@19@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "psb.setIfNotEmpty(BEAN_disableIgnoreTransientFields,bool(a.disableIgnoreTransientFields()))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "!a.beanMapPutReturnsOldValue().isEmpty()@@@9@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "a.notBeanPackages().length != 0@@@29@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "psb.set(BEAN_beanFieldVisibility,visibility(a.beanFieldVisibility(),\"beanFieldVisibility\"))@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "psb.setIfNotEmpty(BEAN_useJavaBeanIntrospector,bool(a.useJavaBeanIntrospector()))@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
126 [style = filled, label = "!a.addBeanTypes().isEmpty()@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
145 [style = filled, label = "!a.addNamespaceUrisToRoot().isEmpty()@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "psb.prependTo(BEAN_swaps,a.swaps())@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
86 [style = filled, label = "psb.addTo(BEAN_notBeanPackages,stringList(a.notBeanPackages()))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
124 [style = filled, label = "PropertyStoreBuilder psb@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "!a.useEnumNames().isEmpty()@@@36@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "psb.set(BEAN_disableInterfaceProxies,bool(a.disableInterfaceProxies()))@@@37@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "a.swaps_replace().length != 0@@@34@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
137 [style = filled, label = "psb.set(XML_eventAllocator,a.eventAllocator())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
92 [style = filled, label = "psb.setIfNotEmpty(CONTEXT_locale,locale(a.locale()))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
143 [style = filled, label = "psb.set(XML_disableAutoDetectNamespaces,bool(a.disableAutoDetectNamespaces()))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "psb.setIfNotEmpty(BEANTRAVERSE_maxDepth,integer(a.maxDepth(),\"maxDepth\"))@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
119 [style = filled, label = "psb.setIfNotEmpty(BEAN_ignoreUnknownBeanProperties,bool(a.ignoreUnknownBeanProperties()))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
90 [style = filled, label = "psb.setIfNotEmpty(BEAN_notBeanClasses,a.notBeanClasses_replace())@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
89 [style = filled, label = "psb.setIfNotEmpty(BEANTRAVERSE_initialDepth,integer(a.initialDepth(),\"initialDepth\"))@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
131 [style = filled, label = "psb.set(XML_defaultNamespace,string(a.defaultNamespace()))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
88 [style = filled, label = "psb.setIfNotEmpty(CONTEXT_debug,bool(a.debug()))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "psb.set(BEAN_useJavaBeanIntrospector,bool(a.useJavaBeanIntrospector()))@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
83 [style = filled, label = "psb.setIfNotEmpty(BEAN_beansRequireSettersForGetters,bool(a.beansRequireSettersForGetters()))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
103 [style = filled, label = "psb.setIfNotEmpty(CONTEXT_mediaType,mediaType(a.mediaType()))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "a.propertyNamer() != @@@31@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
144 [style = filled, label = "AnnotationInfo<XmlConfig> ai@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "psb.addTo(BEAN_notBeanClasses,a.notBeanClasses())@@@27@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
123 [style = filled, label = "psb.setIfNotEmpty(BEAN_beanDictionary,a.dictionary_replace())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "psb.set(BEAN_swaps,a.swaps_replace())@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "!a.beansRequireSerializable().isEmpty()@@@12@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "psb.setIf(a.propertyNamer() != ,BEAN_propertyNamer,a.propertyNamer())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
150 [style = filled, label = "psb.set(XML_resolver,a.resolver())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "!a.disableIgnoreMissingSetters().isEmpty()@@@20@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "psb.setIfNotEmpty(BEAN_beansRequireSerializable,bool(a.beansRequireSerializable()))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
118->108 [style = bold, label=""];
13->24 [style = dotted, label="true"];
57->96 [style = bold, label=""];
94->116 [style = bold, label=""];
139->124 [style = dotted, label="true"];
100->113 [style = bold, label=""];
24->79 [style = bold, label=""];
76->49 [style = dotted, label="true"];
29->30 [style = bold, label=""];
99->82 [style = dotted, label="true"];
76->68 [style = bold, label=""];
91->112 [style = bold, label=""];
1->53 [style = dotted, label="true"];
125->150 [style = dotted, label="true"];
90->86 [style = bold, label=""];
50->80 [style = bold, label=""];
105->120 [style = bold, label=""];
14->17 [style = bold, label=""];
59->46 [style = dotted, label="true"];
96->97 [style = bold, label=""];
47->37 [style = bold, label=""];
3->65 [style = bold, label=""];
132->141 [style = bold, label=""];
57->140 [style = dashed, label="0"];
147->135 [style = bold, label=""];
72->15 [style = bold, label=""];
59->119 [style = dashed, label="0"];
58->9 [style = bold, label=""];
29->20 [style = dotted, label="true"];
62->27 [style = bold, label=""];
111->106 [style = bold, label=""];
45->7 [style = bold, label=""];
104->90 [style = bold, label=""];
77->67 [style = dotted, label="true"];
5->34 [style = bold, label=""];
99->95 [style = dotted, label="true"];
147->135 [style = dotted, label="true"];
47->105 [style = dashed, label="0"];
14->44 [style = dotted, label="true"];
68->101 [style = dashed, label="0"];
60->116 [style = dashed, label="0"];
55->48 [style = bold, label=""];
103->104 [style = bold, label=""];
125->129 [style = bold, label=""];
34->43 [style = dotted, label="true"];
5->11 [style = dotted, label="true"];
36->0 [style = bold, label=""];
21->72 [style = bold, label=""];
62->27 [style = dotted, label="true"];
71->111 [style = dashed, label="0"];
43->88 [style = dashed, label="0"];
46->76 [style = bold, label=""];
65->52 [style = dotted, label="true"];
38->62 [style = bold, label=""];
58->9 [style = dotted, label="true"];
2->63 [style = bold, label=""];
71->35 [style = dotted, label="true"];
84->91 [style = bold, label=""];
17->72 [style = bold, label=""];
141->125 [style = bold, label=""];
149->134 [style = bold, label=""];
67->58 [style = bold, label=""];
128->132 [style = bold, label=""];
11->113 [style = dashed, label="0"];
79->47 [style = bold, label=""];
17->21 [style = bold, label=""];
30->60 [style = bold, label=""];
69->96 [style = dashed, label="0"];
50->108 [style = dashed, label="0"];
7->73 [style = bold, label=""];
125->150 [style = bold, label=""];
77->122 [style = dashed, label="0"];
53->112 [style = dashed, label="0"];
7->89 [style = dashed, label="0"];
138->143 [style = dotted, label="true"];
36->0 [style = dotted, label="true"];
143->133 [style = bold, label=""];
4->73 [style = bold, label=""];
98->110 [style = bold, label=""];
66->13 [style = bold, label=""];
48->41 [style = bold, label=""];
63->107 [style = dashed, label="0"];
16->70 [style = dotted, label="true"];
66->6 [style = dotted, label="true"];
110->105 [style = bold, label=""];
147->136 [style = bold, label=""];
31->5 [style = bold, label=""];
30->42 [style = bold, label=""];
89->85 [style = bold, label=""];
81->84 [style = dashed, label="0"];
131->149 [style = bold, label=""];
65->97 [style = dashed, label="0"];
76->102 [style = dashed, label="0"];
145->146 [style = bold, label=""];
71->35 [style = bold, label=""];
129->127 [style = bold, label=""];
145->138 [style = bold, label=""];
138->143 [style = bold, label=""];
115->98 [style = bold, label=""];
109->114 [style = bold, label=""];
12->1 [style = bold, label=""];
97->122 [style = bold, label=""];
44->17 [style = bold, label=""];
10->7 [style = bold, label=""];
39->26 [style = bold, label=""];
116->87 [style = bold, label=""];
23->50 [style = dotted, label="true"];
126->145 [style = bold, label=""];
74->32 [style = dotted, label="true"];
36->106 [style = dashed, label="0"];
61->48 [style = bold, label=""];
34->71 [style = bold, label=""];
142->145 [style = bold, label=""];
61->55 [style = bold, label=""];
29->20 [style = bold, label=""];
120->83 [style = bold, label=""];
76->49 [style = bold, label=""];
47->25 [style = bold, label=""];
71->36 [style = bold, label=""];
121->107 [style = bold, label=""];
25->37 [style = bold, label=""];
28->61 [style = bold, label=""];
145->146 [style = dotted, label="true"];
81->15 [style = bold, label=""];
10->45 [style = bold, label=""];
74->22 [style = dotted, label="true"];
92->103 [style = bold, label=""];
135->136 [style = bold, label=""];
108->93 [style = bold, label=""];
136->137 [style = dotted, label="true"];
79->54 [style = bold, label=""];
18->51 [style = bold, label=""];
36->16 [style = bold, label=""];
15->12 [style = dotted, label="true"];
44->90 [style = dashed, label="0"];
73->64 [style = bold, label=""];
5->11 [style = bold, label=""];
15->12 [style = bold, label=""];
99->57 [style = bold, label=""];
140->126 [style = bold, label=""];
63->29 [style = bold, label=""];
40->120 [style = dashed, label="0"];
79->54 [style = dotted, label="true"];
17->21 [style = dotted, label="true"];
45->114 [style = dashed, label="0"];
48->41 [style = dotted, label="true"];
30->60 [style = dotted, label="true"];
139->130 [style = dotted, label="true"];
59->46 [style = bold, label=""];
75->121 [style = dashed, label="0"];
101->92 [style = bold, label=""];
33->31 [style = dotted, label="true"];
42->39 [style = dotted, label="true"];
122->123 [style = bold, label=""];
0->16 [style = bold, label=""];
139->144 [style = dotted, label="true"];
1->8 [style = bold, label=""];
13->24 [style = bold, label=""];
49->68 [style = bold, label=""];
119->102 [style = bold, label=""];
3->69 [style = dotted, label="true"];
9->66 [style = bold, label=""];
134->147 [style = bold, label=""];
56->28 [style = dotted, label="true"];
93->119 [style = bold, label=""];
2->63 [style = dotted, label="true"];
129->127 [style = dotted, label="true"];
48->104 [style = dashed, label="0"];
74->78 [style = dotted, label="true"];
136->148 [style = bold, label=""];
48->14 [style = bold, label=""];
72->81 [style = dotted, label="true"];
18->33 [style = bold, label=""];
23->80 [style = bold, label=""];
42->39 [style = bold, label=""];
66->115 [style = dashed, label="0"];
139->140 [style = bold, label=""];
80->59 [style = bold, label=""];
26->62 [style = bold, label=""];
87->117 [style = bold, label=""];
56->92 [style = dashed, label="0"];
65->77 [style = bold, label=""];
10->45 [style = dotted, label="true"];
132->125 [style = bold, label=""];
88->111 [style = bold, label=""];
16->23 [style = bold, label=""];
7->4 [style = bold, label=""];
33->5 [style = bold, label=""];
132->141 [style = dotted, label="true"];
33->100 [style = dashed, label="0"];
19->59 [style = bold, label=""];
150->129 [style = bold, label=""];
52->77 [style = bold, label=""];
133->131 [style = dotted, label="true"];
42->87 [style = dashed, label="0"];
58->66 [style = bold, label=""];
148->128 [style = dotted, label="true"];
83->100 [style = bold, label=""];
86->84 [style = bold, label=""];
149->134 [style = dotted, label="true"];
148->132 [style = bold, label=""];
102->101 [style = bold, label=""];
26->38 [style = dotted, label="true"];
72->81 [style = bold, label=""];
65->52 [style = bold, label=""];
8->2 [style = bold, label=""];
80->93 [style = dashed, label="0"];
61->55 [style = dotted, label="true"];
126->142 [style = bold, label=""];
8->75 [style = dotted, label="true"];
75->2 [style = bold, label=""];
6->13 [style = bold, label=""];
27->10 [style = bold, label=""];
80->19 [style = bold, label=""];
133->131 [style = bold, label=""];
3->69 [style = bold, label=""];
53->8 [style = bold, label=""];
70->118 [style = dashed, label="0"];
78->144 [style = dashed, label="0"];
77->67 [style = bold, label=""];
59->76 [style = bold, label=""];
107->94 [style = bold, label=""];
58->123 [style = dashed, label="0"];
133->149 [style = bold, label=""];
34->43 [style = bold, label=""];
60->42 [style = bold, label=""];
114->89 [style = bold, label=""];
41->14 [style = bold, label=""];
23->50 [style = bold, label=""];
29->94 [style = dashed, label="0"];
15->1 [style = bold, label=""];
69->65 [style = bold, label=""];
43->71 [style = bold, label=""];
149->147 [style = bold, label=""];
51->83 [style = dashed, label="0"];
42->26 [style = bold, label=""];
117->109 [style = bold, label=""];
126->142 [style = dotted, label="true"];
21->86 [style = dashed, label="0"];
24->98 [style = dashed, label="0"];
74->57 [style = bold, label=""];
38->117 [style = dashed, label="0"];
73->64 [style = dotted, label="true"];
66->6 [style = bold, label=""];
61->103 [style = dashed, label="0"];
73->85 [style = dashed, label="0"];
40->18 [style = bold, label=""];
62->10 [style = bold, label=""];
56->61 [style = bold, label=""];
62->109 [style = dashed, label="0"];
15->91 [style = dashed, label="0"];
8->75 [style = bold, label=""];
148->128 [style = bold, label=""];
14->44 [style = bold, label=""];
68->56 [style = bold, label=""];
146->138 [style = bold, label=""];
16->70 [style = bold, label=""];
26->38 [style = bold, label=""];
136->137 [style = bold, label=""];
106->118 [style = bold, label=""];
137->148 [style = bold, label=""];
54->47 [style = bold, label=""];
11->34 [style = bold, label=""];
138->133 [style = bold, label=""];
70->23 [style = bold, label=""];
79->110 [style = dashed, label="0"];
47->25 [style = dotted, label="true"];
77->58 [style = bold, label=""];
56->28 [style = bold, label=""];
7->4 [style = dotted, label="true"];
13->79 [style = bold, label=""];
37->18 [style = bold, label=""];
112->121 [style = bold, label=""];
33->31 [style = bold, label=""];
80->19 [style = dotted, label="true"];
57->3 [style = bold, label=""];
35->36 [style = bold, label=""];
37->40 [style = dotted, label="true"];
123->115 [style = bold, label=""];
20->30 [style = bold, label=""];
2->29 [style = bold, label=""];
18->51 [style = dotted, label="true"];
1->53 [style = bold, label=""];
37->40 [style = bold, label=""];
113->88 [style = bold, label=""];
99->78 [style = dotted, label="true"];
51->33 [style = bold, label=""];
}
