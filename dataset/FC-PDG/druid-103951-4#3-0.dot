digraph {
12 [style = filled, label = "emitter.emit(new ServiceMetricEvent.Builder().setDimension(\"dataSource\",\"data-source\").build(DateTimes.nowUtc(),\"query/cache/total/hitRate\",0.54).build(\"broker\",\"brokerHost1\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "client.time(\"druid.query.time\",10,\"service:druid/broker\",\"dataSource:data-source\",\"type:groupBy\",\"hostname:brokerHost1\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "StatsDClient client = EasyMock.createMock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "EasyMock.replay(client)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testConvertRange['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testServiceAsTagOption['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testServiceAsTagOption['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "emitter.emit(new ServiceMetricEvent.Builder().setDimension(\"dataSource\",\"data-source\").setDimension(\"type\",\"groupBy\").build(DateTimes.nowUtc(),\"query/time\",10).build(\"druid/broker\",\"brokerHost1\"))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "StatsDEmitter emitter = new StatsDEmitter(new StatsDEmitterConfig(\"localhost\",8888,null,null,true,null,null,true,null,true),new ObjectMapper(),client)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "client.time(\"druid.query.time\",10,\"druid_service:druid/broker\",\"dataSource:data-source\",\"type:groupBy\",\"hostname:brokerHost1\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "StatsDEmitter emitter = new StatsDEmitter(new StatsDEmitterConfig(\"localhost\",8888,null,null,null,null,null,null,null,null),new ObjectMapper(),client)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "client.gauge(\"broker.query.cache.total.hitRate\",54)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "EasyMock.verify(client)@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4->1 [style = solid, label="client"];
4->10 [style = bold, label=""];
9->4 [style = bold, label=""];
0->2 [style = bold, label=""];
4->0 [style = solid, label="client"];
7->4 [style = bold, label=""];
12->1 [style = bold, label=""];
2->8 [style = dashed, label="0"];
3->4 [style = bold, label=""];
0->10 [style = dashed, label="0"];
4->0 [style = bold, label=""];
6->12 [style = dashed, label="0"];
6->1 [style = bold, label=""];
11->5 [style = bold, label=""];
4->5 [style = solid, label="client"];
5->6 [style = bold, label=""];
8->5 [style = bold, label=""];
5->12 [style = bold, label=""];
4->10 [style = solid, label="client"];
0->8 [style = bold, label=""];
2->5 [style = bold, label=""];
10->11 [style = bold, label=""];
}
