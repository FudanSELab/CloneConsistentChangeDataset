digraph {
14 [style = filled, label = "fail(\"Can not find HadoopModule!\")@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "envs.put(YarnConfigKeys.LOCAL_KEYTAB_PATH,YarnConfigOptions.LOCALIZED_KEYTAB_PATH.defaultValue())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testPreInstallKerberosKeytabConfiguration['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(hadoopModule.getSecurityConfig().getPrincipal(),is(\"testuser1@domain\"))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(hadoopModule.getSecurityConfig().getKeytab(),containsString(\"src/test/resources/krb5.keytab\"))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(hadoopModule.getSecurityConfig().getKeytab(),is(new File(resourceDirPath,YarnConfigOptions.LOCALIZED_KEYTAB_PATH.defaultValue()).getAbsolutePath()))@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "envs.put(YarnConfigKeys.KEYTAB_PRINCIPAL,\"testuser1@domain\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Map<String,String> envs = new HashMap<>(2)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(hadoopModule.getSecurityConfig().getPrincipal(),is(\"testuser1@domain\"))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final String resourceDirPath = Paths.get(\"src\",\"test\",\"resources\").toAbsolutePath().toString()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "envs.put(YarnConfigKeys.REMOTE_KEYTAB_PATH,resourceDirPath)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "fail(\"Can not find HadoopModule!\")@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "testDefaultKerberosKeytabConfiguration['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Configuration configuration = new Configuration()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(configuration.getString(SecurityOptions.KERBEROS_LOGIN_PRINCIPAL),is(\"testuser1@domain\"))@@@22@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "fail(\"Can not find HadoopModule!\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "envs.put(YarnConfigKeys.LOCAL_KEYTAB_PATH,\"src/test/resources/krb5.keytab\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "HadoopModule hadoopModule = (HadoopModule)moduleOpt.get()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "YarnTaskExecutorRunner.setupAndModifyConfiguration(configuration,resourceDirPath,envs)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Optional<SecurityModule> moduleOpt = modules.stream().filter(null).findFirst()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testDefaultKerberosKeytabConfiguration['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "moduleOpt.isPresent()@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "YarnTaskExecutorRunner.setupConfigurationAndInstallSecurityContext(configuration,resourceDirPath,envs)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final List<SecurityModule> modules = SecurityUtils.getInstalledModules()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "SecurityUtils.install(new SecurityConfiguration(configuration))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "assertThat(configuration.getString(SecurityOptions.KERBEROS_LOGIN_KEYTAB),containsString(\"src/test/resources/krb5.keytab\"))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertThat(configuration.getString(SecurityOptions.KERBEROS_LOGIN_PRINCIPAL),is(\"testuser1@domain\"))@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(configuration.getString(SecurityOptions.KERBEROS_LOGIN_KEYTAB),is(new File(resourceDirPath,YarnConfigOptions.LOCALIZED_KEYTAB_PATH.defaultValue()).getAbsolutePath()))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(configuration.getString(SecurityOptions.KERBEROS_LOGIN_KEYTAB),is(new File(resourceDirPath,YarnConfigOptions.LOCALIZED_KEYTAB_PATH.defaultValue()).getAbsolutePath()))@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25->0 [style = bold, label=""];
15->10 [style = bold, label=""];
2->26 [style = bold, label=""];
16->12 [style = dotted, label="true"];
0->9 [style = solid, label="resourceDirPath"];
16->2 [style = dotted, label="true"];
21->0 [style = bold, label=""];
1->17 [style = dotted, label="false"];
0->6 [style = bold, label=""];
6->9 [style = solid, label="envs"];
1->11 [style = dotted, label="true"];
27->9 [style = bold, label=""];
12->2 [style = dotted, label="true"];
23->26 [style = bold, label=""];
12->1 [style = dotted, label="true"];
10->28 [style = dashed, label="0"];
6->18 [style = solid, label="envs"];
11->2 [style = dashed, label="0"];
16->23 [style = bold, label=""];
11->19 [style = bold, label=""];
16->23 [style = dotted, label="false"];
26->24 [style = bold, label=""];
12->1 [style = bold, label=""];
0->18 [style = solid, label="resourceDirPath"];
10->7 [style = bold, label=""];
9->20 [style = solid, label="configuration"];
1->19 [style = dotted, label="true"];
0->13 [style = solid, label="resourceDirPath"];
3->0 [style = bold, label=""];
6->15 [style = bold, label=""];
1->17 [style = bold, label=""];
12->11 [style = dotted, label="true"];
5->16 [style = bold, label=""];
7->9 [style = bold, label=""];
9->18 [style = solid, label="configuration"];
18->20 [style = bold, label=""];
27->9 [style = solid, label="configuration"];
9->18 [style = bold, label=""];
20->16 [style = bold, label=""];
6->13 [style = solid, label="envs"];
9->13 [style = solid, label="configuration"];
15->28 [style = bold, label=""];
16->1 [style = dotted, label="true"];
0->10 [style = solid, label="resourceDirPath"];
12->14 [style = bold, label=""];
13->5 [style = bold, label=""];
11->8 [style = bold, label=""];
1->2 [style = bold, label=""];
14->8 [style = bold, label=""];
19->4 [style = bold, label=""];
28->27 [style = bold, label=""];
8->4 [style = bold, label=""];
13->18 [style = dashed, label="0"];
1->2 [style = dotted, label="true"];
12->14 [style = dotted, label="false"];
16->12 [style = bold, label=""];
4->22 [style = bold, label=""];
2->11 [style = bold, label=""];
17->4 [style = bold, label=""];
9->13 [style = bold, label=""];
8->26 [style = dashed, label="0"];
}
