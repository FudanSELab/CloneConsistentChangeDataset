digraph {
14 [style = filled, label = "testTransformWithKey['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final int(( expectedKeys = {1,10,100,1000}@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final ValueTransformerSupplier<Number,Integer> valueTransformerSupplier = null@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final KStream<Integer,Integer> stream@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "inputTopic.pipeInput(expectedKey,expectedKey * 10,expectedKey / 2L)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "stream = builder.stream(topicName,Consumed.with(Serdes.Integer(),Serdes.Integer()))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "stream.transformValues(valueTransformerSupplier).process(supplier)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertArrayEquals(expected,supplier.theCapturedProcessor().processed().toArray())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testTransform['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final ValueTransformerWithKeySupplier<Integer,Number,Integer> valueTransformerSupplier = null@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertArrayEquals(expected,supplier.theCapturedProcessor().processed.toArray())@@@31@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final TestInputTopic<Integer,Integer> inputTopic = driver.createInputTopic(topicName,new IntegerSerializer(),new IntegerSerializer())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final KeyValueTimestamp(( expected = {new KeyValueTimestamp<>(1,11,0),new KeyValueTimestamp<>(10,121,5),new KeyValueTimestamp<>(100,1221,50),new KeyValueTimestamp<>(1000,12221,500)}@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testTransform['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5->8 [style = bold, label=""];
4->5 [style = solid, label="stream"];
11->6 [style = bold, label=""];
3->12 [style = solid, label="expected"];
1->0 [style = bold, label=""];
3->12 [style = bold, label=""];
10->6 [style = bold, label=""];
7->3 [style = bold, label=""];
1->13 [style = dashed, label="0"];
3->9 [style = bold, label=""];
6->1 [style = bold, label=""];
8->2 [style = bold, label=""];
3->9 [style = solid, label="expected"];
0->4 [style = bold, label=""];
7->2 [style = bold, label=""];
6->13 [style = bold, label=""];
9->12 [style = dashed, label="0"];
2->7 [style = bold, label=""];
4->5 [style = bold, label=""];
14->6 [style = bold, label=""];
13->0 [style = bold, label=""];
}
