digraph {
14 [style = filled, label = "Cache cache = new PerpetualCache(\"DefaultCache\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "shouldDemonstrateCopiesAreEqual['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "cache = new ScheduledCache(cache)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(i,cache.getObject(i))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "i < 1000@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Thread.sleep(5000)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(0,cache.getSize())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "int i = 0@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "shouldDemonstrateHowAllObjectsAreFlushedAfterBasedOnTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "cache.putObject(i,i)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "cache = new LoggingCache(cache)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "cache.putObject(i,i)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "((ScheduledCache)cache).setClearInterval(2500)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "cache = new SerializedCache(cache)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "shouldDemonstrateCopiesAreEqual['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Cache cache = new PerpetualCache(\"default\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "i < 100@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
6->3 [style = bold, label=""];
4->9 [style = solid, label="i"];
4->11 [style = solid, label="i"];
2->9 [style = solid, label="i"];
15->10 [style = bold, label=""];
16->9 [style = bold, label=""];
16->9 [style = dotted, label="true"];
16->2 [style = dotted, label="true"];
9->11 [style = bold, label=""];
3->1 [style = bold, label=""];
6->3 [style = solid, label="cache"];
15->17 [style = solid, label="cache"];
1->5 [style = solid, label="i"];
0->2 [style = bold, label=""];
8->6 [style = bold, label=""];
10->17 [style = bold, label=""];
5->0 [style = dotted, label="true"];
1->4 [style = solid, label="i"];
4->5 [style = solid, label="i"];
6->14 [style = dashed, label="0"];
2->4 [style = bold, label=""];
11->2 [style = bold, label=""];
5->4 [style = dotted, label="true"];
4->2 [style = solid, label="i"];
5->16 [style = dashed, label="0"];
1->0 [style = solid, label="i"];
2->11 [style = solid, label="i"];
4->16 [style = solid, label="i"];
5->0 [style = bold, label=""];
1->2 [style = solid, label="i"];
7->6 [style = bold, label=""];
12->18 [style = bold, label=""];
3->15 [style = dashed, label="0"];
4->0 [style = solid, label="i"];
14->15 [style = bold, label=""];
14->15 [style = solid, label="cache"];
16->11 [style = dotted, label="true"];
4->5 [style = bold, label=""];
16->12 [style = bold, label=""];
13->14 [style = bold, label=""];
17->4 [style = bold, label=""];
2->16 [style = solid, label="i"];
4->16 [style = bold, label=""];
5->2 [style = dotted, label="true"];
2->16 [style = bold, label=""];
}
