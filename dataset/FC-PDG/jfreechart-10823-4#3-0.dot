digraph {
25 [style = filled, label = "assertFalse(m1.equals(m2))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "m2 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow),new BasicStroke(2.2f),Color.red,new BasicStroke(1.0f),1.0f)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "m2 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.YELLOW),new BasicStroke(2.2f),Color.RED,new BasicStroke(1.0f),0.5f)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.YELLOW),new BasicStroke(2.2f),Color.RED,new BasicStroke(1.0f),1.0f)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "IntervalMarker m1 = new IntervalMarker(45.0,50.0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertTrue(m1.equals(m2))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(m1.equals(m2))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testEquals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow),new BasicStroke(1.1f))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "assertFalse(m1.equals(m2))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(m1.equals(m2))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.YELLOW),new BasicStroke(2.2f),Color.RED,new BasicStroke(3.3f),1.0f)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow),new BasicStroke(2.2f))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow),new BasicStroke(2.2f),Color.red,new BasicStroke(1.0f),0.5f)@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertTrue(m1.equals(m2))@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertFalse(m1.equals(m2))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "CategoryMarker m1 = new CategoryMarker(\"A\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertFalse(m1.equals(m2))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertTrue(m1.getClass() == m2.getClass())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "m2 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.YELLOW),new BasicStroke(2.2f))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "m2 = new CategoryMarker(\"B\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "m2 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow),new BasicStroke(2.2f),Color.red,new BasicStroke(3.3f),1.0f)@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "assertTrue(m1.equals(m2))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(m1.equals(m2))@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "IntervalMarker m2 = (IntervalMarker)m1.clone()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testEquals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.YELLOW),new BasicStroke(1.1f))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertTrue(m1.equals(m2))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "CategoryMarker m2 = new CategoryMarker(\"A\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow),new BasicStroke(2.2f),Color.red,new BasicStroke(3.3f),1.0f)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "m2 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow),new BasicStroke(2.2f))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "m2 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow),new BasicStroke(1.1f))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "assertTrue(m1 != m2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow),new BasicStroke(2.2f),Color.red,new BasicStroke(1.0f),1.0f)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "m2 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.YELLOW),new BasicStroke(2.2f),Color.RED,new BasicStroke(3.3f),1.0f)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "m2 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow),new BasicStroke(2.2f),Color.red,new BasicStroke(1.0f),0.5f)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "m2 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.YELLOW),new BasicStroke(2.2f),Color.RED,new BasicStroke(1.0f),1.0f)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.YELLOW),new BasicStroke(2.2f))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertTrue(m1.equals(m2))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertFalse(m1.equals(m2))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(m2.equals(m1))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.YELLOW),new BasicStroke(2.2f),Color.RED,new BasicStroke(1.0f),0.5f)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "m2 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.YELLOW),new BasicStroke(1.1f))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertFalse(m1.equals(m2))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->10 [style = bold, label=""];
37->21 [style = solid, label="m2"];
30->19 [style = solid, label="m2"];
4->15 [style = bold, label=""];
43->42 [style = bold, label=""];
8->32 [style = dashed, label="0"];
11->29 [style = bold, label=""];
13->19 [style = solid, label="m2"];
29->4 [style = solid, label="m2"];
12->9 [style = bold, label=""];
29->23 [style = solid, label="m2"];
21->38 [style = bold, label=""];
9->26 [style = bold, label=""];
42->44 [style = bold, label=""];
37->6 [style = solid, label="m2"];
2->36 [style = bold, label=""];
1->12 [style = bold, label=""];
2->24 [style = bold, label=""];
14->11 [style = bold, label=""];
18->29 [style = dashed, label="0"];
3->6 [style = solid, label="m2"];
26->17 [style = bold, label=""];
10->14 [style = bold, label=""];
0->19 [style = bold, label=""];
25->3 [style = bold, label=""];
37->21 [style = bold, label=""];
7->0 [style = bold, label=""];
35->22 [style = solid, label="m2"];
29->23 [style = bold, label=""];
16->43 [style = dashed, label="0"];
39->4 [style = bold, label=""];
32->10 [style = bold, label=""];
16->26 [style = solid, label="m2"];
11->18 [style = bold, label=""];
30->7 [style = solid, label="m2"];
38->6 [style = bold, label=""];
7->33 [style = bold, label=""];
36->25 [style = bold, label=""];
5->6 [style = bold, label=""];
17->2 [style = bold, label=""];
10->34 [style = bold, label=""];
25->37 [style = bold, label=""];
30->7 [style = bold, label=""];
8->10 [style = solid, label="m2"];
0->33 [style = dashed, label="0"];
18->4 [style = solid, label="m2"];
17->2 [style = solid, label="m2"];
5->38 [style = dashed, label="0"];
31->28 [style = bold, label=""];
24->36 [style = dashed, label="0"];
3->21 [style = solid, label="m2"];
15->22 [style = solid, label="m2"];
18->23 [style = bold, label=""];
3->37 [style = dashed, label="0"];
28->40 [style = dashed, label="0"];
8->11 [style = solid, label="m2"];
43->42 [style = solid, label="m2"];
15->22 [style = bold, label=""];
15->35 [style = dashed, label="0"];
21->5 [style = bold, label=""];
17->25 [style = solid, label="m2"];
19->32 [style = bold, label=""];
16->1 [style = bold, label=""];
41->40 [style = bold, label=""];
27->39 [style = dashed, label="0"];
24->25 [style = bold, label=""];
6->13 [style = bold, label=""];
23->39 [style = bold, label=""];
3->21 [style = bold, label=""];
32->11 [style = solid, label="m2"];
28->12 [style = solid, label="m1"];
40->43 [style = bold, label=""];
33->19 [style = bold, label=""];
44->9 [style = bold, label=""];
18->23 [style = solid, label="m2"];
4->35 [style = bold, label=""];
40->42 [style = solid, label="m1"];
32->10 [style = solid, label="m2"];
23->27 [style = bold, label=""];
13->7 [style = solid, label="m2"];
14->34 [style = dashed, label="0"];
35->22 [style = bold, label=""];
20->28 [style = bold, label=""];
28->16 [style = bold, label=""];
34->11 [style = bold, label=""];
19->8 [style = bold, label=""];
27->4 [style = bold, label=""];
43->9 [style = solid, label="m2"];
13->7 [style = bold, label=""];
16->1 [style = solid, label="m2"];
13->30 [style = dashed, label="0"];
6->30 [style = bold, label=""];
}
