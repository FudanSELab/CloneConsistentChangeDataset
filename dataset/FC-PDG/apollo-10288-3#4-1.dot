digraph {
39 [style = filled, label = "when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_NOT_MODIFIED)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "String someKey = \"someKey\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String anotherKey = \"anotherKey\"@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "notificationMessages.put(someKey,someNotificationId)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "String anotherKey = \"anotherKey\"@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final String someNamespace = \"someNamespace\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "notificationMessages.put(anotherKey,anotherNotificationId)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "when(someNotification.getMessages()).thenReturn(notificationMessages)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final SettableFuture<Boolean> onNotified = SettableFuture.create()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(anotherNotificationId,captured.get(anotherKey).longValue())@@@59@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(someNotificationId,captured.get(someKey).longValue())@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "anotherOnNotified.get(5000,TimeUnit.MILLISECONDS)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "remoteConfigLongPollService.submit(someNamespace,someRepository)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "notificationMessages.put(anotherKey,anotherNotificationId)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "remoteConfigLongPollService.stopLongPollingRefresh()@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "long someNotificationId = 1@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "when(pollResponse.getBody()).thenReturn(Lists.newArrayList(someNotification))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "onNotified.get(5000,TimeUnit.MILLISECONDS)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "doAnswer(new Answer<Void>(){@Override public Void answer(InvocationOnMock invocation){anotherOnNotified.set(true)return null}}).when(someRepository).onLongPollNotified(any(),any())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testSubmitLongPollNamespaceWith200Response['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_OK)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(1,captured.getDetails().size())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "verify(someRepository,times(2)).onLongPollNotified(any(),captor.capture())@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "doAnswer(new Answer<Void>(){@Override public Void answer(InvocationOnMock invocation){onNotified.set(true)return null}}).when(someRepository).onLongPollNotified(any(),any())@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testSubmitLongPollNamespaceWith200Response['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "final SettableFuture<Boolean> anotherOnNotified = SettableFuture.create()@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "when(someNotification.getNamespaceName()).thenReturn(someNamespace)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(2,captured.getDetails().size())@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ApolloNotificationMessages captured = captor.getValue()@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ApolloConfigNotification someNotification = mock()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "captured = captor.getValue()@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "remoteConfigLongPollService.stopLongPollingRefresh()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ApolloNotificationMessages notificationMessages = new ApolloNotificationMessages()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "testSubmitLongPollNamespaceWithMessagesUpdated['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(someNotificationId,captured.get(someKey).longValue())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "long anotherNotificationId = 2@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "doAnswer(new Answer<HttpResponse<List<ApolloConfigNotification>>>(){@Override public HttpResponse<List<ApolloConfigNotification>> answer(InvocationOnMock invocation){try {TimeUnit.MILLISECONDS.sleep(50)}catch (InterruptedException e) return pollResponse}}).when(httpUtil).doGet(any(),eq(responseType))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "verify(someRepository,times(1)).onLongPollNotified(any(),captor.capture())@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "RemoteConfigRepository someRepository = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "long anotherNotificationId = 2@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_OK)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final ArgumentCaptor<ApolloNotificationMessages> captor = ArgumentCaptor.forClass()@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->10 [style = bold, label=""];
10->22 [style = bold, label=""];
31->37 [style = bold, label=""];
39->19 [style = bold, label=""];
23->20 [style = bold, label=""];
37->32 [style = solid, label="anotherKey"];
20->17 [style = bold, label=""];
20->13 [style = bold, label=""];
29->16 [style = solid, label="anotherNotificationId"];
40->6 [style = bold, label=""];
5->9 [style = bold, label=""];
29->32 [style = solid, label="anotherNotificationId"];
11->1 [style = bold, label=""];
8->3 [style = bold, label=""];
12->17 [style = bold, label=""];
4->19 [style = bold, label=""];
37->29 [style = bold, label=""];
30->36 [style = bold, label=""];
15->6 [style = bold, label=""];
24->1 [style = solid, label="someNotification"];
35->14 [style = bold, label=""];
34->30 [style = bold, label=""];
27->6 [style = bold, label=""];
28->41 [style = bold, label=""];
23->17 [style = solid, label="someKey"];
9->23 [style = bold, label=""];
32->38 [style = bold, label=""];
6->5 [style = bold, label=""];
26->0 [style = bold, label=""];
0->14 [style = bold, label=""];
17->24 [style = bold, label=""];
13->12 [style = bold, label=""];
12->2 [style = solid, label="anotherNotificationId"];
17->2 [style = bold, label=""];
21->39 [style = bold, label=""];
3->7 [style = bold, label=""];
6->7 [style = solid, label="someRepository"];
19->26 [style = bold, label=""];
29->32 [style = bold, label=""];
12->16 [style = solid, label="anotherNotificationId"];
9->22 [style = solid, label="notificationMessages"];
38->34 [style = bold, label=""];
7->21 [style = bold, label=""];
33->31 [style = bold, label=""];
5->10 [style = solid, label="someNamespace"];
20->17 [style = solid, label="someNotificationId"];
14->18 [style = bold, label=""];
25->8 [style = bold, label=""];
20->41 [style = solid, label="someNotificationId"];
41->33 [style = bold, label=""];
2->24 [style = bold, label=""];
36->35 [style = bold, label=""];
20->18 [style = solid, label="someNotificationId"];
5->7 [style = solid, label="someNamespace"];
1->25 [style = bold, label=""];
22->11 [style = bold, label=""];
13->2 [style = solid, label="anotherKey"];
0->28 [style = bold, label=""];
21->4 [style = bold, label=""];
18->16 [style = bold, label=""];
}
