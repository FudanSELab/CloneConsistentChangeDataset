digraph {
4 [style = filled, label = "dependencyExclusion['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "j.assertBuildStatusSuccess(downstream2.scheduleBuild2(0).get())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Jenkins.getInstance().rebuildDependencyGraph()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "List<AbstractProject> upstreamProjects = downstream.getUpstreamProjects()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "multipleDownstreamDependencies['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(0,downstreamProjects.size())@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "List<AbstractProject> upstreamProjects = downstream.getUpstreamProjects()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "j.assertBuildStatusSuccess(downstream.scheduleBuild2(0).get())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "FreeStyleProject downstream = createFreeStyleProjectWithFingerprints(singleContents,singleFiles)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(2,downstreamProjects.size())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "FreeStyleProject upstream = createFreeStyleProjectWithFingerprints(singleContents,singleFiles)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "j.assertBuildStatusSuccess(downstream.scheduleBuild2(0).get())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "List<AbstractProject> upstreamProjects2 = downstream2.getUpstreamProjects()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "dependencyExclusion['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "assertTrue(downstreamProjects.contains(downstream))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(1,upstreamProjects2.size())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "List<AbstractProject> downstreamProjects = upstream.getDownstreamProjects()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "FreeStyleProject upstream = createFreeStyleProjectWithFingerprints(doubleContents,doubleFiles)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(1,upstreamProjects.size())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "List<AbstractProject> downstreamProjects = upstream.getDownstreamProjects()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(upstreamProjects.contains(upstream))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertTrue(downstreamProjects.contains(downstream2))@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertTrue(upstreamProjects2.contains(upstream))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Hudson.getInstance().rebuildDependencyGraph()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "FreeStyleProject downstream2 = createFreeStyleProjectWithFingerprints(singleContents2,singleFiles2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "FreeStyleBuild upstreamBuild = j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
22->26 [style = bold, label=""];
14->25 [style = solid, label="upstream"];
4->3 [style = bold, label=""];
6->8 [style = dashed, label="0"];
7->11 [style = bold, label=""];
7->1 [style = bold, label=""];
7->17 [style = bold, label=""];
25->22 [style = bold, label=""];
7->17 [style = dashed, label="0"];
15->25 [style = bold, label=""];
8->19 [style = bold, label=""];
23->15 [style = bold, label=""];
14->15 [style = solid, label="upstream"];
8->6 [style = bold, label=""];
20->14 [style = bold, label=""];
16->23 [style = bold, label=""];
9->10 [style = bold, label=""];
24->18 [style = bold, label=""];
9->22 [style = solid, label="downstream"];
21->26 [style = solid, label="downstream2"];
19->16 [style = bold, label=""];
0->7 [style = bold, label=""];
3->9 [style = bold, label=""];
11->5 [style = bold, label=""];
5->2 [style = bold, label=""];
17->24 [style = bold, label=""];
13->7 [style = bold, label=""];
1->11 [style = dashed, label="0"];
10->0 [style = bold, label=""];
9->21 [style = bold, label=""];
8->18 [style = dashed, label="0"];
14->9 [style = bold, label=""];
12->3 [style = bold, label=""];
18->8 [style = bold, label=""];
3->14 [style = dashed, label="0"];
2->8 [style = bold, label=""];
21->13 [style = bold, label=""];
}
