digraph {
56 [style = filled, label = "List<NetworkVO> networks = new ArrayList<>()@@@107@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "when(responseGenerator.createUserVmResponse(Mockito.any(),Mockito.anyString(),Mockito.any())).thenReturn(userVmResponses)@@@122@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "instanceDisk.setCapacity(5242880L)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "when(userVm.getHostName()).thenReturn(instance.getName())@@@86@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
125 [style = filled, label = "instanceNic.setNicId(\"NIC 1\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
136 [style = filled, label = "listUnmanagedInstancesInvalidHypervisorTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "instanceDisk.setDatastoreHost(\"Test\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "UnmanagedInstanceTO.Nic instanceNic = new UnmanagedInstanceTO.Nic()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "UnmanagedInstanceTO.Disk instanceDisk = new UnmanagedInstanceTO.Disk()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "when(virtualMachine.getState()).thenReturn(VirtualMachine.State.Running)@@@124@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
115 [style = filled, label = "when(vmDao.listByLastHostIdAndStates(Mockito.anyLong())).thenReturn(vms)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "instance.setDisks(instanceDisks)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "when(userDao.listByAccount(Mockito.anyLong())).thenReturn(users)@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "instanceDisk.setLabel(\"DiskLabel\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "instance.setMemory(1024)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "instanceDisk.setImagePath(\"(b6ccf44a1fa13e29b3667b4954fa10ee( TestInstance/ROOT-1.vmdk\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "DiskOfferingVO diskOfferingVO = Mockito.mock()@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "when(template.getId()).thenReturn(1L)@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "List<UnmanagedInstanceTO.Nic> instanceNics = new ArrayList<>()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "List<VMTemplateStoragePoolVO> templates = new ArrayList<>()@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "when(configurationDao.getValue(Mockito.anyString())).thenReturn(null)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "instance.setCpuCoresPerSocket(1)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "when(userVmManager.importVM(nullable(),nullable(),nullable(),nullable(),nullable(),nullable(),nullable(),nullable(),nullable(),nullable(),nullable(),nullable(),nullable(),nullable(),nullable(),nullable(),nullable(),nullable())).thenReturn(userVm)@@@100@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "hosts.add(hostVO)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "doNothing().when(networkModel).checkNetworkPermissions(Mockito.any(),Mockito.any())@@@110@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
124 [style = filled, label = "instanceDisk.setController(\"scsi\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "when(volumeManager.importVolume(Mockito.any(),Mockito.anyString(),Mockito.any(),Mockito.anyLong(),Mockito.anyLong(),Mockito.anyLong(),Mockito.any(),Mockito.any(),Mockito.any(),Mockito.anyLong(),Mockito.anyLong(),Mockito.anyString(),Mockito.anyString())).thenReturn(Mockito.mock())@@@116@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "VMTemplateVO template = Mockito.mock()@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "List<UserVO> users = new ArrayList<>()@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "when(networkOrchestrationService.importNic(nullable(),nullable(),nullable(),nullable(),nullable(),nullable(),anyBoolean())).thenReturn(pair)@@@115@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "when(serviceOffering.isDynamic()).thenReturn(false)@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "when(volumeVO.getId()).thenReturn(virtualMachineId)@@@130@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
133 [style = filled, label = "cluster.setHypervisorType(Hypervisor.HypervisorType.KVM.toString())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "StoragePoolVO poolVO = Mockito.mock()@@@94@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "VolumeVO volumeVO = mock()@@@127@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "when(serviceOffering.getId()).thenReturn(1L)@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "instance.setPowerState(UnmanagedInstanceTO.PowerState.PowerOn)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "when(serviceOffering.getSpeed()).thenReturn(instance.getCpuSpeed())@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "instanceNics.add(instanceNic)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "instanceDisk.setDatastoreName(\"Test\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "when(userVm.getTemplateId()).thenReturn(1L)@@@87@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "instance.setCpuSpeed(1000)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "when(volumeDao.findByInstance(Mockito.anyLong())).thenReturn(volumes)@@@117@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "GetUnmanagedInstancesCommand cmd = Mockito.mock()@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
119 [style = filled, label = "NetworkVO networkVO = Mockito.mock()@@@102@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
135 [style = filled, label = "ClusterVO cluster = new ClusterVO(1,1,\"Cluster\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "when(nicVO.getNetworkId()).thenReturn(1L)@@@132@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "users.add(Mockito.mock())@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "List<VMInstanceVO> vms = new ArrayList<>()@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "instance.setNics(instanceNics)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
127 [style = filled, label = "UserVmResponse userVmResponse = new UserVmResponse()@@@119@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "instanceNic.setVlan(1024)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
128 [style = filled, label = "List<StoragePoolVO> pools = new ArrayList<>()@@@97@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "DataCenterVO zone = Mockito.mock()@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "doNothing().when(networkModel).checkRequestedIpAddresses(Mockito.anyLong(),Mockito.any())@@@111@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "List<VolumeVO> volumes = new ArrayList<>()@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "userVmResponses.add(userVmResponse)@@@121@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "when(accountService.getActiveAccountById(Mockito.anyLong())).thenReturn(Mockito.mock())@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "when(userVm.getAccountId()).thenReturn(1L)@@@84@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
137 [style = filled, label = "when(clusterDao.findById(Mockito.anyLong())).thenReturn(cluster)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
118 [style = filled, label = "CallContext.register(user,account)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "when(clusterDao.findById(Mockito.anyLong())).thenReturn(clusterVO)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "List<UserVmResponse> userVmResponses = new ArrayList<>()@@@118@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
122 [style = filled, label = "when(templatePoolDao.listAll()).thenReturn(templates)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "when(networkDao.listByZone(Mockito.anyLong())).thenReturn(networks)@@@109@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "when(userVm.isDisplayVm()).thenReturn(true)@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "when(networkVO.getGuestType()).thenReturn(Network.GuestType.L2)@@@103@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Integer deviceId = 100@@@113@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "Pair<NicProfile,Integer> pair = new Pair<NicProfile,Integer>(profile,deviceId)@@@114@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "when(volumeDao.findIncludingRemovedByZone(Mockito.anyLong())).thenReturn(volumes)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
112 [style = filled, label = "when(serviceOffering.getTags()).thenReturn(\"\")@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "networks.add(networkVO)@@@108@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "UnmanagedInstanceTO instance = new UnmanagedInstanceTO()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "when(template.getName()).thenReturn(\"Template\")@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "when(zone.getId()).thenReturn(1L)@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "when(nicDao.listByVmId(virtualMachineId)).thenReturn(Collections.singletonList(nicVO))@@@131@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "instance.setCpuCores(2)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "instanceDisk.setDiskId(\"1000-1\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "when(virtualMachine.getId()).thenReturn(virtualMachineId)@@@126@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
126 [style = filled, label = "instanceDisk.setDatastorePath(\"Test\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "UserVO user = new UserVO(1,\"adminuser\",\"password\",\"firstname\",\"lastName\",\"email\",\"timezone\",UUID.randomUUID().toString(),User.Source.UNKNOWN)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "when(networkDao.findById(1L)).thenReturn(networkVO)@@@133@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "when(vmDao.findById(virtualMachineId)).thenReturn(virtualMachine)@@@123@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "when(serviceOffering.getRamSize()).thenReturn(instance.getMemory())@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "List<HostVO> hosts = new ArrayList<>()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
131 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "userVmResponse.setInstanceName(instance.getName())@@@120@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
130 [style = filled, label = "when(volumeDao.findByInstance(virtualMachineId)).thenReturn(Collections.singletonList(volumeVO))@@@128@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "when(networkVO.getBroadcastUri()).thenReturn(URI.create(String.format(\"vlan://%d\",instanceNic.getVlan())))@@@104@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "pools.add(poolVO)@@@98@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "userVm.setHostName(instance.getName())@@@93@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "when(vmDao.listByHostId(Mockito.anyLong())).thenReturn(vms)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "List<UnmanagedInstanceTO.Disk> instanceDisks = new ArrayList<>()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "userVm.setInstanceName(instance.getName())@@@92@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "when(volumeApiService.doesTargetStorageSupportDiskOffering(Mockito.any(),Mockito.anyString())).thenReturn(true)@@@101@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "instanceNic.setMacAddress(\"02:00:2e:0f:00:02\")@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
132 [style = filled, label = "when(hostVO.checkHostServiceOfferingTags(Mockito.any())).thenReturn(true)@@@45@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
113 [style = filled, label = "when(resourceManager.listHostsInClusterByStatus(Mockito.anyLong(),Mockito.any())).thenReturn(hosts)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "MockitoAnnotations.initMocks(this)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "when(userVm.getDataCenterId()).thenReturn(1L)@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "when(templateDao.findById(Mockito.anyLong())).thenReturn(template)@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "when(userVm.getType()).thenReturn(VirtualMachine.Type.Instance)@@@91@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "map.put(instance.getName(),instance)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "when(diskOfferingDao.findById(Mockito.anyLong())).thenReturn(diskOfferingVO)@@@82@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "when(poolVO.getDataCenterId()).thenReturn(1L)@@@95@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "instance.setOperatingSystem(\"CentOS 7\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "when(diskOfferingVO.getDiskSize()).thenReturn(Long.MAX_VALUE)@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "instanceDisks.add(instanceDisk)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
134 [style = filled, label = "ListUnmanagedInstancesCmd cmd = Mockito.mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "AccountVO account = new AccountVO(\"admin\",1L,\"\",Account.ACCOUNT_TYPE_ADMIN,\"uuid\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "when(networkVO.getDataCenterId()).thenReturn(1L)@@@105@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "when(serviceOfferingDao.findById(Mockito.anyLong())).thenReturn(serviceOffering)@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "when(serviceOffering.getCpu()).thenReturn(instance.getCpuCores())@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "ClusterVO clusterVO = new ClusterVO(1L,1L,\"Cluster\")@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "when(userVm.getHypervisorType()).thenReturn(Hypervisor.HypervisorType.VMware)@@@88@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "when(poolVO.getClusterId()).thenReturn(clusterVO.getId())@@@96@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "when(agentManager.easySend(Mockito.anyLong(),Mockito.any())).thenReturn(answer)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "when(networkDao.findById(Mockito.anyLong())).thenReturn(networkVO)@@@106@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "when(templateDao.findByName(Mockito.anyString())).thenReturn(template)@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "NicProfile profile = Mockito.mock()@@@112@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "when(diskOfferingVO.isCustomized()).thenReturn(false)@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "instance.setName(\"TestInstance\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "when(dataCenterDao.findById(Mockito.anyLong())).thenReturn(zone)@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "instanceNic.setAdapterType(\"VirtualE1000E\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "clusterVO.setHypervisorType(Hypervisor.HypervisorType.VMware.toString())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "when(virtualMachine.getInstanceName()).thenReturn(\"i-2-7-VM\")@@@125@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
123 [style = filled, label = "when(hostVO.isInMaintenanceStates()).thenReturn(false)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "HostVO hostVO = Mockito.mock()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "instanceDisk.setDatastoreType(\"NFS\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Answer answer = new GetUnmanagedInstancesAnswer(cmd,\"\",map)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "HashMap<String,UnmanagedInstanceTO> map = new HashMap<>()@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
129 [style = filled, label = "when(primaryDataStoreDao.listPoolByHostPath(Mockito.anyString(),Mockito.anyString())).thenReturn(pools)@@@99@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "ServiceOfferingVO serviceOffering = Mockito.mock()@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "when(volumeVO.getInstanceId()).thenReturn(virtualMachineId)@@@129@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "doNothing().when(resourceLimitService).checkResourceLimit(any(),any(),anyLong())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "UserVmVO userVm = Mockito.mock()@@@83@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
138 [style = filled, label = "unmanagedVMsManager.listUnmanagedInstances(cmd)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "when(userVm.getUuid()).thenReturn(\"abcd\")@@@89@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49->30 [style = bold, label=""];
93->132 [style = bold, label=""];
41->81 [style = bold, label=""];
7->62 [style = bold, label=""];
80->3 [style = bold, label=""];
28->15 [style = solid, label="answer"];
43->46 [style = bold, label=""];
74->49 [style = bold, label=""];
19->86 [style = bold, label=""];
136->134 [style = bold, label=""];
48->93 [style = solid, label="hostVO"];
135->137 [style = solid, label="cluster"];
88->38 [style = solid, label="volumes"];
69->102 [style = bold, label=""];
96->22 [style = bold, label=""];
63->35 [style = bold, label=""];
46->126 [style = bold, label=""];
2->17 [style = bold, label=""];
100->54 [style = bold, label=""];
133->137 [style = bold, label=""];
54->115 [style = bold, label=""];
134->135 [style = bold, label=""];
100->115 [style = solid, label="vms"];
92->16 [style = solid, label="pair"];
33->99 [style = bold, label=""];
40->56 [style = bold, label=""];
26->103 [style = bold, label=""];
110->57 [style = bold, label=""];
57->105 [style = bold, label=""];
98->129 [style = bold, label=""];
82->78 [style = bold, label=""];
90->116 [style = bold, label=""];
78->96 [style = bold, label=""];
89->130 [style = solid, label="volumeVO"];
128->98 [style = bold, label=""];
70->28 [style = bold, label=""];
93->113 [style = bold, label=""];
84->124 [style = bold, label=""];
45->66 [style = bold, label=""];
88->38 [style = bold, label=""];
125->114 [style = bold, label=""];
38->100 [style = bold, label=""];
78->57 [style = solid, label="instanceDisks"];
58->10 [style = bold, label=""];
14->7 [style = bold, label=""];
48->123 [style = bold, label=""];
32->72 [style = bold, label=""];
53->35 [style = solid, label="clusterVO"];
27->98 [style = solid, label="poolVO"];
66->121 [style = solid, label="userVmResponses"];
47->67 [style = bold, label=""];
65->122 [style = bold, label=""];
44->4 [style = bold, label=""];
37->118 [style = solid, label="user"];
131->106 [style = bold, label=""];
52->138 [style = dashed, label="0"];
87->14 [style = bold, label=""];
121->117 [style = bold, label=""];
112->19 [style = bold, label=""];
22->84 [style = bold, label=""];
68->5 [style = bold, label=""];
4->83 [style = bold, label=""];
49->42 [style = solid, label="template"];
119->34 [style = bold, label=""];
55->27 [style = bold, label=""];
77->60 [style = bold, label=""];
0->12 [style = bold, label=""];
102->73 [style = bold, label=""];
104->82 [style = bold, label=""];
3->94 [style = bold, label=""];
91->64 [style = bold, label=""];
23->119 [style = bold, label=""];
32->28 [style = solid, label="cmd"];
56->4 [style = solid, label="networks"];
72->28 [style = solid, label="map"];
81->128 [style = bold, label=""];
62->75 [style = bold, label=""];
61->118 [style = solid, label="account"];
61->37 [style = bold, label=""];
15->59 [style = bold, label=""];
106->61 [style = bold, label=""];
66->127 [style = bold, label=""];
89->130 [style = bold, label=""];
6->101 [style = solid, label="instanceNic"];
73->113 [style = solid, label="hosts"];
128->129 [style = solid, label="pools"];
20->108 [style = bold, label=""];
115->32 [style = bold, label=""];
64->71 [style = bold, label=""];
101->107 [style = bold, label=""];
6->125 [style = bold, label=""];
36->89 [style = bold, label=""];
47->12 [style = solid, label="diskOfferingVO"];
27->41 [style = bold, label=""];
79->11 [style = solid, label="serviceOffering"];
123->93 [style = bold, label=""];
56->44 [style = bold, label=""];
137->138 [style = bold, label=""];
76->50 [style = solid, label="userVm"];
119->40 [style = solid, label="networkVO"];
134->138 [style = solid, label="cmd"];
67->0 [style = bold, label=""];
53->63 [style = bold, label=""];
71->2 [style = bold, label=""];
10->92 [style = solid, label="deviceId"];
119->75 [style = solid, label="networkVO"];
59->21 [style = bold, label=""];
130->87 [style = bold, label=""];
119->44 [style = solid, label="networkVO"];
52->70 [style = solid, label="instance"];
95->1 [style = bold, label=""];
86->90 [style = bold, label=""];
105->107 [style = solid, label="instanceNics"];
126->18 [style = bold, label=""];
28->15 [style = bold, label=""];
116->11 [style = bold, label=""];
97->20 [style = bold, label=""];
52->31 [style = bold, label=""];
51->40 [style = bold, label=""];
1->120 [style = bold, label=""];
132->113 [style = bold, label=""];
65->122 [style = solid, label="templates"];
30->33 [style = bold, label=""];
21->80 [style = bold, label=""];
108->55 [style = bold, label=""];
35->69 [style = bold, label=""];
114->77 [style = bold, label=""];
122->88 [style = bold, label=""];
107->13 [style = bold, label=""];
103->121 [style = bold, label=""];
135->133 [style = bold, label=""];
120->104 [style = bold, label=""];
50->23 [style = bold, label=""];
5->36 [style = bold, label=""];
18->110 [style = bold, label=""];
96->110 [style = solid, label="instanceDisk"];
127->26 [style = bold, label=""];
117->68 [style = bold, label=""];
76->91 [style = bold, label=""];
124->111 [style = bold, label=""];
109->74 [style = bold, label=""];
59->80 [style = solid, label="zone"];
31->95 [style = bold, label=""];
105->6 [style = bold, label=""];
94->109 [style = bold, label=""];
25->97 [style = bold, label=""];
79->24 [style = bold, label=""];
85->58 [style = bold, label=""];
99->42 [style = bold, label=""];
58->92 [style = solid, label="profile"];
88->45 [style = solid, label="volumes"];
11->47 [style = bold, label=""];
12->76 [style = bold, label=""];
37->118 [style = bold, label=""];
8->51 [style = bold, label=""];
92->16 [style = bold, label=""];
60->101 [style = bold, label=""];
24->112 [style = bold, label=""];
29->43 [style = bold, label=""];
118->52 [style = bold, label=""];
127->103 [style = solid, label="userVmResponse"];
13->53 [style = bold, label=""];
100->54 [style = solid, label="vms"];
42->79 [style = bold, label=""];
111->29 [style = bold, label=""];
72->70 [style = bold, label=""];
9->45 [style = bold, label=""];
83->85 [style = bold, label=""];
10->92 [style = bold, label=""];
106->134 [style = dashed, label="0"];
49->99 [style = solid, label="template"];
94->74 [style = solid, label="users"];
34->8 [style = bold, label=""];
73->48 [style = bold, label=""];
129->50 [style = bold, label=""];
39->106 [style = bold, label=""];
17->25 [style = bold, label=""];
113->65 [style = bold, label=""];
16->9 [style = bold, label=""];
}
