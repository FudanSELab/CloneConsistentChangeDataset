digraph {
0 [style = filled, label = "Assert.assertEquals(author,auditInfo.getAuthor())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(auditInfoCapture.hasCaptured())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final Capture<AuditInfo> auditInfoCapture = Capture.newInstance()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "EasyMock.expect(lookupCoordinatorManager.updateLookups(EasyMock.eq(SINGLE_TIER_MAP),EasyMock.capture(auditInfoCapture))).andThrow(new RuntimeException(errMsg)).once()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final Response response = lookupCoordinatorResource.updateAllLookups(SINGLE_TIER_MAP_SOURCE.openStream(),author,comment,request)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(ImmutableMap.of(\"error\",errMsg),response.getEntity())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final AuditInfo auditInfo = auditInfoCapture.getValue()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final LookupCoordinatorResource lookupCoordinatorResource = new LookupCoordinatorResource(lookupCoordinatorManager,MAPPER,MAPPER)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "final HttpServletRequest request = EasyMock.createStrictMock()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "EasyMock.expect(request.getContentType()).andReturn(MediaType.APPLICATION_JSON).once()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "EasyMock.expect(lookupCoordinatorManager.updateLookups(EasyMock.eq(SINGLE_TIER_MAP),EasyMock.capture(auditInfoCapture))).andReturn(false).once()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final String errMsg = \"some error\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testExceptionalNew['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(ImmutableMap.of(\"error\",\"Unknown error updating configuration\"),response.getEntity())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertEquals(500,response.getStatus())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(comment,auditInfo.getComment())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final LookupCoordinatorManager lookupCoordinatorManager = EasyMock.createStrictMock()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "EasyMock.replay(lookupCoordinatorManager,request)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final String author = \"some author\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final String comment = \"some comment\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final String ip = \"127.0.0.1\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testFailedNew['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "EasyMock.verify(lookupCoordinatorManager,request)@@@22@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final LookupCoordinatorResource lookupCoordinatorResource = new LookupCoordinatorResource(lookupCoordinatorManager,mapper,mapper)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testExceptionalNew['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "Assert.assertEquals(ip,auditInfo.getIp())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "EasyMock.expect(request.getRemoteAddr()).andReturn(ip).once()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->10 [style = bold, label=""];
10->22 [style = bold, label=""];
17->10 [style = bold, label=""];
2->20 [style = bold, label=""];
20->13 [style = bold, label=""];
18->7 [style = solid, label="author"];
14->10 [style = solid, label="request"];
17->24 [style = dashed, label="0"];
3->25 [style = bold, label=""];
6->18 [style = bold, label=""];
14->12 [style = solid, label="request"];
11->22 [style = dashed, label="0"];
19->10 [style = solid, label="lookupCoordinatorManager"];
5->15 [style = bold, label=""];
19->22 [style = solid, label="lookupCoordinatorManager"];
19->11 [style = solid, label="lookupCoordinatorManager"];
20->14 [style = bold, label=""];
19->17 [style = bold, label=""];
18->2 [style = bold, label=""];
16->19 [style = bold, label=""];
22->7 [style = bold, label=""];
7->3 [style = bold, label=""];
1->9 [style = bold, label=""];
19->24 [style = bold, label=""];
20->9 [style = solid, label="ip"];
21->5 [style = bold, label=""];
14->7 [style = solid, label="request"];
2->7 [style = solid, label="comment"];
0->1 [style = bold, label=""];
15->0 [style = bold, label=""];
21->25 [style = dashed, label="0"];
3->21 [style = bold, label=""];
25->5 [style = bold, label=""];
14->8 [style = bold, label=""];
9->12 [style = bold, label=""];
8->4 [style = bold, label=""];
18->0 [style = solid, label="author"];
13->21 [style = solid, label="errMsg"];
19->12 [style = solid, label="lookupCoordinatorManager"];
13->14 [style = bold, label=""];
23->18 [style = bold, label=""];
11->7 [style = bold, label=""];
4->16 [style = bold, label=""];
2->1 [style = solid, label="comment"];
26->18 [style = bold, label=""];
10->11 [style = bold, label=""];
}
