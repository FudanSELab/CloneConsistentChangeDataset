digraph {
9 [style = filled, label = "LatexBibEntriesResolverResult expectedCrossingResult = new LatexBibEntriesResolverResult(parserResult)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Path texFile = Paths.get(.getResource(\"unknown_key.tex\").toURI())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Path texFile = Paths.get(.getResource(\"nested.tex\").toURI())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "LatexParserResult parserResult = new DefaultLatexParser().parse(texFile)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testNestedFiles['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testUnknownKey['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "TexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database,importFormatPreferences,fileMonitor).resolve(parserResult)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(expectedCrossingResult,crossingResult)@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "TexParserResult parserResult = new DefaultTexParser().parse(texFile)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TexBibEntriesResolverResult expectedCrossingResult = new TexBibEntriesResolverResult(parserResult)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "LatexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database,importFormatPreferences,fileMonitor).resolve(parserResult)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "testUnknownKey['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->2 [style = solid, label="parserResult"];
11->1 [style = bold, label=""];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
4->1 [style = solid, label="texFile"];
1->0 [style = bold, label=""];
1->0 [style = solid, label="parserResult"];
7->8 [style = bold, label=""];
4->7 [style = bold, label=""];
9->3 [style = solid, label="expectedCrossingResult"];
6->4 [style = bold, label=""];
0->3 [style = solid, label="crossingResult"];
2->9 [style = dashed, label="0"];
5->4 [style = bold, label=""];
7->8 [style = solid, label="parserResult"];
8->9 [style = bold, label=""];
8->3 [style = solid, label="crossingResult"];
9->3 [style = bold, label=""];
0->8 [style = dashed, label="0"];
2->3 [style = solid, label="expectedCrossingResult"];
4->1 [style = bold, label=""];
4->11 [style = dashed, label="0"];
1->7 [style = dashed, label="0"];
11->1 [style = solid, label="texFile"];
7->9 [style = solid, label="parserResult"];
10->11 [style = bold, label=""];
4->7 [style = solid, label="texFile"];
}
