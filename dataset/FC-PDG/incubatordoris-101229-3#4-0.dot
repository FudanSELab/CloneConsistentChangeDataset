digraph {
7 [style = filled, label = "Preconditions.checkArgument(eqJoinConjuncts != null && !eqJoinConjuncts.isEmpty())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "nullableTupleIds.addAll(inner.getTupleIds())@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "PlanNode outer@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
46 [style = filled, label = "PlanNode inner@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "HashJoinNode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "CrossJoinNode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "joinOp.equals(JoinOperator.FULL_OUTER_JOIN)@@@25@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "children.add(outer)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "this.distrMode = DistributionMode.NONE@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "HashJoinNode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "this.joinOp = innerRef.getJoinOp()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "joinOp.equals(JoinOperator.RIGHT_OUTER_JOIN)@@@32@@@['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "Preconditions.checkArgument(eqJoinPredicate instanceof BinaryPredicate)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "nullableTupleIds.addAll(inner.getNullableTupleIds())@@@12@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "innerRef_ = innerRef@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "this.innerRef = innerRef@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "PlanNode outer@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "children.add(inner)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "TableRef innerRef@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "List<Expr> otherJoinConjuncts@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "nullableTupleIds.addAll(outer.getTupleIds())@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "nullableTupleIds.addAll(inner.getNullableTupleIds())@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "this.isPushDown = false@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "PlanNode outer@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "PlanNode inner@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "PlanNode inner@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "nullableTupleIds.addAll(outer.getTupleIds())@@@31@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "nullableTupleIds.addAll(inner.getTupleIds())@@@28@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "this.isPushDown = true@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "nullableTupleIds.addAll(outer.getNullableTupleIds())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "PlanNodeId id@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "nullableTupleIds.addAll(outer.getTupleIds())@@@33@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "nullableTupleIds.addAll(outer.getNullableTupleIds())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "super(id,\"HASH JOIN\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Preconditions.checkArgument(otherJoinConjuncts != null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "this.otherJoinConjuncts = otherJoinConjuncts@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "PlanNodeId id@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "tblRefIds.addAll(inner.getTblRefIds())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "nullableTupleIds.addAll(inner.getNullableTupleIds())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "this.eqJoinConjuncts.add((BinaryPredicate)eqJoinPredicate)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "tupleIds.addAll(outer.getTupleIds())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "TableRef innerRef@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "TableRef innerRef@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "List<Expr> eqJoinConjuncts@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "super(id,\"CROSS JOIN\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "PlanNodeId id@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "tblRefIds.addAll(outer.getTblRefIds())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "tupleIds.addAll(inner.getTupleIds())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "this.joinOp.isInnerJoin() || this.joinOp.isLeftSemiJoin()@@@20@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "joinOp.equals(JoinOperator.LEFT_OUTER_JOIN)@@@29@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "nullableTupleIds.addAll(inner.getTupleIds())@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "List<Expr> otherJoinConjuncts@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9->36 [style = dashed, label="0"];
38->39 [style = dotted, label="true"];
40->32 [style = dotted, label="true"];
48->11 [style = solid, label="outer"];
38->39 [style = bold, label=""];
2->25 [style = dotted, label="true"];
8->36 [style = bold, label=""];
37->38 [style = bold, label=""];
7->16 [style = bold, label=""];
9->5 [style = bold, label=""];
49->48 [style = dotted, label="true"];
40->41 [style = dotted, label="true"];
2->20 [style = dotted, label="true"];
21->6 [style = dotted, label="false"];
13->17 [style = dotted, label="true"];
2->0 [style = dotted, label="true"];
23->30 [style = bold, label=""];
13->3 [style = dotted, label="true"];
51->23 [style = bold, label=""];
30->27 [style = bold, label=""];
2->18 [style = bold, label=""];
21->22 [style = dotted, label="true"];
17->37 [style = bold, label=""];
40->35 [style = dotted, label="true"];
4->15 [style = solid, label="outer"];
29->26 [style = bold, label=""];
27->11 [style = bold, label=""];
49->44 [style = dotted, label="true"];
21->22 [style = bold, label=""];
19->26 [style = bold, label=""];
20->28 [style = solid, label="otherJoinConjuncts"];
17->43 [style = dotted, label="true"];
41->10 [style = solid, label="innerRef"];
31->28 [style = bold, label=""];
25->18 [style = solid, label="id"];
18->7 [style = bold, label=""];
17->21 [style = dotted, label="true"];
20->16 [style = solid, label="otherJoinConjuncts"];
49->46 [style = dotted, label="true"];
36->42 [style = bold, label=""];
6->24 [style = dotted, label="true"];
40->34 [style = dotted, label="true"];
45->51 [style = bold, label=""];
25->7 [style = solid, label="eqJoinConjuncts"];
49->50 [style = dotted, label="true"];
6->24 [style = bold, label=""];
16->23 [style = bold, label=""];
34->15 [style = solid, label="outer"];
26->19 [style = bold, label=""];
33->16 [style = solid, label="otherJoinConjuncts"];
17->43 [style = bold, label=""];
12->13 [style = bold, label=""];
37->6 [style = dotted, label="true"];
36->13 [style = bold, label=""];
11->10 [style = bold, label=""];
2->4 [style = dotted, label="true"];
3->17 [style = bold, label=""];
2->14 [style = dotted, label="true"];
47->45 [style = bold, label=""];
50->47 [style = solid, label="id"];
37->38 [style = dotted, label="false"];
40->25 [style = dotted, label="true"];
15->8 [style = bold, label=""];
8->12 [style = bold, label=""];
25->50 [style = dashed, label="0"];
17->37 [style = dotted, label="false"];
0->18 [style = solid, label="id"];
43->21 [style = bold, label=""];
1->10 [style = solid, label="innerRef"];
42->13 [style = bold, label=""];
18->47 [style = dashed, label="0"];
28->15 [style = bold, label=""];
46->15 [style = solid, label="inner"];
40->33 [style = dotted, label="true"];
21->6 [style = bold, label=""];
35->7 [style = solid, label="eqJoinConjuncts"];
19->31 [style = bold, label=""];
14->8 [style = solid, label="inner"];
40->18 [style = bold, label=""];
33->28 [style = solid, label="otherJoinConjuncts"];
36->42 [style = dotted, label="true"];
37->6 [style = bold, label=""];
44->45 [style = solid, label="innerRef"];
11->15 [style = bold, label=""];
49->47 [style = bold, label=""];
13->3 [style = bold, label=""];
10->29 [style = bold, label=""];
5->12 [style = bold, label=""];
2->1 [style = dotted, label="true"];
8->9 [style = bold, label=""];
32->8 [style = solid, label="inner"];
13->21 [style = dotted, label="false"];
13->21 [style = bold, label=""];
}
