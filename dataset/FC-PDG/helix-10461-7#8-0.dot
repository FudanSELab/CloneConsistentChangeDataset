digraph {
20 [style = filled, label = "Assert.assertEquals(countRunningPartition(flow,jobName2),_numNodes * perNodeTaskLimitation)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "setParticipantsCapacity(perNodeTaskLimitation)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "_driver.pollForWorkflowState(flow.getName(),TaskState.STOPPED)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "_driver.pollForJobState(flow1.getName(),TaskUtil.getNamespacedJobName(flow1.getName(),jobName1),TaskState.IN_PROGRESS)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "testJobPriority['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "String jobName3 = \"Job3\"@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String jobName2 = \"Job2\"@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "String jobName1 = \"PriorityJob1\"@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertEquals(countRunningPartition(flow1,jobName1),_numNodes * perNodeTaskLimitation)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "_driver.stop(flow.getName())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "_driver.pollForJobState(flow.getName(),TaskUtil.getNamespacedJobName(flow.getName(),jobName2),TaskState.IN_PROGRESS)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Workflow flow = WorkflowGenerator.generateSingleJobWorkflowBuilder(jobName1,jobConfig).build()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Thread.sleep(4000)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "_driver.start(flow1)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "_setupTool.getClusterManagementTool().setConfig(scope,properties)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "flow = WorkflowGenerator.generateSingleJobWorkflowBuilder(jobName2,jobConfig).build()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "_driver.pollForJobState(flow.getName(),TaskUtil.getNamespacedJobName(flow.getName(),jobName3),TaskState.COMPLETED)@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int perNodeTaskLimitation = 5@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "_driver.pollForWorkflowState(flow.getName(),TaskState.STOPPED)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testTaskThrottle['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "int numTasks = 30 * _numNodes@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "_driver.start(flow)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Thread.sleep(1500)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "_driver.start(flow2)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "JobConfig.Builder jobConfig = generateLongRunJobConfig(numTasks)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "_driver.stop(flow2.getName())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "_driver.stop(flow.getName())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(countRunningPartition(flow,jobName1),numTasks)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "_driver.pollForWorkflowState(flow1.getName(),TaskState.STOPPED)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testTaskThrottle['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Map<String,String> properties = new HashMap<String,String>()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "HelixConfigScope scope = new HelixConfigScopeBuilder(HelixConfigScope.ConfigScopeProperty.CLUSTER).forCluster(CLUSTER_NAME).build()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "jobConfig.setJobCommandConfigMap(ImmutableMap.of(MockTask.JOB_DELAY,\"10\"))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertEquals(countRunningPartition(flow2,jobName2),0)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "_driver.stop(flow1.getName())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "Workflow flow2 = WorkflowGenerator.generateSingleJobWorkflowBuilder(jobName2,jobConfig).build()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "_driver.start(flow)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "String jobName2 = \"PriorityJob2\"@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "Thread.sleep(1500)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "_driver.pollForJobState(flow2.getName(),TaskUtil.getNamespacedJobName(flow2.getName(),jobName2),TaskState.IN_PROGRESS)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "properties.put(ClusterConfig.ClusterConfigProperty.MAX_CONCURRENT_TASK_PER_INSTANCE.name(),new Integer(perNodeTaskLimitation).toString())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "setParticipantsCapacity(perNodeTaskLimitation)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "_driver.start(flow)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Workflow flow1 = WorkflowGenerator.generateSingleJobWorkflowBuilder(jobName1,jobConfig).build()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "String jobName1 = \"Job1\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "flow = WorkflowGenerator.generateSingleJobWorkflowBuilder(jobName3,jobConfig).build()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "_driver.pollForJobState(flow.getName(),TaskUtil.getNamespacedJobName(flow.getName(),jobName1),TaskState.IN_PROGRESS)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertEquals(countRunningPartition(flow2,jobName2),0)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "perNodeTaskLimitation = 2 * perNodeTaskLimitation@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "Assert.assertEquals(countRunningPartition(flow1,jobName1),_numNodes * perNodeTaskLimitation)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "Thread.sleep(1500)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "_driver.pollForWorkflowState(flow2.getName(),TaskState.STOPPED)@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "_gSetupTool.getClusterManagementTool().setConfig(scope,properties)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18->3 [style = bold, label=""];
6->22 [style = bold, label=""];
42->45 [style = bold, label=""];
1->29 [style = solid, label="scope"];
27->28 [style = bold, label=""];
15->37 [style = solid, label="perNodeTaskLimitation"];
38->42 [style = bold, label=""];
51->32 [style = bold, label=""];
45->34 [style = solid, label="jobName2"];
13->1 [style = bold, label=""];
20->27 [style = bold, label=""];
8->0 [style = bold, label=""];
5->3 [style = solid, label="jobName3"];
51->26 [style = solid, label="perNodeTaskLimitation"];
15->20 [style = solid, label="perNodeTaskLimitation"];
37->31 [style = bold, label=""];
10->29 [style = solid, label="properties"];
2->12 [style = solid, label="numTasks"];
2->15 [style = bold, label=""];
26->35 [style = bold, label=""];
21->14 [style = solid, label="flow"];
23->12 [style = bold, label=""];
9->29 [style = bold, label=""];
33->44 [style = bold, label=""];
17->21 [style = bold, label=""];
19->12 [style = solid, label="flow"];
48->49 [style = bold, label=""];
31->26 [style = solid, label="jobName1"];
24->18 [style = bold, label=""];
5->34 [style = dashed, label="0"];
35->52 [style = bold, label=""];
15->51 [style = solid, label="perNodeTaskLimitation"];
45->36 [style = solid, label="jobName2"];
7->5 [style = bold, label=""];
0->23 [style = bold, label=""];
31->33 [style = bold, label=""];
44->41 [style = bold, label=""];
19->8 [style = solid, label="flow"];
41->38 [style = bold, label=""];
47->36 [style = solid, label="flow2"];
26->20 [style = bold, label=""];
14->4 [style = bold, label=""];
50->34 [style = bold, label=""];
45->35 [style = solid, label="jobName2"];
16->13 [style = bold, label=""];
36->51 [style = bold, label=""];
29->17 [style = bold, label=""];
33->44 [style = solid, label="flow1"];
32->46 [style = bold, label=""];
34->40 [style = bold, label=""];
22->19 [style = bold, label=""];
22->0 [style = solid, label="jobName1"];
43->2 [style = bold, label=""];
15->42 [style = solid, label="perNodeTaskLimitation"];
25->17 [style = bold, label=""];
31->41 [style = solid, label="jobName1"];
47->50 [style = bold, label=""];
33->42 [style = solid, label="flow1"];
33->26 [style = solid, label="flow1"];
6->37 [style = bold, label=""];
17->20 [style = solid, label="jobName2"];
20->42 [style = dashed, label="0"];
40->36 [style = bold, label=""];
18->36 [style = dashed, label="0"];
5->24 [style = bold, label=""];
10->9 [style = bold, label=""];
47->35 [style = solid, label="flow2"];
2->6 [style = solid, label="numTasks"];
21->20 [style = solid, label="flow"];
21->14 [style = bold, label=""];
10->25 [style = solid, label="properties"];
52->39 [style = bold, label=""];
39->48 [style = bold, label=""];
28->7 [style = bold, label=""];
4->26 [style = bold, label=""];
15->6 [style = bold, label=""];
12->16 [style = bold, label=""];
11->2 [style = bold, label=""];
19->8 [style = bold, label=""];
46->26 [style = bold, label=""];
31->42 [style = solid, label="jobName1"];
51->32 [style = solid, label="perNodeTaskLimitation"];
1->25 [style = solid, label="scope"];
17->4 [style = solid, label="jobName2"];
24->18 [style = solid, label="flow"];
9->25 [style = bold, label=""];
22->12 [style = solid, label="jobName1"];
45->47 [style = bold, label=""];
25->29 [style = dashed, label="0"];
30->2 [style = bold, label=""];
1->10 [style = bold, label=""];
47->50 [style = solid, label="flow2"];
}
