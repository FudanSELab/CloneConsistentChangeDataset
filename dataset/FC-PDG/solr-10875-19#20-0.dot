digraph {
26 [style = filled, label = "streamA = new CloudSolrStream(zkHost,COLLECTIONORALIAS,sParamsA)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "Map<String,Tuple> eofTuples = pstream.getEofTuples()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "CloudSolrStream streamA = new CloudSolrStream(zkHost,COLLECTION,sParamsA)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "tuples = getTuples(pstream)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "CloudSolrStream streamA = new CloudSolrStream(zkHost,COLLECTIONORALIAS,sParamsA)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "attachStreamFactory(pstream)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(9,tuples.size())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "CloudSolrStream streamB = new CloudSolrStream(zkHost,COLLECTIONORALIAS,sParamsB)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "SolrParams sParamsB = mapParams(\"q\",\"id:(0 2 3 6)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i asc\",\"partitionKeys\",\"a_i\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"0\").add(id,\"2\",\"a_s\",\"hello2\",\"a_i\",\"2\",\"a_f\",\"0\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\").add(id,\"1\",\"a_s\",\"hello1\",\"a_i\",\"1\",\"a_f\",\"1\").add(id,\"5\",\"a_s\",\"hello0\",\"a_i\",\"10\",\"a_f\",\"0\").add(id,\"6\",\"a_s\",\"hello2\",\"a_i\",\"8\",\"a_f\",\"0\").add(id,\"7\",\"a_s\",\"hello3\",\"a_i\",\"7\",\"a_f\",\"3\").add(id,\"8\",\"a_s\",\"hello4\",\"a_i\",\"11\",\"a_f\",\"4\").add(id,\"9\",\"a_s\",\"hello1\",\"a_i\",\"100\",\"a_f\",\"1\").commit(cluster.getSolrClient(),COLLECTIONORALIAS)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "streamA = new CloudSolrStream(zkHost,COLLECTION,sParamsA)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "List<Tuple> tuples = getTuples(pstream)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(numWorkers,eofTuples.size())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(8,tuples.size())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "pstream = parallelStream(mstream,new FieldComparator(\"a_i\",ComparatorOrder.DESCENDING))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testParallelMergeStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testParallelMergeStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "streamB = new CloudSolrStream(zkHost,COLLECTION,sParamsB)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "sParamsB = mapParams(\"q\",\"id:(0 2 3 6)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i desc\",\"partitionKeys\",\"a_i\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"0\").add(id,\"2\",\"a_s\",\"hello2\",\"a_i\",\"2\",\"a_f\",\"0\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\").add(id,\"1\",\"a_s\",\"hello1\",\"a_i\",\"1\",\"a_f\",\"1\").add(id,\"5\",\"a_s\",\"hello0\",\"a_i\",\"10\",\"a_f\",\"0\").add(id,\"6\",\"a_s\",\"hello2\",\"a_i\",\"8\",\"a_f\",\"0\").add(id,\"7\",\"a_s\",\"hello3\",\"a_i\",\"7\",\"a_f\",\"3\").add(id,\"8\",\"a_s\",\"hello4\",\"a_i\",\"11\",\"a_f\",\"4\").add(id,\"9\",\"a_s\",\"hello1\",\"a_i\",\"100\",\"a_f\",\"1\").commit(cluster.getSolrClient(),COLLECTION)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "attachStreamFactory(pstream)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testParallelEOF['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ParallelStream pstream = parallelStream(mstream,new FieldComparator(\"a_i\",ComparatorOrder.ASCENDING))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "CloudSolrStream streamB = new CloudSolrStream(zkHost,COLLECTION,sParamsB)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new FieldComparator(\"a_i\",ComparatorOrder.DESCENDING))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "streamB = new CloudSolrStream(zkHost,COLLECTIONORALIAS,sParamsB)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "MergeStream mstream = new MergeStream(streamA,streamB,new FieldComparator(\"a_i\",ComparatorOrder.ASCENDING))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "sParamsA = mapParams(\"q\",\"id:(4 1 8 9)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i desc\",\"partitionKeys\",\"a_i\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "SolrParams sParamsA = mapParams(\"q\",\"id:(4 1 8 7 9)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i asc\",\"partitionKeys\",\"a_i\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertOrder(tuples,9,8,6,4,3,2,1,0)@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertOrder(tuples,0,1,2,3,4,7,6,8,9)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->24 [style = dashed, label="0"];
26->7 [style = solid, label="streamA"];
15->13 [style = bold, label=""];
23->7 [style = solid, label="streamB"];
0->26 [style = bold, label=""];
9->0 [style = bold, label=""];
5->6 [style = solid, label="pstream"];
2->3 [style = solid, label="pstream"];
21->6 [style = bold, label=""];
26->10 [style = bold, label=""];
29->30 [style = bold, label=""];
7->2 [style = solid, label="mstream"];
10->23 [style = solid, label="sParamsB"];
6->18 [style = bold, label=""];
2->3 [style = bold, label=""];
8->7 [style = solid, label="streamB"];
11->26 [style = dashed, label="0"];
12->15 [style = bold, label=""];
1->20 [style = bold, label=""];
0->11 [style = bold, label=""];
19->17 [style = bold, label=""];
3->12 [style = bold, label=""];
16->19 [style = bold, label=""];
6->9 [style = solid, label="tuples"];
25->17 [style = bold, label=""];
4->22 [style = solid, label="sParamsB"];
8->7 [style = bold, label=""];
2->12 [style = solid, label="pstream"];
20->5 [style = bold, label=""];
20->5 [style = solid, label="mstream"];
1->22 [style = dashed, label="0"];
0->26 [style = solid, label="sParamsA"];
5->21 [style = bold, label=""];
17->14 [style = solid, label="sParamsA"];
18->29 [style = bold, label=""];
17->24 [style = solid, label="sParamsA"];
17->24 [style = bold, label=""];
24->4 [style = bold, label=""];
24->20 [style = solid, label="streamA"];
10->8 [style = bold, label=""];
22->20 [style = bold, label=""];
17->14 [style = bold, label=""];
11->10 [style = bold, label=""];
7->2 [style = bold, label=""];
10->23 [style = bold, label=""];
4->1 [style = solid, label="sParamsB"];
11->7 [style = solid, label="streamA"];
18->9 [style = bold, label=""];
28->19 [style = bold, label=""];
1->20 [style = solid, label="streamB"];
4->1 [style = bold, label=""];
23->7 [style = bold, label=""];
22->20 [style = solid, label="streamB"];
19->25 [style = dashed, label="0"];
12->13 [style = solid, label="tuples"];
5->21 [style = solid, label="pstream"];
14->20 [style = solid, label="streamA"];
4->22 [style = bold, label=""];
27->25 [style = bold, label=""];
10->8 [style = solid, label="sParamsB"];
8->23 [style = dashed, label="0"];
14->4 [style = bold, label=""];
0->11 [style = solid, label="sParamsA"];
}
