digraph {
17 [style = filled, label = "assertTrue(actual.getBindingTableRules().isEmpty())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ShardingRuleConfiguration actual = shardingRuleConfigurationYamlSwapper.swapToObject(yamlConfig)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "yamlConfig.getTables().put(\"tbl\",mock())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertNull(actual.getDefaultShardingColumn())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertThat(actual.getDefaultKeyGenerateAlgorithm(),instanceOf())@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertSwapToObjectWithMinProperties['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(actual.getTables().size(),is(1))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(actual.getBroadcastTables().isEmpty())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertNull(actual.getDefaultKeyGenerateStrategy())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(actual.getBindingTableGroups().isEmpty())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ShardingRule actual = createMinimumShardingRule()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertNull(actual.getDefaultDatabaseShardingStrategy())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(actual.getBroadcastTables().isEmpty())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertNewShardingRuleWithMinimumConfiguration['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(actual.getTableRules().size(),is(1))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertNull(actual.getDefaultTableShardingStrategy())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertSwapToObjectWithMinProperties['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "YamlShardingRuleConfiguration yamlConfig = new YamlShardingRuleConfiguration()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->5 [style = bold, label=""];
5->3 [style = bold, label=""];
8->1 [style = bold, label=""];
14->15 [style = bold, label=""];
1->2 [style = bold, label=""];
16->13 [style = bold, label=""];
13->12 [style = bold, label=""];
10->5 [style = bold, label=""];
7->8 [style = bold, label=""];
17->14 [style = bold, label=""];
3->4 [style = bold, label=""];
2->6 [style = bold, label=""];
5->4 [style = solid, label="yamlConfig"];
6->11 [style = bold, label=""];
1->15 [style = dashed, label="0"];
12->17 [style = bold, label=""];
4->0 [style = bold, label=""];
0->7 [style = bold, label=""];
}
