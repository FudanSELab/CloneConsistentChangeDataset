digraph {
3 [style = filled, label = "Function<String,Integer> lengthFuncErr = new Function<String,Integer>(){@Override public Integer apply(String t1){if (\"b\".equals(t1)) {throw new RuntimeException(\"Forced Failure\")}return t1.length()}}@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "toMultimapWithError['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Single<Map<Integer,Collection<String>>> mapped = source.toMultimap(lengthFuncErr)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Observable<String> source = Observable.just(\"a\",\"b\",\"cc\",\"dd\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Map<Integer,Collection<String>> expected = new HashMap<Integer,Collection<String>>()@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Flowable<String> source = Flowable.just(\"a\",\"b\",\"cc\",\"dd\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "mapped.subscribe(singleObserver)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expected.put(1,Arrays.asList(\"a\",\"b\"))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Map<Integer,Collection<String>> expected = new HashMap<>()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "expected.put(2,Arrays.asList(\"cc\",\"dd\"))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "verify(singleObserver,never()).onSuccess(expected)@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "toMultimapWithError['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "verify(singleObserver,times(1)).onError(any())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "toMultimapWithError['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->3 [style = bold, label=""];
7->9 [style = bold, label=""];
11->9 [style = solid, label="expected"];
12->13 [style = bold, label=""];
11->5 [style = bold, label=""];
8->4 [style = bold, label=""];
2->7 [style = bold, label=""];
5->6 [style = bold, label=""];
13->3 [style = bold, label=""];
3->8 [style = solid, label="lengthFuncErr"];
10->1 [style = bold, label=""];
4->11 [style = dashed, label="0"];
8->11 [style = bold, label=""];
4->5 [style = bold, label=""];
0->1 [style = bold, label=""];
3->8 [style = bold, label=""];
4->9 [style = solid, label="expected"];
6->2 [style = bold, label=""];
1->13 [style = dashed, label="0"];
}
