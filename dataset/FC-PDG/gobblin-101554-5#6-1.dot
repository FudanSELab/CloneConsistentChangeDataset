digraph {
26 [style = filled, label = "embeddedGobblin_2.run()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "testAvroRecompactionWithLimitation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "EmbeddedGobblin embeddedGobblin = createEmbeddedGobblinCompactionJob(\"Recompaction-First\",basePath)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "Assert.assertTrue(result.isSuccessful())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "GenericRecord r1 = createRandomRecord()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertTrue(fs.exists(new Path(basePath,\"Identity/MemberAccount/hourly/2017/04/03/10\")))@@@29@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testAvroRecompaction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(recordCount,20)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertTrue(result.isSuccessful())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "State state = InputRecordCountHelper.loadState(fs,(new Path(basePath,new Path(\"Identity/MemberAccount/hourly/2017/04/03/10\"))))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "embeddedGobblin_2.run()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "embeddedGobblin_2.setConfiguration(TimeBasedSubDirDatasetsFinder.MIN_RECOMPACTION_DURATION,\"8h\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertTrue(result.isSuccessful())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertTrue(jobDir.mkdirs())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(recordCount,20)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "FileSystem fs = getFileSystem()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "JobExecutionResult result = embeddedGobblin.run()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String basePath = \"/tmp/testRecompaction\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "recordCount = InputRecordCountHelper.readRecordCount(fs,(new Path(basePath,new Path(\"Identity/MemberAccount/hourly/2017/04/03/10\"))))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testAvroRecompaction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "EmbeddedGobblin embeddedGobblin_2 = createEmbeddedGobblinCompactionJob(\"Recompaction-Second\",basePath)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "InputRecordCountHelper.saveState(fs,(new Path(basePath,new Path(\"Identity/MemberAccount/hourly/2017/04/03/10\"))),state)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "state.setProp(CompactionSlaEventHelper.LAST_RUN_START_TIME,Long.toString(state.getPropAsLong(CompactionSlaEventHelper.LAST_RUN_START_TIME) - 8 * 60 * 60 * 1000))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "EmbeddedGobblin embeddedGobblin_2 = createEmbeddedGobblin(\"Recompaction-Second\",basePath)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(recordCount,42)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "EmbeddedGobblin embeddedGobblin = createEmbeddedGobblin(\"Recompaction-First\",basePath)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "long recordCount = InputRecordCountHelper.readRecordCount(fs,(new Path(basePath,new Path(\"Identity/MemberAccount/hourly/2017/04/03/10\"))))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "writeFileWithContent(jobDir,\"file1\",r1,20)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "writeFileWithContent(jobDir,\"file2\",r1,22)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "fs.delete(new Path(basePath),true)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "String basePath = \"/tmp/testRecompactionWithLimitation\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "recordCount = InputRecordCountHelper.readRecordCount(fs,(new Path(basePath,new Path(\"Identity/MemberAccount/hourly/2017/04/03/10\"))))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "File jobDir = new File(basePath,\"Identity/MemberAccount/minutely/2017/04/03/10/20_30/run_2017-04-03-10-20\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
5->10 [style = bold, label=""];
28->29 [style = bold, label=""];
29->8 [style = bold, label=""];
9->1 [style = solid, label="basePath"];
4->1 [style = solid, label="fs"];
4->6 [style = solid, label="fs"];
9->17 [style = solid, label="basePath"];
15->11 [style = solid, label="r1"];
16->11 [style = bold, label=""];
6->30 [style = solid, label="recordCount"];
29->8 [style = solid, label="recordCount"];
3->1 [style = bold, label=""];
21->19 [style = bold, label=""];
5->20 [style = bold, label=""];
23->27 [style = bold, label=""];
9->2 [style = solid, label="basePath"];
9->10 [style = solid, label="basePath"];
1->16 [style = solid, label="recordCount"];
4->24 [style = solid, label="fs"];
9->14 [style = solid, label="basePath"];
11->21 [style = bold, label=""];
30->23 [style = bold, label=""];
31->23 [style = solid, label="basePath"];
10->3 [style = bold, label=""];
9->17 [style = bold, label=""];
1->18 [style = bold, label=""];
11->12 [style = bold, label=""];
20->3 [style = bold, label=""];
31->2 [style = solid, label="basePath"];
9->21 [style = solid, label="basePath"];
31->6 [style = solid, label="basePath"];
31->29 [style = solid, label="basePath"];
23->24 [style = solid, label="state"];
12->21 [style = dashed, label="0"];
15->5 [style = bold, label=""];
14->7 [style = bold, label=""];
22->4 [style = bold, label=""];
4->31 [style = bold, label=""];
24->26 [style = bold, label=""];
14->5 [style = solid, label="jobDir"];
31->1 [style = solid, label="basePath"];
9->31 [style = dashed, label="0"];
19->13 [style = bold, label=""];
8->2 [style = bold, label=""];
17->14 [style = bold, label=""];
0->4 [style = bold, label=""];
15->5 [style = solid, label="r1"];
12->25 [style = bold, label=""];
9->12 [style = solid, label="basePath"];
6->8 [style = bold, label=""];
9->6 [style = solid, label="basePath"];
25->19 [style = bold, label=""];
31->14 [style = solid, label="basePath"];
7->15 [style = bold, label=""];
10->20 [style = dashed, label="0"];
27->24 [style = bold, label=""];
32->4 [style = bold, label=""];
14->11 [style = solid, label="jobDir"];
26->28 [style = bold, label=""];
6->30 [style = bold, label=""];
13->6 [style = bold, label=""];
31->17 [style = bold, label=""];
12->19 [style = bold, label=""];
6->8 [style = solid, label="recordCount"];
9->20 [style = solid, label="basePath"];
4->23 [style = solid, label="fs"];
4->29 [style = solid, label="fs"];
31->17 [style = solid, label="basePath"];
31->10 [style = solid, label="basePath"];
31->24 [style = solid, label="basePath"];
31->12 [style = solid, label="basePath"];
18->16 [style = bold, label=""];
}
