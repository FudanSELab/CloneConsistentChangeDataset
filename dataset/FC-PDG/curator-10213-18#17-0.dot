digraph {
25 [style = filled, label = "assertTrue(stat != null || creationTrigger.firedWithin(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "node.debugCreateNodeLatch = new CountDownLatch(1)@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Trigger deletionTrigger = Trigger.deletedOrSetData()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Trigger deletionTrigger = Trigger.deleted()@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "node.debugCreateNodeLatch.countDown()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "stat = observer.checkExists().usingWatcher(creationTrigger).forPath(path)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "PersistentEphemeralNode node = new PersistentEphemeralNode(curator,PersistentEphemeralNode.Mode.EPHEMERAL,PATH,new byte(((()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Trigger deletedTrigger = Trigger.deleted()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertNodeExists(observer,node.getActualPath())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "String path = node.getActualPath()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "CuratorFramework curator = newCurator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "node.debugCreateNodeLatch = new CountDownLatch(1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertTrue(deletedTrigger.firedWithin(timing.forSessionSleep().seconds(),TimeUnit.SECONDS))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertTrue(deletionTrigger.firedWithin(timing.multiple(1.5).forSessionSleep().seconds(),TimeUnit.SECONDS))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "node.waitForInitialCreate(timing.forWaiting().seconds(),TimeUnit.SECONDS)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i < 5@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertNodeExists(observer,path)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testRecreatesNodeWhenSessionReconnectsMultipleTimes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "KillSession.kill(curator.getZookeeperClient().getZooKeeper())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Stat stat = observer.checkExists().usingWatcher(deletionTrigger).forPath(path)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "i++@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(stat != null || creationTrigger.firedWithin(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertNotNull(stat,\"node should exist: \" + path)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "{CloseableUtils.closeQuietly(node)}@@@26@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "testDeletesNodeWhenSessionDisconnects['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "CuratorFramework observer = newCurator()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "{CloseableUtils.closeQuietly(node)}@@@25@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "{CloseableUtils.closeQuietly(node)}@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Trigger creationTrigger = Trigger.created()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int i = 0@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "node.debugCreateNodeLatch.countDown()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "observer.checkExists().usingWatcher(deletedTrigger).forPath(node.getActualPath())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "KillSession.kill(curator.getZookeeperClient().getZooKeeper())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "node.start()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testRecreatesNodeWhenSessionReconnectsMultipleTimes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "observer.checkExists().usingWatcher(deletionTrigger).forPath(path)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18->5 [style = solid, label="path"];
0->9 [style = solid, label="node"];
28->29 [style = bold, label=""];
32->35 [style = bold, label=""];
22->25 [style = bold, label=""];
18->10 [style = solid, label="path"];
16->7 [style = solid, label="i"];
4->14 [style = bold, label=""];
14->19 [style = solid, label="stat"];
7->2 [style = dotted, label="true"];
7->6 [style = dotted, label="true"];
30->17 [style = bold, label=""];
20->7 [style = solid, label="i"];
7->10 [style = dotted, label="true"];
0->13 [style = bold, label=""];
18->22 [style = solid, label="path"];
26->17 [style = bold, label=""];
0->8 [style = solid, label="node"];
16->20 [style = solid, label="i"];
7->19 [style = dotted, label="true"];
19->20 [style = bold, label=""];
33->28 [style = bold, label=""];
12->15 [style = bold, label=""];
16->7 [style = bold, label=""];
14->22 [style = bold, label=""];
3->33 [style = solid, label="observer"];
14->22 [style = dashed, label="0"];
14->19 [style = bold, label=""];
34->31 [style = bold, label=""];
0->27 [style = solid, label="node"];
2->10 [style = bold, label=""];
13->11 [style = bold, label=""];
10->6 [style = bold, label=""];
7->15 [style = dotted, label="true"];
7->24 [style = dotted, label="true"];
11->18 [style = bold, label=""];
3->0 [style = bold, label=""];
1->17 [style = bold, label=""];
3->5 [style = solid, label="observer"];
7->20 [style = dotted, label="true"];
7->12 [style = dotted, label="true"];
5->16 [style = bold, label=""];
7->9 [style = bold, label=""];
17->0 [style = solid, label="curator"];
18->23 [style = solid, label="path"];
25->20 [style = bold, label=""];
23->24 [style = bold, label=""];
23->24 [style = solid, label="stat"];
7->23 [style = dotted, label="true"];
2->21 [style = dashed, label="0"];
18->14 [style = solid, label="path"];
7->2 [style = bold, label=""];
18->5 [style = bold, label=""];
29->32 [style = bold, label=""];
6->8 [style = bold, label=""];
22->25 [style = solid, label="stat"];
15->4 [style = bold, label=""];
7->4 [style = dotted, label="true"];
7->25 [style = dotted, label="true"];
17->3 [style = bold, label=""];
7->27 [style = bold, label=""];
7->21 [style = bold, label=""];
11->33 [style = bold, label=""];
18->24 [style = solid, label="path"];
24->8 [style = bold, label=""];
20->7 [style = bold, label=""];
35->34 [style = bold, label=""];
7->22 [style = dotted, label="true"];
7->8 [style = dotted, label="true"];
7->21 [style = dotted, label="true"];
10->23 [style = dashed, label="0"];
12->34 [style = dashed, label="0"];
31->8 [style = bold, label=""];
8->12 [style = bold, label=""];
18->33 [style = dashed, label="0"];
21->23 [style = bold, label=""];
7->14 [style = dotted, label="true"];
}
