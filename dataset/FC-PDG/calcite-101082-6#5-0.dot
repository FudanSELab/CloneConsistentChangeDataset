digraph {
10 [style = filled, label = "final RexNode iNe30 = f.ne(f.i,f.literal(30))@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "testSimpleGreaterCond['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "f.checkImplies(iEq30,iEq30)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "final RexNode node5 = f.eq(f.i,f.literal(30))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testSimpleEq['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "f.checkImplies(iNe10,iNe10)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "f.checkImplies(node2,node1)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "f.checkNotImplies(node2,node1)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "f.checkNotImplies(node4,node6)@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "f.checkImplies(node5,node1)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "f.checkImplies(iEq30,iNe10)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "f.checkNotImplies(iNe30,iEq30)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "final Fixture f = new Fixture()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "f.checkNotImplies(iNe10,iEq30)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "f.checkNotImplies(node1,node5)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "f.checkImplies(node3,node1)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final RexNode iEq30 = f.eq(f.i,f.literal(30))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "f.checkNotImplies(node1,node3)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final RexNode node2 = f.gt(f.i,f.literal(30))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final RexNode node6 = f.ne(f.i,f.literal(10))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final RexNode node1 = f.gt(f.i,f.literal(10))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final RexNode node3 = f.ge(f.i,f.literal(30))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final RexNode node1 = f.eq(f.i,f.literal(30))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "f.checkImplies(node1,node2)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "final RexNode node2 = f.ne(f.i,f.literal(10))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "final RexNode iNe10 = f.ne(f.i,f.literal(10))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "f.checkNotImplies(node1,node2)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testSimpleEq['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "f.checkNotImplies(node1,node6)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final RexNode node4 = f.ge(f.i,f.literal(10))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "f.checkImplies(node1,node1)@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
22->26 [style = bold, label=""];
8->14 [style = solid, label="iEq30"];
25->29 [style = solid, label="node4"];
5->12 [style = dashed, label="0"];
4->17 [style = bold, label=""];
1->14 [style = dashed, label="0"];
10->14 [style = bold, label=""];
9->12 [style = solid, label="iNe10"];
0->5 [style = solid, label="node1"];
30->20 [style = bold, label=""];
17->20 [style = solid, label="node1"];
3->21 [style = dashed, label="0"];
9->13 [style = solid, label="iNe10"];
27->30 [style = bold, label=""];
3->1 [style = solid, label="node2"];
20->28 [style = bold, label=""];
16->28 [style = solid, label="node5"];
17->23 [style = solid, label="node1"];
3->6 [style = bold, label=""];
8->11 [style = solid, label="iEq30"];
8->7 [style = solid, label="iEq30"];
17->26 [style = solid, label="node1"];
21->24 [style = bold, label=""];
9->11 [style = solid, label="iNe10"];
17->27 [style = solid, label="node1"];
9->10 [style = bold, label=""];
16->22 [style = bold, label=""];
0->6 [style = solid, label="node1"];
25->16 [style = bold, label=""];
2->4 [style = bold, label=""];
13->11 [style = bold, label=""];
8->13 [style = solid, label="iEq30"];
17->30 [style = solid, label="node1"];
0->17 [style = dashed, label="0"];
4->0 [style = bold, label=""];
23->29 [style = bold, label=""];
24->27 [style = solid, label="node3"];
6->1 [style = bold, label=""];
12->13 [style = bold, label=""];
16->20 [style = solid, label="node5"];
18->27 [style = bold, label=""];
3->9 [style = dashed, label="0"];
28->23 [style = bold, label=""];
24->25 [style = bold, label=""];
14->12 [style = bold, label=""];
15->4 [style = bold, label=""];
8->9 [style = bold, label=""];
0->1 [style = solid, label="node1"];
10->7 [style = solid, label="iNe30"];
4->8 [style = bold, label=""];
0->8 [style = dashed, label="0"];
19->4 [style = bold, label=""];
21->18 [style = solid, label="node2"];
17->18 [style = solid, label="node1"];
21->26 [style = solid, label="node2"];
22->23 [style = solid, label="node6"];
17->21 [style = bold, label=""];
22->29 [style = solid, label="node6"];
11->7 [style = bold, label=""];
17->28 [style = solid, label="node1"];
24->30 [style = solid, label="node3"];
3->5 [style = solid, label="node2"];
26->18 [style = bold, label=""];
}
