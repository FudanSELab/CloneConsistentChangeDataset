digraph {
15 [style = filled, label = "source1.map(new IdentityMap()).connect(source2).map(new IdentityCoMap()).transform(\"Custom Operator\",BasicTypeInfo.INT_TYPE_INFO,new DisabledTimestampCheckingOperator()).addSink(new DiscardingSink<Integer>())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "env.setParallelism(PARALLELISM)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "DataStream<Integer> source2 = env.addSource(new MyNonWatermarkingSource(numElements))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "env.getConfig().disableSysoutLogging()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "env.setStreamTimeCharacteristic(TimeCharacteristic.ProcessingTime)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testDisabledTimestamps['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "DataStream<Integer> source1 = env.addSource(new MyNonWatermarkingSource(numElements))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "DataStream<Integer> source1 = env.addSource(new MyTimestampSource(0L,numElements))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final int numElements = 10@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testTimestampHandling['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "DataStream<Integer> source2 = env.addSource(new MyTimestampSource(0L,numElements))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testTimestampHandling['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "source1.map(new IdentityMap()).connect(source2).map(new IdentityCoMap()).transform(\"Custom Operator\",BasicTypeInfo.INT_TYPE_INFO,new TimestampCheckingOperator()).addSink(new DiscardingSink<Integer>())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "env.execute()@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->3 [style = solid, label="numElements"];
5->13 [style = dashed, label="0"];
6->3 [style = bold, label=""];
5->8 [style = bold, label=""];
1->4 [style = bold, label=""];
15->2 [style = bold, label=""];
11->1 [style = bold, label=""];
4->13 [style = bold, label=""];
0->2 [style = bold, label=""];
8->3 [style = bold, label=""];
12->15 [style = bold, label=""];
0->15 [style = dashed, label="0"];
8->6 [style = bold, label=""];
7->0 [style = bold, label=""];
1->12 [style = solid, label="numElements"];
1->14 [style = solid, label="numElements"];
6->14 [style = bold, label=""];
3->7 [style = bold, label=""];
14->12 [style = bold, label=""];
7->12 [style = dashed, label="0"];
1->7 [style = solid, label="numElements"];
13->8 [style = bold, label=""];
9->1 [style = bold, label=""];
3->14 [style = dashed, label="0"];
10->1 [style = bold, label=""];
4->5 [style = bold, label=""];
}
