digraph {
9 [style = filled, label = "Level logLevel = Level.toLevel(props.getProperty(GOBBLIN_LOG_LEVEL_KEY),Level.INFO)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "LOG.info(\"Job type \" + props.getProperty(JOB_TYPE) + \" did not provide Hadoop token in the environment variable \" + HADOOP_TOKEN_FILE_LOCATION + \". Negotiating Hadoop tokens.\")@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "Config dynamicConfig = dynamicConfigGenerator.generateDynamicConfig(propsAsConfig)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "boolean isEventReportingFailureFatal = PropertiesUtils.getPropAsBoolean(jobProps,ConfigurationKeys.GOBBLIN_JOB_EVENT_REPORTING_FAILURE_FATAL,Boolean.toString(ConfigurationKeys.DEFAULT_GOBBLIN_JOB_EVENT_REPORTING_FAILURE_FATAL))@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "System.getenv(HADOOP_TOKEN_FILE_LOCATION) != null@@@32@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "String jobId@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "TokenUtils.getHadoopTokens(new State(props),Optional.of(tokenFile),new Credentials())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "!this.props.containsKey(ConfigurationKeys.STATE_STORE_FS_URI_KEY)@@@27@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "resolveGobblinJobTemplateIfNecessary(jobProps)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "String jobId@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "LOG.info(String.format(\"Job type %s does not provide Hadoop tokens. Negotiating Hadoop tokens.\",props.getProperty(JOB_TYPE)))@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "List<Tag<?>> tags = Lists.newArrayList()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "HadoopUtils.addGobblinSite()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "this.props.put(entry.getKey(),entry.getValue().unwrapped().toString())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "metadataTags = addAdditionalMetadataTags(jobProps)@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "tags.addAll(Tag.fromMap(AzkabanTags.getAzkabanTags()))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "LOG.info(\"Job type \" + props.getProperty(JOB_TYPE) + \" provided Hadoop token in the environment variable \" + HADOOP_TOKEN_FILE_LOCATION)@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "this.props.setProperty(MAPREDUCE_JOB_CREDENTIALS_BINARY,tokenFile.getAbsolutePath())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "this.props = new Properties()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "this.props.setProperty(\"env.\" + HADOOP_TOKEN_FILE_LOCATION,tokenFile.getAbsolutePath())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "jobProps.setProperty(MetricsReportingService.EVENT_REPORTING_FAILURE_FATAL_KEY,Boolean.toString(isEventReportingFailureFatal))@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "this.props.setProperty(ConfigurationKeys.STATE_STORE_FS_URI_KEY,fsUri)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Config propsAsConfig = ConfigUtils.propertiesToConfig(props)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "AzkabanGobblinDaemon['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "this.ownAzkabanSla = Long.parseLong(jobProps.getProperty(AZKABAN_GOBBLIN_JOB_SLA_IN_SECONDS,DEFAULT_AZKABAN_GOBBLIN_JOB_SLA_IN_SECONDS))@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "!jobProps.containsKey(ConfigurationKeys.JOB_LAUNCHER_TYPE_KEY)@@@48@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "DynamicConfigGenerator dynamicConfigGenerator = DynamicConfigGeneratorFactory.createDynamicConfigGenerator(propsAsConfig)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "RootMetricContext.get(tags)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "String fsUri = conf.get(HADOOP_FS_DEFAULT_NAME)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "this.applicationLauncher = this.closer.register(new ServiceBasedAppLauncher(jobProps,\"Azkaban-\" + UUID.randomUUID()))@@@61@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "this.daemon = new SchedulerDaemon(props)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "AzkabanJobLauncher['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "Configuration conf = new Configuration()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "this.jobListener = initJobListener()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "super(jobId,LOG)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "GobblinMetrics.addCustomTagsToProperties(jobProps,tags)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "this.props.setProperty(ConfigurationKeys.JOB_TRACKING_URL_KEY,Strings.nullToEmpty(conf.get(AZKABAN_LINK_JOBEXEC_URL)))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "boolean isMetricReportingFailureFatal = PropertiesUtils.getPropAsBoolean(jobProps,ConfigurationKeys.GOBBLIN_JOB_METRIC_REPORTING_FAILURE_FATAL,Boolean.toString(ConfigurationKeys.DEFAULT_GOBBLIN_JOB_METRIC_REPORTING_FAILURE_FATAL))@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "AzkabanJobLauncher['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "!this.props.containsKey(ConfigurationKeys.FS_URI_KEY)@@@24@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "List<? extends Tag<?>> metadataTags = Lists.newArrayList()@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "props.containsKey(GOBBLIN_LOG_LEVEL_KEY)@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "this.props.putAll(props)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "jobProps.setProperty(MetricsReportingService.METRICS_REPORTING_FAILURE_FATAL_KEY,Boolean.toString(isMetricReportingFailureFatal))@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "jobProps.setProperty(ConfigurationKeys.JOB_LAUNCHER_TYPE_KEY,JobLauncherFactory.JobLauncherType.MAPREDUCE.toString())@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Properties jobProps = this.props@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "File tokenFile = File.createTempFile(\"mr-azkaban\",\".token\")@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "props.containsKey(JOB_TYPE) && JOB_TYPES_WITH_AUTOMATIC_TOKEN.contains(props.getProperty(JOB_TYPE))@@@32@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "Logger.getLogger(\"org.apache.gobblin\").setLevel(logLevel)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Properties props@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "System.setProperty(HADOOP_TOKEN_FILE_LOCATION,tokenFile.getAbsolutePath())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "LOG.info(\"Job type \" + props.getProperty(JOB_TYPE) + \" provides Hadoop tokens automatically. Using provided tokens.\")@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
58 [style = filled, label = "Properties props@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "this.jobLauncher = this.closer.register(JobLauncherFactory.newJobLauncher(jobProps,jobProps,null,metadataTags))@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "this.props.setProperty(MAPREDUCE_JOB_CREDENTIALS_BINARY,System.getenv(HADOOP_TOKEN_FILE_LOCATION))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "this.props.setProperty(ConfigurationKeys.FS_URI_KEY,fsUri)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "Properties props@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "!Strings.isNullOrEmpty(fsUri)@@@23@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "jobProps.containsKey(ConfigurationKeys.FLOW_NAME_KEY)@@@53@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "System.setProperty(MAPREDUCE_JOB_CREDENTIALS_BINARY,tokenFile.getAbsolutePath())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58->56 [style = solid, label="props"];
21->10 [style = bold, label=""];
14->25 [style = bold, label=""];
54->27 [style = bold, label=""];
46->0 [style = bold, label=""];
5->9 [style = bold, label=""];
0->16 [style = solid, label="jobProps"];
0->8 [style = solid, label="jobProps"];
10->35 [style = bold, label=""];
37->15 [style = bold, label=""];
36->33 [style = bold, label=""];
8->40 [style = bold, label=""];
22->30 [style = bold, label=""];
47->22 [style = bold, label=""];
14->25 [style = solid, label="props"];
30->28 [style = bold, label=""];
2->49 [style = bold, label=""];
46->54 [style = bold, label=""];
48->43 [style = bold, label=""];
39->23 [style = bold, label=""];
5->9 [style = dotted, label="true"];
23->17 [style = bold, label=""];
48->43 [style = dotted, label="true"];
59->6 [style = bold, label=""];
50->47 [style = solid, label="fsUri"];
48->21 [style = dotted, label="false"];
29->47 [style = bold, label=""];
9->51 [style = bold, label=""];
14->21 [style = solid, label="props"];
35->18 [style = bold, label=""];
0->26 [style = solid, label="jobProps"];
15->34 [style = bold, label=""];
27->0 [style = bold, label=""];
31->16 [style = solid, label="metadataTags"];
18->12 [style = bold, label=""];
52->32 [style = dotted, label="true"];
34->31 [style = bold, label=""];
6->49 [style = bold, label=""];
24->38 [style = bold, label=""];
1->4 [style = dotted, label="true"];
26->24 [style = bold, label=""];
43->46 [style = bold, label=""];
48->46 [style = dotted, label="true"];
1->32 [style = dotted, label="true"];
6->2 [style = bold, label=""];
14->41 [style = solid, label="props"];
51->14 [style = bold, label=""];
34->31 [style = dotted, label="true"];
20->41 [style = bold, label=""];
13->22 [style = dotted, label="true"];
38->37 [style = bold, label=""];
46->54 [style = dotted, label="true"];
13->29 [style = dotted, label="true"];
48->12 [style = dotted, label="false"];
9->51 [style = solid, label="logLevel"];
45->56 [style = bold, label=""];
50->30 [style = solid, label="fsUri"];
42->7 [style = bold, label=""];
44->45 [style = bold, label=""];
36->55 [style = dashed, label="0"];
46->10 [style = dotted, label="false"];
41->23 [style = solid, label="propsAsConfig"];
0->19 [style = solid, label="jobProps"];
3->37 [style = bold, label=""];
16->8 [style = bold, label=""];
46->21 [style = dotted, label="false"];
48->18 [style = dotted, label="false"];
48->10 [style = dotted, label="false"];
49->44 [style = bold, label=""];
22->28 [style = bold, label=""];
50->13 [style = bold, label=""];
0->24 [style = solid, label="jobProps"];
52->53 [style = dotted, label="true"];
38->3 [style = bold, label=""];
48->33 [style = dotted, label="false"];
46->35 [style = dotted, label="false"];
49->45 [style = solid, label="tags"];
25->20 [style = bold, label=""];
48->35 [style = dotted, label="false"];
32->58 [style = dashed, label="0"];
1->6 [style = bold, label=""];
34->16 [style = bold, label=""];
52->6 [style = bold, label=""];
11->50 [style = bold, label=""];
59->58 [style = dotted, label="true"];
46->12 [style = dotted, label="false"];
46->18 [style = dotted, label="false"];
7->19 [style = bold, label=""];
14->0 [style = solid, label="props"];
46->33 [style = dotted, label="false"];
46->55 [style = bold, label=""];
5->51 [style = dotted, label="true"];
0->26 [style = bold, label=""];
48->36 [style = bold, label=""];
41->39 [style = solid, label="propsAsConfig"];
8->42 [style = solid, label="isMetricReportingFailureFatal"];
31->16 [style = bold, label=""];
48->36 [style = dotted, label="false"];
49->24 [style = solid, label="tags"];
40->7 [style = solid, label="isEventReportingFailureFatal"];
5->14 [style = bold, label=""];
12->0 [style = bold, label=""];
15->16 [style = solid, label="metadataTags"];
46->27 [style = dotted, label="true"];
46->55 [style = dotted, label="false"];
33->21 [style = solid, label="tokenFile"];
13->29 [style = bold, label=""];
28->46 [style = bold, label=""];
38->3 [style = dotted, label="true"];
0->40 [style = solid, label="jobProps"];
29->47 [style = dotted, label="true"];
46->27 [style = bold, label=""];
28->48 [style = bold, label=""];
59->57 [style = dotted, label="true"];
45->5 [style = bold, label=""];
29->22 [style = bold, label=""];
41->39 [style = bold, label=""];
33->21 [style = bold, label=""];
22->30 [style = dotted, label="true"];
32->6 [style = solid, label="jobId"];
0->31 [style = solid, label="jobProps"];
57->6 [style = solid, label="jobId"];
40->42 [style = bold, label=""];
55->33 [style = bold, label=""];
13->28 [style = bold, label=""];
17->11 [style = bold, label=""];
}
