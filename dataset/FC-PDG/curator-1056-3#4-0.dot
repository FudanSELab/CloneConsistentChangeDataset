digraph {
0 [style = filled, label = "client.checkExists().forPath(\"/\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "client.getCuratorListenable().addListener(new CuratorListener(){@Override public void eventReceived(CuratorFramework client,CuratorEvent event){if (event.getType() == CuratorEventType.EXISTS) {Stat stat = client.checkExists().forPath(\"/yo/yo/yo\")Assert.assertNull(stat)client.create().inBackground(event.getContext()).forPath(\"/what\")}if (event.getType() == CuratorEventType.CREATE) {((CountDownLatch)event.getContext()).countDown()}}})@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testConnectionStateNewClient['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "client.start()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "++i@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertTrue(latch.await(10,TimeUnit.SECONDS))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "testNestedCalls['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "client.getConnectionStateListenable().addListener(new ConnectionStateListener(){@Override public void stateChanged(CuratorFramework client,ConnectionState newState){states.add(newState)}})@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "{CloseableUtils.closeQuietly(client)}@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final BlockingQueue<ConnectionState> states = Queues.newLinkedBlockingQueue()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "int i = 0@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "client = CuratorFrameworkFactory.builder().connectString(cluster.getConnectString()).sessionTimeoutMs(timing.session()).connectionTimeoutMs(timing.connection()).retryPolicy(new RetryNTimes(3,timing.milliseconds())).canBeReadOnly(true).build()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "CountDownLatch latch = new CountDownLatch(1)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "client.start()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "System.out.println(\"making api call\")@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "client = CuratorFrameworkFactory.newClient(cluster.getConnectString(),timing.session(),timing.connection(),new RetryOneTime(100))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "client.checkExists().inBackground(latch).forPath(\"/hey\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "{CloseableUtils.closeQuietly(client)CloseableUtils.closeQuietly(cluster)}@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "client.start()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ConnectionState state = states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Timing timing = new Timing()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "cluster.start()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "client.checkExists().forPath(\"/\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(state,ConnectionState.READ_ONLY)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "System.out.println(\"killing 2 instances\")@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "cluster.killServer(iterator.next())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "client = null@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "CuratorFramework client = null@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Iterator<InstanceSpec> iterator = cluster.getInstances().iterator()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testConnectionStateNewClient['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "i < 2@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),timing.session(),timing.connection(),new RetryOneTime(1))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "TestingCluster cluster = new TestingCluster(3)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "client.close()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "System.out.println(\"reconnecting client\")@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4->9 [style = bold, label=""];
11->20 [style = bold, label=""];
18->3 [style = bold, label=""];
16->11 [style = bold, label=""];
10->15 [style = bold, label=""];
5->23 [style = bold, label=""];
24->11 [style = solid, label="i"];
15->25 [style = bold, label=""];
11->6 [style = bold, label=""];
0->2 [style = bold, label=""];
11->21 [style = bold, label=""];
9->13 [style = solid, label="cluster"];
21->13 [style = solid, label="client"];
2->32 [style = dashed, label="0"];
4->30 [style = dashed, label="0"];
27->31 [style = bold, label=""];
32->34 [style = bold, label=""];
23->1 [style = solid, label="state"];
2->10 [style = bold, label=""];
3->22 [style = bold, label=""];
12->0 [style = bold, label=""];
26->4 [style = bold, label=""];
1->13 [style = bold, label=""];
22->7 [style = bold, label=""];
21->18 [style = bold, label=""];
22->5 [style = bold, label=""];
30->29 [style = bold, label=""];
20->21 [style = bold, label=""];
8->17 [style = bold, label=""];
25->24 [style = bold, label=""];
7->5 [style = bold, label=""];
17->12 [style = bold, label=""];
10->25 [style = bold, label=""];
6->16 [style = bold, label=""];
24->11 [style = bold, label=""];
11->6 [style = dotted, label="true"];
29->32 [style = bold, label=""];
9->14 [style = bold, label=""];
33->30 [style = bold, label=""];
23->1 [style = bold, label=""];
11->16 [style = dotted, label="true"];
14->8 [style = bold, label=""];
30->28 [style = solid, label="client"];
19->4 [style = bold, label=""];
31->28 [style = bold, label=""];
34->27 [style = bold, label=""];
}
