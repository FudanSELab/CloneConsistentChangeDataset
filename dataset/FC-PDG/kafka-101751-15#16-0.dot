digraph {
9 [style = filled, label = "final TestInputTopic<String,String> inputTopic = driver.createInputTopic(INPUT_TOPIC,new StringSerializer(),new StringSerializer())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "inputTopic.pipeInput(\"A\",\"aaa\",10)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "inputTopic.pipeInput(\"A\",\"a\",5L)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "builder.table(INPUT_TOPIC,CONSUMED).transformValues(new StatelessTransformerSupplier()).groupBy(toForceSendingOfOldValues(),Grouped.with(Serdes.String(),Serdes.Integer())).reduce(MockReducer.INTEGER_ADDER,MockReducer.INTEGER_SUBTRACTOR).mapValues(mapBackToStrings()).toStream().process(capture)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "builder.table(INPUT_TOPIC,CONSUMED).transformValues(new StatefulTransformerSupplier(),Materialized.as(QUERYABLE_NAME).withKeySerde(Serdes.String()).withValueSerde(Serdes.Integer())).groupBy(toForceSendingOfOldValues(),Grouped.with(Serdes.String(),Serdes.Integer())).reduce(MockReducer.INTEGER_ADDER,MockReducer.INTEGER_SUBTRACTOR).mapValues(mapBackToStrings()).toStream().process(capture)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final KeyValueStore<String,Integer> keyValueStore = driver.getKeyValueStore(QUERYABLE_NAME)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(keyValueStore.get(\"A\"),is(3))@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "inputTopic.pipeInput(\"A\",\"ignored\",5L)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "driver = new TopologyTestDriver(builder.build(),props())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "inputTopic.pipeInput(\"A\",\"ignored2\",10L)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "shouldCalculateCorrectOldValuesIfNotStatefulEvenIfNotMaterialized['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "inputTopic.pipeInput(\"A\",\"ignored\",10L)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "shouldCalculateCorrectOldValuesIfMaterializedEvenIfStateful['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "shouldCalculateCorrectOldValuesIfMaterializedEvenIfStateful['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "inputTopic.pipeInput(\"A\",\"ignored1\",15L)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "inputTopic.pipeInput(\"A\",\"aa\",15L)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(output(),hasItems(new KeyValueTimestamp<>(\"A\",\"1\",5),new KeyValueTimestamp<>(\"A\",\"0\",15),new KeyValueTimestamp<>(\"A\",\"2\",15),new KeyValueTimestamp<>(\"A\",\"0\",15),new KeyValueTimestamp<>(\"A\",\"3\",15)))@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "inputTopic.pipeInput(\"A\",\"ignored\",15L)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16->15 [style = bold, label=""];
9->0 [style = bold, label=""];
3->1 [style = bold, label=""];
15->14 [style = bold, label=""];
8->15 [style = dashed, label="0"];
0->16 [style = dashed, label="0"];
0->11 [style = bold, label=""];
8->6 [style = bold, label=""];
4->2 [style = bold, label=""];
6->14 [style = dashed, label="0"];
12->1 [style = bold, label=""];
1->7 [style = bold, label=""];
9->16 [style = bold, label=""];
6->10 [style = dashed, label="0"];
1->13 [style = dashed, label="0"];
7->9 [style = bold, label=""];
6->5 [style = bold, label=""];
10->5 [style = bold, label=""];
11->10 [style = bold, label=""];
13->7 [style = bold, label=""];
5->4 [style = bold, label=""];
0->8 [style = bold, label=""];
17->13 [style = bold, label=""];
8->11 [style = dashed, label="0"];
14->5 [style = bold, label=""];
}
