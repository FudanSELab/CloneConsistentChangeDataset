digraph {
3 [style = filled, label = "MockPropertySource propertySource2 = new MockPropertySource(\"p2\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "createCreatesContributorsBasedOnExistingSources['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "MockPropertySource defaultPropertySource = new MockPropertySource(\"defaultProperties\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "MockPropertySource propertySource1 = new MockPropertySource(\"p2\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "createWhenHasDefaultPropertySourceMovesItToLastContributor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Object(( wrapped = children.stream().filter(null).map(null).toArray()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(wrapped(2().isEqualTo(propertySource2)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "createCreatesContributorsBasedOnExistingSources['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "List<ConfigDataEnvironmentContributor> children = configDataEnvironment.getContributors().getRoot().getChildren(ImportPhase.BEFORE_PROFILE_ACTIVATION)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "MockPropertySource propertySource2 = new MockPropertySource(\"p3\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ConfigDataEnvironment configDataEnvironment = new ConfigDataEnvironment(this.logFactory,this.bootstrapContext,this.environment,this.resourceLoader,this.additionalProfiles,null)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertThat(wrapped(1().isEqualTo(propertySource1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "this.environment.getPropertySources().addLast(propertySource2)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "MockPropertySource propertySource1 = new MockPropertySource(\"p1\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(wrapped(3().isEqualTo(defaultPropertySource)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "ConfigDataEnvironment configDataEnvironment = new ConfigDataEnvironment(this.logFactory,this.bootstrapContext,this.environment,this.resourceLoader,this.additionalProfiles)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "ConfigDataEnvironment configDataEnvironment = new ConfigDataEnvironment(this.logFactory,this.bootstrapContext,this.environment,this.resourceLoader,this.additionalProfiles)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "this.environment.getPropertySources().addLast(propertySource1)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "this.environment.getPropertySources().addLast(defaultPropertySource)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "this.environment.getPropertySources().addLast(propertySource1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "MockPropertySource propertySource3 = new MockPropertySource(\"p3\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19->2 [style = solid, label="propertySource2"];
4->3 [style = bold, label=""];
0->9 [style = bold, label=""];
19->18 [style = bold, label=""];
3->17 [style = dashed, label="0"];
4->16 [style = dashed, label="0"];
3->1 [style = bold, label=""];
3->12 [style = solid, label="propertySource2"];
1->8 [style = solid, label="propertySource3"];
7->12 [style = bold, label=""];
2->6 [style = bold, label=""];
4->0 [style = solid, label="propertySource1"];
19->8 [style = solid, label="propertySource2"];
17->12 [style = solid, label="propertySource1"];
1->19 [style = dashed, label="0"];
8->20 [style = dashed, label="0"];
18->12 [style = bold, label=""];
16->20 [style = solid, label="defaultPropertySource"];
16->17 [style = bold, label=""];
9->8 [style = bold, label=""];
15->16 [style = bold, label=""];
1->7 [style = bold, label=""];
13->11 [style = bold, label=""];
17->19 [style = bold, label=""];
2->13 [style = bold, label=""];
12->2 [style = bold, label=""];
8->20 [style = bold, label=""];
6->13 [style = dashed, label="0"];
4->7 [style = solid, label="propertySource1"];
11->10 [style = bold, label=""];
6->11 [style = bold, label=""];
5->4 [style = bold, label=""];
10->0 [style = bold, label=""];
17->9 [style = solid, label="propertySource1"];
16->18 [style = solid, label="defaultPropertySource"];
3->9 [style = solid, label="propertySource2"];
2->11 [style = bold, label=""];
1->2 [style = solid, label="propertySource3"];
14->4 [style = bold, label=""];
}
