digraph {
18 [style = filled, label = "c.get().header(eTag(new StringBuilder(VALUE))).run().assertBody().is(VALUE)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "c.get().header(eTag(VALUE)).run().assertBody().is(VALUE)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "a01_basic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "a01_basic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "c.get().header(upgrade(null)).run().assertBody().isEmpty()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "c.get().header(upgrade(null)).run().assertBody().isEmpty()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "RestClient c = client().build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "c.get().header(new Upgrade(VALUE)).run().assertBody().is(VALUE)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "c.get().header(upgrade(VALUE)).run().assertBody().is(VALUE)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "c.get().header(eTag(null)).run().assertBody().isEmpty()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "c.get().header(upgrade((String)null)).run().assertBody().isEmpty()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "c.get().header(eTag((Object)null)).run().assertBody().isEmpty()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "c.get().header(upgrade(null)).run().assertBody().is(VALUE)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "c.get().header(upgrade(PARSED)).run().assertBody().is(VALUE)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "c.get().header(upgrade(null)).run().assertBody().is(VALUE)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "c.get().header(eTag((Supplier<?>)null)).run().assertBody().isEmpty()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "c.get().header(upgrade((Object)null)).run().assertBody().isEmpty()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "c.get().header(upgrade((String)null)).run().assertBody().isEmpty()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "c.get().header(new ETag(VALUE)).run().assertBody().is(VALUE)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "c.get().header(upgrade(new StringBuilder(VALUE))).run().assertBody().is(VALUE)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "c.get().header(eTag(null)).run().assertBody().is(VALUE)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "a01_basic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "c.get().header(eTag((String)null)).run().assertBody().isEmpty()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "c.get().header(eTag(VALUE)).run().assertBody().is(VALUE)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "c.get().header(upgrade((Supplier<List<String>>)null)).run().assertBody().isEmpty()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "c.get().header(upgrade((Supplier<?>)null)).run().assertBody().isEmpty()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "c.get().header(upgrade(VALUE)).run().assertBody().is(VALUE)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->10 [style = bold, label=""];
5->8 [style = bold, label=""];
1->4 [style = bold, label=""];
8->16 [style = dashed, label="0"];
7->1 [style = bold, label=""];
2->3 [style = bold, label=""];
1->19 [style = dashed, label="0"];
25->18 [style = bold, label=""];
4->26 [style = dashed, label="0"];
8->21 [style = dashed, label="0"];
5->18 [style = dashed, label="0"];
15->16 [style = bold, label=""];
20->25 [style = bold, label=""];
0->17 [style = dashed, label="0"];
22->7 [style = bold, label=""];
7->3 [style = bold, label=""];
24->20 [style = bold, label=""];
8->0 [style = bold, label=""];
3->9 [style = bold, label=""];
0->14 [style = dashed, label="0"];
23->24 [style = bold, label=""];
13->12 [style = bold, label=""];
9->15 [style = bold, label=""];
19->26 [style = bold, label=""];
26->23 [style = bold, label=""];
3->20 [style = dashed, label="0"];
9->25 [style = dashed, label="0"];
9->5 [style = bold, label=""];
16->14 [style = bold, label=""];
10->2 [style = bold, label=""];
14->13 [style = bold, label=""];
18->21 [style = bold, label=""];
2->24 [style = dashed, label="0"];
6->7 [style = bold, label=""];
5->15 [style = dashed, label="0"];
7->19 [style = bold, label=""];
21->17 [style = bold, label=""];
10->23 [style = dashed, label="0"];
11->7 [style = bold, label=""];
}
