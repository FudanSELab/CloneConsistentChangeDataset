digraph {
0 [style = filled, label = "RelNode rel = builder.scan(\"DEPT\").project(builder.field(\"DEPTNO\")).scan(\"EMP\").project(builder.field(\"DEPTNO\")).intersect(true).build()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String expectedLogical = \"\" + \"LogicalMinus(all=(true()\" + \" LogicalProject(DEPTNO=($0()\" + \" LogicalTableScan(table=((scott, DEPT(()\" + \" LogicalProject(DEPTNO=($7()\" + \" LogicalTableScan(table=((scott, EMP(()\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String expectedPhysial = \"\" + \"EnumerableMinus(all=(true()\" + \" EnumerableProject(DEPTNO=($0()\" + \" EnumerableTableScan(table=((scott, DEPT(()\" + \" EnumerableProject(DEPTNO=($7()\" + \" EnumerableTableScan(table=((scott, EMP(()\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testIntersect['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "verify(rel,expectedPhysial,expectedLogical)@@@7@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testMinus['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testIntersect['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "String expectedPhysial = \"\" + \"EnumerableIntersect(all=(true()\" + \" EnumerableProject(DEPTNO=($0()\" + \" EnumerableTableScan(table=((scott, DEPT(()\" + \" EnumerableProject(DEPTNO=($7()\" + \" EnumerableTableScan(table=((scott, EMP(()\"@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "final RelBuilder builder = builder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "verify(rel,expectedPhysical,expectedLogical)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "String expectedLogical = \"\" + \"LogicalIntersect(all=(true()\" + \" LogicalProject(DEPTNO=($0()\" + \" LogicalTableScan(table=((scott, DEPT(()\" + \" LogicalProject(DEPTNO=($7()\" + \" LogicalTableScan(table=((scott, EMP(()\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String expectedPhysical = \"\" + \"EnumerableIntersect(all=(true()\" + \" EnumerableProject(DEPTNO=($0()\" + \" EnumerableTableScan(table=((scott, DEPT(()\" + \" EnumerableProject(DEPTNO=($7()\" + \" EnumerableTableScan(table=((scott, EMP(()\"@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "RelNode rel = builder.scan(\"DEPT\").project(builder.field(\"DEPTNO\")).scan(\"EMP\").project(builder.field(\"DEPTNO\")).minus(true).build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->9 [style = bold, label=""];
0->3 [style = solid, label="rel"];
3->6 [style = dashed, label="0"];
2->6 [style = bold, label=""];
8->6 [style = solid, label="expectedPhysical"];
0->6 [style = solid, label="rel"];
2->3 [style = bold, label=""];
1->3 [style = solid, label="expectedPhysial"];
1->10 [style = dashed, label="0"];
7->4 [style = bold, label=""];
9->10 [style = bold, label=""];
4->0 [style = bold, label=""];
10->3 [style = solid, label="expectedPhysial"];
8->2 [style = bold, label=""];
12->4 [style = bold, label=""];
11->3 [style = bold, label=""];
0->1 [style = bold, label=""];
5->4 [style = bold, label=""];
0->8 [style = bold, label=""];
11->3 [style = solid, label="expectedLogical"];
2->11 [style = dashed, label="0"];
1->8 [style = dashed, label="0"];
1->2 [style = bold, label=""];
2->6 [style = solid, label="expectedLogical"];
0->9 [style = dashed, label="0"];
2->3 [style = solid, label="expectedLogical"];
9->3 [style = solid, label="rel"];
10->11 [style = bold, label=""];
}
