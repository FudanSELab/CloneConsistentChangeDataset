digraph {
19 [style = filled, label = "doc.add(new BinaryDocValuesField(\"field\",encodedRange))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(5).getDocCount())@@@30@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\").field(\"field\").interval(5)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertEquals(0d,histogram.getBuckets().get(1).getKey())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(3).getDocCount())@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(4d,histogram.getBuckets().get(2).getKey())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testOffset['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testOffset['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "assertEquals(14d,histogram.getBuckets().get(4).getKey())@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertEquals(19d,histogram.getBuckets().get(5).getKey())@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "assertEquals(5d,histogram.getBuckets().get(2).getKey())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(6,histogram.getBuckets().size())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(6).getDocCount())@@@31@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(9d,histogram.getBuckets().get(3).getKey())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(29d,histogram.getBuckets().get(7).getKey())@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertEquals(2,histogram.getBuckets().get(1).getDocCount())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "testDoubles['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals(-5d,histogram.getBuckets().get(0).getKey())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "BytesRef encodedRange = rangeType.encodeRanges(Collections.singleton(range))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(3,histogram.getBuckets().get(2).getDocCount())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "IndexSearcher searcher = new IndexSearcher(reader)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(6).getDocCount())@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "assertEquals(40d,histogram.getBuckets().get(4).getKey())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "InternalHistogram histogram = search(searcher,new MatchAllDocsQuery(),aggBuilder,rangeField(\"field\",rangeType))@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "RangeType rangeType = RangeType.DOUBLE@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(-6d,histogram.getBuckets().get(0).getKey())@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "InternalHistogram histogram = searchAndReduce(searcher,new MatchAllDocsQuery(),aggBuilder,rangeField(\"field\",rangeType))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "assertEquals(8,histogram.getBuckets().size())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(4).getDocCount())@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Document doc = new Document()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(-6d,histogram.getBuckets().get(0).getKey())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(0).getDocCount())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(3,histogram.getBuckets().get(1).getDocCount())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(45d,histogram.getBuckets().get(5).getKey())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(7).getDocCount())@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertEquals(-1d,histogram.getBuckets().get(1).getKey())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(5).getDocCount())@@@29@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "w.addDocument(doc)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(4).getDocCount())@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\").field(\"field\").interval(5).offset(4)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(0,histogram.getBuckets().get(4).getDocCount())@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "assertEquals(10d,histogram.getBuckets().get(3).getKey())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(24d,histogram.getBuckets().get(6).getKey())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "assertEquals(2,histogram.getBuckets().get(2).getDocCount())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36->43 [style = bold, label=""];
11->32 [style = dashed, label="0"];
10->18 [style = bold, label=""];
5->8 [style = bold, label=""];
11->20 [style = bold, label=""];
8->16 [style = solid, label="doc"];
18->0 [style = solid, label="searcher"];
31->22 [style = bold, label=""];
35->18 [style = bold, label=""];
18->23 [style = bold, label=""];
34->20 [style = bold, label=""];
16->8 [style = bold, label=""];
17->34 [style = dashed, label="0"];
17->24 [style = dashed, label="0"];
16->10 [style = bold, label=""];
39->5 [style = bold, label=""];
18->23 [style = solid, label="searcher"];
3->33 [style = dashed, label="0"];
25->30 [style = bold, label=""];
21->15 [style = bold, label=""];
0->23 [style = dashed, label="0"];
0->2 [style = bold, label=""];
24->32 [style = bold, label=""];
20->31 [style = dashed, label="0"];
22->29 [style = dashed, label="0"];
23->26 [style = bold, label=""];
22->29 [style = bold, label=""];
38->41 [style = bold, label=""];
6->40 [style = dashed, label="0"];
13->38 [style = dashed, label="0"];
12->6 [style = bold, label=""];
10->23 [style = solid, label="aggBuilder"];
43->6 [style = bold, label=""];
2->12 [style = bold, label=""];
0->36 [style = bold, label=""];
20->4 [style = bold, label=""];
19->16 [style = bold, label=""];
5->23 [style = solid, label="rangeType"];
9->37 [style = dashed, label="0"];
29->28 [style = bold, label=""];
10->0 [style = solid, label="aggBuilder"];
8->1 [style = bold, label=""];
15->17 [style = bold, label=""];
7->5 [style = bold, label=""];
26->12 [style = bold, label=""];
17->24 [style = bold, label=""];
41->17 [style = bold, label=""];
17->34 [style = bold, label=""];
20->42 [style = dashed, label="0"];
2->36 [style = dashed, label="0"];
21->41 [style = dashed, label="0"];
35->0 [style = solid, label="aggBuilder"];
6->40 [style = bold, label=""];
3->13 [style = bold, label=""];
28->25 [style = bold, label=""];
9->3 [style = bold, label=""];
20->42 [style = bold, label=""];
33->38 [style = bold, label=""];
27->5 [style = bold, label=""];
16->35 [style = bold, label=""];
6->9 [style = bold, label=""];
1->19 [style = bold, label=""];
22->14 [style = bold, label=""];
13->21 [style = bold, label=""];
37->33 [style = bold, label=""];
42->22 [style = bold, label=""];
5->0 [style = solid, label="rangeType"];
1->19 [style = solid, label="encodedRange"];
4->22 [style = bold, label=""];
18->0 [style = bold, label=""];
32->31 [style = bold, label=""];
10->35 [style = dashed, label="0"];
40->37 [style = bold, label=""];
17->11 [style = bold, label=""];
}
