digraph {
19 [style = filled, label = "OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem),true)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertNotNull(actual)@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertProjectionsContextCreatedProperlyWhenProjectionPresent['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerPresent['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "selectStatement.setFrom(new SimpleTableSegment(new TableNameSegment(0,0,new IdentifierValue(\"name\"))))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Collection<SimpleTableSegment> tables = selectStatementContext.getAllTables()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "selectStatement.setProjections(projectionsSegment)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ProjectionsContext actual = new ProjectionsContextEngine(schema).createProjectionsContext(tables,projectionsSegment,new GroupByContext(Collections.emptyList()),new OrderByContext(Collections.emptyList(),false))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final SelectStatement selectStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Collection<SimpleTableSegment> tables = selectStatementContext.getAllSimpleTableSegments()@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0,10)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final SelectStatement selectStatement@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "shorthandProjectionSegment.setOwner(owner)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "OwnerSegment owner = new OwnerSegment(0,10,new IdentifierValue(\"name\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "SelectStatementContext selectStatementContext = createSelectStatementContext(selectStatement)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertProjectionsContextCreatedProperlyWhenProjectionPresent['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0,0,new IdentifierValue(\"name\")),OrderDirection.ASC))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "ProjectionsContext actual = new ProjectionsContextEngine(schema).createProjectionsContext(tables,projectionsSegment,new GroupByContext(Collections.emptyList()),orderByContext)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "ProjectionsSegment projectionsSegment = new ProjectionsSegment(0,0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->19 [style = solid, label="orderByItem"];
8->10 [style = bold, label=""];
10->15 [style = bold, label=""];
4->17 [style = bold, label=""];
17->6 [style = bold, label=""];
4->6 [style = bold, label=""];
9->2 [style = bold, label=""];
16->18 [style = dotted, label="true"];
10->15 [style = solid, label="tables"];
3->14 [style = bold, label=""];
10->12 [style = dashed, label="0"];
15->11 [style = solid, label="actual"];
0->15 [style = dashed, label="0"];
0->11 [style = bold, label=""];
5->7 [style = solid, label="owner"];
14->19 [style = bold, label=""];
1->18 [style = dashed, label="0"];
0->11 [style = solid, label="actual"];
16->2 [style = bold, label=""];
2->4 [style = bold, label=""];
12->0 [style = bold, label=""];
7->3 [style = bold, label=""];
1->8 [style = solid, label="selectStatement"];
19->8 [style = bold, label=""];
2->15 [style = solid, label="projectionsSegment"];
19->15 [style = solid, label="orderByContext"];
13->1 [style = dotted, label="true"];
6->5 [style = bold, label=""];
2->4 [style = solid, label="projectionsSegment"];
10->0 [style = solid, label="tables"];
15->11 [style = bold, label=""];
3->8 [style = bold, label=""];
10->0 [style = bold, label=""];
2->0 [style = solid, label="projectionsSegment"];
9->1 [style = dotted, label="true"];
5->7 [style = bold, label=""];
18->8 [style = solid, label="selectStatement"];
8->12 [style = bold, label=""];
12->0 [style = solid, label="tables"];
13->2 [style = bold, label=""];
6->3 [style = solid, label="shorthandProjectionSegment"];
}
