digraph {
13 [style = filled, label = "testContainsWithEqualityComparer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertFalse(Linq4j.asEnumerable(emps).contains(employeeOther,compareByEmpno))@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Employee e = emps(1(@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Employee e = emps(1(@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Employee employeeClone = new Employee(e.empno,e.name,e.deptno)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertTrue(Linq4j.asEnumerable(emps).contains(e,compareByEmpno))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Employee employeeOther = badEmps(0(@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Employee employeeOther = badEmps(0(@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(Linq4j.asEnumerable(emps).contains(e))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(e,employeeClone)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "EqualityComparer<Employee> compareByEmpno = new EqualityComparer<Employee>(){public boolean equal(Employee e1,Employee e2){return e1 != null && e2 != null && e1.empno == e2.empno}public int hashCode(Employee t){return t == null? 0x789d: t.hashCode()}}@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(Linq4j.asEnumerable(emps).contains(employeeClone,compareByEmpno))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testContains['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertFalse(Linq4j.asEnumerable(emps).contains(employeeOther))@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(e,employeeClone)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testContains['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(Linq4j.asEnumerable(emps).contains(employeeClone))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Employee employeeClone = new Employee(e.empno,e.name,e.deptno)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
16->11 [style = solid, label="compareByEmpno"];
1->4 [style = solid, label="e"];
5->12 [style = dashed, label="0"];
9->11 [style = solid, label="employeeClone"];
2->1 [style = bold, label=""];
17->9 [style = bold, label=""];
9->15 [style = solid, label="employeeClone"];
12->11 [style = bold, label=""];
7->11 [style = dashed, label="0"];
6->4 [style = solid, label="employeeClone"];
6->7 [style = solid, label="employeeClone"];
7->0 [style = bold, label=""];
16->17 [style = bold, label=""];
3->4 [style = bold, label=""];
16->12 [style = solid, label="compareByEmpno"];
13->16 [style = bold, label=""];
0->10 [style = dashed, label="0"];
8->1 [style = bold, label=""];
17->12 [style = solid, label="e"];
17->15 [style = solid, label="e"];
3->0 [style = solid, label="employeeOther"];
1->6 [style = bold, label=""];
11->10 [style = bold, label=""];
9->14 [style = bold, label=""];
5->7 [style = bold, label=""];
16->10 [style = solid, label="compareByEmpno"];
14->15 [style = bold, label=""];
15->12 [style = bold, label=""];
1->5 [style = solid, label="e"];
4->5 [style = bold, label=""];
14->10 [style = solid, label="employeeOther"];
}
