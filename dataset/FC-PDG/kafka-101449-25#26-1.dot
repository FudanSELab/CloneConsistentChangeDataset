digraph {
8 [style = filled, label = "KTable<Integer,String> table2 = builder.table(intSerde,stringSerde,topic2,storeName2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "joined = stream1.outerJoin(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(100),intSerde,stringSerde,stringSerde)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "i++@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "Collection<Set<String>> copartitionGroups = KTableKTableJoinTest.getCopartitionedGroups(builder)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Collection<Set<String>> copartitionGroups = KTableKTableJoinTest.getCopartitionedGroups(builder)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "int i = 0@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+null\",\"1:XX1+null\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YYY0\",\"0:X0+YYY0\",\"0:XX0+YYY0\",\"1:X1+YYY1\",\"1:X1+YYY1\",\"1:XX1+YYY1\")@@@50@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "driver.setUp(builder,stateDir)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "i++@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "i < 2@@@46@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "int i = 0@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "joined.toStream().process(processor)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "int i = 0@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "i++@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@b02e69@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "int i = 0@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "driver.flushState()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "KStream<Integer,String> joined@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,null),kv(3,null))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\",\"2:X2+null\",\"3:X3+null\")@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "joined.process(processor)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "i++@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "i < 2@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "i < 2@@@22@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "KTable<Integer,String> joined = table1.leftJoin(table2,MockValueJoiner.TOSTRING_JOINER)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "driver.process(topic2,expectedKeys(i(,null)@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "StreamsBuilder builder = new StreamsBuilder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"YYY\" + expectedKeys(i()@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "testJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
69 [style = filled, label = "i < 2@@@28@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "driver.process(topic2,expectedKey,\"YY\" + expectedKey)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int i = 0@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "i < 2@@@58@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "i++@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "driver = new KStreamTestDriver(builder,stateDir)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "processor = new MockProcessorSupplier<>()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "stream1 = builder.stream(intSerde,stringSerde,topic1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "driver.setTime(0L)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "MockProcessorSupplier<Integer,String> processor@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "KStream<Integer,String> stream1@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "stream2 = builder.stream(intSerde,stringSerde,topic2)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+null\"),kv(1,\"XX1+null\"),kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@70@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,\"X2+null\"),kv(3,\"X3+null\"))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "KStream<Integer,String> stream2@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,null),kv(3,null))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+Y0\",\"0:XX0+YY0\",\"1:XX1+Y1\",\"1:XX1+YY1\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "driver.flushState()@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "driver.flushState()@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "driver.flushState()@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"0:X0+YY0\",\"1:X1+YY1\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "driver.flushState()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "KTableValueGetter<Integer,String> getter = getterSupplier.get()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "testOuterJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "KTable<Integer,String> table1 = builder.table(intSerde,stringSerde,topic1,storeName1)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "i++@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65->60 [style = bold, label=""];
45->56 [style = solid, label="builder"];
13->43 [style = solid, label="expectedKeys"];
28->6 [style = bold, label=""];
21->42 [style = bold, label=""];
30->23 [style = solid, label="i"];
64->13 [style = bold, label=""];
69->46 [style = bold, label=""];
73->58 [style = bold, label=""];
46->15 [style = bold, label=""];
42->60 [style = solid, label="processor"];
39->70 [style = solid, label="i"];
29->71 [style = dashed, label="0"];
10->69 [style = solid, label="i"];
13->39 [style = solid, label="expectedKeys"];
73->66 [style = solid, label="i"];
19->36 [style = bold, label=""];
5->45 [style = bold, label=""];
70->43 [style = dotted, label="true"];
9->1 [style = solid, label="i"];
26->56 [style = dashed, label="0"];
3->4 [style = bold, label=""];
15->46 [style = solid, label="i"];
71->67 [style = bold, label=""];
70->43 [style = bold, label=""];
18->49 [style = bold, label=""];
40->11 [style = bold, label=""];
58->62 [style = bold, label=""];
18->39 [style = dotted, label="true"];
53->34 [style = bold, label=""];
31->10 [style = solid, label="i"];
63->75 [style = bold, label=""];
66->73 [style = bold, label=""];
17->27 [style = bold, label=""];
53->38 [style = bold, label=""];
8->25 [style = solid, label="table2"];
12->54 [style = bold, label=""];
23->37 [style = solid, label="i"];
43->44 [style = bold, label=""];
49->70 [style = bold, label=""];
25->21 [style = bold, label=""];
31->14 [style = bold, label=""];
44->2 [style = bold, label=""];
75->65 [style = solid, label="stream2"];
60->0 [style = bold, label=""];
9->39 [style = bold, label=""];
10->31 [style = bold, label=""];
27->0 [style = bold, label=""];
39->43 [style = solid, label="i"];
54->17 [style = bold, label=""];
41->61 [style = dashed, label="0"];
14->10 [style = bold, label=""];
36->2 [style = solid, label="getter"];
1->39 [style = solid, label="i"];
57->45 [style = bold, label=""];
75->65 [style = bold, label=""];
13->46 [style = solid, label="expectedKeys"];
69->46 [style = dotted, label="true"];
15->69 [style = solid, label="i"];
36->20 [style = solid, label="getter"];
1->18 [style = solid, label="i"];
64->0 [style = solid, label="builder"];
35->28 [style = bold, label=""];
58->73 [style = dotted, label="true"];
36->38 [style = solid, label="getter"];
7->51 [style = bold, label=""];
20->41 [style = bold, label=""];
23->37 [style = bold, label=""];
9->39 [style = solid, label="i"];
46->33 [style = bold, label=""];
13->10 [style = solid, label="expectedKeys"];
22->14 [style = solid, label="i"];
14->15 [style = bold, label=""];
22->14 [style = bold, label=""];
59->21 [style = bold, label=""];
61->72 [style = bold, label=""];
9->18 [style = solid, label="i"];
37->47 [style = bold, label=""];
22->31 [style = solid, label="i"];
70->49 [style = dotted, label="true"];
48->58 [style = bold, label=""];
49->70 [style = solid, label="i"];
30->37 [style = solid, label="i"];
70->14 [style = bold, label=""];
23->47 [style = solid, label="i"];
18->1 [style = dotted, label="true"];
58->66 [style = dotted, label="true"];
26->19 [style = bold, label=""];
8->67 [style = dashed, label="0"];
31->14 [style = solid, label="i"];
51->20 [style = bold, label=""];
48->73 [style = solid, label="i"];
13->71 [style = bold, label=""];
58->66 [style = bold, label=""];
34->51 [style = bold, label=""];
42->63 [style = bold, label=""];
32->9 [style = bold, label=""];
9->18 [style = bold, label=""];
19->32 [style = bold, label=""];
52->16 [style = bold, label=""];
18->39 [style = bold, label=""];
10->15 [style = solid, label="i"];
33->24 [style = bold, label=""];
38->34 [style = bold, label=""];
22->10 [style = solid, label="i"];
30->47 [style = solid, label="i"];
73->58 [style = solid, label="i"];
39->1 [style = bold, label=""];
11->55 [style = bold, label=""];
50->35 [style = bold, label=""];
4->48 [style = bold, label=""];
48->30 [style = bold, label=""];
47->23 [style = bold, label=""];
72->48 [style = bold, label=""];
48->58 [style = solid, label="i"];
36->28 [style = solid, label="getter"];
42->12 [style = solid, label="processor"];
29->8 [style = bold, label=""];
45->64 [style = dashed, label="0"];
0->26 [style = bold, label=""];
52->53 [style = bold, label=""];
48->66 [style = solid, label="i"];
15->69 [style = bold, label=""];
13->66 [style = solid, label="expectedKeys"];
69->15 [style = dotted, label="true"];
41->3 [style = bold, label=""];
51->68 [style = bold, label=""];
34->7 [style = bold, label=""];
74->64 [style = bold, label=""];
36->32 [style = bold, label=""];
36->24 [style = solid, label="getter"];
1->18 [style = bold, label=""];
45->13 [style = bold, label=""];
42->12 [style = bold, label=""];
30->37 [style = bold, label=""];
39->49 [style = solid, label="i"];
39->70 [style = bold, label=""];
16->53 [style = bold, label=""];
49->43 [style = bold, label=""];
45->54 [style = solid, label="builder"];
14->10 [style = dotted, label="true"];
25->59 [style = dashed, label="0"];
64->32 [style = solid, label="builder"];
36->55 [style = solid, label="getter"];
13->29 [style = bold, label=""];
13->47 [style = solid, label="expectedKeys"];
0->56 [style = bold, label=""];
10->46 [style = solid, label="i"];
6->40 [style = bold, label=""];
47->66 [style = dashed, label="0"];
10->69 [style = bold, label=""];
56->19 [style = bold, label=""];
37->47 [style = dotted, label="true"];
15->46 [style = bold, label=""];
14->31 [style = dotted, label="true"];
24->52 [style = bold, label=""];
43->49 [style = bold, label=""];
68->61 [style = bold, label=""];
49->43 [style = solid, label="i"];
69->52 [style = bold, label=""];
37->23 [style = dotted, label="true"];
2->22 [style = bold, label=""];
8->25 [style = bold, label=""];
36->48 [style = solid, label="getter"];
37->50 [style = bold, label=""];
67->59 [style = bold, label=""];
45->26 [style = solid, label="builder"];
}
