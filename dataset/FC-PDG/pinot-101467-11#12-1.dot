digraph {
36 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withStreamPartitionMsgOffset(s1Offset).withSegmentName(segmentNameStr)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "response = segmentCompletionMgr.segmentCommitEnd(params,true,false,CommittingSegmentDescriptor.fromSegmentCompletionReqParams(params))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withStreamPartitionMsgOffset(s2Offset.toString()).withSegmentName(segmentNameStr)@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.CATCH_UP)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withStreamPartitionMsgOffset(s1Offset.toString()).withSegmentName(segmentNameStr)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withStreamPartitionMsgOffset(s3Offset).withSegmentName(segmentNameStr).withReason(reason)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withStreamPartitionMsgOffset(s3Offset.toString()).withSegmentName(segmentNameStr).withReason(reason)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Assert.assertEquals(new LLCSegmentName(segmentNameStr),segmentManager._stoppedSegmentName)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "segmentManager._stoppedSegmentName = null@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset.toString()).withSegmentName(segmentNameStr)@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
74 [style = filled, label = "Assert.assertFalse((fsmMap.containsKey(segmentNameStr)))@@@45@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "segmentCompletionMgr._seconds = 5@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "verifyOffset(response,s2Offset)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "final long startTime = 5@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset.toString()).withSegmentName(segmentNameStr)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "Assert.assertEquals(response.getStatus(),ControllerResponseStatus.PROCESSED)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "response = segmentCompletionMgr.extendBuildTime(params)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "testStoppedConsumeDuringCompletion['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.KEEP)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withStreamPartitionMsgOffset(s1Offset.toString()).withSegmentName(segmentNameStr)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "Assert.assertEquals(response.getStatus(),ControllerResponseStatus.FAILED)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "testLeaseTooLong['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "segmentCompletionMgr._seconds = startTime + commitTimeSec - 1@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset.toString()).withSegmentName(segmentNameStr)@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "response = segmentCompletionMgr.extendBuildTime(params)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
68 [style = filled, label = "Assert.assertEquals(response.getStatus(),ControllerResponseStatus.PROCESSED)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.CATCH_UP)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
76 [style = filled, label = "segmentCompletionMgr._seconds + leaseTimeSec <= startTime + SegmentCompletionManager.getMaxCommitTimeForAllSegmentsSeconds()@@@35@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "response = segmentCompletionMgr.extendBuildTime(params)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withStreamPartitionMsgOffset(s1Offset).withSegmentName(segmentNameStr)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Request.Params params@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "response = segmentCompletionMgr.segmentCommitStart(params)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "SegmentCompletionProtocol.Response response@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertFalse(fsmMap.containsKey(segmentNameStr))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "long commitTimeSec = response.getBuildTimeSeconds()@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Assert.assertFalse(fsmMap.containsKey(segmentNameStr))@@@47@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr).withExtraTimeSec(leaseTimeSec)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "segmentCompletionMgr._seconds = startTime@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.COMMIT_CONTINUE)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "final int leaseTimeSec = 20@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withStreamPartitionMsgOffset(s2Offset.toString()).withSegmentName(segmentNameStr)@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
77 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "response = segmentCompletionMgr.segmentStoppedConsuming(params)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "segmentCompletionMgr._seconds += 5@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "segmentManager._stoppedInstance = null@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.PROCESSED)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset.toString()).withSegmentName(segmentNameStr)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
67 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withStreamPartitionMsgOffset(s3Offset).withSegmentName(segmentNameStr)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testStoppedConsumeDuringCompletion['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.COMMIT)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "segmentCompletionMgr._seconds += leaseTimeSec@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final String reason = \"IAmLazy\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "Assert.assertTrue((fsmMap.containsKey(segmentNameStr)))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr).withExtraTimeSec(20)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertTrue(commitTimeSec > 0)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.COMMIT_SUCCESS)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "Assert.assertTrue((fsmMap.containsKey(segmentNameStr)))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr).withExtraTimeSec(leaseTimeSec)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertEquals(s3,segmentManager._stoppedInstance)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->53 [style = bold, label=""];
43->58 [style = dashed, label="0"];
20->58 [style = bold, label=""];
73->65 [style = bold, label=""];
37->49 [style = bold, label=""];
65->62 [style = bold, label=""];
7->35 [style = bold, label=""];
34->18 [style = bold, label=""];
38->55 [style = dashed, label="0"];
3->60 [style = dashed, label="0"];
58->60 [style = bold, label=""];
67->71 [style = bold, label=""];
34->18 [style = solid, label="params"];
1->30 [style = bold, label=""];
34->54 [style = dashed, label="0"];
69->78 [style = bold, label=""];
9->64 [style = dashed, label="0"];
61->64 [style = bold, label=""];
16->41 [style = bold, label=""];
28->0 [style = bold, label=""];
3->36 [style = bold, label=""];
43->3 [style = bold, label=""];
18->44 [style = bold, label=""];
45->25 [style = bold, label=""];
55->23 [style = bold, label=""];
12->26 [style = solid, label="params"];
48->7 [style = solid, label="params"];
28->52 [style = bold, label=""];
63->41 [style = bold, label=""];
72->73 [style = bold, label=""];
22->67 [style = bold, label=""];
34->18 [style = solid, label="commitTimeSec"];
20->43 [style = bold, label=""];
70->57 [style = bold, label=""];
27->33 [style = bold, label=""];
36->17 [style = bold, label=""];
27->33 [style = solid, label="params"];
14->76 [style = dashed, label="0"];
19->15 [style = bold, label=""];
9->29 [style = bold, label=""];
0->11 [style = solid, label="params"];
24->28 [style = bold, label=""];
8->34 [style = bold, label=""];
15->13 [style = bold, label=""];
57->80 [style = solid, label="leaseTimeSec"];
10->14 [style = bold, label=""];
77->75 [style = bold, label=""];
68->70 [style = bold, label=""];
59->56 [style = solid, label="params"];
76->59 [style = bold, label=""];
46->33 [style = solid, label="params"];
2->9 [style = bold, label=""];
22->5 [style = bold, label=""];
38->23 [style = solid, label="params"];
5->67 [style = dashed, label="0"];
58->76 [style = solid, label="startTime"];
37->80 [style = dashed, label="0"];
61->64 [style = solid, label="params"];
27->46 [style = dashed, label="0"];
47->17 [style = solid, label="params"];
76->65 [style = dotted, label="true"];
21->22 [style = bold, label=""];
25->37 [style = bold, label=""];
57->76 [style = bold, label=""];
7->71 [style = dashed, label="0"];
44->76 [style = solid, label="_seconds"];
46->33 [style = bold, label=""];
76->80 [style = dotted, label="true"];
35->69 [style = dashed, label="0"];
5->7 [style = bold, label=""];
29->40 [style = bold, label=""];
41->46 [style = bold, label=""];
80->76 [style = bold, label=""];
51->42 [style = bold, label=""];
59->56 [style = bold, label=""];
75->63 [style = solid, label="params"];
80->76 [style = solid, label="_seconds"];
33->6 [style = solid, label="params"];
44->61 [style = bold, label=""];
41->27 [style = bold, label=""];
5->7 [style = solid, label="params"];
22->48 [style = bold, label=""];
76->73 [style = dotted, label="true"];
11->21 [style = bold, label=""];
57->72 [style = solid, label="leaseTimeSec"];
57->59 [style = solid, label="leaseTimeSec"];
49->15 [style = solid, label="params"];
0->11 [style = bold, label=""];
53->40 [style = bold, label=""];
30->32 [style = bold, label=""];
3->47 [style = bold, label=""];
13->39 [style = bold, label=""];
31->38 [style = bold, label=""];
32->16 [style = bold, label=""];
56->66 [style = bold, label=""];
29->40 [style = solid, label="params"];
62->80 [style = bold, label=""];
36->47 [style = dashed, label="0"];
12->72 [style = dashed, label="0"];
25->62 [style = dashed, label="0"];
0->52 [style = dashed, label="0"];
36->17 [style = solid, label="params"];
35->1 [style = bold, label=""];
58->44 [style = solid, label="startTime"];
76->72 [style = dotted, label="true"];
60->36 [style = bold, label=""];
14->50 [style = bold, label=""];
49->15 [style = bold, label=""];
48->7 [style = bold, label=""];
23->2 [style = bold, label=""];
8->54 [style = bold, label=""];
43->5 [style = solid, label="reason"];
34->44 [style = solid, label="commitTimeSec"];
44->31 [style = bold, label=""];
29->53 [style = dashed, label="0"];
55->23 [style = solid, label="params"];
52->11 [style = bold, label=""];
40->10 [style = bold, label=""];
50->26 [style = bold, label=""];
52->11 [style = solid, label="params"];
57->76 [style = solid, label="leaseTimeSec"];
72->73 [style = solid, label="params"];
26->73 [style = dashed, label="0"];
33->6 [style = bold, label=""];
42->20 [style = bold, label=""];
66->74 [style = bold, label=""];
43->48 [style = solid, label="reason"];
4->42 [style = bold, label=""];
53->40 [style = solid, label="params"];
38->23 [style = bold, label=""];
45->65 [style = dashed, label="0"];
12->26 [style = bold, label=""];
79->42 [style = bold, label=""];
19->15 [style = solid, label="params"];
19->49 [style = dashed, label="0"];
71->69 [style = bold, label=""];
75->63 [style = bold, label=""];
78->77 [style = bold, label=""];
76->72 [style = bold, label=""];
17->24 [style = bold, label=""];
54->18 [style = bold, label=""];
5->48 [style = dashed, label="0"];
23->44 [style = dashed, label="0"];
31->55 [style = bold, label=""];
14->12 [style = bold, label=""];
6->8 [style = bold, label=""];
64->68 [style = bold, label=""];
54->18 [style = solid, label="params"];
50->26 [style = solid, label="params"];
26->45 [style = bold, label=""];
71->78 [style = solid, label="response"];
37->19 [style = bold, label=""];
58->60 [style = solid, label="startTime"];
47->17 [style = bold, label=""];
12->50 [style = dashed, label="0"];
67->71 [style = solid, label="params"];
76->62 [style = dotted, label="true"];
}
