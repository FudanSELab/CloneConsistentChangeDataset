digraph {
32 [style = filled, label = "cpb.setIfNotEmpty(REST_produces,stringList(a.produces()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "AnnotationInfo<RestDelete> ai@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "stringStream(a.defaultRequestHeaders()).map(null).forEach(null)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "cpb.prependTo(RESTOP_matchers,a.matchers())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "cpb.setIfNotEmpty(RESTOP_path,a.value())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "ContextPropertiesBuilder cpb@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "RestDelete a = ai.getAnnotation()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "stringStream(a.path()).forEach(null)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "cpb.setIf(a.contextClass() != ,RESTOP_contextClass,a.contextClass())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "cpb.setIfNotEmpty(RESTOP_httpMethod,\"get\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "cdStream(a.rolesDeclared()).forEach(null)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "apply['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "cpb.prependTo(REST_guards,reverse(a.guards()))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "apply['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "cpb.appendToIfNotEmpty(REST_defaultRequestHeaders,accept(string(a.defaultAccept())))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "stringStream(a.defaultResponseHeaders()).map(null).forEach(null)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "cpb.setIfNotEmpty(RESTOP_httpMethod,\"delete\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "ContextPropertiesBuilder cpb@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "cpb.setIfNotEmpty(RESTOP_debug,string(a.debug()))@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "stringStream(a.defaultQuery()).map(null).forEach(null)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "VarResolverSession vr@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "stringStream(a.defaultQuery()).map(null).forEach(null)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "cpb.setIfNotEmpty(REST_defaultCharset,string(a.defaultCharset()))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "apply['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "cpb.prependTo(REST_converters,a.converters())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "cpb.set(REST_serializers,merge(ConverterUtils.toType(cpb.peek(REST_serializers),),a.serializers()))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "cpb.addToIfNotEmpty(REST_roleGuard,string(a.roleGuard()))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "AnnotationInfo<RestDelete> ai@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "AnnotationInfo<RestGet> ai@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "cpb.set(REST_encoders,merge(ConverterUtils.toType(cpb.peek(REST_encoders),),a.encoders()))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "cpb.set(REST_encoders,merge(ConverterUtils.toType(cpb.peek(REST_encoders),),a.encoders()))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "RestGet a = ai.getAnnotation()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "VarResolverSession vr@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "stringStream(a.defaultRequestAttributes()).map(null).forEach(null)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "VarResolverSession vr@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "cpb.setIfNotEmpty(RESTOP_clientVersion,a.clientVersion())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->10 [style = bold, label=""];
11->20 [style = bold, label=""];
5->8 [style = bold, label=""];
4->14 [style = bold, label=""];
15->13 [style = bold, label=""];
16->18 [style = bold, label=""];
33->35 [style = bold, label=""];
17->0 [style = dotted, label="true"];
22->23 [style = dotted, label="true"];
3->31 [style = dashed, label="0"];
22->16 [style = bold, label=""];
29->27 [style = dotted, label="true"];
17->1 [style = dotted, label="true"];
22->25 [style = dotted, label="true"];
18->19 [style = bold, label=""];
12->32 [style = bold, label=""];
6->24 [style = bold, label=""];
30->9 [style = bold, label=""];
32->7 [style = bold, label=""];
2->10 [style = bold, label=""];
13->11 [style = bold, label=""];
17->3 [style = dotted, label="true"];
12->7 [style = bold, label=""];
18->35 [style = dashed, label="0"];
6->2 [style = bold, label=""];
20->21 [style = bold, label=""];
21->5 [style = bold, label=""];
29->33 [style = bold, label=""];
29->28 [style = dotted, label="true"];
19->9 [style = bold, label=""];
7->6 [style = bold, label=""];
10->4 [style = bold, label=""];
22->3 [style = dotted, label="true"];
14->15 [style = bold, label=""];
29->31 [style = dotted, label="true"];
34->14 [style = bold, label=""];
9->12 [style = bold, label=""];
16->33 [style = dashed, label="0"];
2->24 [style = dashed, label="0"];
35->30 [style = bold, label=""];
4->34 [style = bold, label=""];
17->16 [style = bold, label=""];
8->26 [style = bold, label=""];
}
