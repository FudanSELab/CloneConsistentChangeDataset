digraph {
26 [style = filled, label = "getValues['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "int upto = 0@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "r = SlowCompositeReaderWrapper.wrap(new MultiReader(insaneLeaves))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final LeafReader r@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "insaneLeaves(upto++( = Insanity.wrapInsanity(raw.reader(),field)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "sf != null && sf.hasDocValues() == false && sf.multiValued() == false && sf.getType().getNumericType() != null@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "IndexReader topReader = ReaderUtil.getTopLevelContext(readerContext).reader()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "LeafReaderContext raw@@@13@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "getValues['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "getValues['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "r = SlowCompositeReaderWrapper.wrap(topReader)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Object o = context.get(\"searcher\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "LeafReaderContext readerContext@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "SchemaField sf = is.getSchema().getFieldOrNull(field)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final int off = readerContext.docBase@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "r = ((SolrIndexSearcher)o).getLeafReader()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "LeafReaderContext raw@@@13@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "List<LeafReaderContext> leaves = is.getIndexReader().leaves()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "LeafReaderContext readerContext@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "SolrIndexSearcher is = (SolrIndexSearcher)o@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "leaves@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Map context@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "LeafReader insaneLeaves = new LeafReader((((@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "return new IntDocValues(this){protected String toTerm(String readableValue){return readableValue}@Override public int intVal(int doc){return sindex.getOrd(doc + off)}@Override public int ordVal(int doc){return sindex.getOrd(doc + off)}@Override public int numOrd(){return sindex.getValueCount()}@Override public boolean exists(int doc){return sindex.getOrd(doc + off) != 0}@Override public ValueFiller getValueFiller(){return new ValueFiller(){@Override public MutableValue getValue(){return mval}@Override public void fillValue(int doc){mval.value = sindex.getOrd(doc)mval.exists = mval.value != 0}}}}@@@27@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final int end = sindex.getValueCount()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "LeafReaderContext raw@@@13@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Map context@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "final SortedDocValues sindex = SortedSetSelector.wrap(DocValues.getSortedSet(r,field),SortedSetSelector.Type.MIN)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "o instanceof SolrIndexSearcher@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7->2 [style = dotted, label="true"];
9->18 [style = solid, label="off"];
26->28 [style = dotted, label="true"];
8->12 [style = bold, label=""];
7->17 [style = dotted, label="true"];
13->21 [style = bold, label=""];
15->13 [style = solid, label="r"];
20->11 [style = solid, label="o"];
4->13 [style = solid, label="r"];
7->8 [style = dotted, label="true"];
7->12 [style = dotted, label="true"];
7->10 [style = dotted, label="true"];
19->15 [style = dotted, label="false"];
16->14 [style = dotted, label="true"];
19->22 [style = bold, label=""];
11->1 [style = bold, label=""];
9->0 [style = bold, label=""];
22->15 [style = bold, label=""];
7->27 [style = dotted, label="true"];
26->9 [style = bold, label=""];
19->7 [style = dotted, label="true"];
13->18 [style = bold, label=""];
20->19 [style = bold, label=""];
2->3 [style = bold, label=""];
20->19 [style = solid, label="o"];
21->18 [style = solid, label="end"];
7->5 [style = dotted, label="true"];
16->6 [style = dotted, label="true"];
12->10 [style = bold, label=""];
0->20 [style = bold, label=""];
25->14 [style = dotted, label="true"];
19->11 [style = dotted, label="true"];
19->11 [style = bold, label=""];
10->13 [style = bold, label=""];
10->13 [style = solid, label="r"];
7->4 [style = bold, label=""];
21->18 [style = bold, label=""];
7->4 [style = dotted, label="false"];
26->14 [style = dotted, label="true"];
3->8 [style = bold, label=""];
15->13 [style = bold, label=""];
25->9 [style = bold, label=""];
19->1 [style = dotted, label="true"];
7->24 [style = dotted, label="true"];
4->13 [style = bold, label=""];
19->22 [style = dotted, label="false"];
22->15 [style = solid, label="topReader"];
1->7 [style = bold, label=""];
1->7 [style = solid, label="sf"];
7->3 [style = dotted, label="true"];
25->23 [style = dotted, label="true"];
12->10 [style = solid, label="insaneLeaves"];
16->9 [style = bold, label=""];
7->2 [style = bold, label=""];
}
