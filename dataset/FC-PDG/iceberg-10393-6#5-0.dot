digraph {
18 [style = filled, label = "kryo.writeClassAndObject(out,scanTask)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testBaseCombinedScanTaskKryoSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "i < 3@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "BaseCombinedScanTask scanTask = prepareBaseCombinedScanTaskForSerDeTest()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "checkManifestFile(manifest,(ManifestFile)obj)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "File data = temp.newFile()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testManifestFileKryoSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Object obj = kryo.readClassAndObject(in)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "kryo.writeClassAndObject(out,manifest.copy())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "kryo.writeClassAndObject(out,manifest)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertTrue(\"Should be a BaseCombinedScanTask\",obj instanceof BaseCombinedScanTask)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testManifestFileKryoSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "File data = temp.newFile()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "i += 1@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Kryo kryo = new KryoSerializer(new SparkConf()).newKryo()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "TaskCheckHelper.assertEquals(scanTask,(BaseCombinedScanTask)obj)@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ManifestFile manifest = writeManifest(FILE_A,FILE_B)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Object obj = kryo.readClassAndObject(in)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "kryo.writeClassAndObject(out,GenericManifestFile.copyOf(manifest).build())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertTrue(data.delete())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->4 [style = solid, label="manifest"];
17->1 [style = solid, label="scanTask"];
6->18 [style = bold, label=""];
5->10 [style = dotted, label="true"];
1->11 [style = dashed, label="0"];
1->10 [style = bold, label=""];
6->4 [style = bold, label=""];
6->10 [style = solid, label="manifest"];
5->9 [style = dotted, label="true"];
10->9 [style = bold, label=""];
15->10 [style = solid, label="manifest"];
15->4 [style = bold, label=""];
12->1 [style = solid, label="obj"];
7->6 [style = bold, label=""];
12->1 [style = bold, label=""];
11->1 [style = bold, label=""];
14->0 [style = bold, label=""];
0->3 [style = bold, label=""];
5->12 [style = dotted, label="true"];
17->3 [style = bold, label=""];
17->18 [style = solid, label="scanTask"];
3->7 [style = bold, label=""];
19->1 [style = solid, label="obj"];
8->11 [style = bold, label=""];
19->11 [style = bold, label=""];
18->19 [style = bold, label=""];
11->5 [style = solid, label="i"];
4->13 [style = bold, label=""];
6->15 [style = dashed, label="0"];
5->12 [style = bold, label=""];
2->0 [style = bold, label=""];
7->15 [style = bold, label=""];
16->17 [style = bold, label=""];
12->10 [style = solid, label="obj"];
13->8 [style = bold, label=""];
15->4 [style = solid, label="manifest"];
5->1 [style = dotted, label="true"];
4->18 [style = dashed, label="0"];
9->5 [style = solid, label="i"];
9->5 [style = bold, label=""];
11->5 [style = bold, label=""];
19->11 [style = solid, label="obj"];
}
