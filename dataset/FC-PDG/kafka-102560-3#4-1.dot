digraph {
7 [style = filled, label = "assertThat(store.get(2L),equalTo(\"value2\"))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final ForeachAction<Long,String> action = new ForeachAction<Long,String>(){@Override public void apply(final Long key,final String value){results.put(key,value)}}@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "builder.table(topic,Materialized.as(\"store\").withKeySerde(Serdes.Long()).withValueSerde(Serdes.String())).toStream().foreach(action)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(store.get(1L),equalTo(\"value1\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(results.get(2L),equalTo(\"value2\"))@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "driver.flushState()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "driver.setUp(builder,TestUtils.tempDirectory())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final Map<Long,String> results = new HashMap<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "driver.flushState()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "builder.globalTable(topic,Materialized.as(\"store\").withKeySerde(Serdes.Long()).withValueSerde(Serdes.String()))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final String topic = \"topic\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "shouldUseSerdesDefinedInMaterializedToConsumeGlobalTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "shouldUseSerdesDefinedInMaterializedToConsumeTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "driver.process(topic,2L,\"value2\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "driver.process(topic,2L,\"value2\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "driver.process(topic,1L,\"value1\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "driver.process(topic,1L,\"value1\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "shouldUseSerdesDefinedInMaterializedToConsumeTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertThat(store.get(1L),equalTo(\"value1\"))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final KeyValueStore<Long,String> store = (KeyValueStore)driver.allStateStores().get(\"store\")@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "final KeyValueStore<Long,String> store = (KeyValueStore)driver.allStateStores().get(\"store\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "driver.setTime(0L)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(store.get(2L),equalTo(\"value2\"))@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final KeyValueStore<Long,String> store = (KeyValueStore<Long,String>)driver.allStateStores().get(\"store\")@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertThat(results.get(1L),equalTo(\"value1\"))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "driver.setTime(0L)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->16 [style = bold, label=""];
8->16 [style = dashed, label="0"];
15->13 [style = bold, label=""];
9->1 [style = solid, label="topic"];
20->9 [style = bold, label=""];
4->6 [style = bold, label=""];
7->10 [style = bold, label=""];
3->4 [style = bold, label=""];
17->19 [style = bold, label=""];
12->7 [style = bold, label=""];
14->1 [style = bold, label=""];
3->4 [style = solid, label="action"];
6->14 [style = bold, label=""];
20->9 [style = solid, label="topic"];
25->20 [style = bold, label=""];
2->0 [style = bold, label=""];
22->18 [style = bold, label=""];
10->5 [style = bold, label=""];
20->17 [style = solid, label="topic"];
18->6 [style = bold, label=""];
21->22 [style = bold, label=""];
9->2 [style = solid, label="topic"];
20->19 [style = solid, label="topic"];
11->13 [style = bold, label=""];
0->8 [style = bold, label=""];
9->3 [style = bold, label=""];
23->17 [style = bold, label=""];
1->2 [style = bold, label=""];
13->9 [style = bold, label=""];
16->12 [style = bold, label=""];
9->24 [style = bold, label=""];
8->12 [style = bold, label=""];
24->23 [style = bold, label=""];
19->21 [style = bold, label=""];
}
