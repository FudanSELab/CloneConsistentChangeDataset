digraph {
30 [style = filled, label = "LookupReferencesManager lookupReferencesManager = new LookupReferencesManager(new LookupConfig(temporaryFolder.newFolder().getAbsolutePath()),mapper,druidLeaderClient,config)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Thread.sleep(100)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "EasyMock.replay(lookupExtractorFactory)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(lookupReferencesManager.mainThread.isAlive())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "lookupReferencesManager.stop()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Map<String,Object> lookupMap = new HashMap<>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "EasyMock.verify(lookupExtractorFactory)@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "lookupMap.put(\"testMockForRealModeWithMainThread\",container)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "lookupReferencesManager.handlePendingNotices()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "EasyMock.replay(config)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.destroy()).andReturn(true).once()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "lookupMap.put(\"testMockForDestroyIsCalledAfterRemove\",container)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.start()).andReturn(true).once()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "EasyMock.expect(druidLeaderClient.makeRequest(HttpMethod.GET,\"/druid/coordinator/v1/lookups/config/lookupTier?detailed=true\")).andReturn(request)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testDestroyIsCalledAfterRemove['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "lookupReferencesManager.add(\"test\",testContainer)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "!testContainer.equals(lookupReferencesManager.get(\"test\"))@@@23@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testDestroyIsCalledAfterRemove['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "EasyMock.expect(druidLeaderClient.go(request)).andReturn(responseHolder)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "LookupExtractorFactory lookupExtractorFactory = EasyMock.createMock()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Thread.sleep(100)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.start()).andReturn(true).once()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "StringFullResponseHolder responseHolder = new StringFullResponseHolder(HttpResponseStatus.OK,newEmptyResponse(),StandardCharsets.UTF_8).addChunk(strResult)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "lookupReferencesManager.remove(\"test\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testRealModeWithMainThread['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "FullResponseHolder responseHolder = new FullResponseHolder(HttpResponseStatus.OK,EasyMock.createNiceMock(),new StringBuilder().append(strResult))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.assertFalse(lookupReferencesManager.mainThread.isAlive())@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "lookupReferencesManager.add(\"testMock\",new LookupExtractorFactoryContainer(\"0\",lookupExtractorFactory))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "lookupReferencesManager.start()@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "LookupExtractorFactory lookupExtractorFactory = EasyMock.createStrictMock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "EasyMock.replay(druidLeaderClient)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.destroy()).andReturn(true).once()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "LookupExtractorFactoryContainer testContainer = new LookupExtractorFactoryContainer(\"0\",lookupExtractorFactory)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "Assert.assertNull(lookupReferencesManager.get(\"test\"))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "EasyMock.replay(lookupExtractorFactory)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "String strResult = mapper.writeValueAsString(lookupMap)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "lookupReferencesManager.handlePendingNotices()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "EasyMock.expect(config.getLookupTier()).andReturn(LOOKUP_TIER).anyTimes()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "lookupReferencesManager.remove(\"testMock\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "lookupReferencesManager.get(\"test\") != null@@@27@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Request request = new Request(HttpMethod.GET,new URL(\"http://localhost:1234/xx\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19->33 [style = bold, label=""];
23->31 [style = bold, label=""];
0->16 [style = bold, label=""];
38->14 [style = solid, label="strResult"];
14->5 [style = solid, label="responseHolder"];
15->34 [style = dashed, label="0"];
27->36 [style = bold, label=""];
36->27 [style = dotted, label="true"];
40->35 [style = bold, label=""];
15->7 [style = bold, label=""];
17->1 [style = bold, label=""];
28->34 [style = bold, label=""];
10->14 [style = bold, label=""];
9->2 [style = bold, label=""];
7->10 [style = bold, label=""];
25->30 [style = bold, label=""];
31->24 [style = bold, label=""];
11->4 [style = bold, label=""];
18->11 [style = bold, label=""];
11->22 [style = dashed, label="0"];
35->32 [style = bold, label=""];
5->18 [style = bold, label=""];
7->22 [style = solid, label="strResult"];
20->6 [style = bold, label=""];
16->17 [style = bold, label=""];
32->39 [style = solid, label="testContainer"];
20->1 [style = solid, label="lookupExtractorFactory"];
19->8 [style = bold, label=""];
38->2 [style = bold, label=""];
12->40 [style = solid, label="lookupExtractorFactory"];
22->4 [style = bold, label=""];
1->40 [style = dashed, label="0"];
8->0 [style = bold, label=""];
31->26 [style = bold, label=""];
20->9 [style = solid, label="lookupExtractorFactory"];
3->20 [style = bold, label=""];
18->22 [style = bold, label=""];
30->28 [style = bold, label=""];
21->20 [style = bold, label=""];
33->40 [style = bold, label=""];
36->27 [style = bold, label=""];
36->23 [style = bold, label=""];
2->10 [style = solid, label="request"];
24->31 [style = bold, label=""];
28->38 [style = solid, label="lookupMap"];
6->13 [style = bold, label=""];
20->8 [style = solid, label="lookupExtractorFactory"];
11->4 [style = solid, label="responseHolder"];
2->15 [style = bold, label=""];
10->18 [style = solid, label="request"];
22->4 [style = solid, label="responseHolder"];
12->32 [style = solid, label="lookupExtractorFactory"];
4->12 [style = bold, label=""];
29->7 [style = bold, label=""];
26->37 [style = bold, label=""];
2->7 [style = solid, label="lookupMap"];
32->39 [style = bold, label=""];
31->24 [style = dotted, label="true"];
13->9 [style = bold, label=""];
8->4 [style = dashed, label="0"];
34->38 [style = bold, label=""];
7->11 [style = solid, label="strResult"];
12->19 [style = bold, label=""];
2->29 [style = bold, label=""];
39->36 [style = bold, label=""];
14->5 [style = bold, label=""];
}
