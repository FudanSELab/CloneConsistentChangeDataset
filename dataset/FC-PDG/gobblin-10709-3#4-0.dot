digraph {
7 [style = filled, label = "Assert.assertTrue(Long.valueOf(m.group(2)) < currentTime)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "jobContext = ((AbstractJobLauncher)jobLauncher).getJobContext()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.assertEquals(skippedWorkunits,0)@@@53@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "Boolean.parseBoolean(jobProps.getProperty(ConfigurationKeys.WORK_UNIT_SKIP_KEY,Boolean.FALSE.toString())) && taskState.getWorkingState() == WorkUnitState.WorkingState.SKIPPED@@@25@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "Assert.assertTrue(jobContext.getJobMetricsOptional().isPresent())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertTrue(Long.valueOf(m.group(1)) < currentTime)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "int skippedWorkunits = 0@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "Assert.fail(\"no matches for \" + value)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(jobMetricContextTags.contains(ClusterNameTags.CLUSTER_IDENTIFIER_TAG_NAME),ClusterNameTags.CLUSTER_IDENTIFIER_TAG_NAME + \" tag missing in job metric context tags.\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "long timeBuffer = 5 * 60 * 1000@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Closer closer = Closer.create()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Assert.assertEquals(taskState.getPropAsLong(ConfigurationKeys.WRITER_RECORDS_WRITTEN),TestExtractor.TOTAL_RECORDS)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Properties jobProps@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Pattern r = Pattern.compile(pattern)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "JobLauncher jobLauncher = closer.register(JobLauncherFactory.newJobLauncher(this.launcherProps,jobProps))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Long currentTime = System.currentTimeMillis()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "runTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "Assert.assertEquals(taskState.getWorkingState(),WorkUnitState.WorkingState.COMMITTED)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Properties jobProps@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(datasetState.getJobFailures(),0)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "List<JobState.DatasetState> datasetStateList = this.datasetStateStore.getAll(jobName,sanitizeJobNameForDatasetStore(jobId) + \".jst\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "String jobName = jobProps.getProperty(ConfigurationKeys.JOB_NAME_KEY)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Boolean.valueOf(taskState.getProp(ConfigurationKeys.WRITER_ADD_TASK_TIMESTAMP,\"false\"))@@@31@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assert.assertEquals(datasetState.getCompletedTasks(),2)@@@50@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "jobProps.setProperty(ConfigurationKeys.JOB_ID_KEY,jobId)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Boolean.parseBoolean(jobProps.getProperty(ConfigurationKeys.WORK_UNIT_SKIP_KEY,Boolean.FALSE.toString()))@@@48@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "Assert.assertEquals(datasetState.getCompletedTasks(),4)@@@54@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "Matcher m = r.matcher(taskState.getProp(ConfigurationKeys.WRITER_FINAL_OUTPUT_FILE_PATHS))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertTrue(Long.valueOf(m.group(2)) > currentTime - timeBuffer)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "runTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "!m.matches()@@@37@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "return ((AbstractJobLauncher)jobLauncher).getJobContext()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertTrue(Long.valueOf(m.group(1)) > currentTime - timeBuffer)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "JobContext jobContext = null@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "String pattern = \".*part.task_.*_(\d+)_\d+_(\d+)_\d+.avro\"@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "return jobContext@@@56@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "Assert.assertEquals(datasetState.getState(),JobState.RunningState.COMMITTED)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String value = taskState.getProp(ConfigurationKeys.WRITER_FINAL_OUTPUT_FILE_PATHS)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Assert.assertEquals(skippedWorkunits,2)@@@49@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "skippedWorkunits++@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "dummyJobContextInitHelper['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assert.assertTrue(Long.valueOf(m.group(1)) < Long.valueOf(m.group(2)))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Properties jobProps@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Assert.assertEquals(datasetState.getCompletedTasks(),4)@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "String jobMetricContextTags = jobContext.getJobMetricsOptional().get().getMetricContext().getTags().toString()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "jobLauncher.launchJob(null)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "{closer.close()}@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "DatasetState datasetState = datasetStateList.get(0)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "{closer.close()}@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "String jobId = JobLauncherUtils.newJobId(jobName)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21->10 [style = bold, label=""];
28->20 [style = bold, label=""];
20->9 [style = bold, label=""];
2->6 [style = bold, label=""];
11->12 [style = dotted, label="true"];
4->15 [style = solid, label="jobProps"];
12->17 [style = solid, label="value"];
14->10 [style = solid, label="currentTime"];
25->31 [style = bold, label=""];
3->34 [style = bold, label=""];
8->0 [style = bold, label=""];
43->40 [style = bold, label=""];
19->5 [style = bold, label=""];
11->34 [style = dotted, label="true"];
14->0 [style = solid, label="currentTime"];
33->25 [style = bold, label=""];
17->14 [style = bold, label=""];
47->46 [style = dotted, label="true"];
33->42 [style = bold, label=""];
11->0 [style = dotted, label="true"];
34->17 [style = bold, label=""];
42->40 [style = solid, label="skippedWorkunits"];
7->43 [style = bold, label=""];
28->20 [style = solid, label="jobId"];
11->8 [style = dotted, label="true"];
27->19 [style = bold, label=""];
11->25 [style = bold, label=""];
11->7 [style = dotted, label="true"];
48->49 [style = bold, label=""];
5->33 [style = bold, label=""];
47->48 [style = bold, label=""];
11->10 [style = dotted, label="true"];
16->29 [style = bold, label=""];
11->14 [style = dotted, label="true"];
14->7 [style = solid, label="currentTime"];
0->21 [style = bold, label=""];
11->43 [style = bold, label=""];
1->4 [style = dotted, label="true"];
36->37 [style = solid, label="skippedWorkunits"];
26->24 [style = bold, label=""];
24->18 [style = bold, label=""];
10->7 [style = bold, label=""];
31->11 [style = bold, label=""];
43->35 [style = dotted, label="false"];
44->32 [style = bold, label=""];
24->39 [style = solid, label="jobContext"];
11->16 [style = dotted, label="true"];
1->32 [style = bold, label=""];
38->25 [style = bold, label=""];
14->8 [style = bold, label=""];
32->13 [style = solid, label="jobName"];
34->14 [style = bold, label=""];
3->8 [style = solid, label="timeBuffer"];
42->38 [style = bold, label=""];
30->15 [style = bold, label=""];
4->41 [style = dashed, label="0"];
19->33 [style = bold, label=""];
36->43 [style = bold, label=""];
18->23 [style = bold, label=""];
42->37 [style = solid, label="skippedWorkunits"];
11->29 [style = dotted, label="true"];
35->39 [style = bold, label=""];
4->46 [style = dashed, label="0"];
41->15 [style = solid, label="jobProps"];
3->10 [style = solid, label="timeBuffer"];
46->9 [style = solid, label="jobProps"];
26->30 [style = dashed, label="0"];
13->27 [style = bold, label=""];
6->13 [style = bold, label=""];
11->22 [style = bold, label=""];
43->40 [style = dotted, label="true"];
28->13 [style = solid, label="jobId"];
23->2 [style = bold, label=""];
37->35 [style = bold, label=""];
11->3 [style = dotted, label="true"];
38->36 [style = dotted, label="true"];
45->39 [style = bold, label=""];
11->38 [style = bold, label=""];
14->8 [style = solid, label="currentTime"];
29->3 [style = bold, label=""];
38->36 [style = bold, label=""];
9->30 [style = bold, label=""];
12->16 [style = bold, label=""];
43->37 [style = bold, label=""];
36->40 [style = solid, label="skippedWorkunits"];
11->22 [style = dotted, label="true"];
15->26 [style = bold, label=""];
7->38 [style = bold, label=""];
42->36 [style = solid, label="skippedWorkunits"];
34->17 [style = dotted, label="true"];
43->45 [style = dotted, label="true"];
22->12 [style = bold, label=""];
32->28 [style = solid, label="jobName"];
43->37 [style = dotted, label="false"];
7->25 [style = bold, label=""];
40->45 [style = bold, label=""];
36->38 [style = bold, label=""];
11->21 [style = dotted, label="true"];
49->9 [style = bold, label=""];
32->28 [style = bold, label=""];
22->16 [style = solid, label="pattern"];
44->41 [style = dotted, label="true"];
}
