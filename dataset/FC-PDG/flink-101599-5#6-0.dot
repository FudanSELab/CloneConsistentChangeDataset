digraph {
7 [style = filled, label = "ClusterClient<?> client = cluster.getClusterClient()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int parallelism@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "StatefulCounter.getProgressLatch().await()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "submitJobAndTakeSavepoint['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "int parallelism@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "int parallelism@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "client.disposeSavepoint(savepointPath).get()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "client.setDetached(true)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "MiniClusterWithClientResource cluster = clusterFactory.get()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "StatefulCounter.resetForTest(parallelism)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "{cluster.after()StatefulCounter.resetForTest(parallelism)}@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "StatefulCounter.getRestoreLatch().await()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "{cluster.after()StatefulCounter.resetForTest(parallelism)}@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "FutureUtils.retrySuccessfulWithDelay(null,Time.milliseconds(50),Deadline.now().plus(Duration.ofSeconds(30)),null,TestingUtils.defaultScheduledExecutor())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "restoreJobAndVerifyState['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "cluster.before()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return client.triggerSavepoint(jobId,null).get()@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "final JobID jobId = jobGraph.getJobID()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "submitJobAndTakeSavepoint['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "jobGraph.setSavepointRestoreSettings(SavepointRestoreSettings.forPath(savepointPath))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "String savepointPath@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "client.cancel(jobId)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "MiniClusterResourceFactory clusterFactory@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "final JobGraph jobGraph = createJobGraph(parallelism,0,1000)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "MiniClusterResourceFactory clusterFactory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertFalse(\"Savepoint not properly cleaned up.\",new File(savepointPath).exists())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "return client.cancelWithSavepoint(jobId,null)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "client.submitJob(jobGraph,.getClassLoader())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->10 [style = bold, label=""];
10->13 [style = solid, label="jobGraph"];
0->10 [style = solid, label="parallelism"];
15->10 [style = bold, label=""];
7->1 [style = bold, label=""];
21->6 [style = bold, label=""];
26->10 [style = bold, label=""];
6->27 [style = solid, label="jobId"];
17->9 [style = bold, label=""];
4->0 [style = dotted, label="true"];
18->8 [style = solid, label="parallelism"];
4->11 [style = dotted, label="true"];
26->20 [style = dotted, label="true"];
10->21 [style = bold, label=""];
11->8 [style = solid, label="parallelism"];
0->5 [style = solid, label="parallelism"];
15->14 [style = dotted, label="true"];
22->23 [style = bold, label=""];
10->6 [style = bold, label=""];
1->13 [style = bold, label=""];
9->16 [style = bold, label=""];
6->16 [style = solid, label="jobId"];
9->27 [style = bold, label=""];
24->21 [style = solid, label="savepointPath"];
13->17 [style = bold, label=""];
12->2 [style = bold, label=""];
3->5 [style = bold, label=""];
11->10 [style = solid, label="parallelism"];
26->24 [style = dotted, label="true"];
6->8 [style = bold, label=""];
11->24 [style = dashed, label="0"];
25->19 [style = bold, label=""];
15->11 [style = dotted, label="true"];
8->12 [style = bold, label=""];
16->5 [style = bold, label=""];
9->3 [style = bold, label=""];
26->18 [style = dotted, label="true"];
0->8 [style = solid, label="parallelism"];
18->23 [style = solid, label="parallelism"];
13->9 [style = bold, label=""];
2->7 [style = bold, label=""];
19->22 [style = bold, label=""];
27->25 [style = bold, label=""];
11->5 [style = solid, label="parallelism"];
18->10 [style = solid, label="parallelism"];
3->16 [style = dashed, label="0"];
}
