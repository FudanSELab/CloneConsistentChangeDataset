digraph {
17 [style = filled, label = "testSearch['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "searchQuery = builder.query(\"SPOT\").build()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "expectedResults.put(QueryRunnerTestHelper.qualityDimension,Sets.newHashSet(\"automotive\",\"AutoMotive\"))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "expectedResults.put(QueryRunnerTestHelper.qualityDimension,Sets.newHashSet(\"automotive\"))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "Druids.SearchQueryBuilder builder = testBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "searchQuery = builder.fragments(Arrays.asList(\"auto\",\"ve\"),true).build()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "expectedResults.put(QueryRunnerTestHelper.QUALITY_DIMENSION,Sets.newHashSet(\"automotive\",\"AutoMotive\"))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "checkSearchQuery(searchQuery,expectedResults)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "checkSearchQuery(searchQuery,expectedResults)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testFragmentSearch['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Map<String,Set<String>> expectedResults = new TreeMap<>(String.CASE_INSENSITIVE_ORDER)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "checkSearchQuery(searchQuery,expectedResults)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "searchQuery = builder.fragments(Arrays.asList(\"auto\",\"ve\")).build()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "SearchQuery searchQuery@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "expectedResults.put(QueryRunnerTestHelper.marketDimension,Sets.newHashSet(\"spot\",\"SPot\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "expectedResults.put(QueryRunnerTestHelper.marketDimension,Sets.newHashSet(\"SPot\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testFragmentSearch['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "expectedResults.put(QueryRunnerTestHelper.QUALITY_DIMENSION,Sets.newHashSet(\"automotive\"))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "expectedResults.put(QueryRunnerTestHelper.marketDimension,Sets.newHashSet(\"spot\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "searchQuery = builder.query(\"SPot\",true).build()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "searchQuery = builder.query(\"spot\",true).build()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20->13 [style = bold, label=""];
2->20 [style = dashed, label="0"];
12->5 [style = bold, label=""];
7->10 [style = bold, label=""];
8->3 [style = bold, label=""];
1->20 [style = bold, label=""];
20->5 [style = solid, label="searchQuery"];
6->0 [style = bold, label=""];
7->4 [style = bold, label=""];
2->9 [style = bold, label=""];
8->18 [style = solid, label="expectedResults"];
16->18 [style = solid, label="searchQuery"];
2->12 [style = bold, label=""];
5->16 [style = bold, label=""];
8->1 [style = solid, label="expectedResults"];
11->0 [style = bold, label=""];
17->0 [style = bold, label=""];
3->19 [style = bold, label=""];
3->7 [style = bold, label=""];
7->19 [style = dashed, label="0"];
4->15 [style = dashed, label="0"];
19->1 [style = solid, label="searchQuery"];
8->5 [style = solid, label="expectedResults"];
0->8 [style = bold, label=""];
7->1 [style = solid, label="searchQuery"];
9->13 [style = dashed, label="0"];
13->5 [style = bold, label=""];
9->5 [style = bold, label=""];
16->14 [style = bold, label=""];
2->5 [style = solid, label="searchQuery"];
14->18 [style = bold, label=""];
4->1 [style = bold, label=""];
1->2 [style = bold, label=""];
9->12 [style = dashed, label="0"];
19->15 [style = bold, label=""];
4->10 [style = dashed, label="0"];
10->1 [style = bold, label=""];
15->1 [style = bold, label=""];
}
