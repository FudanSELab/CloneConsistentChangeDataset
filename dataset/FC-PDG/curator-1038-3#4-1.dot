digraph {
18 [style = filled, label = "CloseableExecutorService service = new CloseableExecutorService(executorService)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "CountDownLatch startLatch = new CountDownLatch(QTY)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "service.submit(new Callable<Void>(){@Override public Void call(){try {startLatch.countDown()Thread.currentThread().join()}catch (InterruptedException e) {latch.countDown()}return null}})@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(latch.await(3,TimeUnit.SECONDS))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "final CountDownLatch startLatch = new CountDownLatch(QTY)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(startLatch.await(3,TimeUnit.SECONDS))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "testBasicRunnable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int i = 0@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "service.close()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertTrue(latch.await(3,TimeUnit.SECONDS))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "testBasicCallable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "++i@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final CountDownLatch latch = new CountDownLatch(QTY)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(startLatch.await(3,TimeUnit.SECONDS))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "submitRunnable(service,startLatch,latch)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "CountDownLatch latch = new CountDownLatch(QTY)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "service.close()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertTrue(startLatch.await(3,TimeUnit.SECONDS))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testBasicRunnable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "i < QTY@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertTrue(latch.await(3,TimeUnit.SECONDS))@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5->13 [style = dashed, label="0"];
8->10 [style = bold, label=""];
10->8 [style = dotted, label="true"];
15->10 [style = bold, label=""];
16->18 [style = bold, label=""];
7->4 [style = solid, label="service"];
10->8 [style = solid, label="i"];
2->4 [style = solid, label="startLatch"];
2->3 [style = bold, label=""];
6->11 [style = dashed, label="0"];
8->6 [style = bold, label=""];
10->17 [style = bold, label=""];
7->20 [style = bold, label=""];
2->7 [style = dashed, label="0"];
11->9 [style = bold, label=""];
1->7 [style = bold, label=""];
17->19 [style = bold, label=""];
12->7 [style = bold, label=""];
8->4 [style = dotted, label="true"];
4->0 [style = bold, label=""];
3->10 [style = bold, label=""];
19->14 [style = bold, label=""];
3->4 [style = solid, label="latch"];
10->8 [style = bold, label=""];
7->2 [style = bold, label=""];
10->0 [style = bold, label=""];
3->20 [style = dashed, label="0"];
0->8 [style = bold, label=""];
9->5 [style = bold, label=""];
10->0 [style = dotted, label="true"];
8->0 [style = dotted, label="true"];
8->4 [style = bold, label=""];
6->9 [style = bold, label=""];
18->7 [style = bold, label=""];
8->11 [style = bold, label=""];
20->15 [style = bold, label=""];
15->10 [style = solid, label="i"];
9->13 [style = bold, label=""];
}
