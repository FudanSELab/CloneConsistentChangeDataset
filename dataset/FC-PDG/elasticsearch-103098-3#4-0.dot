digraph {
7 [style = filled, label = "mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\").startObject(\"properties\").startObject(\"location\").field(\"type\",\"geo_shape\").field(\"tree\",\"quadtree\").field(\"orientation\",\"right\").endObject().endObject().endObject().endObject())@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(orientation,equalTo(ShapeBuilder.Orientation.CLOCKWISE))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\").startObject(\"properties\").startObject(\"location\").field(\"type\",\"geo_shape\").field(\"orientation\",\"left\").endObject().endObject().endObject().endObject())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "fieldMapper = defaultMapper.mappers().getMapper(\"location\")@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "fieldMapper = mapper.mappers().getMapper(\"field\")@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "Mapper fieldMapper = mapper.mappers().getMapper(\"field\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertThat(orientation,equalTo(ShapeBuilder.Orientation.RIGHT))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testOrientationParsing['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "DocumentMapper mapper = createDocumentMapper(fieldMapping(null))@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\").startObject(\"properties\").startObject(\"location\").field(\"type\",\"geo_shape\").field(\"tree\",\"quadtree\").field(\"orientation\",\"left\").endObject().endObject().endObject().endObject())@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(orientation,equalTo(ShapeBuilder.Orientation.COUNTER_CLOCKWISE))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "orientation = ((LegacyGeoShapeFieldMapper)fieldMapper).fieldType().orientation()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "defaultMapper = createIndex(\"test2\").mapperService().documentMapperParser().parse(\"type1\",new CompressedXContent(mapping))@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(orientation,equalTo(ShapeBuilder.Orientation.RIGHT))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "ShapeBuilder.Orientation orientation = ((GeoShapeWithDocValuesFieldMapper)fieldMapper).fieldType().orientation()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "orientation = ((GeoShapeWithDocValuesFieldMapper)fieldMapper).fieldType().orientation()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ShapeBuilder.Orientation orientation = ((LegacyGeoShapeFieldMapper)fieldMapper).fieldType().orientation()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type1\",new CompressedXContent(mapping))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(orientation,equalTo(ShapeBuilder.Orientation.LEFT))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testOrientationParsing['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\").startObject(\"properties\").startObject(\"location\").field(\"type\",\"geo_shape\").field(\"orientation\",\"right\").endObject().endObject().endObject().endObject())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(orientation,equalTo(ShapeBuilder.Orientation.CW))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(orientation,equalTo(ShapeBuilder.Orientation.CLOCKWISE))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(orientation,equalTo(ShapeBuilder.Orientation.CCW))@@@18@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testOrientationParsing['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertFieldWarnings(\"tree\")@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertThat(orientation,equalTo(ShapeBuilder.Orientation.COUNTER_CLOCKWISE))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->31 [style = solid, label="fieldMapper"];
13->10 [style = bold, label=""];
14->3 [style = bold, label=""];
12->14 [style = solid, label="orientation"];
30->15 [style = solid, label="orientation"];
25->28 [style = bold, label=""];
1->12 [style = solid, label="orientation"];
7->11 [style = bold, label=""];
8->15 [style = bold, label=""];
3->24 [style = bold, label=""];
17->6 [style = bold, label=""];
10->25 [style = solid, label="fieldMapper"];
5->26 [style = dashed, label="0"];
30->8 [style = solid, label="orientation"];
0->2 [style = bold, label=""];
28->3 [style = solid, label="orientation"];
28->14 [style = solid, label="orientation"];
10->1 [style = solid, label="fieldMapper"];
30->17 [style = solid, label="orientation"];
4->30 [style = dashed, label="0"];
29->11 [style = solid, label="mapping"];
28->9 [style = bold, label=""];
7->11 [style = solid, label="mapping"];
28->9 [style = solid, label="orientation"];
0->2 [style = solid, label="fieldMapper"];
18->2 [style = solid, label="orientation"];
18->2 [style = bold, label=""];
24->21 [style = solid, label="fieldMapper"];
12->9 [style = bold, label=""];
2->4 [style = bold, label=""];
18->8 [style = solid, label="orientation"];
21->18 [style = bold, label=""];
26->13 [style = bold, label=""];
5->13 [style = solid, label="mapping"];
2->31 [style = dashed, label="0"];
1->9 [style = solid, label="orientation"];
15->17 [style = bold, label=""];
1->14 [style = solid, label="orientation"];
11->0 [style = bold, label=""];
4->15 [style = solid, label="orientation"];
22->20 [style = bold, label=""];
3->7 [style = bold, label=""];
28->30 [style = solid, label="orientation"];
24->21 [style = bold, label=""];
10->25 [style = bold, label=""];
6->15 [style = dashed, label="0"];
12->28 [style = dashed, label="0"];
4->17 [style = solid, label="orientation"];
5->13 [style = bold, label=""];
19->23 [style = bold, label=""];
31->30 [style = bold, label=""];
12->9 [style = solid, label="orientation"];
1->12 [style = bold, label=""];
9->14 [style = bold, label=""];
4->8 [style = solid, label="orientation"];
26->13 [style = solid, label="mapping"];
12->3 [style = solid, label="orientation"];
4->8 [style = bold, label=""];
16->5 [style = bold, label=""];
23->1 [style = bold, label=""];
7->29 [style = dashed, label="0"];
12->4 [style = solid, label="orientation"];
30->8 [style = bold, label=""];
20->19 [style = bold, label=""];
19->23 [style = solid, label="fieldMapper"];
10->1 [style = bold, label=""];
1->25 [style = dashed, label="0"];
3->29 [style = bold, label=""];
29->11 [style = bold, label=""];
18->4 [style = solid, label="orientation"];
0->31 [style = bold, label=""];
27->26 [style = bold, label=""];
1->18 [style = solid, label="orientation"];
}
