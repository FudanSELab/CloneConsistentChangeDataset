digraph {
0 [style = filled, label = "OHLCSeriesCollection c1 = new OHLCSeriesCollection()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "OHLCSeriesCollection c2 = (OHLCSeriesCollection)TestUtilities.serialised(c1)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "c1.addSeries(s1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(c1.equals(c2))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertTrue(c1.getClass() == c2.getClass())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "s1.add(new Year(2006),1.0,1.1,1.2,1.3)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "OHLCSeries s1 = new OHLCSeries(\"Series\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "OHLCSeriesCollection c2 = (OHLCSeriesCollection)TestUtils.serialised(c1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertTrue(c1 != c2)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertFalse(c1.equals(c2))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "s1.setDescription(\"XYZ\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(c1,c2)@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "OHLCSeriesCollection c2 = (OHLCSeriesCollection)c1.clone()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3->1 [style = bold, label=""];
1->14 [style = dashed, label="0"];
2->3 [style = bold, label=""];
3->14 [style = bold, label=""];
6->9 [style = dashed, label="0"];
5->3 [style = solid, label="s1"];
0->9 [style = solid, label="c1"];
8->6 [style = bold, label=""];
7->0 [style = bold, label=""];
14->11 [style = solid, label="c2"];
1->6 [style = solid, label="c2"];
4->0 [style = bold, label=""];
0->1 [style = solid, label="c1"];
0->6 [style = solid, label="c1"];
14->12 [style = solid, label="c2"];
5->2 [style = bold, label=""];
1->6 [style = bold, label=""];
14->9 [style = solid, label="c2"];
15->11 [style = bold, label=""];
0->8 [style = solid, label="c1"];
11->10 [style = bold, label=""];
9->15 [style = bold, label=""];
10->12 [style = bold, label=""];
3->8 [style = bold, label=""];
8->6 [style = solid, label="c2"];
1->8 [style = dashed, label="0"];
14->9 [style = bold, label=""];
0->5 [style = bold, label=""];
13->0 [style = bold, label=""];
}
