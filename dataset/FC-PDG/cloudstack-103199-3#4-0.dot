digraph {
8 [style = filled, label = "final NetworkRulesVmSecondaryIpCommand command = new NetworkRulesVmSecondaryIpCommand(vmName,vmMac,secondaryIp,action)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "verify(libvirtComputingResource,times(1)).configureNetworkRulesVMSecondaryIP(conn,command.getVmName(),command.getVmMac(),command.getVmSecIp(),command.getAction())@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "final Connect conn = Mockito.mock()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "when(libvirtComputingResource.configureNetworkRulesVMSecondaryIP(conn,command.getVmName(),command.getVmSecIp(),command.getAction())).thenReturn(true)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "fail(e.getMessage())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final String secondaryIp = \"127.0.0.1\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "when(libvirtComputingResource.configureNetworkRulesVMSecondaryIP(conn,command.getVmName(),command.getVmMac(),command.getVmSecIp(),command.getAction())).thenReturn(true)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "final LibvirtUtilitiesHelper libvirtUtilitiesHelper = Mockito.mock()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final boolean action = true@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testNetworkRulesSystemVmCommand['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final String vmName = \"Test\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "when(libvirtComputingResource.configureDefaultNetworkRulesForSystemVm(conn,command.getVmName())).thenReturn(true)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "when(libvirtUtilitiesHelper.getConnectionByVmName(command.getVmName())).thenReturn(conn)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testNetworkRulesVmSecondaryIpCommand['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "final LibvirtException e@@@25@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testNetworkRulesVmSecondaryIpCommand['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final Connect conn = Mockito.mock()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "verify(libvirtUtilitiesHelper,times(1)).getConnectionByVmName(command.getVmName())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "fail(e.getMessage())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "when(libvirtComputingResource.getLibvirtUtilitiesHelper()).thenReturn(libvirtUtilitiesHelper)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final LibvirtException e@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(answer.getResult())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final Answer answer = wrapper.execute(command,libvirtComputingResource)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final NetworkRulesSystemVmCommand command = new NetworkRulesSystemVmCommand(vmName,type)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final LibvirtException e@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "verify(libvirtComputingResource,times(1)).getLibvirtUtilitiesHelper()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final LibvirtException e@@@23@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final Type type = Type.SecondaryStorageVm@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "verify(libvirtComputingResource,times(1)).configureDefaultNetworkRulesForSystemVm(conn,command.getVmName())@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "verify(libvirtComputingResource,times(1)).getLibvirtUtilitiesHelper()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final Answer answer = wrapper.execute(command,libvirtComputingResource)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertNotNull(wrapper)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final LibvirtRequestWrapper wrapper = LibvirtRequestWrapper.getInstance()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final String vmMac = \"00:00:00:00\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "verify(libvirtComputingResource,times(1)).configureNetworkRulesVMSecondaryIP(conn,command.getVmName(),command.getVmSecIp(),command.getAction())@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18->31 [style = bold, label=""];
16->8 [style = solid, label="vmMac"];
33->13 [style = solid, label="conn"];
34->25 [style = bold, label=""];
28->5 [style = bold, label=""];
1->8 [style = bold, label=""];
30->17 [style = bold, label=""];
26->30 [style = solid, label="wrapper"];
14->8 [style = solid, label="secondaryIp"];
25->33 [style = bold, label=""];
5->23 [style = bold, label=""];
15->23 [style = dashed, label="0"];
17->6 [style = bold, label=""];
10->27 [style = bold, label=""];
21->15 [style = bold, label=""];
27->3 [style = bold, label=""];
5->26 [style = bold, label=""];
2->24 [style = solid, label="conn"];
5->15 [style = bold, label=""];
19->10 [style = bold, label=""];
4->18 [style = bold, label=""];
6->19 [style = bold, label=""];
33->12 [style = bold, label=""];
18->8 [style = solid, label="vmName"];
21->28 [style = dotted, label="true"];
15->5 [style = dashed, label="0"];
3->0 [style = bold, label=""];
14->1 [style = bold, label=""];
31->34 [style = bold, label=""];
21->28 [style = bold, label=""];
2->13 [style = bold, label=""];
26->30 [style = bold, label=""];
29->18 [style = bold, label=""];
12->13 [style = solid, label="libvirtUtilitiesHelper"];
2->20 [style = solid, label="conn"];
33->32 [style = solid, label="conn"];
12->13 [style = bold, label=""];
7->5 [style = dotted, label="true"];
12->2 [style = bold, label=""];
7->5 [style = bold, label=""];
15->17 [style = bold, label=""];
22->18 [style = bold, label=""];
1->8 [style = solid, label="action"];
2->21 [style = solid, label="conn"];
25->12 [style = solid, label="libvirtUtilitiesHelper"];
11->3 [style = bold, label=""];
20->24 [style = dashed, label="0"];
8->9 [style = solid, label="command"];
0->24 [style = bold, label=""];
18->34 [style = solid, label="vmName"];
10->0 [style = bold, label=""];
13->5 [style = bold, label=""];
9->19 [style = bold, label=""];
16->14 [style = bold, label=""];
23->17 [style = bold, label=""];
0->20 [style = bold, label=""];
10->27 [style = dotted, label="true"];
20->32 [style = dashed, label="0"];
6->9 [style = bold, label=""];
17->6 [style = solid, label="wrapper"];
3->32 [style = bold, label=""];
13->21 [style = bold, label=""];
31->34 [style = solid, label="type"];
34->17 [style = solid, label="command"];
11->3 [style = dotted, label="true"];
19->3 [style = bold, label=""];
8->12 [style = bold, label=""];
21->23 [style = bold, label=""];
18->16 [style = bold, label=""];
}
