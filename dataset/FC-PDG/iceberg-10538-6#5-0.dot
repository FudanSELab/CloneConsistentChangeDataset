digraph {
12 [style = filled, label = "Preconditions.checkNotNull(location,\"Could not find InputFile associated with FileScanTask\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Schema readSchema@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "FileScanTask task@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "open['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "newOrcIterable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "InputFile location@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "task.file().format() == FileFormat.PARQUET@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Schema readSchema@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "return ORC.read(location).project(readSchema).split(task.start(),task.length()).createReaderFunc(null).filter(task.residual()).caseSensitive(caseSensitive).build()@@@3@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "return iter.iterator()@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "nameMapping != null@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "newOrcIterable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return ORC.read(location).project(readSchemaWithoutConstants).split(task.start(),task.length()).createReaderFunc(null).filter(task.residual()).caseSensitive(caseSensitive).build()@@@4@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "Parquet.ReadBuilder builder = Parquet.read(location).project(expectedSchema).split(task.start(),task.length()).createBatchedReaderFunc(null).recordsPerBatch(batchSize).filter(task.residual()).caseSensitive(caseSensitive).reuseContainers()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "FileScanTask task@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "builder.withNameMapping(NameMappingParser.fromJson(nameMapping))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Schema readSchemaWithoutConstants = TypeUtil.selectNot(readSchema,idToConstant.keySet())@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "throw new UnsupportedOperationException(\"Format: \" + task.file().format() + \" not supported for batched reads\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Map<Integer,?> idToConstant@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "FileScanTask task@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "InputFile location = getInputFile(task)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Map<Integer,?> idToConstant@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "iter = builder.build()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "CloseableIterable<ColumnarBatch> iter@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17->18 [style = dotted, label="true"];
14->21 [style = bold, label=""];
12->14 [style = bold, label=""];
7->9 [style = bold, label=""];
7->10 [style = dotted, label="true"];
17->19 [style = bold, label=""];
20->22 [style = bold, label=""];
23->16 [style = bold, label=""];
15->22 [style = bold, label=""];
14->15 [style = dotted, label="false"];
19->13 [style = bold, label=""];
7->11 [style = dotted, label="true"];
13->12 [style = solid, label="location"];
7->5 [style = dotted, label="true"];
14->21 [style = dotted, label="true"];
13->12 [style = bold, label=""];
1->3 [style = dotted, label="true"];
1->5 [style = dotted, label="true"];
23->20 [style = bold, label=""];
14->20 [style = dotted, label="true"];
16->20 [style = bold, label=""];
1->2 [style = dotted, label="true"];
18->13 [style = solid, label="task"];
9->8 [style = bold, label=""];
14->23 [style = dotted, label="true"];
21->23 [style = bold, label=""];
14->15 [style = bold, label=""];
11->9 [style = solid, label="readSchema"];
1->4 [style = dotted, label="true"];
23->16 [style = dotted, label="true"];
1->0 [style = bold, label=""];
7->6 [style = dotted, label="true"];
}
