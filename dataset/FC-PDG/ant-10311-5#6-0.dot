digraph {
5 [style = filled, label = "Enumeration e = ih.getNestedElements()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(\"Return type of \" + name,expect,ih.getElementType(name))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Map attrMap = getExpectedAttributes()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testGetNestedElements['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "Enumeration e = ih.getAttributes()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(\"Type of \" + name,expect,ih.getAttributeType(name))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Class expect = (Class)attrMap.get(name)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "attrMap.remove(\"name\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "e.hasMoreElements()@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertNotNull(\"Support for \" + name + \" in IntrospectioNHelperTest?\",expect)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Class expect = (Class)elemMap.get(name)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "assertTrue(\"Found all\",elemMap.isEmpty())@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Map<String,Class<?>> elemMap = getExpectedNestedElements()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertNotNull(\"Support for \" + name + \" in IntrospectionHelperTest?\",expect)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "String name = (String)e.nextElement()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "attrMap.remove(name)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testGetNestedElements['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Class expect = elemMap.get(name)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "testGetAttributes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertTrue(\"Found all\",attrMap.isEmpty())@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "elemMap.remove(name)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
4->18 [style = dashed, label="0"];
16->15 [style = bold, label=""];
5->12 [style = dashed, label="0"];
8->10 [style = dashed, label="0"];
9->20 [style = solid, label="name"];
19->12 [style = bold, label=""];
4->6 [style = bold, label=""];
11->1 [style = bold, label=""];
9->16 [style = solid, label="name"];
2->3 [style = bold, label=""];
8->4 [style = solid, label="expect"];
3->10 [style = dotted, label="true"];
1->19 [style = dashed, label="0"];
8->20 [style = dashed, label="0"];
9->18 [style = solid, label="name"];
3->4 [style = dotted, label="true"];
14->19 [style = bold, label=""];
9->20 [style = bold, label=""];
9->15 [style = solid, label="name"];
9->10 [style = bold, label=""];
3->9 [style = dotted, label="true"];
3->6 [style = dotted, label="true"];
9->8 [style = solid, label="name"];
9->8 [style = bold, label=""];
15->3 [style = bold, label=""];
20->16 [style = solid, label="expect"];
8->6 [style = solid, label="expect"];
20->18 [style = solid, label="expect"];
10->4 [style = solid, label="expect"];
6->2 [style = bold, label=""];
2->15 [style = dashed, label="0"];
3->9 [style = bold, label=""];
20->18 [style = bold, label=""];
6->16 [style = dashed, label="0"];
9->6 [style = solid, label="name"];
3->7 [style = bold, label=""];
9->2 [style = solid, label="name"];
0->1 [style = bold, label=""];
3->18 [style = dotted, label="true"];
3->15 [style = dotted, label="true"];
10->4 [style = bold, label=""];
3->17 [style = bold, label=""];
9->4 [style = solid, label="name"];
17->13 [style = bold, label=""];
12->3 [style = bold, label=""];
8->4 [style = bold, label=""];
10->6 [style = solid, label="expect"];
3->8 [style = dotted, label="true"];
3->16 [style = dotted, label="true"];
3->2 [style = dotted, label="true"];
3->20 [style = dotted, label="true"];
9->10 [style = solid, label="name"];
18->16 [style = bold, label=""];
}
