digraph {
10 [style = filled, label = "Assert.assertEquals(\"h3\",event.getContainer().getNodeId().getHost())@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "nodeManager1.nodeHeartbeat(true)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "rm.drainEvents()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "event.getTaskAttemptID().equals(event3.getAttemptID())@@@47@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "MyContainerAllocator allocator = new MyContainerAllocator(rm,conf,appAttemptId,mockJob)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "rm.sendAMLaunched(appAttemptId)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assigned = allocator.schedule()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "nodeManager3.nodeHeartbeat(true)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "allocator.sendRequest(event2)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Assert.assertEquals(\"No of assignments must be 0\",0,assigned.size())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "JobId jobId = MRBuilderUtils.newJobId(appAttemptId.getApplicationId(),0)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "rm.registerNode(\"h2:1234\",10240)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "MyResourceManager rm = new MyResourceManager(conf)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "allocator.schedule()@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "RMApp app = rm.submitApp(1024)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "rm.drainEvents()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ApplicationAttemptId appAttemptId = app.getCurrentAppAttempt().getAppAttemptId()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testMapNodeLocality['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "rm.drainEvents()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "allocator.sendRequest(event3)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "rm.waitForState(app.getApplicationId(),RMAppState.KILLED)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "rm.killApp(app.getApplicationId())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "checkAssignments(new ContainerRequestEvent((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e6568,assigned,true)@@@53@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assigned.remove(event)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "RMApp app = MockRMAppSubmitter.submitWithMemory(1024,rm)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "checkAssignments(new ContainerRequestEvent((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e653c,assigned,false)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "allocator.sendRequest(event1)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "rm.drainEvents()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "when(mockJob.getReport()).thenReturn(MRBuilderUtils.newJobReport(jobId,\"job\",\"user\",JobState.RUNNING,0,0,0,0,0,0,0,\"jobfile\",null,false,\"\"))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "rm.drainEvents()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "LOG.info(\"Running testMapNodeLocality\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Job mockJob = mock()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "MockNM nodeManager3 = rm.registerNode(\"h3:1234\",1536)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "ContainerRequestEvent event3 = ContainerRequestCreator.createRequest(jobId,3,Resource.newInstance(1024,1),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e6503)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Configuration conf = new Configuration()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "amNodeManager.nodeHeartbeat(true)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<TaskAttemptContainerAssignedEvent> assigned = allocator.schedule()@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "rm.drainEvents()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "rm.drainEvents()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testAttemptNotFoundCausesRMCommunicatorException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "rm.start()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testMapNodeLocality['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "MockNM nodeManager1 = rm.registerNode(\"h1:1234\",3072)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "ContainerRequestEvent event1 = ContainerRequestCreator.createRequest(jobId,1,Resource.newInstance(1024,1),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e64d5)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "MockNM amNodeManager = rm.registerNode(\"amNM:1234\",2048)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ContainerRequestEvent event2 = ContainerRequestCreator.createRequest(jobId,2,Resource.newInstance(1024,1),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e64ec)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
32->18 [style = dotted, label="true"];
28->37 [style = bold, label=""];
31->25 [style = bold, label=""];
23->5 [style = bold, label=""];
45->23 [style = bold, label=""];
37->27 [style = bold, label=""];
3->40 [style = bold, label=""];
4->6 [style = bold, label=""];
5->22 [style = solid, label="rm"];
10->24 [style = bold, label=""];
35->22 [style = bold, label=""];
8->17 [style = solid, label="assigned"];
22->43 [style = bold, label=""];
34->33 [style = bold, label=""];
0->22 [style = solid, label="mockJob"];
43->42 [style = bold, label=""];
22->31 [style = bold, label=""];
11->29 [style = bold, label=""];
30->9 [style = bold, label=""];
33->1 [style = bold, label=""];
21->17 [style = solid, label="event3"];
6->19 [style = bold, label=""];
45->23 [style = solid, label="conf"];
21->30 [style = bold, label=""];
17->32 [style = bold, label=""];
23->35 [style = solid, label="rm"];
25->16 [style = bold, label=""];
39->4 [style = bold, label=""];
21->30 [style = solid, label="event3"];
29->21 [style = bold, label=""];
19->8 [style = bold, label=""];
8->24 [style = solid, label="assigned"];
23->22 [style = solid, label="conf"];
34->40 [style = dashed, label="0"];
3->34 [style = bold, label=""];
2->38 [style = bold, label=""];
38->21 [style = solid, label="jobId"];
40->33 [style = bold, label=""];
8->36 [style = bold, label=""];
15->35 [style = solid, label="appAttemptId"];
45->35 [style = solid, label="conf"];
5->40 [style = solid, label="rm"];
37->17 [style = solid, label="event1"];
16->28 [style = bold, label=""];
27->11 [style = bold, label=""];
18->10 [style = bold, label=""];
20->7 [style = solid, label="appAttemptId"];
20->22 [style = solid, label="appAttemptId"];
13->26 [style = bold, label=""];
11->24 [style = solid, label="event2"];
7->2 [style = bold, label=""];
15->20 [style = bold, label=""];
15->20 [style = solid, label="appAttemptId"];
2->0 [style = solid, label="jobId"];
26->23 [style = bold, label=""];
38->0 [style = bold, label=""];
38->11 [style = solid, label="jobId"];
0->35 [style = bold, label=""];
11->17 [style = solid, label="event2"];
38->37 [style = solid, label="jobId"];
1->14 [style = bold, label=""];
14->15 [style = bold, label=""];
11->29 [style = solid, label="event2"];
9->12 [style = bold, label=""];
36->17 [style = bold, label=""];
32->18 [style = bold, label=""];
12->39 [style = bold, label=""];
20->7 [style = bold, label=""];
41->26 [style = bold, label=""];
38->35 [style = solid, label="jobId"];
37->24 [style = solid, label="event1"];
44->45 [style = bold, label=""];
32->24 [style = bold, label=""];
32->10 [style = dotted, label="true"];
37->27 [style = solid, label="event1"];
23->5 [style = solid, label="conf"];
38->35 [style = solid, label="mockJob"];
}
