digraph {
19 [style = filled, label = "BooleanQuery bq = (BooleanQuery)q@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "return false@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "!clause.isProhibited()@@@8@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "List<BooleanClause> clauses = bq.clauses()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "Query subQ = ((WrappedQuery)q).getWrappedQuery()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "newQ.setWrappedQuery(absSubQ)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "clauses.size() == 0@@@6@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "return q@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "return q@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "q instanceof WrappedQuery@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "clauses.size() == 0@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "!(q instanceof BooleanQuery)@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "BooleanQuery newBq = new BooleanQuery(bq.isCoordDisabled())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "return true@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "List<BooleanClause> clauses = bq.clauses()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "!(q instanceof BooleanQuery)@@@3@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "isNegative['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "!clause.isProhibited()@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Query q@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "return newQ@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "return false@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "return q@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "return false@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "!(q instanceof BooleanQuery)@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Collection<BooleanClause> clauses = bq.clauses()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "clauses@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "clauses.size() == 0@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "newBq.setBoost(bq.getBoost())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "isNegative['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "Query negClause = clauses.get(0).getQuery()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "return newBq@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "absSubQ == subQ@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return false@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "return negClause@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "WrappedQuery newQ = (WrappedQuery)q.clone()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "getAbs['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "return q@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "newBq.add(clause.getQuery(),BooleanClause.Occur.SHOULD)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "clauses.size() == 1@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "BooleanClause clause@@@25@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "BooleanQuery bq = (BooleanQuery)q@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Query absSubQ = getAbs(subQ)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Query q@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
31->37 [style = bold, label=""];
40->18 [style = dotted, label="true"];
18->34 [style = solid, label="absSubQ"];
20->26 [style = bold, label=""];
41->20 [style = dotted, label="false"];
24->37 [style = solid, label="q"];
40->31 [style = dotted, label="true"];
38->41 [style = bold, label=""];
41->20 [style = bold, label=""];
12->7 [style = bold, label=""];
40->23 [style = bold, label=""];
41->28 [style = bold, label=""];
16->41 [style = bold, label=""];
8->1 [style = bold, label=""];
38->16 [style = dotted, label="true"];
6->13 [style = dashed, label="0"];
10->12 [style = bold, label=""];
24->16 [style = solid, label="q"];
31->30 [style = bold, label=""];
5->9 [style = dotted, label="true"];
4->8 [style = bold, label=""];
1->38 [style = dashed, label="0"];
1->0 [style = dotted, label="true"];
8->11 [style = bold, label=""];
17->18 [style = solid, label="subQ"];
39->29 [style = bold, label=""];
18->31 [style = bold, label=""];
41->28 [style = dotted, label="true"];
24->19 [style = solid, label="q"];
17->31 [style = solid, label="subQ"];
14->10 [style = bold, label=""];
40->30 [style = dotted, label="true"];
30->34 [style = bold, label=""];
1->0 [style = bold, label=""];
9->7 [style = solid, label="q"];
10->7 [style = bold, label=""];
42->40 [style = bold, label=""];
42->24 [style = dotted, label="true"];
41->21 [style = dotted, label="false"];
3->10 [style = bold, label=""];
6->4 [style = bold, label=""];
3->7 [style = bold, label=""];
33->36 [style = bold, label=""];
7->6 [style = bold, label=""];
40->17 [style = bold, label=""];
41->29 [style = dotted, label="false"];
40->17 [style = dotted, label="true"];
40->34 [style = dotted, label="true"];
24->36 [style = solid, label="q"];
8->15 [style = bold, label=""];
37->30 [style = bold, label=""];
3->10 [style = dotted, label="true"];
38->16 [style = bold, label=""];
23->32 [style = bold, label=""];
32->19 [style = bold, label=""];
8->36 [style = dashed, label="0"];
23->32 [style = dotted, label="true"];
10->40 [style = dashed, label="0"];
0->1 [style = bold, label=""];
23->19 [style = bold, label=""];
19->35 [style = bold, label=""];
8->11 [style = dotted, label="true"];
4->1 [style = bold, label=""];
1->2 [style = bold, label=""];
41->27 [style = dotted, label="false"];
40->25 [style = dotted, label="true"];
28->22 [style = solid, label="negClause"];
24->32 [style = solid, label="q"];
28->22 [style = bold, label=""];
15->1 [style = bold, label=""];
7->13 [style = bold, label=""];
15->2 [style = bold, label=""];
10->12 [style = dotted, label="true"];
41->22 [style = dotted, label="true"];
34->25 [style = bold, label=""];
31->37 [style = dotted, label="true"];
9->24 [style = dashed, label="0"];
25->23 [style = bold, label=""];
1->15 [style = bold, label=""];
0->2 [style = bold, label=""];
35->33 [style = bold, label=""];
4->8 [style = dotted, label="true"];
41->39 [style = dotted, label="true"];
26->39 [style = bold, label=""];
18->31 [style = solid, label="absSubQ"];
41->26 [style = dotted, label="false"];
11->15 [style = bold, label=""];
33->36 [style = dotted, label="true"];
20->29 [style = solid, label="newBq"];
30->25 [style = solid, label="newQ"];
15->1 [style = dotted, label="true"];
33->38 [style = bold, label=""];
14->9 [style = dotted, label="true"];
36->38 [style = bold, label=""];
13->8 [style = bold, label=""];
17->18 [style = bold, label=""];
16->38 [style = bold, label=""];
24->40 [style = solid, label="q"];
}
