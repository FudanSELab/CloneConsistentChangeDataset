digraph {
7 [style = filled, label = "Object value = String.valueOf(random.nextLong())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "out.flush()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testHashMap['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testHashMap['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "i++@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(map,map2)@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "DataSerializer.writeIdentityHashMap(map,out)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "DataSerializer.writeHashMap(map,out)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "map.put(key,value)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "IdentityHashMap map2 = DataSerializer.readIdentityHashMap(in)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Object key = new Long(random.nextLong())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(new HashMap(map),new HashMap(map2))@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "HashMap map2 = DataSerializer.readHashMap(in)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "HashMap<Long,String> map2 = DataSerializer.readHashMap(in)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "IdentityHashMap map = new IdentityHashMap()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "HashMap<Long,String> map = new HashMap<>()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "DataOutputStream out = getDataOutput()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Random random = getRandom()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i < size@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "int i = 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "HashMap map = new HashMap()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "testIdentityHashMap['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "DataInput in = getDataInput()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int size = random.nextInt(50)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String value = String.valueOf(random.nextLong())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "Long key = random.nextLong()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->8 [style = solid, label="out"];
19->18 [style = bold, label=""];
1->8 [style = bold, label=""];
0->13 [style = dotted, label="true"];
9->11 [style = bold, label=""];
0->13 [style = bold, label=""];
24->2 [style = bold, label=""];
25->22 [style = bold, label=""];
4->5 [style = solid, label="map"];
10->14 [style = bold, label=""];
14->5 [style = solid, label="map2"];
0->19 [style = bold, label=""];
25->22 [style = solid, label="map2"];
20->5 [style = solid, label="map"];
0->19 [style = dotted, label="true"];
0->18 [style = dotted, label="true"];
14->25 [style = dashed, label="0"];
20->8 [style = solid, label="map"];
4->15 [style = bold, label=""];
23->15 [style = bold, label=""];
12->20 [style = bold, label=""];
7->9 [style = solid, label="value"];
15->6 [style = bold, label=""];
6->0 [style = bold, label=""];
1->24 [style = solid, label="out"];
13->9 [style = solid, label="key"];
3->12 [style = bold, label=""];
19->9 [style = solid, label="key"];
13->19 [style = dashed, label="0"];
8->24 [style = dashed, label="0"];
2->10 [style = bold, label=""];
6->0 [style = solid, label="i"];
21->12 [style = bold, label=""];
7->9 [style = bold, label=""];
15->0 [style = solid, label="size"];
11->0 [style = bold, label=""];
17->12 [style = bold, label=""];
10->16 [style = solid, label="in"];
10->16 [style = bold, label=""];
12->4 [style = bold, label=""];
8->2 [style = bold, label=""];
10->25 [style = bold, label=""];
4->8 [style = solid, label="map"];
6->11 [style = solid, label="i"];
13->7 [style = bold, label=""];
0->1 [style = bold, label=""];
1->24 [style = bold, label=""];
4->20 [style = dashed, label="0"];
18->9 [style = bold, label=""];
16->5 [style = bold, label=""];
23->22 [style = solid, label="map"];
18->9 [style = solid, label="value"];
12->23 [style = bold, label=""];
10->14 [style = solid, label="in"];
23->24 [style = solid, label="map"];
14->16 [style = dashed, label="0"];
16->5 [style = solid, label="map2"];
7->18 [style = dashed, label="0"];
11->0 [style = solid, label="i"];
20->15 [style = bold, label=""];
0->11 [style = dotted, label="true"];
0->9 [style = dotted, label="true"];
4->23 [style = dashed, label="0"];
0->7 [style = dotted, label="true"];
14->5 [style = bold, label=""];
10->25 [style = solid, label="in"];
5->22 [style = dashed, label="0"];
}
