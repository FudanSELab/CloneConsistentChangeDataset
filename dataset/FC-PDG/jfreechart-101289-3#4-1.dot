digraph {
8 [style = filled, label = "assertEquals(-3.0,min.doubleValue(),EPSILON)@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(-3.0,min.doubleValue(),EPSILON)@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testFindMinimumStackedRangeValue2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "min = DatasetUtils.findMinimumStackedRangeValue(dataset)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "DefaultCategoryDataset dataset = new DefaultCategoryDataset()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "dataset.addValue(1.0,\"R1\",\"C1\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(0.0,min.doubleValue(),EPSILON)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "dataset.addValue(Double.NaN,\"R4\",\"C1\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "dataset.addValue(-3.0,\"R3\",\"C1\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertNull(min)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "dataset.addValue(2.0,\"R2\",\"C1\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "DefaultCategoryDataset<String,String> dataset = new DefaultCategoryDataset<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "dataset.addValue(-1.0,\"R1\",\"C1\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testFindMinimumStackedRangeValue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Number min = DatasetUtils.findMinimumStackedRangeValue(dataset)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "min = DatasetUtils.findMinimumStackedRangeValue(dataset)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "min = DatasetUtils.findMinimumStackedRangeValue(dataset)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "min = DatasetUtils.findMinimumStackedRangeValue(dataset)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "dataset.addValue(-2.0,\"R2\",\"C1\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(-1.0,min.doubleValue(),EPSILON)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(0.0,min.doubleValue(),EPSILON)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testFindMinimumStackedRangeValue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16->0 [style = solid, label="dataset"];
16->14 [style = solid, label="dataset"];
7->1 [style = bold, label=""];
1->11 [style = solid, label="dataset"];
9->4 [style = bold, label=""];
0->12 [style = bold, label=""];
18->19 [style = bold, label=""];
1->20 [style = bold, label=""];
20->14 [style = bold, label=""];
15->19 [style = dashed, label="0"];
12->9 [style = bold, label=""];
16->3 [style = solid, label="dataset"];
6->15 [style = bold, label=""];
19->0 [style = bold, label=""];
6->18 [style = dashed, label="0"];
3->10 [style = bold, label=""];
0->10 [style = bold, label=""];
1->3 [style = solid, label="dataset"];
13->3 [style = bold, label=""];
1->16 [style = dashed, label="0"];
15->0 [style = bold, label=""];
5->13 [style = bold, label=""];
21->1 [style = bold, label=""];
16->11 [style = solid, label="dataset"];
1->14 [style = solid, label="dataset"];
11->8 [style = bold, label=""];
1->4 [style = solid, label="dataset"];
16->14 [style = bold, label=""];
1->14 [style = bold, label=""];
10->2 [style = bold, label=""];
14->18 [style = bold, label=""];
14->6 [style = solid, label="min"];
16->4 [style = solid, label="dataset"];
4->5 [style = bold, label=""];
14->6 [style = bold, label=""];
1->0 [style = solid, label="dataset"];
2->11 [style = bold, label=""];
17->16 [style = bold, label=""];
}
