digraph {
5 [style = filled, label = "assertTrue(Files.exists(fileAfter))@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "doesNotMoveFileWithEmptyFileDirPattern['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "movesFileWithFileDirPattern['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(Optional.of(FileFieldWriter.getStringRepresentation(new LinkedFile(\"\",Path.of(\"Misc/test.pdf\"),\"\"))),entry.getField(StandardField.FILE))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertEquals(Optional.of(FileFieldWriter.getStringRepresentation(new LinkedFile(\"\",\"Misc/test.pdf\",\"\"))),entry.getField(StandardField.FILE))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertFalse(Files.exists(fileBefore))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "movesFileWithFileDirPattern['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "when(filePreferences.getFileDirectoryPattern()).thenReturn(\"(entrytype(\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "cleanup.cleanup(entry)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Path fileAfter = defaultFileFolder.resolve(\"Misc\").resolve(\"test.pdf\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Path fileAfter = defaultFileFolder.resolve(\"test.pdf\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(Optional.of(FileFieldWriter.getStringRepresentation(new LinkedFile(\"\",\"test.pdf\",\"\"))),entry.getField(StandardField.FILE))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "when(filePreferences.getFileDirectoryPattern()).thenReturn(\"\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3->5 [style = solid, label="fileAfter"];
6->3 [style = bold, label=""];
1->8 [style = dashed, label="0"];
4->9 [style = dashed, label="0"];
1->2 [style = bold, label=""];
10->5 [style = solid, label="fileAfter"];
3->10 [style = dashed, label="0"];
7->4 [style = bold, label=""];
3->1 [style = bold, label=""];
8->2 [style = bold, label=""];
11->2 [style = bold, label=""];
0->4 [style = bold, label=""];
4->6 [style = bold, label=""];
12->9 [style = bold, label=""];
1->11 [style = dashed, label="0"];
3->8 [style = bold, label=""];
6->10 [style = bold, label=""];
9->6 [style = bold, label=""];
2->5 [style = bold, label=""];
10->11 [style = bold, label=""];
}
