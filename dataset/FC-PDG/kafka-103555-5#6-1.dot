digraph {
12 [style = filled, label = "ObjectSerializationCache cache = new ObjectSerializationCache()@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "buf.rewind()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "final ByteBuffer buf2 = ByteBuffer.wrap(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ba4bcf)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "in.read(new ByteBufferAccessor(buffer),(short)1)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(buf,in.zeroCopyByteBuffer())@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final ByteBuffer buffer = MessageUtil.toByteBuffer(out,(short)1)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "shouldRoundTripFieldThroughBuffer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final ByteBuffer buf = ByteBuffer.wrap(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ba4b64)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(buf2,in.nullableZeroCopyByteBuffer())@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "shouldRoundTripFieldThroughBuffer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "buffer.rewind()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final SimpleExampleMessageData in = new SimpleExampleMessageData()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "buf2.rewind()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final ByteBuffer buf1 = ByteBuffer.wrap(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ba4bc2)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final ByteBuffer buffer = ByteBuffer.allocate(out.size(cache,(short)1))@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(uuid,in.processId())@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "shouldRoundTripFieldThroughBufferWithNullable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ObjectSerializationCache cache = new ObjectSerializationCache()@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "out.write(new ByteBufferAccessor(buffer),cache,(short)1)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(buf1,in.zeroCopyByteBuffer())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "out.setProcessId(uuid)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "out.setZeroCopyByteBuffer(buf1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "out.setNullableZeroCopyByteBuffer(buf2)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "out.setZeroCopyByteBuffer(buf)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "buf1.rewind()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(uuid,in.processId())@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final Uuid uuid = Uuid.randomUuid()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "in.read(new ByteBufferAccessor(buffer),(short)1)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "final SimpleExampleMessageData in = new SimpleExampleMessageData()@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "final SimpleExampleMessageData out = new SimpleExampleMessageData()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28->29 [style = bold, label=""];
18->3 [style = bold, label=""];
16->0 [style = bold, label=""];
8->10 [style = solid, label="buffer"];
2->19 [style = bold, label=""];
1->8 [style = bold, label=""];
8->15 [style = bold, label=""];
10->28 [style = bold, label=""];
4->25 [style = bold, label=""];
25->22 [style = bold, label=""];
10->14 [style = bold, label=""];
7->10 [style = bold, label=""];
26->22 [style = solid, label="buf2"];
5->11 [style = solid, label="buf"];
1->8 [style = solid, label="buffer"];
10->28 [style = dashed, label="0"];
21->27 [style = solid, label="buf1"];
26->23 [style = solid, label="buf2"];
4->2 [style = bold, label=""];
19->17 [style = bold, label=""];
3->0 [style = solid, label="uuid"];
1->15 [style = solid, label="cache"];
26->6 [style = bold, label=""];
12->1 [style = bold, label=""];
13->23 [style = dashed, label="0"];
2->12 [style = bold, label=""];
0->7 [style = bold, label=""];
8->15 [style = solid, label="buffer"];
19->20 [style = solid, label="buffer"];
6->4 [style = bold, label=""];
21->26 [style = bold, label=""];
3->5 [style = bold, label=""];
13->27 [style = bold, label=""];
20->16 [style = bold, label=""];
5->6 [style = bold, label=""];
3->13 [style = solid, label="uuid"];
21->25 [style = solid, label="buf1"];
15->0 [style = bold, label=""];
5->7 [style = solid, label="buf"];
11->13 [style = bold, label=""];
1->7 [style = solid, label="buffer"];
3->4 [style = solid, label="uuid"];
2->25 [style = dashed, label="0"];
5->21 [style = dashed, label="0"];
9->3 [style = bold, label=""];
3->21 [style = bold, label=""];
5->2 [style = solid, label="buf"];
27->23 [style = bold, label=""];
22->1 [style = bold, label=""];
6->19 [style = solid, label="out"];
11->27 [style = dashed, label="0"];
12->1 [style = solid, label="cache"];
14->11 [style = bold, label=""];
1->8 [style = solid, label="cache"];
24->3 [style = bold, label=""];
3->14 [style = solid, label="uuid"];
12->8 [style = solid, label="cache"];
17->20 [style = bold, label=""];
29->13 [style = bold, label=""];
}
