digraph {
14 [style = filled, label = "long physicalNetworkId = _networkModel.findPhysicalNetworkId(zone.getId(),requiredOfferings.get(0).getTags(),requiredOfferings.get(0).getTrafficType())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "NetworkVO defaultNetwork = null@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "moveVMToUser['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "throw new InvalidParameterValueException(\"Unable to find physical network with id: \" + physicalNetworkId + \" and tag: \" + requiredOfferings.get(0).getTags())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "moveVMToUser['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "return defaultNetwork@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "s_logger.debug(\"Creating network for account \" + owner + \" from the network offering id=\" + requiredOfferings.get(0).getId() + \" as a part of deployVM process\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "defaultNetwork = _networkDao.findById(newNetwork.getId())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "DataCenter zone@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "physicalNetwork == null@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Network newNetwork = _networkMgr.createGuestNetwork(requiredOfferings.get(0).getId(),owner.getAccountName() + \"-network\",owner.getAccountName() + \"-network\",null,null,null,false,null,owner,null,physicalNetwork,zone.getId(),ACLType.Account,null,null,null,null,true,null,null,null)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "createDefaultNetworkForAccount['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final AssignVMCmd cmd@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Account owner@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "PhysicalNetwork physicalNetwork = _physicalNetworkDao.findById(physicalNetworkId)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "newNetwork != null@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "List<NetworkOfferingVO> requiredOfferings@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6->13 [style = solid, label="defaultNetwork"];
3->10 [style = bold, label=""];
0->1 [style = dotted, label="true"];
7->8 [style = bold, label=""];
14->3 [style = bold, label=""];
14->5 [style = solid, label="physicalNetworkId"];
7->8 [style = dotted, label="true"];
4->11 [style = bold, label=""];
3->10 [style = solid, label="physicalNetwork"];
8->13 [style = solid, label="defaultNetwork"];
16->15 [style = dotted, label="true"];
14->3 [style = solid, label="physicalNetworkId"];
5->4 [style = bold, label=""];
11->7 [style = solid, label="newNetwork"];
3->11 [style = solid, label="physicalNetwork"];
15->11 [style = solid, label="owner"];
11->7 [style = bold, label=""];
7->13 [style = bold, label=""];
2->1 [style = dotted, label="true"];
16->12 [style = dotted, label="true"];
6->14 [style = bold, label=""];
16->9 [style = dotted, label="true"];
10->4 [style = bold, label=""];
16->6 [style = bold, label=""];
8->13 [style = bold, label=""];
10->5 [style = bold, label=""];
15->4 [style = solid, label="owner"];
10->5 [style = dotted, label="true"];
}
