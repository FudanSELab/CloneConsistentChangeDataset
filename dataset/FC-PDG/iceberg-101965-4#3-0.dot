digraph {
7 [style = filled, label = "testAddOnly['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testDeleteOnly['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "AssertHelpers.assertThrows(\"Expected an exception\",,\"Files to delete cannot be null or empty\",null)@@@6@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "AssertHelpers.assertThrows(\"Expected an exception\",,\"Files to delete cannot be null or empty\",null)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "AssertHelpers.assertThrows(\"Expected an exception\",,\"Files to delete cannot be null or empty\",null)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "AssertHelpers.assertThrows(\"Expected an exception\",,\"Files to add can not be null or empty\",null)@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testDeleteOnly['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Assert.assertEquals(\"Table should start empty\",0,listManifestFiles().size())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->1 [style = bold, label=""];
0->5 [style = bold, label=""];
2->1 [style = bold, label=""];
1->6 [style = bold, label=""];
5->4 [style = bold, label=""];
3->1 [style = bold, label=""];
1->0 [style = bold, label=""];
0->6 [style = dashed, label="0"];
}
