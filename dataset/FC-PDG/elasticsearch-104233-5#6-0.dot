digraph {
14 [style = filled, label = "testMultiLine['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Line line = new Line(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3c92,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3c97)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "line = new Line(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3c02,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3c07)@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "indexed = new MultiLine(Arrays.asList(new Line(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3bda,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3bdf),new Line(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3be6,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3bef)))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "line = new Line(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3c3f,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3c45)@@@40@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "indexed = new MultiLine(Arrays.asList(new Line(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3c17,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3c20),new Line(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3c27,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3c2c)))@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertEquals(indexed,indexer.prepareForIndexing(multiLine))@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "indexed = new MultiLine(Arrays.asList(new Line(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3c56,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3c5b),new Line(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3c62,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3c6e),new Line(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3c76,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3c7b)))@@@45@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertEquals(indexed,indexer.prepareForIndexing(line))@@@58@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "indexed = new MultiLine(Arrays.asList(line,new Line(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3cd5,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3cda),new Line(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3ce1,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3ce8)))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "multiLine = new MultiLine(Arrays.asList(line,new Line(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3cbf,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3cc4)))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testLine['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Geometry indexed = line@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testLine['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(indexed,indexer.prepareForIndexing(line))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(indexed,indexer.prepareForIndexing(multiLine))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "line = new Line(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3bc5,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14f3bca)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(indexed,indexer.prepareForIndexing(line))@@@39@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "MultiLine multiLine = new MultiLine(Collections.singletonList(line))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(indexed,indexer.prepareForIndexing(line))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->5 [style = bold, label=""];
3->0 [style = solid, label="indexed"];
18->15 [style = solid, label="multiLine"];
12->13 [style = solid, label="line"];
8->9 [style = solid, label="line"];
5->4 [style = solid, label="line"];
3->16 [style = dashed, label="0"];
7->9 [style = bold, label=""];
5->1 [style = bold, label=""];
4->15 [style = dashed, label="0"];
15->19 [style = bold, label=""];
0->8 [style = bold, label=""];
4->2 [style = bold, label=""];
2->3 [style = bold, label=""];
16->17 [style = solid, label="indexed"];
19->16 [style = bold, label=""];
7->9 [style = solid, label="indexed"];
10->13 [style = solid, label="indexed"];
12->10 [style = bold, label=""];
2->19 [style = dashed, label="0"];
1->4 [style = solid, label="indexed"];
10->13 [style = bold, label=""];
3->0 [style = bold, label=""];
5->16 [style = solid, label="line"];
0->17 [style = dashed, label="0"];
5->19 [style = solid, label="line"];
6->5 [style = bold, label=""];
1->4 [style = bold, label=""];
5->18 [style = bold, label=""];
1->15 [style = bold, label=""];
1->15 [style = solid, label="indexed"];
8->7 [style = bold, label=""];
2->0 [style = solid, label="line"];
18->1 [style = bold, label=""];
16->17 [style = bold, label=""];
5->1 [style = solid, label="line"];
5->18 [style = solid, label="line"];
19->17 [style = solid, label="multiLine"];
11->5 [style = bold, label=""];
9->12 [style = bold, label=""];
}
