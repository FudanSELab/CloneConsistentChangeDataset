digraph {
0 [style = filled, label = "LOG.info(\"Running testReportedAppProgress\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "rm.drainEvents()@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "mrApp.waitForState(t,TaskState.RUNNING)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "amDispatcher.await()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "finishNextNTasks(rmDispatcher,amNodeManager,mrApp,it,2)@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "t.getType() == TaskType.REDUCE@@@73@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "rm.drainEvents()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "allocator.schedule()@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "allocator.schedule()@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "amNodeManager.nodeHeartbeat(true)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "rm.drainEvents()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "RMApp rmApp = rm.submitApp(1024)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "rm.drainEvents()@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Assert.assertEquals(0.59f,job.getProgress(),0.001f)@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(0.095f,rmApp.getProgress(),0.001f)@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final ApplicationAttemptId appAttemptId = rmApp.getCurrentAppAttempt().getAppAttemptId()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "rm.drainEvents()@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "mrApp.waitForInternalState((JobImpl)job,JobStateInternal.RUNNING)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "Iterator<Task> it = job.getTasks().values().iterator()@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "rm.sendAMLaunched(appAttemptId)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "rm.drainEvents()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "MyContainerAllocator allocator = (MyContainerAllocator)mrApp.getContainerAllocator()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "finishNextNTasks(rmDispatcher,amNodeManager,mrApp,it,8)@@@82@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "rm.drainEvents()@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(0.95f,rmApp.getProgress(),0.001f)@@@86@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "RMApp rmApp = MockRMAppSubmitter.submitWithMemory(1024,rm)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "mrApp.waitForState(t,TaskState.RUNNING)@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "allocator.schedule()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "rm.drainEvents()@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "testReportedAppProgress['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "final MyResourceManager rm = new MyResourceManager(conf)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "finishNextNTasks(rmDispatcher,amNodeManager,mrApp,it,2)@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "finishNextNTasks(rmDispatcher,amNodeManager,mrApp,it,7)@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "Job job = mrApp.getContext().getAllJobs().entrySet().iterator().next().getValue()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "Assert.assertTrue(allocator.isUnregistered())@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "Assert.assertTrue(allocator.isApplicationMasterRegistered())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "MRApp mrApp = new MRApp(appAttemptId,ContainerId.newContainerId(appAttemptId,0),10,10,false,this.getClass().getName(),true,1){@Override protected Dispatcher createDispatcher(){return new DrainDispatcher()}protected ContainerAllocator createContainerAllocator(ClientService clientService,AppContext context){return new MyContainerAllocator(rm,appAttemptId,context)}}@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "allocator.schedule()@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "amDispatcher.await()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "allocator.schedule()@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "mrApp.waitForInternalState((TaskAttemptImpl)t.getAttempts().values().iterator().next(),TaskAttemptStateInternal.UNASSIGNED)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "DrainDispatcher amDispatcher = (DrainDispatcher)mrApp.getDispatcher()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "Assert.assertEquals(0.59f,rmApp.getProgress(),0.001f)@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assert.assertEquals(0.05f,job.getProgress(),0.001f)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "Assert.assertEquals(0.95f,job.getProgress(),0.001f)@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "rm.drainEvents()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "t.getType() == TaskType.MAP@@@34@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "amNodeManager.nodeHeartbeat(true)@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "MockNM amNodeManager = rm.registerNode(\"amNM:1234\",21504)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "MockNM amNodeManager = rm.registerNode(\"127.0.0.1:1234\",11264)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Assert.assertEquals(0.41f,job.getProgress(),0.001f)@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Assert.assertEquals(0.0,rmApp.getProgress(),0.0)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Assert.assertEquals(0.41f,rmApp.getProgress(),0.001f)@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "rm.start()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "rm.drainEvents()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "MyContainerAllocator allocator = (MyContainerAllocator)mrApp.getContainerAllocator()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "Configuration conf = new Configuration()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "mrApp.submit(conf)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "testUnregistrationOnlyIfRegistered['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "rm.drainEvents()@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "testReportedAppProgress['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "Assert.assertEquals(0.05f,rmApp.getProgress(),0.001f)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "allocator.schedule()@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "rm.drainEvents()@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "amNodeManager.nodeHeartbeat(true)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "allocator.schedule()@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "t.getType() == TaskType.MAP@@@46@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "allocator.schedule()@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(0.095f,job.getProgress(),0.001f)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "allocator.schedule()@@@83@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "MRApp mrApp = new MRApp(appAttemptId,ContainerId.newContainerId(appAttemptId,0),10,0,false,this.getClass().getName(),true,1){@Override protected Dispatcher createDispatcher(){return new DrainDispatcher()}protected ContainerAllocator createContainerAllocator(ClientService clientService,AppContext context){return new MyContainerAllocator(rm,appAttemptId,context)}}@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final ApplicationAttemptId appAttemptId = rmApp.getCurrentAppAttempt().getAppAttemptId()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "DrainDispatcher rmDispatcher = (DrainDispatcher)rm.getRMContext().getDispatcher()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "rm.drainEvents()@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "mrApp.stop()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "finishNextNTasks(rmDispatcher,amNodeManager,mrApp,it,1)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "rm.drainEvents()@@@84@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18->30 [style = dotted, label="true"];
34->20 [style = bold, label=""];
60->13 [style = solid, label="it"];
25->33 [style = bold, label=""];
43->55 [style = bold, label=""];
64->3 [style = bold, label=""];
17->10 [style = solid, label="mrApp"];
63->39 [style = dashed, label="0"];
73->74 [style = bold, label=""];
21->58 [style = bold, label=""];
22->24 [style = solid, label="conf"];
18->30 [style = bold, label=""];
55->13 [style = bold, label=""];
7->69 [style = bold, label=""];
46->48 [style = bold, label=""];
30->18 [style = bold, label=""];
40->23 [style = bold, label=""];
27->15 [style = bold, label=""];
53->27 [style = bold, label=""];
57->9 [style = solid, label="rmDispatcher"];
30->28 [style = bold, label=""];
45->61 [style = bold, label=""];
74->23 [style = bold, label=""];
32->25 [style = bold, label=""];
6->41 [style = bold, label=""];
23->72 [style = bold, label=""];
48->10 [style = bold, label=""];
62->49 [style = bold, label=""];
75->52 [style = bold, label=""];
35->64 [style = dotted, label="true"];
54->5 [style = bold, label=""];
19->13 [style = solid, label="amNodeManager"];
19->10 [style = solid, label="amNodeManager"];
57->13 [style = solid, label="rmDispatcher"];
4->71 [style = bold, label=""];
28->36 [style = bold, label=""];
57->10 [style = solid, label="rmDispatcher"];
70->71 [style = solid, label="conf"];
24->44 [style = bold, label=""];
58->35 [style = bold, label=""];
51->0 [style = bold, label=""];
13->66 [style = bold, label=""];
17->26 [style = solid, label="mrApp"];
16->19 [style = bold, label=""];
69->20 [style = bold, label=""];
26->6 [style = bold, label=""];
50->8 [style = dotted, label="true"];
18->28 [style = bold, label=""];
17->9 [style = solid, label="mrApp"];
64->35 [style = bold, label=""];
1->11 [style = bold, label=""];
22->4 [style = solid, label="rm"];
17->13 [style = solid, label="mrApp"];
17->4 [style = dashed, label="0"];
19->26 [style = solid, label="amNodeManager"];
63->40 [style = bold, label=""];
57->12 [style = solid, label="rmDispatcher"];
65->39 [style = bold, label=""];
70->22 [style = bold, label=""];
60->26 [style = solid, label="it"];
41->46 [style = bold, label=""];
29->38 [style = bold, label=""];
52->7 [style = bold, label=""];
44->37 [style = bold, label=""];
68->16 [style = bold, label=""];
37->16 [style = bold, label=""];
44->57 [style = bold, label=""];
60->12 [style = bold, label=""];
60->9 [style = solid, label="it"];
57->37 [style = bold, label=""];
71->31 [style = bold, label=""];
4->17 [style = bold, label=""];
35->3 [style = bold, label=""];
24->68 [style = solid, label="rm"];
34->20 [style = solid, label="appAttemptId"];
47->31 [style = bold, label=""];
34->17 [style = solid, label="appAttemptId"];
7->69 [style = solid, label="appAttemptId"];
34->7 [style = dashed, label="0"];
7->4 [style = solid, label="appAttemptId"];
38->1 [style = bold, label=""];
59->53 [style = bold, label=""];
57->68 [style = bold, label=""];
70->22 [style = solid, label="conf"];
57->26 [style = solid, label="rmDispatcher"];
56->45 [style = bold, label=""];
19->16 [style = dashed, label="0"];
39->73 [style = bold, label=""];
60->12 [style = solid, label="it"];
22->31 [style = solid, label="conf"];
76->70 [style = bold, label=""];
8->50 [style = bold, label=""];
31->39 [style = bold, label=""];
24->17 [style = solid, label="rm"];
19->12 [style = solid, label="amNodeManager"];
31->65 [style = bold, label=""];
23->18 [style = bold, label=""];
39->63 [style = bold, label=""];
42->50 [style = bold, label=""];
61->60 [style = bold, label=""];
37->68 [style = dashed, label="0"];
50->9 [style = bold, label=""];
16->75 [style = bold, label=""];
17->47 [style = bold, label=""];
17->12 [style = solid, label="mrApp"];
65->40 [style = solid, label="job"];
36->32 [style = bold, label=""];
9->62 [style = bold, label=""];
67->0 [style = bold, label=""];
49->43 [style = bold, label=""];
11->2 [style = bold, label=""];
20->4 [style = bold, label=""];
15->26 [style = bold, label=""];
60->10 [style = solid, label="it"];
14->54 [style = bold, label=""];
7->34 [style = bold, label=""];
10->29 [style = bold, label=""];
0->22 [style = bold, label=""];
8->9 [style = bold, label=""];
12->59 [style = bold, label=""];
50->8 [style = bold, label=""];
22->24 [style = bold, label=""];
35->64 [style = bold, label=""];
33->21 [style = bold, label=""];
66->14 [style = bold, label=""];
19->9 [style = solid, label="amNodeManager"];
2->42 [style = bold, label=""];
19->52 [style = bold, label=""];
3->56 [style = bold, label=""];
}
