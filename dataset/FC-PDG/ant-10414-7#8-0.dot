digraph {
5 [style = filled, label = "int result = 0@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "execute['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "commandLine.setExecutable(getClearToolCommand())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "commandLine.createArgument().setValue(COMMAND_UNCHECKOUT)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "execute['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "Commandline commandLine = new Commandline()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "commandLine.createArgument().setValue(COMMAND_CHECKOUT)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "execute['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "getProject().log(\"Ignoring any errors that occur for: \" + getViewPathBasename(),Project.MSG_VERBOSE)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Project aProj = getProject()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Execute.isFailure(result)@@@13@@@['1', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String msg = \"Failed executing: \" + commandLine.toString()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Execute.isFailure(result) && getFailOnErr()@@@16@@@['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "setViewPath(aProj.getBaseDir().getPath())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "!getFailOnErr()@@@12@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "checkOptions(commandLine)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "getViewPath() == null@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "result = run(commandLine)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "throw new BuildException(msg,getLocation())@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6->13 [style = solid, label="result"];
11->2 [style = dotted, label="true"];
4->7 [style = bold, label=""];
18->4 [style = bold, label=""];
10->17 [style = bold, label=""];
15->4 [style = bold, label=""];
16->14 [style = dotted, label="true"];
8->13 [style = dashed, label="0"];
6->8 [style = solid, label="result"];
6->13 [style = bold, label=""];
17->12 [style = bold, label=""];
2->10 [style = bold, label=""];
13->9 [style = dotted, label="true"];
6->8 [style = bold, label=""];
11->2 [style = bold, label=""];
8->3 [style = bold, label=""];
12->16 [style = bold, label=""];
11->10 [style = bold, label=""];
0->12 [style = bold, label=""];
5->11 [style = bold, label=""];
3->9 [style = bold, label=""];
16->14 [style = bold, label=""];
16->6 [style = bold, label=""];
0->17 [style = dashed, label="0"];
13->3 [style = dotted, label="true"];
14->6 [style = bold, label=""];
1->4 [style = bold, label=""];
7->5 [style = bold, label=""];
13->3 [style = bold, label=""];
8->3 [style = dotted, label="true"];
3->9 [style = solid, label="msg"];
4->6 [style = solid, label="commandLine"];
4->12 [style = solid, label="commandLine"];
10->0 [style = bold, label=""];
12->6 [style = bold, label=""];
8->9 [style = dotted, label="true"];
}
