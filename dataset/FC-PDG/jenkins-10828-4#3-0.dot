digraph {
1 [style = filled, label = "String testException = Messages.Retrier_ExceptionFailed(ATTEMPTS,ACTION)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(String.format(\"The log should contain '%s'\",testException),handler.getView().stream().anyMatch(null))@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final String ACTION = \"print\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "RingBufferLogHandler handler = new RingBufferLogHandler(20)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final int ATTEMPTS = 1@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertNull(finalResult)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertTrue(finalResult != null && finalResult)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "String textNoSuccess = Messages.Retrier_NoSuccess(ACTION,ATTEMPTS)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertTrue(finalResult == null? false: finalResult)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "Logger.getLogger(.getName()).addHandler(handler)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final int ATTEMPTS = 3@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "failedActionWithExceptionAfterThreeAttemptsWithoutListenerTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Retrier<Boolean> r = new Retrier.Builder<>((Callable<Boolean>)null,null,ACTION).withAttempts(ATTEMPTS).withDelay(100).withDuringActionExceptions(new Class((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4dd914).build()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Boolean finalResult = r.start()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(String.format(\"The log should contain '%s'\",textNoSuccess),handler.getView().stream().anyMatch(null))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "String textSuccess = Messages.Retrier_Success(ACTION,ATTEMPTS)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "failedActionWithAllowedExceptionWithListenerChangingResultTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "failedActionWithAllowedExceptionWithListenerChangingResultTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(String.format(\"The log should contain '%s'\",textSuccess),handler.getView().stream().anyMatch(null))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->14 [style = solid, label="finalResult"];
10->3 [style = solid, label="finalResult"];
7->6 [style = solid, label="ATTEMPTS"];
16->8 [style = bold, label=""];
10->14 [style = bold, label=""];
7->16 [style = dashed, label="0"];
9->18 [style = dashed, label="0"];
4->5 [style = solid, label="handler"];
10->3 [style = bold, label=""];
3->6 [style = bold, label=""];
14->17 [style = bold, label=""];
6->17 [style = dashed, label="0"];
1->0 [style = bold, label=""];
16->17 [style = solid, label="ATTEMPTS"];
7->8 [style = bold, label=""];
2->10 [style = bold, label=""];
12->6 [style = bold, label=""];
15->16 [style = bold, label=""];
10->12 [style = solid, label="finalResult"];
8->17 [style = solid, label="ACTION"];
8->1 [style = solid, label="ACTION"];
6->9 [style = solid, label="textSuccess"];
16->1 [style = solid, label="ATTEMPTS"];
5->2 [style = bold, label=""];
3->12 [style = dashed, label="0"];
18->1 [style = bold, label=""];
10->12 [style = bold, label=""];
13->7 [style = bold, label=""];
8->6 [style = solid, label="ACTION"];
1->0 [style = solid, label="testException"];
11->7 [style = bold, label=""];
7->1 [style = solid, label="ATTEMPTS"];
8->4 [style = bold, label=""];
6->9 [style = bold, label=""];
9->1 [style = bold, label=""];
3->14 [style = dashed, label="0"];
17->18 [style = solid, label="textNoSuccess"];
4->5 [style = bold, label=""];
17->18 [style = bold, label=""];
}
