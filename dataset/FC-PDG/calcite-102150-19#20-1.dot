digraph {
35 [style = filled, label = "selector = Expressions.lambda(,fieldReference(parameter,collation.getFieldIndex()),parameter)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Expression arg0 = fieldReference(parameterV0,index)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "body.add(Expressions.ifThen(Expressions.notEqual(parameterC,Expressions.constant(0)),Expressions.return_(null,descending? Expressions.negate(parameterC): parameterC)))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "final ParameterExpression parameterV0 = Expressions.parameter(javaRowClass,\"v0\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "collations.size() == 1@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final List<MemberDeclaration> memberDeclarations = Expressions.list(Expressions.methodDecl(Modifier.PUBLIC,,\"compare\",ImmutableList.of(parameterV0,parameterV1),body.toBlock()))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "RelFieldCollation collation = collations.get(0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "return Expressions.new_(,ImmutableList.of(),memberDeclarations)@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "final Expression fieldComparator = generateCollatorExpression(fieldType.getCollation())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return Pair.of(selector,Expressions.call(fieldComparator == null? BuiltInMethod.NULLS_COMPARATOR.method: BuiltInMethod.NULLS_COMPARATOR2.method,Expressions.list((Expression)Expressions.constant(collation.nullDirection == RelFieldCollation.NullDirection.FIRST),Expressions.constant(collation.direction == RelFieldCollation.Direction.DESCENDING)).appendIfNotNull(fieldComparator)))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Primitive.flavor(fieldClass(index))@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "final ParameterExpression parameterC = Expressions.parameter(,\"c\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "BlockBuilder bridgeBody = new BlockBuilder()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "return Pair.of(selector,Expressions.new_(,ImmutableList.of(),memberDeclarations))@@@45@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final int index = collation.getFieldIndex()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "body.add(Expressions.declare(mod,parameterC,null))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "bridgeBody.add(Expressions.return_(null,Expressions.call(Expressions.parameter(,\"this\"),BuiltInMethod.COMPARATOR_COMPARE.method,Expressions.convert_(parameterO0,javaRowClass),Expressions.convert_(parameterO1,javaRowClass))))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Expression arg0 = fieldReference(parameterV0,index)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "EnumerableRules.BRIDGE_METHODS@@@38@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "memberDeclarations.add(overridingMethodDecl(BuiltInMethod.COMPARATOR_COMPARE.method,ImmutableList.of(parameterO0,parameterO1),bridgeBody.toBlock()))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Expression arg1 = fieldReference(parameterV1,index)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "body.add(Expressions.return_(null,Expressions.constant(0)))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "final boolean descending = fieldCollation.getDirection() == RelFieldCollation.Direction.DESCENDING@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "selector = Expressions.call(BuiltInMethod.IDENTITY_SELECTOR.method)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "generateComparator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "body.add(Expressions.ifThen(Expressions.notEqual(parameterC,Expressions.constant(0)),Expressions.return_(null,descending? Expressions.negate(parameterC): parameterC)))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "memberDeclarations.add(overridingMethodDecl(BuiltInMethod.COMPARATOR_COMPARE.method,ImmutableList.of(parameterO0,parameterO1),bridgeBody.toBlock()))@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "BlockBuilder bridgeBody = new BlockBuilder()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final List<MemberDeclaration> memberDeclarations = Expressions.list(Expressions.methodDecl(Modifier.PUBLIC,,\"compare\",ImmutableList.of(parameterV0,parameterV1),body.toBlock()))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final ParameterExpression parameterO0 = Expressions.parameter(,\"o0\")@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ParameterExpression parameter = Expressions.parameter(javaRowClass,\"v\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "generateCollationKey['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "body.add(Expressions.return_(null,Expressions.constant(0)))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "final Type javaRowClass = Primitive.box(this.javaRowClass)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "bridgeBody.add(Expressions.return_(null,Expressions.call(Expressions.parameter(,\"this\"),BuiltInMethod.COMPARATOR_COMPARE.method,Expressions.convert_(parameterO0,javaRowClass),Expressions.convert_(parameterO1,javaRowClass))))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "RelDataType fieldType = rowType.getFieldList() == null || rowType.getFieldList().isEmpty()? rowType: rowType.getFieldList().get(collation.getFieldIndex()).getType()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final int mod = collation.getFieldCollations().size() == 1? Modifier.FINAL: 0@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "arg0 = EnumUtils.convert(arg0,)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "generateCollationKey['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final int mod = collations.size() == 1? Modifier.FINAL: 0@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "final ParameterExpression parameterV1 = Expressions.parameter(javaRowClass,\"v1\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "arg1 = EnumUtils.convert(arg1,)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "final int index = fieldCollation.getFieldIndex()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "RelCollation collation@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "final ParameterExpression parameterO1 = Expressions.parameter(,\"o1\")@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "final List<RelFieldCollation> collations@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final boolean descending = collation.getDirection() == RelFieldCollation.Direction.DESCENDING@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final RelDataType fieldType = rowType.getFieldList().get(index).getType()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final boolean nullsFirst = collation.nullDirection == RelFieldCollation.NullDirection.FIRST@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "EnumerableRules.BRIDGE_METHODS@@@27@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final Expression selector@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "final boolean nullsFirst = fieldCollation.nullDirection == RelFieldCollation.NullDirection.FIRST@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "BlockBuilder body = new BlockBuilder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Expression fieldComparator = generateCollatorExpression(fieldType.getCollation())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "final ParameterExpression parameterO1 = Expressions.parameter(,\"o1\")@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "body.add(Expressions.declare(mod,parameterC,null))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "body.add(Expressions.statement(Expressions.assign(parameterC,Expressions.call(,fieldNullable(index)? (nullsFirst != descending? \"compareNullsFirst\": \"compareNullsLast\"): \"compare\",Expressions.list(arg0,arg1).appendIfNotNull(fieldComparator)))))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final ParameterExpression parameterO0 = Expressions.parameter(,\"o0\")@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->30 [style = dotted, label="true"];
17->56 [style = solid, label="parameterO0"];
49->33 [style = solid, label="parameterV1"];
39->54 [style = solid, label="mod"];
25->11 [style = solid, label="selector"];
21->15 [style = bold, label=""];
17->9 [style = bold, label=""];
46->56 [style = solid, label="javaRowClass"];
8->6 [style = bold, label=""];
39->54 [style = bold, label=""];
38->31 [style = bold, label=""];
3->35 [style = dotted, label="true"];
46->53 [style = solid, label="javaRowClass"];
23->17 [style = solid, label="arg1"];
32->50 [style = dotted, label="true"];
20->27 [style = bold, label=""];
7->14 [style = bold, label=""];
3->27 [style = dotted, label="true"];
10->11 [style = solid, label="memberDeclarations"];
23->33 [style = bold, label=""];
10->8 [style = bold, label=""];
40->1 [style = solid, label="index"];
15->0 [style = bold, label=""];
35->2 [style = solid, label="selector"];
9->5 [style = bold, label=""];
7->22 [style = solid, label="parameterC"];
32->17 [style = dotted, label="true"];
7->26 [style = solid, label="parameterC"];
2->25 [style = bold, label=""];
8->11 [style = bold, label=""];
16->1 [style = solid, label="parameter"];
53->42 [style = solid, label="parameterV0"];
16->34 [style = solid, label="parameter"];
3->29 [style = dotted, label="true"];
33->32 [style = dotted, label="true"];
25->36 [style = bold, label=""];
12->11 [style = bold, label=""];
18->19 [style = bold, label=""];
4->21 [style = bold, label=""];
1->10 [style = solid, label="parameterV1"];
57->21 [style = solid, label="descending"];
26->4 [style = bold, label=""];
36->21 [style = solid, label="fieldComparator"];
34->0 [style = solid, label="parameterV0"];
22->18 [style = bold, label=""];
13->12 [style = bold, label=""];
0->23 [style = bold, label=""];
18->4 [style = bold, label=""];
8->12 [style = dotted, label="true"];
57->21 [style = bold, label=""];
52->48 [style = bold, label=""];
49->34 [style = solid, label="parameterV1"];
49->41 [style = bold, label=""];
47->44 [style = bold, label=""];
32->51 [style = dotted, label="true"];
41->15 [style = solid, label="parameterC"];
6->13 [style = solid, label="parameterO0"];
27->29 [style = bold, label=""];
31->3 [style = bold, label=""];
41->21 [style = solid, label="parameterC"];
34->10 [style = solid, label="parameterV0"];
28->37 [style = dotted, label="true"];
42->7 [style = solid, label="arg0"];
5->22 [style = bold, label=""];
1->23 [style = solid, label="parameterV1"];
29->16 [style = bold, label=""];
32->17 [style = bold, label=""];
6->12 [style = solid, label="parameterO0"];
36->42 [style = bold, label=""];
40->34 [style = solid, label="index"];
44->57 [style = bold, label=""];
24->13 [style = bold, label=""];
14->26 [style = solid, label="mod"];
38->37 [style = dotted, label="true"];
30->24 [style = bold, label=""];
54->40 [style = bold, label=""];
22->45 [style = bold, label=""];
52->55 [style = dotted, label="true"];
53->33 [style = solid, label="parameterV0"];
28->31 [style = bold, label=""];
35->2 [style = bold, label=""];
43->36 [style = bold, label=""];
14->39 [style = dashed, label="0"];
19->10 [style = bold, label=""];
5->57 [style = dashed, label="0"];
40->21 [style = solid, label="index"];
33->17 [style = dotted, label="true"];
1->7 [style = bold, label=""];
8->24 [style = dotted, label="true"];
16->6 [style = solid, label="parameter"];
16->7 [style = solid, label="parameter"];
48->46 [style = bold, label=""];
16->30 [style = solid, label="parameter"];
17->50 [style = bold, label=""];
4->0 [style = solid, label="index"];
8->6 [style = dotted, label="true"];
16->13 [style = solid, label="parameter"];
30->13 [style = solid, label="parameterO1"];
9->44 [style = dashed, label="0"];
34->47 [style = solid, label="arg1"];
15->22 [style = solid, label="fieldComparator"];
1->47 [style = dotted, label="true"];
5->18 [style = solid, label="descending"];
0->32 [style = solid, label="arg0"];
29->2 [style = solid, label="fieldComparator"];
33->32 [style = bold, label=""];
15->40 [style = bold, label=""];
16->35 [style = solid, label="parameter"];
8->13 [style = dotted, label="true"];
7->18 [style = solid, label="parameterC"];
40->43 [style = bold, label=""];
36->34 [style = bold, label=""];
32->22 [style = dotted, label="true"];
50->56 [style = solid, label="parameterO1"];
15->23 [style = bold, label=""];
32->45 [style = bold, label=""];
42->34 [style = bold, label=""];
46->49 [style = solid, label="javaRowClass"];
7->47 [style = bold, label=""];
3->25 [style = bold, label=""];
34->1 [style = bold, label=""];
46->53 [style = bold, label=""];
51->56 [style = bold, label=""];
10->33 [style = dashed, label="0"];
33->9 [style = bold, label=""];
4->22 [style = solid, label="index"];
5->22 [style = solid, label="descending"];
50->22 [style = solid, label="parameterO1"];
1->7 [style = dotted, label="true"];
4->33 [style = solid, label="index"];
14->26 [style = bold, label=""];
53->49 [style = bold, label=""];
3->20 [style = bold, label=""];
50->51 [style = bold, label=""];
17->22 [style = solid, label="parameterO0"];
32->56 [style = dotted, label="true"];
33->45 [style = solid, label="memberDeclarations"];
56->22 [style = bold, label=""];
41->54 [style = solid, label="parameterC"];
40->42 [style = solid, label="index"];
16->35 [style = bold, label=""];
41->39 [style = bold, label=""];
4->40 [style = dashed, label="0"];
4->23 [style = solid, label="index"];
57->15 [style = solid, label="descending"];
30->12 [style = solid, label="parameterO1"];
3->16 [style = dotted, label="true"];
3->2 [style = dotted, label="true"];
3->20 [style = dotted, label="true"];
11->45 [style = dashed, label="0"];
6->30 [style = bold, label=""];
}
