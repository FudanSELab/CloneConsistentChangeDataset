digraph {
17 [style = filled, label = "testClusterAuthorizationFailedInFetch['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "context.assertSentFetchRequest(epoch,0L,0)@@@10@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "context.assertElectedLeader(epoch,otherNodeId)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "Set<Integer> voters = Utils.mkSet(localId,otherNodeId)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "context.pollUntilSend()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "int epoch = 5@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(ElectionState.withElectedLeader(epoch,otherNodeId,voters),quorumStateStore.readElectionState())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "FetchResponseData response = new FetchResponseData().setErrorCode(Errors.CLUSTER_AUTHORIZATION_FAILED.code())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "int otherNodeId = 1@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int localId = 0@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "KafkaRaftClient client = buildClient(voters)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testInitializeAsFollowerEmptyLog['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "deliverResponse(correlationId,otherNodeId,response)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "quorumStateStore.writeElectionState(ElectionState.withElectedLeader(epoch,otherNodeId,voters))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThrows(,null)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "RaftClientTestContext context = new RaftClientTestContext.Builder(localId,voters).withElectedLeader(epoch,otherNodeId).build()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "testInitializeAsFollowerEmptyLog['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "pollUntilSend(client)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int correlationId = assertSentFetchRequest(epoch,0,0)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertSentFetchRequest(epoch,0L,0)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1->5 [style = bold, label=""];
4->1 [style = solid, label="epoch"];
10->8 [style = solid, label="localId"];
11->14 [style = bold, label=""];
0->6 [style = bold, label=""];
2->14 [style = solid, label="otherNodeId"];
15->16 [style = solid, label="correlationId"];
8->0 [style = solid, label="voters"];
5->6 [style = solid, label="client"];
16->19 [style = bold, label=""];
2->4 [style = bold, label=""];
15->18 [style = bold, label=""];
2->0 [style = solid, label="otherNodeId"];
6->15 [style = bold, label=""];
18->16 [style = solid, label="response"];
2->1 [style = solid, label="otherNodeId"];
8->1 [style = bold, label=""];
4->9 [style = solid, label="epoch"];
2->16 [style = solid, label="otherNodeId"];
12->10 [style = bold, label=""];
4->7 [style = solid, label="epoch"];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
17->2 [style = bold, label=""];
1->11 [style = dashed, label="0"];
8->5 [style = solid, label="voters"];
4->15 [style = solid, label="epoch"];
7->15 [style = dashed, label="0"];
4->8 [style = bold, label=""];
10->2 [style = bold, label=""];
13->9 [style = bold, label=""];
14->13 [style = bold, label=""];
6->7 [style = bold, label=""];
8->11 [style = bold, label=""];
2->8 [style = solid, label="otherNodeId"];
4->0 [style = solid, label="epoch"];
4->14 [style = solid, label="epoch"];
8->1 [style = solid, label="voters"];
18->16 [style = bold, label=""];
}
