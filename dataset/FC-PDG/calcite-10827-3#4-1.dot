digraph {
1 [style = filled, label = "tester.setFor(SqlStdOperatorTable.BIT_OR,VM_FENNEL,VM_JAVA)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "tester.checkFails(\"^bit_or(1, 2)^\",\"Invalid number of arguments to function 'BIT_OR'. Was expecting 1 arguments\",false)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "tester.checkFails(\"^bit_xor(1.2)^\",\"Cannot apply 'BIT_XOR' to arguments of type 'BIT_XOR\(<DECIMAL\(2, 1\)>\)'\. Supported form\(s\): 'BIT_XOR\(<INTEGER>\)'\",false)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testBitOrFunc['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "tester.checkType(\"bit_xor(distinct CAST(2 AS BIGINT))\",\"BIGINT\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "tester.checkType(\"bit_xor(CAST(2 AS SMALLINT))\",\"SMALLINT\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "tester.checkType(\"bit_or(distinct CAST(2 AS BIGINT))\",\"BIGINT\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "tester.checkAgg(\"bit_xor(x)\",values,2,0)@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "tester.checkType(\"bit_or(1)\",\"INTEGER\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "tester.checkFails(\"^bit_xor()^\",\"Invalid number of arguments to function 'BIT_XOR'. Was expecting 1 arguments\",false)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final String(( values = {\"1\",\"2\",\"1\"}@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testBitXorFunc['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "tester.checkFails(\"bit_xor(^*^)\",\"Unknown identifier '\*'\",false)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "tester.checkType(\"bit_or(CAST(2 AS SMALLINT))\",\"SMALLINT\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "tester.setFor(SqlStdOperatorTable.BIT_XOR,VM_FENNEL,VM_JAVA)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "tester.checkFails(\"^bit_xor(1, 2)^\",\"Invalid number of arguments to function 'BIT_XOR'. Was expecting 1 arguments\",false)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testBitOrFunc['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "tester.checkAgg(\"bit_or(x)\",values,3,0)@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "tester.checkFails(\"^bit_or()^\",\"Invalid number of arguments to function 'BIT_OR'. Was expecting 1 arguments\",false)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "tester.checkType(\"bit_xor(CAST(2 AS TINYINT))\",\"TINYINT\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "tester.checkFails(\"bit_or(^*^)\",\"Unknown identifier '\*'\",false)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "tester.checkType(\"bit_xor(1)\",\"INTEGER\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "tester.checkFails(\"^bit_or(1.2)^\",\"Cannot apply 'BIT_OR' to arguments of type 'BIT_OR\(<DECIMAL\(2, 1\)>\)'\. Supported form\(s\): 'BIT_OR\(<INTEGER>\)'\",false)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "tester.checkType(\"bit_or(CAST(2 AS TINYINT))\",\"TINYINT\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->20 [style = dashed, label="0"];
8->16 [style = dashed, label="0"];
2->1 [style = bold, label=""];
5->23 [style = dashed, label="0"];
0->11 [style = bold, label=""];
1->18 [style = dashed, label="0"];
11->17 [style = dashed, label="0"];
4->21 [style = dashed, label="0"];
12->1 [style = bold, label=""];
1->9 [style = bold, label=""];
6->15 [style = bold, label=""];
3->19 [style = dashed, label="0"];
3->10 [style = bold, label=""];
18->20 [style = bold, label=""];
13->17 [style = bold, label=""];
22->18 [style = bold, label=""];
6->15 [style = solid, label="values"];
19->14 [style = bold, label=""];
5->6 [style = bold, label=""];
6->7 [style = solid, label="values"];
16->21 [style = bold, label=""];
23->6 [style = bold, label=""];
10->0 [style = bold, label=""];
0->13 [style = dashed, label="0"];
7->15 [style = dashed, label="0"];
9->3 [style = bold, label=""];
11->8 [style = bold, label=""];
8->4 [style = bold, label=""];
14->13 [style = bold, label=""];
6->7 [style = bold, label=""];
20->19 [style = bold, label=""];
4->5 [style = bold, label=""];
10->14 [style = dashed, label="0"];
17->16 [style = bold, label=""];
21->23 [style = bold, label=""];
}
