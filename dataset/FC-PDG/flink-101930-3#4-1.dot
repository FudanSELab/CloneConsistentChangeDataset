digraph {
16 [style = filled, label = "final StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "File folder = TEMPORARY_FOLDER.newFolder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "stream.addSink(StreamingFileSink.forBulkFormat(Path.fromLocalFile(folder),avroWriterFactory).build())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "AvroWriterFactory<Datum> avroWriterFactory = AvroWriters.forReflectRecord()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "stream.addSink(StreamingFileSink.forBulkFormat(Path.fromLocalFile(folder),ParquetAvroWriters.forReflectRecord()).build())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<Datum> data = Arrays.asList(new Datum(\"a\",1),new Datum(\"b\",2),new Datum(\"c\",3))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "env.execute()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "stream.addSink(StreamingFileSink.forBulkFormat(Path.fromLocalFile(folder),avroWriterFactory).withBucketAssigner(new UniqueBucketAssigner<>(\"test\")).build())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "final List<Datum> data = Arrays.asList(new Datum(\"a\",1),new Datum(\"b\",2),new Datum(\"c\",3))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final File folder = TEMPORARY_FOLDER.newFolder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testWriteParquetAvroReflect['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "env.setParallelism(1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testWriteAvroReflect['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "validateResults(folder,new ReflectDatumReader<>(),data)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testWriteAvroReflect['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "validateResults(folder,ReflectData.get(),data)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "DataStream<Datum> stream = env.addSource(new FiniteTestSource<>(data),TypeInformation.of())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "env.enableCheckpointing(100)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
10->8 [style = solid, label="data"];
4->14 [style = bold, label=""];
7->1 [style = bold, label=""];
5->9 [style = bold, label=""];
7->16 [style = dashed, label="0"];
2->3 [style = bold, label=""];
9->8 [style = solid, label="folder"];
13->14 [style = solid, label="folder"];
17->3 [style = solid, label="data"];
0->15 [style = dashed, label="0"];
3->15 [style = bold, label=""];
9->10 [style = bold, label=""];
3->12 [style = bold, label=""];
0->12 [style = dashed, label="0"];
8->14 [style = dashed, label="0"];
11->9 [style = bold, label=""];
10->7 [style = bold, label=""];
3->0 [style = bold, label=""];
6->2 [style = bold, label=""];
13->17 [style = bold, label=""];
1->6 [style = bold, label=""];
12->4 [style = bold, label=""];
16->1 [style = bold, label=""];
10->3 [style = solid, label="data"];
0->4 [style = bold, label=""];
17->14 [style = solid, label="data"];
15->4 [style = bold, label=""];
9->13 [style = dashed, label="0"];
18->13 [style = bold, label=""];
10->17 [style = dashed, label="0"];
4->8 [style = bold, label=""];
17->16 [style = bold, label=""];
}
