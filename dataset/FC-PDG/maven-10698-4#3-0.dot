digraph {
12 [style = filled, label = "List list = new ArrayList(getArtifacts().size())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "isAddedToClasspath(a)@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "list.add(getBuild().getOutput())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "a.getScope() == null || \"test\".equals(a.getScope()) || \"compile\".equals(a.getScope()) || \"runtime\".equals(a.getScope())@@@10@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "return list@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "a.getScope() == null || Artifact.SCOPE_TEST.equals(a.getScope()) || Artifact.SCOPE_COMPILE.equals(a.getScope()) || Artifact.SCOPE_RUNTIME.equals(a.getScope())@@@10@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "getCompileClasspathElements['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "getTestClasspathElements['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "getTestClasspathElements['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Iterator i = getArtifacts().iterator()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Artifact a = (Artifact)i.next()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "a.getScope() == null || \"compile\".equals(a.getScope())@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i.hasNext()@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "List list = new ArrayList(getArtifacts().size() + 1)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "list.add(a.getPath())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "i.hasNext()@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return list@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "list.add(a.getPath())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->10 [style = bold, label=""];
4->3 [style = bold, label=""];
10->6 [style = dotted, label="true"];
9->10 [style = dashed, label="0"];
4->17 [style = bold, label=""];
5->9 [style = bold, label=""];
11->1 [style = bold, label=""];
5->10 [style = dotted, label="true"];
2->3 [style = bold, label=""];
12->15 [style = solid, label="list"];
3->14 [style = bold, label=""];
3->4 [style = dotted, label="true"];
7->0 [style = bold, label=""];
3->15 [style = bold, label=""];
7->4 [style = bold, label=""];
9->7 [style = bold, label=""];
9->6 [style = dotted, label="true"];
1->0 [style = solid, label="list"];
10->7 [style = bold, label=""];
10->6 [style = bold, label=""];
3->14 [style = dotted, label="true"];
9->6 [style = bold, label=""];
7->5 [style = dotted, label="true"];
8->1 [style = bold, label=""];
12->13 [style = bold, label=""];
1->12 [style = dashed, label="0"];
4->5 [style = solid, label="a"];
13->3 [style = bold, label=""];
3->7 [style = bold, label=""];
7->4 [style = dotted, label="true"];
17->3 [style = bold, label=""];
5->9 [style = dotted, label="true"];
5->7 [style = bold, label=""];
1->2 [style = bold, label=""];
6->7 [style = bold, label=""];
4->17 [style = dotted, label="true"];
4->5 [style = bold, label=""];
16->12 [style = bold, label=""];
14->4 [style = bold, label=""];
}
