digraph {
14 [style = filled, label = "assertStdOutContains(stdOutErrPair,\"\"GOOG\",\"2018-08-31 09:59:00\",\"6330\",\"1230.5\",\"1230.02\"\",2)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertStdOutContains(stdOutErrPair,\"stock_ticks_mor\",4)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testPrestoAfterSecondBatch['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Pair<String,String> stdOutErrPair = executePrestoCommandFile(HDFS_PRESTO_INPUT_TABLE_CHECK_PATH)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertStdOutContains(stdOutErrPair,\"\"GOOG\",\"2018-08-31 09:59:00\",\"6330\",\"1230.5\",\"1230.02\"\",2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "stdOutErrPair = executePrestoCommandFile(HDFS_PRESTO_INPUT_BATCH1_PATH)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testPrestoAfterFirstBatch['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Pair<String,String> stdOutErrPair = executePrestoCommandFile(HDFS_PRESTO_INPUT_BATCH1_PATH)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertStdOutContains(stdOutErrPair,\"stock_ticks_mor\",2)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertStdOutContains(stdOutErrPair,\"stock_ticks_cow\",2)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertStdOutContains(stdOutErrPair,\"\"GOOG\",\"2018-08-31 10:29:00\",\"3391\",\"1230.1899\",\"1230.085\"\",2)@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertStdOutContains(stdOutErrPair,\"\"GOOG\",\"2018-08-31 10:29:00\",\"3391\",\"1230.1899\",\"1230.085\"\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertStdOutContains(stdOutErrPair,\"stock_ticks_cow\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "assertStdOutContains(stdOutErrPair,\"\"GOOG\",\"2018-08-31 10:59:00\",\"9021\",\"1227.1993\",\"1227.215\"\")@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertStdOutContains(stdOutErrPair,\"\"GOOG\",\"2018-08-31 10:29:00\"\",2)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testPrestoAfterFirstBatch['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertStdOutContains(stdOutErrPair,\"\"GOOG\",\"2018-08-31 10:59:00\"\",2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertStdOutContains(stdOutErrPair,\"\"GOOG\",\"2018-08-31 10:29:00\"\",4)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->13 [style = dashed, label="0"];
14->16 [style = bold, label=""];
6->5 [style = solid, label="stdOutErrPair"];
6->4 [style = solid, label="stdOutErrPair"];
3->17 [style = dashed, label="0"];
0->1 [style = solid, label="stdOutErrPair"];
12->11 [style = solid, label="stdOutErrPair"];
12->11 [style = bold, label=""];
1->3 [style = bold, label=""];
8->6 [style = bold, label=""];
16->17 [style = bold, label=""];
9->10 [style = bold, label=""];
12->14 [style = solid, label="stdOutErrPair"];
0->3 [style = solid, label="stdOutErrPair"];
0->2 [style = solid, label="stdOutErrPair"];
6->10 [style = solid, label="stdOutErrPair"];
6->12 [style = dashed, label="0"];
6->4 [style = bold, label=""];
4->9 [style = dashed, label="0"];
12->13 [style = solid, label="stdOutErrPair"];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
5->10 [style = dashed, label="0"];
1->16 [style = dashed, label="0"];
0->1 [style = bold, label=""];
10->0 [style = bold, label=""];
7->6 [style = bold, label=""];
11->13 [style = bold, label=""];
6->9 [style = solid, label="stdOutErrPair"];
15->12 [style = bold, label=""];
4->11 [style = dashed, label="0"];
6->9 [style = bold, label=""];
4->5 [style = bold, label=""];
12->16 [style = solid, label="stdOutErrPair"];
13->14 [style = bold, label=""];
12->17 [style = solid, label="stdOutErrPair"];
}
