digraph {
5 [style = filled, label = "requiredEntries = l.stream().filter(null).toArray(null)@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "optionalEntries = l.stream().filter(null).toArray(null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "RestMatcherList['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "RestConverterList['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Builder builder@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Builder builder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "RestMatcherList['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "BeanStore bs = builder.beanStore().orElse(BeanStore.INSTANCE)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<RestMatcher> l = builder.entries.stream().map(null).collect(toList())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "entries = builder.entries.stream().map(null).toArray(null)@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "List<RestMatcher> l = builder.entries.stream().map(null).collect(toList())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1->5 [style = bold, label=""];
3->9 [style = bold, label=""];
6->3 [style = bold, label=""];
4->9 [style = dashed, label="0"];
4->1 [style = bold, label=""];
7->1 [style = bold, label=""];
2->0 [style = dotted, label="true"];
6->0 [style = dotted, label="true"];
8->10 [style = dotted, label="true"];
3->7 [style = bold, label=""];
4->7 [style = dashed, label="0"];
3->4 [style = bold, label=""];
0->10 [style = dashed, label="0"];
2->3 [style = bold, label=""];
8->3 [style = bold, label=""];
}
