digraph {
10 [style = filled, label = "gridDropListeners = null@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "registerDragAndDrop['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "run['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final DropTargetListener(( gridDropListeners@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "groupingResultsContainer.rebuildGrouping()@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "dialog.open() == IDialogConstants.OK_ID@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "DropTarget dropTarget = new DropTarget(presentation.getControl(),DND.DROP_MOVE | DND.DROP_COPY)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "dropTarget.addDropListener(new DropTargetAdapter(){@Override public void dragEnter(DropTargetEvent event){handleDragEvent(event)}@Override public void dragLeave(DropTargetEvent event){handleDragEvent(event)}@Override public void dragOperationChanged(DropTargetEvent event){handleDragEvent(event)}@Override public void dragOver(DropTargetEvent event){handleDragEvent(event)}@Override public void drop(DropTargetEvent event){handleDragEvent(event)if (event.detail == DND.DROP_MOVE || event.detail == DND.DROP_COPY) {dropColumns(event)}}@Override public void dropAccept(DropTargetEvent event){handleDragEvent(event)}private void handleDragEvent(DropTargetEvent event){if (!isDropSupported(event)) {event.detail = DND.DROP_NONE}{if (event.detail == DND.DROP_NONE) {event.detail = DND.DROP_MOVE}}event.feedback = DND.FEEDBACK_SELECT}private boolean isDropSupported(DropTargetEvent event){return true}@SuppressWarnings(\"unchecked\") private void dropColumns(DropTargetEvent event){if (!(event.data instanceof List)) {return}List<Object> dropElements = (List<Object>)event.dataList<String> newBindings = new ArrayList<>()List<DBDAttributeBinding> movedBindings = new ArrayList<>()for (Object element : dropElements){if (element instanceof DBDAttributeBinding) {DBDAttributeBinding binding = (DBDAttributeBinding)elementString attrName = getAttributeBindingName(binding)if (ArrayUtils.contains(container.getResultSetController().getModel().getAttributes(),binding)) {if (!container.getGroupFunctions().contains(attrName)) {movedBindings.add(binding)}}{newBindings.add(attrName)}}}if (!movedBindings.isEmpty()) {if (gridDropListeners != null) {dropElements.clear()dropElements.addAll(movedBindings)for (DropTargetListener listener : gridDropListeners){listener.drop(event)}}List<String> curAttributes = new ArrayList<>(container.getGroupAttributes())for (DBDAttributeBinding mb : movedBindings){String attrName = getAttributeBindingName(mb)curAttributes.remove(attrName)curAttributes.add(0,attrName)}container.clearGroupingAttributes()container.addGroupingAttributes(curAttributes)}if (!newBindings.isEmpty()) {container.addGroupingAttributes(newBindings)}UIUtils.asyncExec(null)}})@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "GroupingConfigDialog dialog = new GroupingConfigDialog(groupingResultsContainer.getResultSetController().getControl().getShell(),groupingResultsContainer)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "((DropTarget)oldDropTarget).dispose()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "@NotNull IResultSetPresentation presentation@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "oldDropTarget instanceof DropTarget@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "registerDragAndDrop['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "Object oldDropTarget = presentation.getControl().getData(DND.DROP_TARGET_KEY)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "gridDropListeners = ((DropTarget)oldDropTarget).getDropListeners()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "dropTarget.setTransfer(LightGrid.GridColumnTransfer.INSTANCE,TextTransfer.getInstance())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->10 [style = bold, label=""];
9->4 [style = solid, label="gridDropListeners"];
8->0 [style = bold, label=""];
3->2 [style = bold, label=""];
15->12 [style = bold, label=""];
12->14 [style = bold, label=""];
2->5 [style = bold, label=""];
6->0 [style = bold, label=""];
9->2 [style = bold, label=""];
14->13 [style = bold, label=""];
10->4 [style = solid, label="gridDropListeners"];
6->1 [style = dotted, label="true"];
0->3 [style = bold, label=""];
3->5 [style = bold, label=""];
14->13 [style = dotted, label="true"];
7->4 [style = bold, label=""];
11->8 [style = bold, label=""];
3->10 [style = dotted, label="false"];
11->1 [style = dotted, label="true"];
3->9 [style = bold, label=""];
3->2 [style = dotted, label="true"];
0->3 [style = solid, label="oldDropTarget"];
3->9 [style = dotted, label="true"];
10->5 [style = bold, label=""];
5->7 [style = bold, label=""];
0->12 [style = dashed, label="0"];
}
