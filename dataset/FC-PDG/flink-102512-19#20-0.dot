digraph {
35 [style = filled, label = "operatorStateMetadata.put(DefaultOperatorStateBackend.DEFAULT_OPERATOR_STATE_NAME,metaInfo)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "createTask['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "operatorStateStream = operatorStateHandles@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "StateBackend backend@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "OperatorSubtaskState operatorSubtaskState = new OperatorSubtaskState(new StateObjectCollection<>(operatorStateBackend),new StateObjectCollection<>(operatorStateStream),new StateObjectCollection<>(keyedStateFromBackend),new StateObjectCollection<>(keyedStateFromStream))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "JobInformation jobInformation = new JobInformation(new JobID(),\"test job name\",new SerializedValue<>(new ExecutionConfig()),new Configuration(),Collections.emptyList(),Collections.emptyList())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "List<KeyedStateHandle> keyedStateHandles = Collections.singletonList(new KeyGroupsStateHandle(keyGroupRangeOffsets,state))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "TaskInformation taskInformation = new TaskInformation(jobVertexID,\"test task name\",1,1,.getName(),taskConfig)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "KeyGroupRangeOffsets keyGroupRangeOffsets = new KeyGroupRangeOffsets(new KeyGroupRange(0,0))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "StreamConfig cfg = new StreamConfig(taskConfig)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "TaskEventDispatcher taskEventDispatcher = new TaskEventDispatcher()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "taskStateManager.setReportedCheckpointId(taskRestore.getRestoreCheckpointId())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "cfg.setStateBackend(backend)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "TaskEventDispatcher taskEventDispatcher = new TaskEventDispatcher()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Collection<KeyedStateHandle> keyedStateFromBackend = Collections.emptyList()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "TaskInformation taskInformation = new TaskInformation(new JobVertexID(),\"test task name\",1,11,.getName(),taskConfig)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "StreamConfig streamConfig@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "streamConfig.setOperatorID(operatorID)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "createTask['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "BlobCacheService blobService = new BlobCacheService(mock(),mock())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "when(networkEnvironment.getTaskEventDispatcher()).thenReturn(taskEventDispatcher)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Collection<OperatorStateHandle> operatorStateHandles = Collections.singletonList(new OperatorStreamStateHandle(operatorStateMetadata,state))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "StreamStateHandle state@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Collection<OperatorStateHandle> operatorStateStream = Collections.emptyList()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "cfg.setOperatorID(new OperatorID())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "createTask['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "return new Task(jobInformation,taskInformation,new ExecutionAttemptID(),new AllocationID(),0,0,Collections.emptyList(),Collections.emptyList(),0,mock(),mock(),networkEnvironment,new KvStateService(new KvStateRegistry(),null,null),mock(),taskStateManager,mock(),mock(),mock(),new TestGlobalAggregateManager(),blobService,new BlobLibraryCacheManager(blobService.getPermanentBlobService(),FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,new String((((),new FileCache(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1be9c7b,blobService.getPermanentBlobService()),new TestingTaskManagerRuntimeInfo(),UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),new NoOpResultPartitionConsumableNotifier(),mock(),mock())@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "return new Task(jobInformation,taskInformation,new ExecutionAttemptID(),new AllocationID(),0,0,Collections.emptyList(),Collections.emptyList(),0,mock(),mock(),network,mock(),new TestTaskStateManager(),mock(),mock(),checkpointResponder,new TestGlobalAggregateManager(),blobService,new BlobLibraryCacheManager(blobService.getPermanentBlobService(),FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,new String((((),new FileCache(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1be9d56,blobService.getPermanentBlobService()),new TestingTaskManagerRuntimeInfo(),UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),new NoOpResultPartitionConsumableNotifier(),mock(),Executors.directExecutor())@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "CheckpointResponder checkpointResponder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "throw new IllegalArgumentException()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "operatorStateBackend = operatorStateHandles@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "NetworkEnvironment network = mock()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Configuration taskConfig@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "Collection<OperatorStateHandle> operatorStateBackend = Collections.emptyList()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "NetworkEnvironment networkEnvironment = mock()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Map<String,OperatorStateHandle.StateMetaInfo> operatorStateMetadata = new HashMap<>(1)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "when(network.createKvStateTaskRegistry(any(),any())).thenReturn(mockKvRegistry)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "JobVertexID jobVertexID = new JobVertexID()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "Configuration taskConfig = new Configuration()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "return new Task(jobInformation,taskInformation,new ExecutionAttemptID(),new AllocationID(),0,0,Collections.emptyList(),Collections.emptyList(),0,mock(),mock(),networkEnvironment,mock(),taskStateManager,mock(),mock(),mock(),new TestGlobalAggregateManager(),blobService,new BlobLibraryCacheManager(blobService.getPermanentBlobService(),FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,new String((((),new FileCache(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1be9b04,blobService.getPermanentBlobService()),new TestingTaskManagerRuntimeInfo(),UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),new NoOpResultPartitionConsumableNotifier(),mock(),mock())@@@43@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "BlobCacheService blobService = new BlobCacheService(mock(),mock())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TaskStateSnapshot stateSnapshot = new TaskStateSnapshot()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "JobManagerTaskRestore taskRestore = new JobManagerTaskRestore(1L,stateSnapshot)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "int mode@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "mode@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "TaskKvStateRegistry mockKvRegistry = mock()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Configuration taskConfig@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "ExecutionConfig executionConfig = new ExecutionConfig()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "keyedStateFromStream = keyedStateHandles@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Collection<KeyedStateHandle> keyedStateFromStream = Collections.emptyList()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "boolean failOnCheckpointErrors@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "when(networkEnvironment.createKvStateTaskRegistry(any(),any())).thenReturn(mock())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "OperatorID operatorID = OperatorID.fromJobVertexID(jobVertexID)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "when(network.getTaskEventDispatcher()).thenReturn(taskEventDispatcher)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "cfg.setStreamOperator(op)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "taskStateManager.setJobManagerTaskStateSnapshotsByCheckpointId(Collections.singletonMap(taskRestore.getRestoreCheckpointId(),taskRestore.getTaskStateSnapshot()))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "OperatorStateHandle.StateMetaInfo metaInfo = new OperatorStateHandle.StateMetaInfo(new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1be9b65,OperatorStateHandle.Mode.SPLIT_DISTRIBUTE)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "StreamOperator<?> op@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "JobInformation jobInformation = new JobInformation(new JobID(),\"test job name\",new SerializedValue<>(executionConfig),new Configuration(),Collections.emptyList(),Collections.emptyList())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "executionConfig.setFailTaskOnCheckpointError(failOnCheckpointErrors)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "keyedStateFromBackend = keyedStateHandles@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TestTaskStateManager taskStateManager = new TestTaskStateManager()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "StreamConfig streamConfig@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "int mode@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "stateSnapshot.putSubtaskStateByOperatorID(operatorID,operatorSubtaskState)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->30 [style = bold, label=""];
6->0 [style = solid, label="keyedStateHandles"];
40->39 [style = dotted, label="true"];
58->50 [style = bold, label=""];
27->32 [style = bold, label=""];
4->25 [style = bold, label=""];
25->34 [style = bold, label=""];
7->12 [style = solid, label="jobInformation"];
5->9 [style = bold, label=""];
33->61 [style = dashed, label="0"];
10->25 [style = solid, label="taskEventDispatcher"];
53->45 [style = solid, label="taskEventDispatcher"];
11->29 [style = bold, label=""];
3->24 [style = solid, label="mode"];
19->32 [style = solid, label="keyedStateFromStream"];
62->55 [style = bold, label=""];
7->42 [style = solid, label="jobInformation"];
44->64 [style = solid, label="executionConfig"];
9->7 [style = bold, label=""];
24->27 [style = dotted, label="true"];
40->43 [style = dotted, label="true"];
36->20 [style = dotted, label="true"];
44->46 [style = bold, label=""];
21->31 [style = bold, label=""];
31->6 [style = bold, label=""];
14->42 [style = solid, label="blobService"];
64->55 [style = solid, label="jobInformation"];
45->62 [style = bold, label=""];
33->6 [style = solid, label="state"];
14->11 [style = bold, label=""];
38->31 [style = solid, label="operatorStateMetadata"];
24->27 [style = bold, label=""];
40->41 [style = dotted, label="true"];
18->38 [style = bold, label=""];
24->28 [style = bold, label=""];
7->1 [style = bold, label=""];
24->19 [style = bold, label=""];
26->32 [style = bold, label=""];
15->1 [style = solid, label="taskConfig"];
24->0 [style = bold, label=""];
13->32 [style = solid, label="keyedStateFromStream"];
41->1 [style = solid, label="taskConfig"];
58->48 [style = dotted, label="true"];
57->54 [style = solid, label="backend"];
35->21 [style = bold, label=""];
50->51 [style = solid, label="taskConfig"];
1->12 [style = solid, label="taskInformation"];
51->60 [style = bold, label=""];
38->37 [style = bold, label=""];
24->26 [style = dotted, label="true"];
54->44 [style = bold, label=""];
27->32 [style = solid, label="operatorStateBackend"];
36->3 [style = dotted, label="true"];
8->5 [style = solid, label="operatorID"];
24->0 [style = dotted, label="true"];
23->32 [style = solid, label="operatorStateBackend"];
50->56 [style = solid, label="taskConfig"];
0->32 [style = solid, label="keyedStateFromBackend"];
24->19 [style = dotted, label="true"];
16->12 [style = solid, label="networkEnvironment"];
63->53 [style = bold, label=""];
32->17 [style = bold, label=""];
52->54 [style = bold, label=""];
34->32 [style = solid, label="keyedStateFromBackend"];
22->42 [style = bold, label=""];
17->8 [style = bold, label=""];
58->59 [style = dotted, label="true"];
31->27 [style = solid, label="operatorStateHandles"];
36->15 [style = dotted, label="true"];
48->55 [style = solid, label="checkpointResponder"];
61->46 [style = solid, label="failOnCheckpointErrors"];
6->24 [style = bold, label=""];
59->60 [style = solid, label="op"];
14->12 [style = solid, label="blobService"];
1->42 [style = solid, label="taskInformation"];
63->47 [style = solid, label="mockKvRegistry"];
28->32 [style = bold, label=""];
24->26 [style = bold, label=""];
17->8 [style = solid, label="jobVertexID"];
12->42 [style = dashed, label="0"];
19->32 [style = bold, label=""];
2->9 [style = solid, label="stateSnapshot"];
10->16 [style = bold, label=""];
49->55 [style = solid, label="network"];
11->12 [style = solid, label="taskStateManager"];
25->45 [style = dashed, label="0"];
43->24 [style = solid, label="mode"];
37->35 [style = solid, label="metaInfo"];
47->45 [style = bold, label=""];
56->63 [style = bold, label=""];
37->35 [style = bold, label=""];
0->32 [style = bold, label=""];
16->4 [style = bold, label=""];
60->52 [style = bold, label=""];
8->30 [style = solid, label="operatorID"];
58->61 [style = dotted, label="true"];
11->55 [style = dashed, label="0"];
23->18 [style = bold, label=""];
18->32 [style = solid, label="operatorStateStream"];
2->5 [style = bold, label=""];
36->10 [style = bold, label=""];
36->33 [style = dotted, label="true"];
17->1 [style = solid, label="jobVertexID"];
40->10 [style = bold, label=""];
56->55 [style = solid, label="taskInformation"];
40->33 [style = dotted, label="true"];
46->64 [style = bold, label=""];
58->57 [style = dotted, label="true"];
34->13 [style = bold, label=""];
62->55 [style = solid, label="blobService"];
4->47 [style = dashed, label="0"];
16->25 [style = bold, label=""];
28->32 [style = solid, label="operatorStateStream"];
24->28 [style = dotted, label="true"];
11->42 [style = solid, label="taskStateManager"];
32->5 [style = solid, label="operatorSubtaskState"];
49->47 [style = bold, label=""];
16->42 [style = solid, label="networkEnvironment"];
53->49 [style = bold, label=""];
64->56 [style = bold, label=""];
22->12 [style = bold, label=""];
50->51 [style = bold, label=""];
33->31 [style = solid, label="state"];
13->23 [style = bold, label=""];
16->49 [style = dashed, label="0"];
21->6 [style = solid, label="keyGroupRangeOffsets"];
1->14 [style = bold, label=""];
29->22 [style = bold, label=""];
30->2 [style = bold, label=""];
31->28 [style = solid, label="operatorStateHandles"];
6->19 [style = solid, label="keyedStateHandles"];
}
