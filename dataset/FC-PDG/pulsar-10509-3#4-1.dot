digraph {
40 [style = filled, label = "assertEquals(pulsarSplit.getEndPosition(),PositionImpl.get(0,initialStart + pulsarSplit.getSplitSize()))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(pulsarSplit.getSchema(),new String(topicsToSchemas.get(topicName.getSchemaName()).getSchema()))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "doAnswer(resultCaptor).when(this.pulsarSplitManager).getSplitsPartitionedTopic(anyInt(),any(),any(),any(),any())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(pulsarSplit.getConnectorId(),pulsarConnectorId.toString())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "PulsarTableLayoutHandle pulsarTableLayoutHandle = new PulsarTableLayoutHandle(pulsarTableHandle,tupleDomain)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "int initialStart = 1@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "PulsarTableHandle pulsarTableHandle = new PulsarTableHandle(pulsarConnectorId.toString(),topicName.getNamespace(),topicName.getLocalName(),topicName.getLocalName())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final ResultCaptor<Collection<PulsarSplit>> resultCaptor = new ResultCaptor<>()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(totalSize,49)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(pulsarSplit.getConnectorId(),pulsarConnectorId.toString())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(pulsarSplit.getEndPositionEntryId(),initialStart + pulsarSplit.getSplitSize())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "i++@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "totalSize += pulsarSplit.getSplitSize()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "List<PulsarSplit> splits = getSplitsForPartition(topicName.getPartition(i),resultCaptor.getResult())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "testPublishTimePredicatePushdown['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
46 [style = filled, label = "i < partitions@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "testPublishTimePredicatePushdownPartitionedTopic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "TopicName topicName = TOPIC_1@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testPublishTimePredicatePushdown['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(pulsarSplit.getSchemaType(),topicsToSchemas.get(topicName.getSchemaName()).getType())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "verify(this.pulsarSplitManager,times(1)).getSplitsNonPartitionedTopic(anyInt(),any(),any(),any(),any())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "int i = 0@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "int partitions = partitionedTopicsToPartitions.get(topicName.toString())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Domain domain = Domain.create(ValueSet.ofRanges(Range.range(TIMESTAMP_WITH_TIME_ZONE,packDateTimeWithZone(currentTimeMs + 1L,TimeZoneKey.UTC_KEY),true,packDateTimeWithZone(currentTimeMs + 50L,TimeZoneKey.UTC_KEY),true)),false)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "int totalSize = 0@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(pulsarSplit.getStartPositionEntryId(),initialStart)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "TopicName topicName = PARTITIONED_TOPIC_1@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(pulsarSplit.getSchema(),new String(topicsToSchemas.get(topicName.getSchemaName()).getSchema()))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "domainMap.put(PulsarInternalColumn.PUBLISH_TIME.getColumnHandle(pulsarConnectorId.toString(),false),domain)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "doAnswer(resultCaptor).when(this.pulsarSplitManager).getSplitsNonPartitionedTopic(anyInt(),any(),any(),any(),any())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "verify(this.pulsarSplitManager,times(1)).getSplitsPartitionedTopic(anyInt(),any(),any(),any(),any())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Map<ColumnHandle,Domain> domainMap = new HashMap<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(pulsarSplit.getSchemaType(),topicsToSchemas.get(topicName.getSchemaName()).getType())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(totalSize,49)@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(pulsarSplit.getEndPosition(),PositionImpl.get(0,initalStart + pulsarSplit.getSplitSize()))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(pulsarSplit.getStartPosition(),PositionImpl.get(0,initalStart))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "splits@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "log.info(\"!----- topic: %s -----!\",topicName)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ConnectorSplitSource connectorSplitSource = this.pulsarSplitManager.getSplits(mock(),mock(),pulsarTableLayoutHandle,null)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(pulsarSplit.getEndPositionLedgerId(),0)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "initialStart += pulsarSplit.getSplitSize()@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(pulsarSplit.getStartPosition(),PositionImpl.get(0,initialStart))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "int initalStart = 1@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int totalSize = 0@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "totalSize += pulsarSplit.getSplitSize()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Domain domain = Domain.create(ValueSet.ofRanges(Range.range(TIMESTAMP,currentTimeMs + 1L,true,currentTimeMs + 50L,true)),false)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "assertEquals(pulsarSplit.getTableName(),topicName.getPartition(i).getLocalName())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(pulsarSplit.getStartPositionLedgerId(),0)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "TupleDomain<ColumnHandle> tupleDomain = TupleDomain.withColumnDomains(domainMap)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "setup()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "PulsarSplit pulsarSplit@@@23@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(pulsarSplit.getSchemaName(),topicName.getNamespace())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(pulsarSplit.getSchemaName(),topicName.getNamespace())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->20 [style = solid, label="initalStart"];
34->46 [style = bold, label=""];
37->36 [style = solid, label="totalSize"];
46->37 [style = dotted, label="true"];
46->28 [style = dotted, label="true"];
20->40 [style = dashed, label="0"];
31->9 [style = bold, label=""];
29->32 [style = dashed, label="0"];
46->24 [style = dotted, label="true"];
14->17 [style = bold, label=""];
49->40 [style = solid, label="initialStart"];
12->7 [style = bold, label=""];
28->14 [style = bold, label=""];
21->30 [style = dashed, label="0"];
46->49 [style = dotted, label="true"];
46->48 [style = dotted, label="true"];
15->33 [style = dashed, label="0"];
2->49 [style = dashed, label="0"];
46->13 [style = dotted, label="true"];
11->26 [style = solid, label="pulsarTableHandle"];
2->6 [style = solid, label="initalStart"];
29->1 [style = bold, label=""];
21->4 [style = solid, label="domain"];
8->48 [style = dashed, label="0"];
11->16 [style = bold, label=""];
48->37 [style = bold, label=""];
46->38 [style = bold, label=""];
15->13 [style = bold, label=""];
46->40 [style = dotted, label="true"];
37->36 [style = bold, label=""];
38->28 [style = bold, label=""];
39->8 [style = bold, label=""];
33->41 [style = bold, label=""];
28->42 [style = dashed, label="0"];
7->0 [style = bold, label=""];
47->43 [style = bold, label=""];
46->33 [style = dotted, label="true"];
9->45 [style = dashed, label="0"];
34->35 [style = solid, label="i"];
20->8 [style = bold, label=""];
48->39 [style = solid, label="initialStart"];
18->25 [style = bold, label=""];
10->2 [style = bold, label=""];
36->35 [style = bold, label=""];
43->34 [style = bold, label=""];
2->15 [style = solid, label="initalStart"];
27->20 [style = bold, label=""];
49->33 [style = solid, label="initialStart"];
35->46 [style = solid, label="i"];
21->4 [style = bold, label=""];
8->33 [style = bold, label=""];
48->33 [style = solid, label="initialStart"];
17->6 [style = bold, label=""];
46->35 [style = dotted, label="true"];
19->29 [style = bold, label=""];
9->25 [style = solid, label="topicName"];
28->49 [style = bold, label=""];
5->26 [style = bold, label=""];
6->24 [style = bold, label=""];
46->8 [style = dotted, label="true"];
26->19 [style = bold, label=""];
3->9 [style = bold, label=""];
2->20 [style = solid, label="initalStart"];
27->39 [style = bold, label=""];
13->27 [style = bold, label=""];
9->18 [style = bold, label=""];
19->32 [style = bold, label=""];
8->6 [style = solid, label="initalStart"];
8->27 [style = solid, label="initalStart"];
51->45 [style = bold, label=""];
52->40 [style = bold, label=""];
16->30 [style = bold, label=""];
32->1 [style = bold, label=""];
46->50 [style = dotted, label="true"];
22->10 [style = bold, label=""];
45->25 [style = solid, label="topicName"];
35->38 [style = solid, label="i"];
46->38 [style = dotted, label="true"];
12->23 [style = solid, label="totalSize"];
4->5 [style = bold, label=""];
49->6 [style = bold, label=""];
8->12 [style = bold, label=""];
46->52 [style = dotted, label="true"];
45->18 [style = bold, label=""];
24->42 [style = bold, label=""];
49->52 [style = solid, label="initialStart"];
24->15 [style = bold, label=""];
34->46 [style = solid, label="i"];
46->36 [style = dotted, label="true"];
26->1 [style = solid, label="pulsarTableLayoutHandle"];
22->47 [style = dashed, label="0"];
42->13 [style = bold, label=""];
40->48 [style = bold, label=""];
16->5 [style = solid, label="domainMap"];
5->26 [style = solid, label="tupleDomain"];
46->44 [style = dotted, label="true"];
46->41 [style = dotted, label="true"];
37->6 [style = bold, label=""];
43->46 [style = solid, label="partitions"];
46->27 [style = dotted, label="true"];
41->52 [style = bold, label=""];
1->22 [style = bold, label=""];
30->4 [style = solid, label="domain"];
1->47 [style = bold, label=""];
25->11 [style = bold, label=""];
30->4 [style = bold, label=""];
16->21 [style = bold, label=""];
49->39 [style = solid, label="initialStart"];
48->40 [style = solid, label="initialStart"];
2->27 [style = solid, label="initalStart"];
46->39 [style = dotted, label="true"];
46->42 [style = dotted, label="true"];
48->52 [style = solid, label="initialStart"];
27->52 [style = dashed, label="0"];
12->23 [style = bold, label=""];
2->7 [style = bold, label=""];
8->15 [style = solid, label="initalStart"];
46->6 [style = dotted, label="true"];
0->28 [style = bold, label=""];
6->39 [style = dashed, label="0"];
34->38 [style = solid, label="i"];
35->46 [style = bold, label=""];
}
