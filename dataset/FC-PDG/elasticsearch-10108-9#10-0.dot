digraph {
0 [style = filled, label = "config.put(\"database_file\",\"GeoLite2-Country.mmdb\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(processor.getUaParser().getDevicePatterns().size(),greaterThan(0))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "config.put(\"ignore_missing\",true)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "GeoIpProcessor.Factory factory = new GeoIpProcessor.Factory(localDatabases)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertThat(processor.getProperties(),sameInstance(GeoIpProcessor.Factory.DEFAULT_COUNTRY_PROPERTIES))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(processor.getDatabaseType(),equalTo(\"GeoLite2-Country\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "UserAgentProcessor.Factory factory = new UserAgentProcessor.Factory(userAgentParsers)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testCountryBuildDefaults['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "testBuildWithIgnoreMissing['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertFalse(processor.isIgnoreMissing())@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "UserAgentProcessor processor = factory.create(null,processorTag,null,config)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "GeoIpProcessor.Factory factory = new GeoIpProcessor.Factory(databaseReaders)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "GeoIpProcessor processor = factory.create(null,processorTag,null,config)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(processor.getTargetField(),equalTo(\"user_agent\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(processor.getTag(),equalTo(processorTag))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(processor.getField(),equalTo(\"_field\"))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(processor.getUaParser().getUaPatterns().size(),greaterThan(0))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testCountryBuildDefaults['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(processor.getProperties(),equalTo(EnumSet.allOf()))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String processorTag = randomAlphaOfLength(10)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Map<String,Object> config = new HashMap<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(processor.getUaParser().getOsPatterns().size(),greaterThan(0))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "config.put(\"field\",\"_field\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(processor.isIgnoreMissing())@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(processor.getTargetField(),equalTo(\"geoip\"))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->10 [style = bold, label=""];
5->13 [style = dashed, label="0"];
16->15 [style = bold, label=""];
4->3 [style = bold, label=""];
9->0 [style = bold, label=""];
18->23 [style = bold, label=""];
10->1 [style = solid, label="processorTag"];
10->19 [style = bold, label=""];
1->19 [style = dashed, label="0"];
12->17 [style = dashed, label="0"];
19->11 [style = bold, label=""];
15->6 [style = bold, label=""];
6->1 [style = solid, label="config"];
4->22 [style = dashed, label="0"];
17->22 [style = bold, label=""];
6->19 [style = solid, label="config"];
2->12 [style = bold, label=""];
1->11 [style = bold, label=""];
20->18 [style = bold, label=""];
0->10 [style = bold, label=""];
7->5 [style = bold, label=""];
10->19 [style = solid, label="processorTag"];
10->11 [style = solid, label="processorTag"];
5->6 [style = bold, label=""];
8->2 [style = bold, label=""];
12->4 [style = bold, label=""];
22->20 [style = bold, label=""];
2->21 [style = dashed, label="0"];
3->20 [style = dashed, label="0"];
8->21 [style = bold, label=""];
0->24 [style = dashed, label="0"];
11->8 [style = bold, label=""];
14->13 [style = bold, label=""];
13->6 [style = bold, label=""];
6->9 [style = bold, label=""];
10->1 [style = bold, label=""];
5->15 [style = dashed, label="0"];
21->17 [style = bold, label=""];
9->24 [style = bold, label=""];
}
