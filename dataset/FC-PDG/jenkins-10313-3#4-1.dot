digraph {
6 [style = filled, label = "assertThat(result,succeededSilently())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Computer.DISCONNECT,Jenkins.READ).invokeWithArgs(\"\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Computer.DISCONNECT,Jenkins.READ).invokeWithArgs(\"\",\"-m\",\"aCause\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(masterComputer.getOfflineCause(),instanceOf())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(((OfflineCause.ByCLI)masterComputer.getOfflineCause()).message,equalTo(\"aCause\"))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(masterComputer.isTemporarilyOffline(),equalTo(true))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "offlineNodeShouldSucceedOnMaster['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertThat(((OfflineCause.ByCLI)masterComputer.getOfflineCause()).message,equalTo(null))@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "offlineNodeShouldSucceedOnMaster['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Computer masterComputer = Jenkins.getActiveInstance().getComputer(\"\")@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "offlineNodeShouldSucceedOnMasterWithCause['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(masterComputer.isOffline(),equalTo(true))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final Computer masterComputer = Jenkins.get().getComputer(\"\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->3 [style = bold, label=""];
8->9 [style = bold, label=""];
7->11 [style = dashed, label="0"];
6->1 [style = bold, label=""];
0->11 [style = bold, label=""];
11->6 [style = bold, label=""];
5->2 [style = bold, label=""];
3->5 [style = bold, label=""];
5->10 [style = bold, label=""];
0->9 [style = dashed, label="0"];
9->7 [style = bold, label=""];
12->0 [style = bold, label=""];
7->6 [style = solid, label="result"];
11->6 [style = solid, label="result"];
7->6 [style = bold, label=""];
4->0 [style = bold, label=""];
2->10 [style = dashed, label="0"];
0->7 [style = bold, label=""];
}
