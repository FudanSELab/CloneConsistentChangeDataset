digraph {
17 [style = filled, label = "assertEquals(PAGE_SIZE - 20,channelBuffer.getRemaining())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(PAGE_SIZE,channelBuffer.getRemaining())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "InboundChannelBuffer channelBuffer = new InboundChannelBuffer(defaultPageAllocator)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertEquals(InboundChannelBuffer.PAGE_SIZE,channelBuffer.getRemaining())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "testIncrementIndex['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertEquals(PAGE_SIZE - 10,channelBuffer.getRemaining())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "channelBuffer.incrementIndex(10)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(PAGE_SIZE - 20,channelBuffer.getRemaining())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "channelBuffer.ensureCapacity(PAGE_SIZE)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "channelBuffer.ensureCapacity(InboundChannelBuffer.PAGE_SIZE)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "testIncrementIndexWithOffset['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(PAGE_SIZE - 10,channelBuffer.getRemaining())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "InboundChannelBuffer channelBuffer = new InboundChannelBuffer(defaultPageSupplier)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(8,channelBuffer.getIndex())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testIncrementIndex['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(InboundChannelBuffer.PAGE_SIZE - 10,channelBuffer.getRemaining())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertEquals(0,channelBuffer.getIndex())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(10,channelBuffer.getIndex())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "channelBuffer.release(10)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "channelBuffer.release(2)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
0->6 [style = bold, label=""];
0->19 [style = bold, label=""];
11->6 [style = bold, label=""];
7->8 [style = dashed, label="0"];
14->17 [style = bold, label=""];
0->11 [style = dashed, label="0"];
3->15 [style = bold, label=""];
9->10 [style = bold, label=""];
18->2 [style = bold, label=""];
12->9 [style = bold, label=""];
15->16 [style = bold, label=""];
4->0 [style = bold, label=""];
19->13 [style = bold, label=""];
5->10 [style = dashed, label="0"];
3->7 [style = bold, label=""];
2->9 [style = dashed, label="0"];
3->8 [style = bold, label=""];
5->4 [style = bold, label=""];
10->4 [style = bold, label=""];
7->15 [style = dashed, label="0"];
16->14 [style = bold, label=""];
1->2 [style = bold, label=""];
13->6 [style = bold, label=""];
4->11 [style = bold, label=""];
2->5 [style = bold, label=""];
}
