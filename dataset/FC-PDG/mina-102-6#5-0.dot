digraph {
6 [style = filled, label = "testExtendedValues['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "extendedBuffer.limit(start + size)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(i,extendedBuffer.remaining())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "extendedBuffer.put(buffer.slice())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int i = 1@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ByteBuffer extendedBuffer = ByteBuffer.allocate(size)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "int size = buffer.remaining() + i@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testSizedValues['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(value,decoder.decode(buffer).intValue())@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testExtendedValues['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "int start = extendedBuffer.position()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "fail(\"Should not throw exception\")@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "fail(\"Should not throw exception\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "decoder.decode(extendedBuffer)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "i++@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "IoBuffer extendedBuffer = IoBuffer.wrap(ByteBuffer.allocate(size))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "ProtocolDecoderException e@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "i < 5@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "extendedBuffer.position(start)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ByteBuffer buffer = encoder.encode(value)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->11 [style = dotted, label="true"];
12->10 [style = solid, label="size"];
10->15 [style = dashed, label="0"];
8->11 [style = solid, label="i"];
12->1 [style = solid, label="size"];
16->0 [style = bold, label=""];
3->7 [style = dotted, label="true"];
7->11 [style = bold, label=""];
9->0 [style = bold, label=""];
8->3 [style = solid, label="i"];
10->13 [style = solid, label="extendedBuffer"];
4->1 [style = solid, label="start"];
8->3 [style = bold, label=""];
12->15 [style = bold, label=""];
3->10 [style = dotted, label="true"];
3->4 [style = dotted, label="true"];
11->3 [style = solid, label="i"];
11->7 [style = solid, label="i"];
6->0 [style = bold, label=""];
4->2 [style = bold, label=""];
3->12 [style = bold, label=""];
1->13 [style = bold, label=""];
9->14 [style = dotted, label="true"];
3->0 [style = bold, label=""];
5->1 [style = bold, label=""];
12->10 [style = bold, label=""];
3->5 [style = dotted, label="true"];
17->0 [style = bold, label=""];
11->12 [style = solid, label="i"];
4->5 [style = solid, label="start"];
19->9 [style = bold, label=""];
11->3 [style = bold, label=""];
13->7 [style = bold, label=""];
3->12 [style = dotted, label="true"];
3->15 [style = dotted, label="true"];
12->15 [style = solid, label="size"];
19->9 [style = dotted, label="true"];
15->4 [style = bold, label=""];
0->8 [style = bold, label=""];
9->14 [style = bold, label=""];
10->4 [style = bold, label=""];
0->18 [style = bold, label=""];
13->18 [style = dashed, label="0"];
8->12 [style = solid, label="i"];
14->11 [style = bold, label=""];
8->7 [style = solid, label="i"];
3->1 [style = dotted, label="true"];
18->0 [style = bold, label=""];
3->13 [style = dotted, label="true"];
3->2 [style = dotted, label="true"];
2->5 [style = bold, label=""];
15->13 [style = solid, label="extendedBuffer"];
}
