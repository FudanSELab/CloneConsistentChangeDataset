digraph {
65 [style = filled, label = "solrInstance.setUp()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "solrInstance = new SolrInstance(createTempDir(\"solr-instance\").toFile(),\"replication-legacy\",leaderJetty.getLocalPort())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "JettySolrRunner instanceJetty = null@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(i + \": \" + \"follower isFollower?\",\"true\",details.get(\"isFollower\"))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "details = getDetails(followerClient)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "{NamedList<Object> details = getDetails(leaderClient)assertEquals(\"leader isLeader?\",\"true\",details.get(\"isLeader\"))assertEquals(\"leader isFollower?\",\"false\",details.get(\"isFollower\"))assertNotNull(\"leader has leader section\",details.get(\"leader\"))}@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Object timesFailed = ((NamedList)details.get(\"follower\")).get(IndexFetcher.TIMES_FAILED)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "rQuery(i,\"*:*\",followerClient)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "leaderClient.close()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertNotNull(i + \": \" + details.toString(),details.get(\"follower\"))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(\"i:\" + i + \" replicationCount:\" + replicatedAtCount.size(),replicatedAtCount.size() >= i)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "{if (instanceJetty != null) {instanceJetty.stop()}if (client != null) client.close()}@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "followerClient.close()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertEquals(\"repeater isLeader?\",\"true\",details.get(\"isLeader\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "int tries = 0@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "replicatedAtCount = (List<?>)((NamedList<?>)details.get(\"follower\")).get(\"indexReplicatedAtList\")@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(i + \": \" + \"follower isLeader?\",\"false\",details.get(\"isLeader\"))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "followerClient = ReplicationTestHelper.createNewSolrClient(buildUrl(followerJetty.getLocalPort(),context) + \"/\" + DEFAULT_TEST_CORENAME)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "doTestDetails['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Thread.sleep(1000)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(\"repeater isFollower?\",\"true\",details.get(\"isFollower\"))@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "SolrInstance solrInstance = null@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort())@@@54@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertNotNull(i + \": \" + details)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertNotNull(\"repeater has follower section\",details.get(\"follower\"))@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "followerJetty = createAndStartJetty(follower)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "repeater.setUp()@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertEquals(\"repeater isFollower?\",\"true\",details.get(\"isFollower\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "followerJetty.stop()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "instanceJetty = createAndStartJetty(solrInstance)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "i++@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "followerClient = createNewSolrClient(followerJetty.getLocalPort())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "i > 0@@@24@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "(replicatedAtCount == null || replicatedAtCount.size() < i) && tries++ < 5@@@28@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "client = createNewSolrClient(instanceJetty.getLocalPort())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "NamedList<Object> details = getDetails(followerClient)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "leaderClient = ReplicationTestHelper.createNewSolrClient(buildUrl(leaderJetty.getLocalPort(),context) + \"/\" + DEFAULT_TEST_CORENAME)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "SolrClient repeaterClient = null@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "testLegacyConfiguration['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "NamedList<Object> details = getDetails(client)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "leaderClient.commit()@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "doTestDetails['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "i < 3@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "SolrInstance repeater = null@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "repeaterJetty = createAndStartJetty(repeater)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "List<?> replicatedAtCount = (List<?>)((NamedList<?>)details.get(\"follower\")).get(\"indexReplicatedAtList\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertNotNull(\"Expected to see that the follower has replicated\" + i + \": \" + details.toString(),replicatedAtCount)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "NamedList<Object> details = getDetails(repeaterClient)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "JettySolrRunner repeaterJetty = null@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "repeaterClient = ReplicationTestHelper.createNewSolrClient(buildUrl(repeaterJetty.getLocalPort(),context) + \"/\" + DEFAULT_TEST_CORENAME)@@@54@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "pullFromTo(leaderJetty,followerJetty)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertNotNull(\"repeater has leader section\",details.get(\"leader\"))@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertNotNull(\"repeater has leader section\",details.get(\"leader\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertNotNull(i + \": \" + \"follower has follower section\",details.get(\"follower\"))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "index(leaderClient,\"id\",i,\"name\",\"name = \" + i)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(),\"repeater\",leaderJetty.getLocalPort())@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "{try {if (repeaterJetty != null) repeaterJetty.stop()}catch (Exception e) if (repeaterClient != null) repeaterClient.close()}@@@61@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertNotNull(\"repeater has follower section\",details.get(\"follower\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "int i = 0@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "SolrClient client = null@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertTrue(i + \": \" + \"follower has fetch error count: \" + timesFailed,timesFailed == null || ((Number)timesFailed).intValue() == 1)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "follower.setTestPort(leaderJetty.getLocalPort())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "leaderClient = createNewSolrClient(leaderJetty.getLocalPort())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertEquals(\"repeater isLeader?\",\"true\",details.get(\"isLeader\"))@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "clearIndexWithReplication()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "follower.copyConfigFile(CONF_DIR + \"solrconfig-follower.xml\",\"solrconfig.xml\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "3 != i@@@41@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30->5 [style = dotted, label="true"];
32->35 [style = bold, label=""];
27->38 [style = bold, label=""];
61->66 [style = bold, label=""];
17->12 [style = solid, label="followerClient"];
19->28 [style = solid, label="repeater"];
0->46 [style = bold, label=""];
41->40 [style = solid, label="i"];
27->33 [style = dotted, label="true"];
21->43 [style = bold, label=""];
52->40 [style = solid, label="leaderClient"];
41->2 [style = solid, label="i"];
41->5 [style = solid, label="i"];
41->27 [style = solid, label="i"];
2->27 [style = solid, label="i"];
46->12 [style = dotted, label="true"];
53->54 [style = bold, label=""];
11->9 [style = bold, label=""];
30->29 [style = bold, label=""];
1->23 [style = bold, label=""];
2->8 [style = solid, label="i"];
30->2 [style = dotted, label="true"];
41->43 [style = solid, label="i"];
23->52 [style = dashed, label="0"];
51->34 [style = solid, label="repeaterClient"];
62->53 [style = bold, label=""];
33->42 [style = bold, label=""];
0->46 [style = solid, label="replicatedAtCount"];
41->46 [style = solid, label="i"];
13->45 [style = bold, label=""];
46->0 [style = dotted, label="true"];
28->25 [style = bold, label=""];
25->66 [style = dashed, label="0"];
23->17 [style = bold, label=""];
60->65 [style = bold, label=""];
35->10 [style = bold, label=""];
30->43 [style = dotted, label="true"];
40->31 [style = bold, label=""];
49->48 [style = solid, label="followerClient"];
37->14 [style = solid, label="followerJetty"];
55->64 [style = bold, label=""];
16->40 [style = dotted, label="true"];
49->12 [style = solid, label="followerClient"];
31->14 [style = bold, label=""];
60->61 [style = solid, label="solrInstance"];
43->16 [style = bold, label=""];
16->40 [style = bold, label=""];
24->19 [style = bold, label=""];
42->46 [style = bold, label=""];
33->46 [style = solid, label="replicatedAtCount"];
25->36 [style = bold, label=""];
46->6 [style = bold, label=""];
4->65 [style = dashed, label="0"];
41->13 [style = solid, label="i"];
57->60 [style = bold, label=""];
27->8 [style = dotted, label="true"];
2->48 [style = solid, label="i"];
66->59 [style = solid, label="client"];
8->38 [style = bold, label=""];
41->30 [style = solid, label="i"];
19->60 [style = dashed, label="0"];
58->63 [style = bold, label=""];
30->29 [style = dotted, label="true"];
29->20 [style = bold, label=""];
41->30 [style = bold, label=""];
22->18 [style = bold, label=""];
63->62 [style = bold, label=""];
10->34 [style = bold, label=""];
52->39 [style = solid, label="leaderClient"];
66->58 [style = solid, label="client"];
27->48 [style = dotted, label="true"];
16->14 [style = dotted, label="true"];
48->33 [style = bold, label=""];
54->59 [style = bold, label=""];
41->8 [style = solid, label="i"];
39->41 [style = bold, label=""];
45->21 [style = bold, label=""];
65->61 [style = bold, label=""];
27->42 [style = dotted, label="true"];
2->45 [style = solid, label="i"];
41->20 [style = solid, label="i"];
64->57 [style = bold, label=""];
2->5 [style = solid, label="i"];
30->45 [style = dotted, label="true"];
41->16 [style = solid, label="i"];
37->47 [style = bold, label=""];
47->1 [style = bold, label=""];
2->43 [style = solid, label="i"];
9->22 [style = bold, label=""];
18->37 [style = bold, label=""];
42->46 [style = solid, label="tries"];
51->36 [style = solid, label="repeaterClient"];
1->52 [style = bold, label=""];
23->39 [style = solid, label="leaderClient"];
25->51 [style = dashed, label="0"];
26->8 [style = bold, label=""];
2->30 [style = solid, label="i"];
2->13 [style = solid, label="i"];
28->34 [style = solid, label="repeaterJetty"];
2->20 [style = solid, label="i"];
66->58 [style = bold, label=""];
3->44 [style = bold, label=""];
49->29 [style = solid, label="followerClient"];
0->26 [style = solid, label="replicatedAtCount"];
30->13 [style = dotted, label="true"];
51->36 [style = bold, label=""];
30->3 [style = bold, label=""];
27->46 [style = dotted, label="true"];
7->39 [style = bold, label=""];
30->20 [style = dotted, label="true"];
2->26 [style = solid, label="i"];
25->34 [style = solid, label="repeaterClient"];
49->7 [style = bold, label=""];
36->58 [style = dashed, label="0"];
30->38 [style = dotted, label="true"];
14->2 [style = bold, label=""];
44->24 [style = bold, label=""];
2->38 [style = solid, label="i"];
16->31 [style = dotted, label="true"];
41->48 [style = solid, label="i"];
41->26 [style = solid, label="i"];
28->61 [style = dashed, label="0"];
6->12 [style = bold, label=""];
21->43 [style = solid, label="timesFailed"];
50->9 [style = bold, label=""];
33->26 [style = solid, label="replicatedAtCount"];
52->49 [style = bold, label=""];
30->27 [style = dotted, label="true"];
27->26 [style = dotted, label="true"];
36->15 [style = bold, label=""];
2->46 [style = solid, label="i"];
41->38 [style = solid, label="i"];
16->2 [style = bold, label=""];
28->51 [style = bold, label=""];
23->40 [style = solid, label="leaderClient"];
29->20 [style = solid, label="details"];
12->0 [style = bold, label=""];
30->21 [style = dotted, label="true"];
17->48 [style = solid, label="followerClient"];
17->49 [style = dashed, label="0"];
4->28 [style = bold, label=""];
20->5 [style = bold, label=""];
17->7 [style = bold, label=""];
46->26 [style = bold, label=""];
41->45 [style = solid, label="i"];
30->16 [style = dotted, label="true"];
17->29 [style = solid, label="followerClient"];
27->48 [style = bold, label=""];
25->36 [style = solid, label="repeaterClient"];
19->4 [style = bold, label=""];
5->27 [style = bold, label=""];
2->30 [style = bold, label=""];
15->32 [style = bold, label=""];
38->13 [style = bold, label=""];
46->6 [style = dotted, label="true"];
2->16 [style = solid, label="i"];
2->40 [style = solid, label="i"];
61->59 [style = solid, label="instanceJetty"];
56->55 [style = bold, label=""];
}
