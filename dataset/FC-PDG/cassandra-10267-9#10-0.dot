digraph {
1 [style = filled, label = "long initialAllBatches = BatchlogManager.instance.countAllBatches()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(0L,result.one().getLong(\"count\"))@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "int j = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "BatchlogManager.store(Batch.createLocal(uuid,timestamp,mutations))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(initialAllBatches + 1,BatchlogManager.instance.countAllBatches())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "List<Mutation> mutations = new ArrayList<>(10)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "j++@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testAddBatch['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "j < 10@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertNotNull(result)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "UntypedResultSet result = executeInternal(query)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "long timestamp = (System.currentTimeMillis() - DatabaseDescriptor.getWriteRpcTimeout(MILLISECONDS) * 2) * 1000@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "TableMetadata cfm = Keyspace.open(KEYSPACE1).getColumnFamilyStore(CF_STANDARD5).metadata()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "BatchlogManager.remove(uuid)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "mutations.add(new RowUpdateBuilder(cfm,FBUtilities.timestampMicros(),ByteBufferUtil.bytes(j)).clustering(\"name\" + j).add(\"val\",\"val\" + j).build())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(initialAllBatches,BatchlogManager.instance.countAllBatches())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "String query = String.format(\"SELECT count(*) FROM %s.%s where id = %s\",SchemaConstants.SYSTEM_KEYSPACE_NAME,SystemKeyspace.BATCHES,uuid)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(1L,result.one().getLong(\"count\"))@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testRemoveBatch['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "UUID uuid = UUIDGen.getTimeUUID()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testAddBatch['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9->18 [style = bold, label=""];
14->17 [style = bold, label=""];
1->14 [style = solid, label="initialAllBatches"];
15->7 [style = solid, label="timestamp"];
10->3 [style = dotted, label="true"];
8->5 [style = bold, label=""];
10->12 [style = dotted, label="true"];
4->8 [style = solid, label="uuid"];
6->15 [style = bold, label=""];
1->19 [style = solid, label="initialAllBatches"];
17->19 [style = bold, label=""];
19->8 [style = bold, label=""];
15->4 [style = bold, label=""];
0->7 [style = solid, label="mutations"];
9->2 [style = bold, label=""];
2->18 [style = dashed, label="0"];
5->9 [style = bold, label=""];
1->6 [style = bold, label=""];
0->11 [style = bold, label=""];
20->1 [style = bold, label=""];
10->3 [style = bold, label=""];
11->12 [style = solid, label="j"];
7->14 [style = bold, label=""];
12->10 [style = bold, label=""];
10->7 [style = bold, label=""];
11->10 [style = bold, label=""];
16->1 [style = bold, label=""];
3->12 [style = bold, label=""];
5->9 [style = solid, label="result"];
14->8 [style = bold, label=""];
4->17 [style = solid, label="uuid"];
4->7 [style = solid, label="uuid"];
11->10 [style = solid, label="j"];
13->1 [style = bold, label=""];
12->10 [style = solid, label="j"];
8->5 [style = solid, label="query"];
4->0 [style = bold, label=""];
}
