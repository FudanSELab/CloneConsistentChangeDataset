digraph {
22 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(1).getDocCount())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "BytesRef encodedRange = rangeType.encodeRanges(Collections.singleton(range))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "doc.add(new SortedNumericDocValuesField(\"field\",NumericUtils.doubleToSortableLong(value)))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(10d,histogram.getBuckets().get(3).getKey())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(40d,histogram.getBuckets().get(4).getKey())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "fieldType.setName(\"field\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(2,histogram.getBuckets().get(0).getDocCount())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\").field(\"field\").interval(5)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.DOUBLE)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "w.addDocument(doc)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testDoubles['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "RangeType rangeType = RangeType.DOUBLE@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Document doc = new Document()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "IndexSearcher searcher = new IndexSearcher(reader)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "w.addDocument(doc)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(-5d,histogram.getBuckets().get(0).getKey())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(4).getDocCount())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(5d,histogram.getBuckets().get(2).getKey())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "InternalHistogram histogram = search(searcher,new MatchAllDocsQuery(),aggBuilder,rangeField(\"field\",rangeType))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(3).getDocCount())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(0d,histogram.getBuckets().get(1).getKey())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "doc.add(new BinaryDocValuesField(\"field\",encodedRange))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(2,histogram.getBuckets().get(2).getDocCount())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testDoubles['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(50d,histogram.getBuckets().get(3).getKey())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(45d,histogram.getBuckets().get(5).getKey())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(3,histogram.getBuckets().get(1).getDocCount())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(0).getDocCount())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testDoubles['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "assertEquals(-10d,histogram.getBuckets().get(0).getKey())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertTrue(AggregationInspectionHelper.hasValue(histogram))@@@27@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "fieldType.setName(\"field\")@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertEquals(4,histogram.getBuckets().size())@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "MappedFieldType fieldType = new RangeFieldMapper.Builder(\"field\",rangeType).fieldType()@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(5).getDocCount())@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "InternalHistogram histogram = search(searcher,new MatchAllDocsQuery(),aggBuilder,fieldType)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(6,histogram.getBuckets().size())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->8 [style = bold, label=""];
6->3 [style = bold, label=""];
11->20 [style = bold, label=""];
20->36 [style = bold, label=""];
12->24 [style = solid, label="rangeType"];
14->26 [style = solid, label="doc"];
9->10 [style = dashed, label="0"];
35->29 [style = bold, label=""];
9->0 [style = bold, label=""];
27->21 [style = solid, label="aggBuilder"];
14->18 [style = solid, label="doc"];
21->1 [style = solid, label="histogram"];
19->20 [style = dashed, label="0"];
10->4 [style = solid, label="aggBuilder"];
16->7 [style = bold, label=""];
26->14 [style = bold, label=""];
22->31 [style = bold, label=""];
21->24 [style = bold, label=""];
0->21 [style = bold, label=""];
10->21 [style = bold, label=""];
16->4 [style = dashed, label="0"];
22->5 [style = bold, label=""];
32->26 [style = bold, label=""];
31->11 [style = bold, label=""];
36->1 [style = bold, label=""];
2->12 [style = bold, label=""];
28->14 [style = bold, label=""];
1->17 [style = bold, label=""];
15->22 [style = bold, label=""];
3->18 [style = bold, label=""];
15->35 [style = dashed, label="0"];
34->21 [style = solid, label="searcher"];
24->16 [style = bold, label=""];
19->1 [style = bold, label=""];
26->27 [style = bold, label=""];
30->35 [style = bold, label=""];
4->30 [style = bold, label=""];
18->10 [style = bold, label=""];
9->4 [style = solid, label="fieldType"];
25->12 [style = bold, label=""];
6->3 [style = solid, label="encodedRange"];
27->10 [style = bold, label=""];
7->30 [style = dashed, label="0"];
10->21 [style = solid, label="fieldType"];
12->14 [style = bold, label=""];
21->4 [style = solid, label="searcher"];
13->23 [style = bold, label=""];
10->24 [style = solid, label="aggBuilder"];
7->15 [style = bold, label=""];
10->9 [style = bold, label=""];
5->11 [style = bold, label=""];
10->33 [style = bold, label=""];
5->22 [style = dashed, label="0"];
29->22 [style = bold, label=""];
4->24 [style = dashed, label="0"];
20->19 [style = bold, label=""];
14->32 [style = bold, label=""];
33->34 [style = bold, label=""];
18->14 [style = bold, label=""];
14->6 [style = bold, label=""];
34->21 [style = bold, label=""];
4->16 [style = bold, label=""];
8->13 [style = bold, label=""];
21->4 [style = bold, label=""];
21->24 [style = solid, label="searcher"];
}
