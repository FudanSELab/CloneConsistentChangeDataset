digraph {
7 [style = filled, label = "JoinTestHelper.verifyCursors(new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),ImmutableList.of(factToCountryOnIsoCode(JoinType.LEFT))).makeCursors(new SelectorFilter(\"page\",\"this matches nothing\"),Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryIsoCode\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryName\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryNumber\"),ImmutableList.of())@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "test_makeCursors_factToCountryInnerUsingCountryNumber['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "test_makeCursors_factToCountryInnerUsingCountryNumber['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "JoinFilterPreAnalysis preAnalysis = JoinFilterAnalyzer.computeJoinFilterPreAnalysis(joinableClauses,VirtualColumns.EMPTY,filter,true,true,true,QueryContexts.DEFAULT_ENABLE_JOIN_FILTER_REWRITE_MAX_SIZE_KEY)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "JoinTestHelper.verifyCursors(new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,preAnalysis).makeCursors(filter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryIsoCode\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryName\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryNumber\"),NullHandling.sqlCompatible()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb59f,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb5a7,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb5af,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb5b7,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb5bf,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb5c7,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb5cf,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb5d7,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb5df,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb5e7,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb5ef,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb5f7): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb602,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb60a,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb612,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb61a,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb622,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb62a,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb632,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb63a,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb642,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb64a,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb652,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb65a,new Object((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb662))@@@6@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "JoinTestHelper.verifyCursors(new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),ImmutableList.of(factToCountryOnNumber(JoinType.INNER))).makeCursors(new SelectorDimFilter(\"channel\",\"#en.wikipedia\",null).toFilter(),Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryIsoCode\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryName\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryNumber\"),NullHandling.sqlCompatible()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb473,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb47b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb483,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb48b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb493,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb49b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb4a3,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb4ab,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb4b3,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb4bb,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb4c3,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb4cb): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb4d6,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb4de,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb4e6,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb4ee,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb4f6,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb4fe,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb506,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb50e,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb516,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb51e,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb526,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb52e,new Object((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb536))@@@3@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Filter filter = new SelectorDimFilter(\"channel\",\"#en.wikipedia\",null).toFilter()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "List<JoinableClause> joinableClauses = ImmutableList.of(factToCountryOnNumber(JoinType.INNER))@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "test_makeCursors_factToCountryLeft_filterExcludesAllLeftRows['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4->5 [style = solid, label="joinableClauses"];
8->7 [style = bold, label=""];
0->7 [style = dashed, label="0"];
2->6 [style = solid, label="filter"];
3->4 [style = bold, label=""];
5->6 [style = bold, label=""];
4->2 [style = bold, label=""];
2->5 [style = bold, label=""];
1->0 [style = bold, label=""];
2->5 [style = solid, label="filter"];
}
