digraph {
9 [style = filled, label = "Supplier<Transport> custom = null@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testRegisterTransport['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "Settings settings = Settings.builder().put(NetworkModule.HTTP_DEFAULT_TYPE_SETTING.getKey(),\"default_custom\").put(NetworkModule.TRANSPORT_DEFAULT_TYPE_SETTING.getKey(),\"default_custom\").build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Supplier<HttpServerTransport> custom = null@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertSame(custom,module.getTransportSupplier())@@@12@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertSame(custom,module.getTransportSupplier())@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "NetworkModule module = newNetworkModule(settings,false,new NetworkPlugin(){@Override public Map<String,Supplier<Transport>> getTransports(Settings settings,ThreadPool threadPool,PageCacheRecycler pageCacheRecycler,CircuitBreakerService circuitBreakerService,NamedWriteableRegistry namedWriteableRegistry,NetworkService networkService){return Collections.singletonMap(\"default_custom\",customTransport)}@Override public Map<String,Supplier<HttpServerTransport>> getHttpTransports(Settings settings,ThreadPool threadPool,BigArrays bigArrays,PageCacheRecycler pageCacheRecycler,CircuitBreakerService circuitBreakerService,NamedXContentRegistry xContentRegistry,NetworkService networkService,HttpServerTransport.Dispatcher requestDispatcher){Map<String,Supplier<HttpServerTransport>> supplierMap = new HashMap<>()supplierMap.put(\"custom\",custom)supplierMap.put(\"default_custom\",def)return supplierMap}})@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testDefaultKeys['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Settings settings = Settings.builder().put(NetworkModule.TRANSPORT_TYPE_KEY,\"custom\").build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(module.isTransportClient())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assertSame(def,module.getHttpServerTransportSupplier())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertSame(customTransport,module.getTransportSupplier())@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "NetworkPlugin plugin = new NetworkPlugin(){@Override public Map<String,Supplier<Transport>> getTransports(Settings settings,ThreadPool threadPool,PageCacheRecycler pageCacheRecycler,CircuitBreakerService circuitBreakerService,NamedWriteableRegistry namedWriteableRegistry,NetworkService networkService){return Collections.singletonMap(\"custom\",custom)}}@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testRegisterTransport['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertSame(custom,module.getTransportSupplier())@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertFalse(module.isTransportClient())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "NetworkModule module = newNetworkModule(settings,false,plugin)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "Supplier<Transport> customTransport = null@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Supplier<HttpServerTransport> def = null@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "NetworkModule module = newNetworkModule(settings,plugin)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "module = newNetworkModule(settings,true,plugin)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4->10 [style = bold, label=""];
9->7 [style = solid, label="custom"];
20->19 [style = solid, label="customTransport"];
20->17 [style = bold, label=""];
6->0 [style = solid, label="settings"];
15->16 [style = solid, label="def"];
9->4 [style = bold, label=""];
11->6 [style = bold, label=""];
8->3 [style = bold, label=""];
15->17 [style = solid, label="def"];
9->8 [style = solid, label="custom"];
4->2 [style = solid, label="plugin"];
4->10 [style = solid, label="plugin"];
16->19 [style = bold, label=""];
6->2 [style = solid, label="settings"];
20->17 [style = solid, label="customTransport"];
0->10 [style = dashed, label="0"];
4->0 [style = bold, label=""];
18->17 [style = solid, label="settings"];
6->18 [style = dashed, label="0"];
1->6 [style = bold, label=""];
9->4 [style = solid, label="custom"];
10->12 [style = bold, label=""];
7->2 [style = bold, label=""];
15->20 [style = bold, label=""];
4->0 [style = solid, label="plugin"];
9->13 [style = dashed, label="0"];
18->13 [style = bold, label=""];
5->7 [style = bold, label=""];
14->18 [style = bold, label=""];
13->15 [style = bold, label=""];
6->9 [style = bold, label=""];
13->17 [style = solid, label="custom"];
17->16 [style = bold, label=""];
2->8 [style = bold, label=""];
0->5 [style = bold, label=""];
6->10 [style = solid, label="settings"];
9->12 [style = solid, label="custom"];
}
