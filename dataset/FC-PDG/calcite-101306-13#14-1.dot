digraph {
4 [style = filled, label = "testLexOracleAsJava['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "CalciteAssert.that().with(Lex.ORACLE).with(CalciteConnectionProperty.QUOTING,Quoting.BACK_TICK).with(CalciteConnectionProperty.UNQUOTED_CASING,Casing.UNCHANGED).with(CalciteConnectionProperty.QUOTED_CASING,Casing.UNCHANGED).with(CalciteConnectionProperty.CASE_SENSITIVE,true).doWithConnection(null)@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testLexJava['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "CalciteAssert.that().with(Lex.JAVA).doWithConnection(null)@@@3@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testLexJava['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2->0 [style = bold, label=""];
0->3 [style = dashed, label="0"];
1->0 [style = bold, label=""];
4->3 [style = bold, label=""];
}
