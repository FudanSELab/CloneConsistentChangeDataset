digraph {
34 [style = filled, label = "assertEquals(7,hiveClient.scanTablePartitions(hiveSyncConfig.tableName).size(),\"Table partitions should match the number of partitions we wrote\")@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "HiveSyncTool tool = new HiveSyncTool(HiveTestUtil.hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "HiveTestUtil.hiveSyncConfig.useJdbc = useJdbc@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String commitTime1 = \"100\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "boolean useJdbc@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertTrue(hiveClient.doesTableExist(hiveSyncConfig.tableName),\"Table \" + hiveSyncConfig.tableName + \" should exist after sync completes\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "List<PartitionEvent> partitionEvents = hiveClient.getPartitionEvents(hivePartitions,writtenPartitionsSince)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(PartitionEventType.ADD,partitionEvents.iterator().next().eventType,\"The one partition event must of type ADD\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "List<Partition> hivePartitions = hiveClient.scanTablePartitions(hiveSyncConfig.tableName)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "tool = new HiveSyncTool(hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(commitTime2,hiveClient.getLastCommitTimeSynced(HiveTestUtil.hiveSyncConfig.tableName).get(),\"The last commit that was sycned should be 101\")@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
58 [style = filled, label = "hiveSyncConfig.partitionFields = Arrays.asList(\"year\",\"month\",\"day\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(commitTime2,hiveClient.getLastCommitTimeSynced(HiveTestUtil.hiveSyncConfig.tableName).get(),\"The last commit that was synced should be 101\")@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertEquals(1,writtenPartitionsSince.size(),\"We should have one partition written after 100 commit\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "HiveTestUtil.getCreatedTablesSet().add(hiveSyncConfig.databaseName + \".\" + hiveSyncConfig.tableName)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertTrue(hiveClient.doesTableExist(hiveSyncConfig.tableName),\"Table \" + hiveSyncConfig.tableName + \" should exist after sync completes\")@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "HiveTestUtil.addCOWPartition(\"2010/01/02\",true,true,commitTime2)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "String instantTime = \"100\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "String commitTime2 = \"101\"@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "List<String> writtenPartitionsSince = hiveClient.getPartitionsWrittenToSince(Option.of(instantTime))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "hiveClient = new HoodieHiveClient(hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testSyncIncremental['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "hiveSyncConfig.partitionValueExtractorClass = .getCanonicalName()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(1,writtenPartitionsSince.size(),\"We should have one partition written after 100 commit\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "HiveTestUtil.createCOWTable(commitTime1,5,true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(5,hiveClient.scanTablePartitions(hiveSyncConfig.tableName).size(),\"Table partitions should match the number of partitions we wrote\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(5,hiveClient.scanTablePartitions(HiveTestUtil.hiveSyncConfig.tableName).size(),\"Table partitions should match the number of partitions we wrote\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(instantTime,hiveClient.getLastCommitTimeSynced(hiveSyncConfig.tableName).get(),\"The last commit that was sycned should be updated in the TBLPROPERTIES\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "HoodieHiveClient hiveClient = new HoodieHiveClient(HiveTestUtil.hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(6,hiveClient.scanTablePartitions(hiveSyncConfig.tableName).size(),\"Table partitions should match the number of partitions we wrote\")@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "HiveTestUtil.getCreatedTablesSet().add(hiveSyncConfig.databaseName + \".\" + hiveSyncConfig.tableName)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(commitTime3,hiveClient.getLastCommitTimeSynced(hiveSyncConfig.tableName).get(),\"The last commit that was sycned should be updated in the TBLPROPERTIES\")@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertEquals(1,partitionEvents.size(),\"There should be only one paritition event\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "hiveClient = new HoodieHiveClient(hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "tool.syncHoodieTable()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "assertEquals(hiveClient.getTableSchema(hiveSyncConfig.tableName).size(),hiveClient.getDataSchema().getColumns().size() + 3,\"Hive Schema should match the table schema + partition fields\")@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "List<Partition> hivePartitions = hiveClient.scanTablePartitions(HiveTestUtil.hiveSyncConfig.tableName)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "HiveTestUtil.createCOWTable(instantTime,5,true)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "hiveSyncConfig.tableName = \"multi_part_key\"@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "DateTime dateTime = DateTime.now().plusDays(6)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(hiveClient.getTableSchema(hiveSyncConfig.tableName).size(),hiveClient.getDataSchema().getColumns().size() + 3,\"Hive Schema should match the table schema + partition fields\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(1,partitionEvents.size(),\"There should be only one partition event\")@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "tool.syncHoodieTable()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "String commitTime3 = \"102\"@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "List<PartitionEvent> partitionEvents = hiveClient.getPartitionEvents(hivePartitions,writtenPartitionsSince)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "HiveTestUtil.addCOWPartitions(1,true,true,dateTime,commitTime2)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(PartitionEventType.ADD,partitionEvents.iterator().next().eventType,\"The one partition event must of type ADD\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "tool.syncHoodieTable()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "HiveTestUtil.addCOWPartition(\"2010/02/01\",true,true,commitTime3)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "HiveSyncConfig hiveSyncConfig = HiveSyncConfig.copy(HiveTestUtil.hiveSyncConfig)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testSyncIncremental['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "tool = new HiveSyncTool(HiveTestUtil.hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(commitTime2,hiveClient.getLastCommitTimeSynced(hiveSyncConfig.tableName).get(),\"The last commit that was sycned should be 101\")@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertFalse(hiveClient.doesTableExist(hiveSyncConfig.tableName),\"Table \" + hiveSyncConfig.tableName + \" should not exist initially\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "testMultiPartitionKeySync['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "List<String> writtenPartitionsSince = hiveClient.getPartitionsWrittenToSince(Option.of(commitTime1))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "HiveSyncTool tool = new HiveSyncTool(hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "String commitTime2 = \"101\"@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "HoodieHiveClient hiveClient = new HoodieHiveClient(hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "tool.syncHoodieTable()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(commitTime1,hiveClient.getLastCommitTimeSynced(HiveTestUtil.hiveSyncConfig.tableName).get(),\"The last commit that was synced should be updated in the TBLPROPERTIES\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "tool = new HiveSyncTool(hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(1,hiveClient.getPartitionsWrittenToSince(Option.of(commitTime2)).size())@@@42@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "boolean useJdbc@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(commitTime1,hiveClient.getLastCommitTimeSynced(HiveTestUtil.hiveSyncConfig.tableName).get(),\"The last commit that was sycned should be updated in the TBLPROPERTIES\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "tool.syncHoodieTable()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
64->36 [style = bold, label=""];
58->50 [style = bold, label=""];
12->35 [style = dashed, label="0"];
64->57 [style = solid, label="hiveSyncConfig"];
20->0 [style = bold, label=""];
8->32 [style = dashed, label="0"];
21->22 [style = solid, label="dateTime"];
46->43 [style = solid, label="tableName"];
48->39 [style = bold, label=""];
7->22 [style = solid, label="commitTime2"];
22->8 [style = bold, label=""];
52->60 [style = bold, label=""];
29->2 [style = bold, label=""];
53->65 [style = bold, label=""];
24->21 [style = bold, label=""];
64->55 [style = solid, label="hiveSyncConfig"];
60->63 [style = bold, label=""];
54->33 [style = bold, label=""];
33->56 [style = bold, label=""];
16->42 [style = bold, label=""];
23->15 [style = dotted, label="true"];
9->19 [style = solid, label="hivePartitions"];
31->20 [style = bold, label=""];
49->40 [style = bold, label=""];
33->56 [style = solid, label="commitTime3"];
46->50 [style = solid, label="tableName"];
20->61 [style = bold, label=""];
56->43 [style = bold, label=""];
42->62 [style = solid, label="hivePartitions"];
45->41 [style = bold, label=""];
5->10 [style = bold, label=""];
16->37 [style = dashed, label="0"];
27->0 [style = bold, label=""];
46->49 [style = solid, label="tableName"];
8->18 [style = bold, label=""];
19->20 [style = bold, label=""];
3->24 [style = dashed, label="0"];
12->11 [style = bold, label=""];
13->12 [style = solid, label="commitTime1"];
13->18 [style = solid, label="commitTime1"];
16->17 [style = bold, label=""];
50->28 [style = bold, label=""];
36->46 [style = bold, label=""];
13->12 [style = bold, label=""];
18->4 [style = bold, label=""];
61->32 [style = bold, label=""];
38->47 [style = solid, label="instantTime"];
63->37 [style = bold, label=""];
21->7 [style = bold, label=""];
59->55 [style = bold, label=""];
38->35 [style = bold, label=""];
28->59 [style = bold, label=""];
14->6 [style = bold, label=""];
47->16 [style = bold, label=""];
64->28 [style = solid, label="hiveSyncConfig"];
4->9 [style = bold, label=""];
18->19 [style = solid, label="writtenPartitionsSince"];
20->54 [style = solid, label="commitTime2"];
62->51 [style = bold, label=""];
9->42 [style = dashed, label="0"];
46->42 [style = solid, label="tableName"];
11->64 [style = dashed, label="0"];
7->25 [style = solid, label="commitTime2"];
38->31 [style = solid, label="instantTime"];
6->24 [style = bold, label=""];
13->38 [style = dashed, label="0"];
51->52 [style = bold, label=""];
39->53 [style = bold, label=""];
5->60 [style = dashed, label="0"];
17->25 [style = dashed, label="0"];
20->61 [style = solid, label="commitTime2"];
7->22 [style = bold, label=""];
38->35 [style = solid, label="instantTime"];
46->59 [style = solid, label="tableName"];
10->16 [style = bold, label=""];
30->31 [style = bold, label=""];
26->15 [style = dotted, label="true"];
9->19 [style = bold, label=""];
3->21 [style = bold, label=""];
40->30 [style = bold, label=""];
23->2 [style = bold, label=""];
42->62 [style = bold, label=""];
22->61 [style = dashed, label="0"];
0->5 [style = bold, label=""];
7->17 [style = solid, label="commitTime2"];
64->48 [style = solid, label="hiveSyncConfig"];
18->47 [style = dashed, label="0"];
44->2 [style = solid, label="useJdbc"];
43->57 [style = bold, label=""];
11->1 [style = bold, label=""];
65->34 [style = bold, label=""];
20->27 [style = dashed, label="0"];
34->45 [style = bold, label=""];
29->44 [style = dotted, label="true"];
16->25 [style = bold, label=""];
15->44 [style = dashed, label="0"];
46->58 [style = bold, label=""];
33->45 [style = solid, label="commitTime3"];
15->2 [style = solid, label="useJdbc"];
37->54 [style = bold, label=""];
2->13 [style = bold, label=""];
57->48 [style = bold, label=""];
2->38 [style = bold, label=""];
26->2 [style = bold, label=""];
32->47 [style = bold, label=""];
64->32 [style = solid, label="hiveSyncConfig"];
13->3 [style = solid, label="commitTime1"];
19->27 [style = bold, label=""];
64->60 [style = solid, label="hiveSyncConfig"];
47->62 [style = solid, label="writtenPartitionsSince"];
8->49 [style = bold, label=""];
1->14 [style = bold, label=""];
35->64 [style = bold, label=""];
13->24 [style = solid, label="commitTime1"];
55->8 [style = bold, label=""];
17->54 [style = dashed, label="0"];
46->53 [style = solid, label="tableName"];
}
