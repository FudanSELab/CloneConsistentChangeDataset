digraph {
61 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withOffset(s3Offset).withSegmentName(segmentNameStr).withReason(reason)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "segmentCompletionMgr._seconds = startTime@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "segmentCompletionMgr._seconds + leaseTimeSec <= startTime + SegmentCompletionManager.getMaxCommitTimeForAllSegmentsSeconds()@@@35@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "Assert.assertEquals(response.getStatus(),ControllerResponseStatus.PROCESSED)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testLeaseTooLong['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.COMMIT)@@@29@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "Assert.assertFalse(fsmMap.containsKey(segmentNameStr))@@@47@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "segmentManager._stoppedSegmentName = null@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final long startTime = 5@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "testLeaseTooLong['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withOffset(s1Offset).withSegmentName(segmentNameStr)@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "segmentCompletionMgr._secconds = 5@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.CATCH_UP)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "segmentManager._stoppedInstance = null@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "segmentCompletionMgr._secconds = startTime@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "SegmentCompletionProtocol.Response response@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "response = segmentCompletionMgr.segmentStoppedConsuming(params)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr).withExtraTimeSec(leaseTimeSec)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final int leaseTimeSec = 20@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Request.Params params@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.KEEP)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
70 [style = filled, label = "testStoppedConsumeDuringCompletion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.COMMIT_CONTINUE)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.CATCH_UP)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "response = segmentCompletionMgr.extendBuildTime(params)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "Assert.assertEquals(new LLCSegmentName(segmentNameStr),segmentManager._stoppedSegmentName)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.COMMIT_SUCCESS)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "response = segmentCompletionMgr.segmentCommitStart(params)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr).withExtraTimeSec(20)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "Assert.assertEquals(response.getOffset(),s2Offset)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "response = segmentCompletionMgr.segmentCommitEnd(params,true,false,CommittingSegmentDescriptor.fromSegmentCompletionReqParams(params))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "response = segmentCompletionMgr.extendBuildTime(params)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr).withExtraTimeSec(leaseTimeSec)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.PROCESSED)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Assert.assertEquals(response.getStatus(),ControllerResponseStatus.FAILED)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "segmentCompletionMgr._secconds += leaseTimeSec@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withOffset(s3Offset).withSegmentName(segmentNameStr)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(response.getStatus(),ControllerResponseStatus.PROCESSED)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "Assert.assertFalse(fsmMap.containsKey(segmentNameStr))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertTrue((fsmMap.containsKey(segmentNameStr)))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withOffset(s1Offset).withSegmentName(segmentNameStr)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "response = segmentCompletionMgr.extendBuildTime(params)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "segmentCompletionMgr._seconds = startTime + commitTimeSec - 1@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Assert.assertFalse((fsmMap.containsKey(segmentNameStr)))@@@45@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "segmentCompletionMgr._seconds += leaseTimeSec@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
69 [style = filled, label = "final String reason = \"IAmLazy\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "segmentCompletionMgr._secconds += 5@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "segmentCompletionMgr._secconds + leaseTimeSec <= startTime + SegmentCompletionManager.getMaxCommitTimeForAllSegmentsSeconds()@@@35@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "Assert.assertEquals(s3,segmentManager._stoppedInstance)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "Assert.assertTrue((fsmMap.containsKey(segmentNameStr)))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withOffset(s1Offset).withSegmentName(segmentNameStr)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22->73 [style = dashed, label="0"];
25->56 [style = dashed, label="0"];
6->34 [style = solid, label="params"];
14->25 [style = bold, label=""];
45->44 [style = solid, label="_seconds"];
20->33 [style = solid, label="commitTimeSec"];
13->27 [style = dotted, label="true"];
46->2 [style = bold, label=""];
24->8 [style = solid, label="params"];
46->44 [style = solid, label="_seconds"];
1->20 [style = bold, label=""];
4->75 [style = dashed, label="0"];
13->5 [style = dotted, label="true"];
2->4 [style = solid, label="params"];
23->39 [style = solid, label="leaseTimeSec"];
68->58 [style = solid, label="params"];
30->18 [style = bold, label=""];
27->57 [style = dashed, label="0"];
56->54 [style = bold, label=""];
38->72 [style = bold, label=""];
74->67 [style = bold, label=""];
23->13 [style = bold, label=""];
7->16 [style = bold, label=""];
50->12 [style = bold, label=""];
10->43 [style = solid, label="startTime"];
23->13 [style = solid, label="leaseTimeSec"];
39->45 [style = dashed, label="0"];
53->75 [style = bold, label=""];
8->11 [style = bold, label=""];
48->24 [style = bold, label=""];
70->12 [style = bold, label=""];
41->64 [style = dashed, label="0"];
23->44 [style = bold, label=""];
13->39 [style = dotted, label="true"];
61->74 [style = bold, label=""];
31->69 [style = bold, label=""];
11->51 [style = bold, label=""];
75->59 [style = bold, label=""];
21->0 [style = bold, label=""];
66->78 [style = bold, label=""];
10->69 [style = dashed, label="0"];
17->41 [style = bold, label=""];
26->1 [style = bold, label=""];
43->32 [style = bold, label=""];
57->60 [style = bold, label=""];
41->49 [style = bold, label=""];
2->4 [style = bold, label=""];
44->5 [style = dotted, label="true"];
55->76 [style = bold, label=""];
71->61 [style = bold, label=""];
13->44 [style = dashed, label="0"];
51->14 [style = bold, label=""];
13->22 [style = dotted, label="true"];
14->25 [style = solid, label="params"];
13->29 [style = dotted, label="true"];
21->0 [style = solid, label="params"];
10->3 [style = solid, label="startTime"];
23->44 [style = solid, label="leaseTimeSec"];
38->51 [style = dashed, label="0"];
64->66 [style = bold, label=""];
13->5 [style = bold, label=""];
10->44 [style = solid, label="startTime"];
65->55 [style = bold, label=""];
19->46 [style = bold, label=""];
24->8 [style = bold, label=""];
27->29 [style = bold, label=""];
20->19 [style = bold, label=""];
10->33 [style = solid, label="startTime"];
14->72 [style = dashed, label="0"];
12->31 [style = bold, label=""];
44->29 [style = dotted, label="true"];
59->65 [style = solid, label="params"];
36->49 [style = dashed, label="0"];
44->45 [style = dotted, label="true"];
19->33 [style = bold, label=""];
54->64 [style = bold, label=""];
20->19 [style = solid, label="commitTimeSec"];
73->63 [style = bold, label=""];
18->24 [style = bold, label=""];
72->56 [style = solid, label="params"];
6->34 [style = bold, label=""];
10->43 [style = bold, label=""];
22->45 [style = bold, label=""];
23->6 [style = solid, label="leaseTimeSec"];
35->9 [style = bold, label=""];
39->13 [style = bold, label=""];
69->72 [style = solid, label="reason"];
59->65 [style = bold, label=""];
5->27 [style = solid, label="params"];
33->13 [style = solid, label="_secconds"];
63->71 [style = bold, label=""];
16->23 [style = bold, label=""];
62->35 [style = bold, label=""];
28->12 [style = bold, label=""];
32->40 [style = solid, label="params"];
18->48 [style = dashed, label="0"];
13->76 [style = dashed, label="0"];
25->17 [style = bold, label=""];
45->44 [style = bold, label=""];
39->13 [style = solid, label="_secconds"];
4->7 [style = bold, label=""];
39->63 [style = dashed, label="0"];
77->57 [style = solid, label="params"];
33->79 [style = bold, label=""];
41->36 [style = bold, label=""];
72->56 [style = bold, label=""];
58->53 [style = bold, label=""];
44->22 [style = dotted, label="true"];
31->10 [style = bold, label=""];
23->5 [style = solid, label="leaseTimeSec"];
5->77 [style = dashed, label="0"];
32->40 [style = bold, label=""];
10->13 [style = solid, label="startTime"];
22->39 [style = bold, label=""];
40->30 [style = bold, label=""];
10->46 [style = solid, label="startTime"];
13->6 [style = bold, label=""];
78->62 [style = bold, label=""];
79->68 [style = bold, label=""];
33->58 [style = dashed, label="0"];
15->26 [style = solid, label="params"];
44->5 [style = bold, label=""];
33->2 [style = bold, label=""];
37->42 [style = bold, label=""];
20->46 [style = solid, label="commitTimeSec"];
3->52 [style = dashed, label="0"];
44->6 [style = bold, label=""];
11->38 [style = bold, label=""];
47->15 [style = bold, label=""];
77->57 [style = bold, label=""];
71->61 [style = solid, label="params"];
76->77 [style = bold, label=""];
10->3 [style = bold, label=""];
33->46 [style = dashed, label="0"];
49->21 [style = bold, label=""];
38->14 [style = bold, label=""];
15->26 [style = bold, label=""];
9->47 [style = dashed, label="0"];
36->21 [style = bold, label=""];
34->37 [style = bold, label=""];
52->32 [style = bold, label=""];
9->15 [style = bold, label=""];
60->73 [style = bold, label=""];
3->43 [style = dashed, label="0"];
35->47 [style = bold, label=""];
0->35 [style = bold, label=""];
5->27 [style = bold, label=""];
29->22 [style = bold, label=""];
30->48 [style = bold, label=""];
69->52 [style = bold, label=""];
3->32 [style = bold, label=""];
29->60 [style = dashed, label="0"];
20->19 [style = solid, label="params"];
9->15 [style = solid, label="params"];
44->27 [style = dotted, label="true"];
23->45 [style = solid, label="leaseTimeSec"];
17->54 [style = dashed, label="0"];
68->58 [style = bold, label=""];
}
