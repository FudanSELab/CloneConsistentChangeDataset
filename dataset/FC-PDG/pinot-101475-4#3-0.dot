digraph {
51 [style = filled, label = "testCommitterFailure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "segmentCompletionMgr._secconds += 5@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Request.Params params@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.COMMIT)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.COMMIT)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withOffset(s1Offset).withSegmentName(segmentNameStr)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withOffset(s3Offset).withSegmentName(segmentNameStr)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "segmentCompletionMgr._secconds += SegmentCompletionProtocol.getMaxSegmentCommitTimeMs() * SegmentCompletionProtocol.MAX_HOLD_TIME_MS / 1000@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "Assert.assertEquals(response.getStatus(),ControllerResponseStatus.COMMIT)@@@35@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withOffset(s1Offset).withSegmentName(segmentNameStr)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "segmentCompletionMgr._seconds += 5@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "segmentCompletionMgr._seconds += SegmentCompletionProtocol.getMaxSegmentCommitTimeMs() * SegmentCompletionProtocol.MAX_HOLD_TIME_MS / 1000@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "Assert.assertEquals(response.getOffset(),s2Offset)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "segmentCompletionMgr._seconds += SegmentCompletionProtocol.MAX_HOLD_TIME_MS / 1000@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.CATCH_UP)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertTrue(fsmMap.containsKey(segmentNameStr))@@@44@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final int startTimeSecs = 5@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "segmentCompletionMgr._secconds += 3600@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "testDeadServers['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "segmentCompletionMgr._secconds = startTimeSecs@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertFalse(fsmMap.containsKey(segmentNameStr))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "segmentCompletionMgr._secconds += 4@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "segmentCompletionMgr._secconds += SegmentCompletionProtocol.MAX_HOLD_TIME_MS / 1000@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(response.getStatus(),ControllerResponseStatus.HOLD)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "SegmentCompletionProtocol.Response response@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "segmentCompletionMgr._seconds = startTimeSecs@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "Assert.assertTrue(fsmMap.containsKey(segmentNameStr))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "testCommitterFailure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.CATCH_UP)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47->9 [style = bold, label=""];
7->62 [style = bold, label=""];
61->56 [style = bold, label=""];
20->9 [style = bold, label=""];
10->50 [style = dashed, label="0"];
22->37 [style = bold, label=""];
42->36 [style = solid, label="params"];
53->58 [style = bold, label=""];
10->17 [style = bold, label=""];
62->55 [style = bold, label=""];
40->38 [style = bold, label=""];
45->30 [style = bold, label=""];
59->61 [style = bold, label=""];
27->15 [style = bold, label=""];
25->44 [style = bold, label=""];
43->40 [style = bold, label=""];
31->52 [style = dashed, label="0"];
6->11 [style = bold, label=""];
39->0 [style = solid, label="startTimeSecs"];
32->43 [style = dashed, label="0"];
35->45 [style = bold, label=""];
30->14 [style = bold, label=""];
13->46 [style = bold, label=""];
40->38 [style = solid, label="params"];
20->47 [style = dashed, label="0"];
33->7 [style = bold, label=""];
36->6 [style = bold, label=""];
62->55 [style = solid, label="params"];
28->18 [style = bold, label=""];
8->23 [style = bold, label=""];
5->39 [style = bold, label=""];
57->60 [style = bold, label=""];
6->49 [style = bold, label=""];
8->46 [style = dashed, label="0"];
52->19 [style = bold, label=""];
11->49 [style = dashed, label="0"];
25->24 [style = bold, label=""];
23->26 [style = solid, label="params"];
48->16 [style = bold, label=""];
51->18 [style = bold, label=""];
17->29 [style = solid, label="params"];
9->1 [style = bold, label=""];
39->48 [style = solid, label="startTimeSecs"];
0->16 [style = bold, label=""];
44->42 [style = bold, label=""];
19->4 [style = solid, label="params"];
21->27 [style = bold, label=""];
37->10 [style = bold, label=""];
58->14 [style = solid, label="params"];
58->14 [style = bold, label=""];
11->21 [style = bold, label=""];
50->17 [style = bold, label=""];
35->2 [style = bold, label=""];
12->32 [style = bold, label=""];
24->44 [style = dashed, label="0"];
7->20 [style = bold, label=""];
15->3 [style = bold, label=""];
1->57 [style = bold, label=""];
2->45 [style = dashed, label="0"];
32->40 [style = bold, label=""];
38->34 [style = bold, label=""];
41->31 [style = bold, label=""];
14->13 [style = bold, label=""];
12->43 [style = bold, label=""];
1->25 [style = bold, label=""];
46->23 [style = bold, label=""];
31->19 [style = bold, label=""];
35->53 [style = bold, label=""];
24->42 [style = bold, label=""];
25->1 [style = dashed, label="0"];
4->35 [style = bold, label=""];
39->48 [style = bold, label=""];
7->47 [style = bold, label=""];
23->26 [style = bold, label=""];
34->41 [style = bold, label=""];
21->27 [style = solid, label="params"];
42->36 [style = bold, label=""];
60->59 [style = bold, label=""];
16->22 [style = bold, label=""];
49->21 [style = bold, label=""];
14->33 [style = bold, label=""];
16->22 [style = solid, label="params"];
41->52 [style = bold, label=""];
9->1 [style = solid, label="params"];
2->53 [style = dashed, label="0"];
0->48 [style = dashed, label="0"];
29->12 [style = bold, label=""];
39->0 [style = bold, label=""];
54->18 [style = bold, label=""];
18->5 [style = bold, label=""];
55->1 [style = bold, label=""];
30->58 [style = dashed, label="0"];
30->14 [style = solid, label="params"];
19->4 [style = bold, label=""];
13->8 [style = bold, label=""];
2->30 [style = bold, label=""];
59->61 [style = solid, label="params"];
17->29 [style = bold, label=""];
26->33 [style = bold, label=""];
37->50 [style = bold, label=""];
}
