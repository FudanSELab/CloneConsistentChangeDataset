digraph {
0 [style = filled, label = "final DescribeAclsResponse result = new DescribeAclsResponse(struct,V0)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "final Struct struct = original.toStruct(V1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final DescribeAclsResponse result2 = buildResponse(10,Errors.NONE,DescribeAclsResponse.aclsResources(DescribeAclsResponse.aclBindings(resources)))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "List<DescribeAclsResource> resources = Arrays.asList(LITERAL_ACL1,PREFIXED_ACL1)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final DescribeAclsResponse result = DescribeAclsResponse.parse(buffer,V0)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "final ByteBuffer buffer = original.serializeBody(V0)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "final DescribeAclsResponse original = buildResponse(10,Errors.NONE,resources)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertResponseEquals(original,result2)@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final DescribeAclsResponse result2 = buildResponse(100,Errors.NONE,DescribeAclsResponse.aclsResources(DescribeAclsResponse.aclBindings(resources)))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final DescribeAclsResponse result = new DescribeAclsResponse(struct,V1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final DescribeAclsResponse original = buildResponse(100,Errors.NONE,resources)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "List<DescribeAclsResource> resources = Arrays.asList(LITERAL_ACL1,LITERAL_ACL2)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertResponseEquals(original,result)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "shouldRoundTripV0['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "shouldRoundTripV0['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "shouldRoundTripV1['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final Struct struct = original.toStruct(V0)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0->3 [style = bold, label=""];
14->16 [style = bold, label=""];
16->15 [style = bold, label=""];
2->1 [style = solid, label="resources"];
1->4 [style = bold, label=""];
14->3 [style = solid, label="original"];
3->1 [style = bold, label=""];
2->6 [style = bold, label=""];
7->16 [style = dashed, label="0"];
0->15 [style = dashed, label="0"];
6->4 [style = solid, label="original"];
7->0 [style = bold, label=""];
11->12 [style = bold, label=""];
6->14 [style = dashed, label="0"];
15->3 [style = bold, label=""];
1->4 [style = solid, label="result2"];
12->13 [style = solid, label="resources"];
7->0 [style = solid, label="struct"];
1->13 [style = dashed, label="0"];
2->12 [style = dashed, label="0"];
5->2 [style = bold, label=""];
6->3 [style = solid, label="original"];
15->3 [style = solid, label="result"];
8->2 [style = bold, label=""];
16->15 [style = solid, label="struct"];
14->4 [style = solid, label="original"];
6->10 [style = bold, label=""];
12->14 [style = bold, label=""];
2->6 [style = solid, label="resources"];
0->3 [style = solid, label="result"];
3->13 [style = bold, label=""];
9->3 [style = bold, label=""];
7->10 [style = dashed, label="0"];
10->9 [style = bold, label=""];
0->9 [style = dashed, label="0"];
6->7 [style = bold, label=""];
9->3 [style = solid, label="result"];
12->14 [style = solid, label="resources"];
10->9 [style = solid, label="buffer"];
13->4 [style = solid, label="result2"];
13->4 [style = bold, label=""];
}
