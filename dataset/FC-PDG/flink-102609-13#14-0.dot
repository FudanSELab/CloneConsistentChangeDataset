digraph {
12 [style = filled, label = "Assert.assertEquals(\"Close was not called.\",2,closeCalled.get())@@@9@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "testHarness.processWatermark(new Watermark(1599))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testHarness.open()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testTumblingEventTimeWindowsApply['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "testHarness.close()@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "closeCalled.set(0)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final int windowSize = 3@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final int windowSize = 2@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testHarness.processWatermark(new Watermark(1999))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "WindowOperator<String,Tuple2<String,Integer>,Iterable<Tuple2<String,Integer>>,Tuple2<String,Integer>,TimeWindow> operator = new WindowOperator<>(TumblingEventTimeWindows.of(Time.of(windowSize,TimeUnit.SECONDS)),new TimeWindow.Serializer(),new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig()),windowStateDesc,new InternalIterableWindowFunction<>(new PassThroughFunction()),EventTimeTrigger.create(),lateness,null)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "ListStateDescriptor<Tuple2<String,Integer>> windowStateDesc = new ListStateDescriptor<>(\"window-contents\",inputType.createSerializer(new ExecutionConfig()))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testHarness.processWatermark(new Watermark(2000))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "expected.add(new Watermark(1599))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testTumblingEventTimeWindows(operator)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),1000))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "ConcurrentLinkedQueue<Object> expected = new ConcurrentLinkedQueue<>()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "expected.add(new StreamRecord<>(new Tuple2<>(\"key2\",1),1999))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testCleanupTimerWithEmptyListStateForTumblingWindows['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertEquals(\"Close was not called.\",2,closeCalled.get())@@@12@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testHarness.processWatermark(new Watermark(5000))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "WindowOperator<String,Tuple2<String,Integer>,Iterable<Tuple2<String,Integer>>,Tuple2<String,Integer>,TimeWindow> operator = new WindowOperator<>(TumblingEventTimeWindows.of(Time.of(windowSize,TimeUnit.SECONDS)),new TimeWindow.Serializer(),new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig()),stateDesc,new InternalIterableWindowFunction<>(new RichSumReducer<TimeWindow>()),EventTimeTrigger.create(),0,null)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expected,testHarness.getOutput(),new Tuple2ResultSortComparator())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "expected.add(new Watermark(1999))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "expected.add(new Watermark(2000))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testTumblingEventTimeWindows(testHarness)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "final long lateness = 1@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testHarness.close()@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testTumblingEventTimeWindowsApply['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "OneInputStreamOperatorTestHarness<Tuple2<String,Integer>,Tuple2<String,Integer>> testHarness = new KeyedOneInputStreamOperatorTestHarness<>(operator,new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expected.add(new Watermark(5000))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ListStateDescriptor<Tuple2<String,Integer>> stateDesc = new ListStateDescriptor<>(\"window-contents\",inputType.createSerializer(new ExecutionConfig()))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "TypeInformation<Tuple2<String,Integer>> inputType = TypeInfoParser.parse(\"Tuple2<String, Integer>\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->11 [style = solid, label="operator"];
9->20 [style = dashed, label="0"];
4->9 [style = bold, label=""];
27->18 [style = bold, label=""];
7->1 [style = bold, label=""];
31->25 [style = bold, label=""];
29->16 [style = solid, label="windowSize"];
7->30 [style = bold, label=""];
22->16 [style = bold, label=""];
16->6 [style = bold, label=""];
30->26 [style = bold, label=""];
6->1 [style = solid, label="testHarness"];
1->3 [style = bold, label=""];
11->12 [style = bold, label=""];
2->4 [style = bold, label=""];
10->6 [style = bold, label=""];
17->19 [style = bold, label=""];
20->16 [style = solid, label="lateness"];
0->22 [style = dashed, label="0"];
21->28 [style = bold, label=""];
20->5 [style = bold, label=""];
10->6 [style = solid, label="operator"];
23->29 [style = bold, label=""];
16->6 [style = solid, label="operator"];
29->20 [style = bold, label=""];
0->10 [style = bold, label=""];
26->31 [style = bold, label=""];
9->10 [style = solid, label="windowSize"];
10->11 [style = bold, label=""];
19->14 [style = bold, label=""];
5->0 [style = bold, label=""];
22->16 [style = solid, label="windowStateDesc"];
30->19 [style = solid, label="expected"];
3->8 [style = bold, label=""];
24->17 [style = bold, label=""];
9->5 [style = bold, label=""];
25->15 [style = bold, label=""];
28->24 [style = bold, label=""];
10->16 [style = dashed, label="0"];
18->21 [style = bold, label=""];
6->7 [style = bold, label=""];
15->27 [style = bold, label=""];
5->22 [style = bold, label=""];
13->4 [style = bold, label=""];
0->10 [style = solid, label="stateDesc"];
}
