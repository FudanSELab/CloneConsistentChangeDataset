digraph {
7 [style = filled, label = "when(someProperties.getProperty(someKey)).thenReturn(String.valueOf(someValue))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "verify(someProperties,times(1)).getProperty(someKey)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final DefaultConfig defaultConfig = new DefaultConfig(someNamespace,configRepository)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "await().atMost(500,TimeUnit.MILLISECONDS).untilAsserted(new ThrowingRunnable(){@Override public void run(){assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))verify(someProperties,times(2)).getProperty(someKey)}})@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "final Integer someDefaultValue = -1@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "DefaultConfig defaultConfig = new DefaultConfig(someNamespace,configRepository)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final Integer someValue = 2@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "MockInjector.setInstance(,new MockConfigUtilWithShortExpireTime())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Integer someValue = 2@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Integer someDefaultValue = -1@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "verify(someProperties,times(2)).getProperty(someKey)@@@17@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String someKey = \"someKey\"@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "when(configRepository.getConfig()).thenReturn(someProperties)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final String someKey = \"someKey\"@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "testGetIntPropertyMultipleTimesWithShortExpireTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "verify(someProperties,times(1)).getProperty(someKey)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TimeUnit.MILLISECONDS.sleep(50)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "testGetIntPropertyMultipleTimesWithCache['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "someProperties = mock()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testGetIntPropertyMultipleTimesWithShortExpireTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13->10 [style = bold, label=""];
20->10 [style = solid, label="someValue"];
16->11 [style = bold, label=""];
2->20 [style = dashed, label="0"];
6->1 [style = solid, label="someKey"];
10->14 [style = bold, label=""];
19->20 [style = bold, label=""];
20->7 [style = solid, label="someValue"];
18->19 [style = bold, label=""];
2->0 [style = solid, label="someValue"];
19->10 [style = solid, label="someKey"];
20->13 [style = solid, label="someValue"];
3->6 [style = bold, label=""];
5->13 [style = solid, label="someDefaultValue"];
11->12 [style = bold, label=""];
2->13 [style = solid, label="someValue"];
5->4 [style = solid, label="someDefaultValue"];
16->21 [style = solid, label="someDefaultValue"];
8->21 [style = dashed, label="0"];
16->13 [style = solid, label="someDefaultValue"];
6->14 [style = solid, label="someKey"];
20->21 [style = solid, label="someValue"];
6->0 [style = solid, label="someKey"];
0->22 [style = dashed, label="0"];
12->7 [style = bold, label=""];
4->0 [style = bold, label=""];
6->13 [style = solid, label="someKey"];
6->2 [style = bold, label=""];
12->15 [style = solid, label="someProperties"];
5->16 [style = dashed, label="0"];
15->17 [style = bold, label=""];
16->10 [style = solid, label="someDefaultValue"];
20->16 [style = bold, label=""];
2->10 [style = solid, label="someValue"];
5->12 [style = bold, label=""];
15->9 [style = bold, label=""];
0->1 [style = bold, label=""];
23->6 [style = bold, label=""];
9->17 [style = dashed, label="0"];
6->19 [style = dashed, label="0"];
10->4 [style = bold, label=""];
6->4 [style = solid, label="someKey"];
7->15 [style = bold, label=""];
5->11 [style = bold, label=""];
14->8 [style = bold, label=""];
17->13 [style = bold, label=""];
19->14 [style = solid, label="someKey"];
8->4 [style = bold, label=""];
6->10 [style = solid, label="someKey"];
6->22 [style = solid, label="someKey"];
2->4 [style = solid, label="someValue"];
5->0 [style = solid, label="someDefaultValue"];
4->22 [style = bold, label=""];
14->21 [style = bold, label=""];
2->7 [style = solid, label="someValue"];
19->13 [style = solid, label="someKey"];
2->5 [style = bold, label=""];
9->13 [style = bold, label=""];
19->21 [style = solid, label="someKey"];
5->10 [style = solid, label="someDefaultValue"];
}
