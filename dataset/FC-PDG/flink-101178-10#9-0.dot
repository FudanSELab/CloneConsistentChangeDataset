digraph {
11 [style = filled, label = "long sum = 0@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "e.printStackTrace()@@@42@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "{ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()env.setParallelism(4)env.setRestartStrategy(RestartStrategies.noRestart())env.generateSequence(1,10).rebalance().map(new FailingMapper1<Long>()).reduce(new ReduceFunction<Long>(){@Override public Long reduce(Long value1,Long value2){return value1 + value2}}).output(new LocalCollectionOutputFormat<Long>(resultCollection))try {JobExecutionResult res = env.execute()String msg = res == null? \"null result\": \"result in \" + res.getNetRuntime() + \" ms\"fail(\"The program should have failed, but returned \" + msg)}catch (JobExecutionException e) }@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "{FailingMapper2.failuresBeforeSuccess = 1}@@@24@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(55,sum)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "{FailingMapper2.failuresBeforeSuccess = 1}@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "env.generateSequence(1,10).rebalance().map(new FailingMapper2<Long>()).reduce(new ReduceFunction<Long>(){@Override public Long reduce(Long value1,Long value2){return value1 + value2}}).output(new LocalCollectionOutputFormat<Long>(resultCollection))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "Exception e@@@41@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(55,sum)@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "long sum = 0@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "env.setParallelism(4)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "sum += l@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testRestart['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List<Long> resultCollection = new ArrayList<Long>()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "executeAndRunAssertions(env)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "testRestart['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "fail(e.getMessage())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "env.generateSequence(1,10).rebalance().map(new FailingMapper2<>()).reduce(null).output(new LocalCollectionOutputFormat<>(resultCollection))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "{ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()env.setParallelism(4)env.setRestartStrategy(RestartStrategies.noRestart())env.generateSequence(1,10).rebalance().map(new FailingMapper1<Long>()).reduce(new ReduceFunction<Long>(){@Override public Long reduce(Long value1,Long value2){return value1 + value2}}).output(new LocalCollectionOutputFormat<Long>(resultCollection))executeAndRunAssertions(env)long sum = 0for (long l : resultCollection){sum += l}assertEquals(55,sum)}@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "List<Long> resultCollection = new ArrayList<>()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "Exception e@@@20@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "sum += l@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "testFailedRunThenSuccessfulRun['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "{FailingMapper1.failuresBeforeSuccess = 1}@@@45@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
16->15 [style = bold, label=""];
8->10 [style = bold, label=""];
17->16 [style = solid, label="resultCollection"];
23->20 [style = bold, label=""];
13->2 [style = solid, label="sum"];
4->17 [style = dashed, label="0"];
11->1 [style = bold, label=""];
10->24 [style = bold, label=""];
1->12 [style = solid, label="sum"];
23->20 [style = solid, label="env"];
9->4 [style = bold, label=""];
19->17 [style = bold, label=""];
8->10 [style = dotted, label="true"];
24->22 [style = bold, label=""];
10->7 [style = bold, label=""];
15->18 [style = bold, label=""];
12->7 [style = bold, label=""];
8->24 [style = dotted, label="true"];
4->0 [style = bold, label=""];
20->22 [style = bold, label=""];
0->2 [style = solid, label="env"];
5->16 [style = bold, label=""];
6->10 [style = dotted, label="true"];
17->0 [style = bold, label=""];
3->2 [style = bold, label=""];
4->23 [style = solid, label="resultCollection"];
6->8 [style = dotted, label="true"];
4->3 [style = solid, label="resultCollection"];
2->14 [style = bold, label=""];
6->8 [style = bold, label=""];
18->13 [style = bold, label=""];
1->12 [style = bold, label=""];
21->4 [style = bold, label=""];
0->15 [style = solid, label="env"];
2->11 [style = bold, label=""];
4->23 [style = bold, label=""];
3->16 [style = dashed, label="0"];
4->20 [style = solid, label="resultCollection"];
0->5 [style = bold, label=""];
13->2 [style = bold, label=""];
}
