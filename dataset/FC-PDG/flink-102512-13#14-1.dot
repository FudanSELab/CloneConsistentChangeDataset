digraph {
41 [style = filled, label = "int mode@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "StreamStateHandle state@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "when(networkEnvironment.createKvStateTaskRegistry(any(),any())).thenReturn(mock())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "CheckpointResponder checkpointResponder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "TestTaskStateManager taskStateManager = new TestTaskStateManager()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "taskStateManager.setJobManagerTaskStateSnapshotsByCheckpointId(Collections.singletonMap(taskRestore.getRestoreCheckpointId(),taskRestore.getTaskStateSnapshot()))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "StateBackend backend@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "throw new IllegalArgumentException()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "Configuration taskConfig = new Configuration()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "keyedStateFromStream = keyedStateHandles@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "BlobCacheService blobService = new BlobCacheService(mock(),mock())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "createTask['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Collection<OperatorStateHandle> operatorStateBackend = Collections.emptyList()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return new Task(jobInformation,taskInformation,new ExecutionAttemptID(),new AllocationID(),0,0,Collections.emptyList(),Collections.emptyList(),0,mock(),mock(),networkEnvironment,mock(),taskStateManager,mock(),mock(),mock(),blobService,new BlobLibraryCacheManager(blobService.getPermanentBlobService(),FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,new String((((),new FileCache(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b610dd,blobService.getPermanentBlobService()),new TestingTaskManagerRuntimeInfo(),UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),mock(),mock(),mock())@@@43@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "cfg.setStateBackend(backend)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "stateSnapshot.putSubtaskStateByOperatorID(operatorID,operatorSubtaskState)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "JobInformation jobInformation = new JobInformation(new JobID(),\"test job name\",new SerializedValue<>(new ExecutionConfig()),new Configuration(),Collections.emptyList(),Collections.emptyList())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "BlobCacheService blobService = new BlobCacheService(mock(),mock())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "StreamConfig streamConfig@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "NetworkEnvironment networkEnvironment = mock()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Collection<OperatorStateHandle> operatorStateHandles = Collections.singletonList(new OperatorStreamStateHandle(operatorStateMetadata,state))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "return new Task(jobInformation,taskInformation,new ExecutionAttemptID(),new AllocationID(),0,0,Collections.emptyList(),Collections.emptyList(),0,mock(),mock(),network,mock(),new TestTaskStateManager(),mock(),mock(),checkpointResponder,blobService,new BlobLibraryCacheManager(blobService.getPermanentBlobService(),FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,new String((((),new FileCache(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b611b7),new TestingTaskManagerRuntimeInfo(),UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),mock(),mock(),Executors.directExecutor())@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "List<KeyedStateHandle> keyedStateHandles = Collections.singletonList(new KeyGroupsStateHandle(keyGroupRangeOffsets,state))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int mode@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Configuration taskConfig@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "StreamConfig streamConfig@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
62 [style = filled, label = "TaskKvStateRegistry mockKvRegistry = mock()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "TaskStateSnapshot stateSnapshot = new TaskStateSnapshot()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "operatorStateBackend = operatorStateHandles@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "taskStateManager.setReportedCheckpointId(taskRestore.getRestoreCheckpointId())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "cfg.setOperatorID(new OperatorID())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "JobInformation jobInformation = new JobInformation(new JobID(),\"test job name\",new SerializedValue<>(executionConfig),new Configuration(),Collections.emptyList(),Collections.emptyList())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "TaskInformation taskInformation = new TaskInformation(jobVertexID,\"test task name\",1,1,.getName(),taskConfig)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "TaskEventDispatcher taskEventDispatcher = new TaskEventDispatcher()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "boolean failOnCheckpointErrors@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "StreamConfig cfg = new StreamConfig(taskConfig)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "keyedStateFromBackend = keyedStateHandles@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "JobVertexID jobVertexID = new JobVertexID()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "OperatorStateHandle.StateMetaInfo metaInfo = new OperatorStateHandle.StateMetaInfo(new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b60fcf,OperatorStateHandle.Mode.SPLIT_DISTRIBUTE)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "when(network.getTaskEventDispatcher()).thenReturn(taskEventDispatcher)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "when(network.createKvStateTaskRegistry(any(),any())).thenReturn(mockKvRegistry)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "mode@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "executionConfig.setFailTaskOnCheckpointError(failOnCheckpointErrors)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "streamConfig.setOperatorID(operatorID)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Collection<KeyedStateHandle> keyedStateFromBackend = Collections.emptyList()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Collection<OperatorStateHandle> operatorStateStream = Collections.emptyList()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Collection<KeyedStateHandle> keyedStateFromStream = Collections.emptyList()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "TaskEventDispatcher taskEventDispatcher = new TaskEventDispatcher()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "operatorStateStream = operatorStateHandles@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "TaskInformation taskInformation = new TaskInformation(new JobVertexID(),\"test task name\",1,11,.getName(),taskConfig)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Configuration taskConfig@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Map<String,OperatorStateHandle.StateMetaInfo> operatorStateMetadata = new HashMap<>(1)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "when(networkEnvironment.getTaskEventDispatcher()).thenReturn(taskEventDispatcher)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "OperatorSubtaskState operatorSubtaskState = new OperatorSubtaskState(new StateObjectCollection<>(operatorStateBackend),new StateObjectCollection<>(operatorStateStream),new StateObjectCollection<>(keyedStateFromBackend),new StateObjectCollection<>(keyedStateFromStream))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "StreamOperator<?> op@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "createTask['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "JobManagerTaskRestore taskRestore = new JobManagerTaskRestore(1L,stateSnapshot)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "createTask['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "OperatorID operatorID = OperatorID.fromJobVertexID(jobVertexID)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "operatorStateMetadata.put(DefaultOperatorStateBackend.DEFAULT_OPERATOR_STATE_NAME,metaInfo)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "KeyGroupRangeOffsets keyGroupRangeOffsets = new KeyGroupRangeOffsets(new KeyGroupRange(0,0))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "cfg.setStreamOperator(op)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "NetworkEnvironment network = mock()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "ExecutionConfig executionConfig = new ExecutionConfig()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54->56 [style = bold, label=""];
1->55 [style = dashed, label="0"];
2->26 [style = bold, label=""];
34->33 [style = solid, label="taskConfig"];
61->43 [style = bold, label=""];
9->11 [style = bold, label=""];
14->35 [style = bold, label=""];
6->22 [style = bold, label=""];
21->15 [style = bold, label=""];
1->20 [style = bold, label=""];
34->59 [style = dashed, label="0"];
19->22 [style = solid, label="operatorStateHandles"];
39->42 [style = dotted, label="true"];
36->2 [style = solid, label="taskEventDispatcher"];
1->5 [style = solid, label="networkEnvironment"];
4->0 [style = solid, label="keyedStateHandles"];
6->29 [style = bold, label=""];
4->18 [style = solid, label="keyedStateHandles"];
8->4 [style = solid, label="keyGroupRangeOffsets"];
55->48 [style = bold, label=""];
45->61 [style = bold, label=""];
6->18 [style = dotted, label="true"];
29->11 [style = solid, label="operatorStateBackend"];
37->19 [style = solid, label="operatorStateMetadata"];
34->4 [style = solid, label="state"];
35->5 [style = solid, label="taskStateManager"];
27->33 [style = bold, label=""];
6->0 [style = dotted, label="true"];
17->16 [style = bold, label=""];
3->11 [style = solid, label="keyedStateFromStream"];
19->29 [style = solid, label="operatorStateHandles"];
28->37 [style = bold, label=""];
47->63 [style = solid, label="taskEventDispatcher"];
22->11 [style = solid, label="operatorStateStream"];
60->49 [style = solid, label="taskConfig"];
44->46 [style = dotted, label="true"];
18->11 [style = bold, label=""];
37->21 [style = bold, label=""];
44->52 [style = dotted, label="true"];
20->48 [style = dashed, label="0"];
11->25 [style = solid, label="operatorSubtaskState"];
56->57 [style = bold, label=""];
49->62 [style = bold, label=""];
32->12 [style = dotted, label="true"];
50->49 [style = bold, label=""];
26->11 [style = solid, label="keyedStateFromBackend"];
3->7 [style = bold, label=""];
6->29 [style = dotted, label="true"];
16->25 [style = solid, label="operatorID"];
32->36 [style = bold, label=""];
11->17 [style = bold, label=""];
39->40 [style = dotted, label="true"];
55->51 [style = solid, label="network"];
40->4 [style = solid, label="state"];
49->51 [style = solid, label="taskInformation"];
63->53 [style = bold, label=""];
60->45 [style = solid, label="taskConfig"];
22->11 [style = bold, label=""];
29->11 [style = bold, label=""];
32->31 [style = dotted, label="true"];
39->34 [style = dotted, label="true"];
56->50 [style = solid, label="executionConfig"];
23->5 [style = bold, label=""];
32->34 [style = dotted, label="true"];
38->24 [style = bold, label=""];
46->54 [style = solid, label="backend"];
6->18 [style = bold, label=""];
26->3 [style = bold, label=""];
0->11 [style = bold, label=""];
6->22 [style = dotted, label="true"];
18->11 [style = solid, label="keyedStateFromStream"];
41->6 [style = solid, label="mode"];
50->51 [style = solid, label="jobInformation"];
13->27 [style = bold, label=""];
52->51 [style = solid, label="checkpointResponder"];
7->28 [style = bold, label=""];
17->33 [style = solid, label="jobVertexID"];
6->9 [style = dotted, label="true"];
24->25 [style = bold, label=""];
28->11 [style = solid, label="operatorStateStream"];
44->59 [style = dotted, label="true"];
40->19 [style = solid, label="state"];
58->57 [style = solid, label="failOnCheckpointErrors"];
24->13 [style = solid, label="stateSnapshot"];
53->51 [style = solid, label="blobService"];
62->47 [style = bold, label=""];
32->10 [style = dotted, label="true"];
35->30 [style = bold, label=""];
43->54 [style = bold, label=""];
15->8 [style = bold, label=""];
2->63 [style = dashed, label="0"];
12->6 [style = solid, label="mode"];
33->14 [style = bold, label=""];
44->60 [style = bold, label=""];
53->51 [style = bold, label=""];
14->5 [style = solid, label="blobService"];
33->5 [style = solid, label="taskInformation"];
4->6 [style = bold, label=""];
25->13 [style = bold, label=""];
8->19 [style = bold, label=""];
57->50 [style = bold, label=""];
17->16 [style = solid, label="jobVertexID"];
30->23 [style = bold, label=""];
62->48 [style = solid, label="mockKvRegistry"];
6->0 [style = bold, label=""];
35->51 [style = dashed, label="0"];
36->1 [style = bold, label=""];
7->11 [style = solid, label="operatorStateBackend"];
20->2 [style = bold, label=""];
60->45 [style = bold, label=""];
47->55 [style = bold, label=""];
27->5 [style = solid, label="jobInformation"];
39->41 [style = dotted, label="true"];
0->11 [style = solid, label="keyedStateFromBackend"];
44->58 [style = dotted, label="true"];
48->63 [style = bold, label=""];
59->61 [style = solid, label="op"];
34->19 [style = solid, label="state"];
19->4 [style = bold, label=""];
6->9 [style = bold, label=""];
16->38 [style = solid, label="operatorID"];
39->36 [style = bold, label=""];
31->33 [style = solid, label="taskConfig"];
16->38 [style = bold, label=""];
21->15 [style = solid, label="metaInfo"];
}
