digraph {
45 [style = filled, label = "assertNull(Schema.instance.getColumnFamilyStoreIncludingIndexes(Pair.create(\"foo\",\"bar\")))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "CacheService.instance.keyCache.clear()@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "iter.hasNext()@@@35@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertFalse(key.ksAndCFName.left.equals(\"KEYSPACE_PER_TEST\"))@@@37@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "test2iKeyCachePaths['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "String table = createTable(\"CREATE TABLE %s (\" + commonColumnsDef + \"PRIMARY KEY ((part_key_a, part_key_b),clust_key_a,clust_key_b,clust_key_c))\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "CacheService.instance.keyCache.loadSaved()@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "test2iKeyCachePathsSaveKeysForDroppedTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "long hits = metrics.hits.getCount()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "UntypedResultSet result = execute(\"SELECT part_key_a FROM %s WHERE col_int = ?\",i)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "TableMetadataRef tableMetadataRef = Schema.instance.getTableMetadataRef(key.tableId)@@@37@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "dropTable(\"DROP TABLE %s\")@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(beforeSize,CacheService.instance.keyCache.size())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "int i = 0@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "long requests = metrics.requests.getCount()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "createIndex(\"CREATE INDEX some_index ON %s (col_int)\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Iterator<KeyCacheKey> iter = CacheService.instance.keyCache.keyIterator()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "i < 10@@@36@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "requests = metrics.requests.getCount()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "dropTable(\"DROP TABLE %s\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i < 10@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "metrics = CacheService.instance.keyCache.getMetrics()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.assertFalse(tableMetadataRef.name.startsWith(table))@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertEquals(500,result.size())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "CacheService.instance.keyCache.clear()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "clearCache()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "insertData(table,\"some_index\",true)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(500,result.size())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertFalse(key.ksAndCFName.right.startsWith(table))@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "assertNull(Schema.instance.getColumnFamilyStoreIncludingIndexes(Pair.create(KEYSPACE_PER_TEST,\"bar\")))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "CacheService.instance.keyCache.submitWrite(Integer.MAX_VALUE).get()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "CacheService.instance.keyCache.loadSaved()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals(500,result.size())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(420,requests)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "i++@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "i++@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(210,requests)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "UntypedResultSet result = execute(\"SELECT part_key_a FROM %s WHERE col_int = ?\",i)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "int i = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Schema.instance.updateVersion()@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "i < 10@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(200,hits)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "int i = 0@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(0,CacheService.instance.keyCache.size())@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertFalse(tableMetadataRef.keyspace.equals(\"KEYSPACE_PER_TEST\"))@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "KeyCacheKey key = iter.next()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "test2iKeyCachePathsSaveKeysForDroppedTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "CacheMetrics metrics = CacheService.instance.keyCache.getMetrics()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(0,hits)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(0,CacheService.instance.keyCache.size())@@@47@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "hits = metrics.hits.getCount()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "int beforeSize = CacheService.instance.keyCache.size()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "i++@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "UntypedResultSet result = execute(\"SELECT part_key_a FROM %s WHERE col_int = ?\",i)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2->35 [style = bold, label=""];
18->35 [style = dotted, label="true"];
16->52 [style = bold, label=""];
5->20 [style = bold, label=""];
9->1 [style = solid, label="i"];
12->9 [style = bold, label=""];
41->44 [style = solid, label="i"];
18->37 [style = dotted, label="true"];
29->18 [style = bold, label=""];
20->27 [style = bold, label=""];
25->31 [style = bold, label=""];
8->1 [style = bold, label=""];
51->50 [style = bold, label=""];
0->25 [style = bold, label=""];
20->14 [style = solid, label="table"];
40->47 [style = bold, label=""];
26->15 [style = bold, label=""];
1->12 [style = bold, label=""];
9->8 [style = solid, label="i"];
0->31 [style = solid, label="requests"];
49->48 [style = dotted, label="true"];
46->42 [style = bold, label=""];
41->49 [style = solid, label="i"];
48->49 [style = bold, label=""];
33->15 [style = solid, label="hits"];
20->29 [style = solid, label="table"];
30->7 [style = dotted, label="true"];
48->44 [style = solid, label="i"];
30->6 [style = dotted, label="true"];
53->20 [style = bold, label=""];
52->39 [style = solid, label="beforeSize"];
41->49 [style = bold, label=""];
24->8 [style = solid, label="i"];
6->7 [style = solid, label="i"];
9->8 [style = bold, label=""];
13->30 [style = solid, label="i"];
8->22 [style = bold, label=""];
8->12 [style = dotted, label="true"];
49->44 [style = dotted, label="true"];
30->7 [style = bold, label=""];
30->3 [style = dotted, label="true"];
28->24 [style = bold, label=""];
22->17 [style = bold, label=""];
39->41 [style = bold, label=""];
36->37 [style = bold, label=""];
24->8 [style = bold, label=""];
14->21 [style = bold, label=""];
13->6 [style = solid, label="i"];
18->29 [style = dotted, label="true"];
4->10 [style = bold, label=""];
10->18 [style = bold, label=""];
49->45 [style = bold, label=""];
38->20 [style = bold, label=""];
30->33 [style = bold, label=""];
27->14 [style = bold, label=""];
10->39 [style = dashed, label="0"];
45->51 [style = bold, label=""];
19->29 [style = bold, label=""];
4->39 [style = bold, label=""];
49->44 [style = bold, label=""];
18->36 [style = dotted, label="true"];
18->19 [style = dotted, label="true"];
13->7 [style = solid, label="i"];
3->6 [style = bold, label=""];
31->34 [style = bold, label=""];
33->26 [style = bold, label=""];
48->49 [style = solid, label="i"];
24->1 [style = solid, label="i"];
17->0 [style = bold, label=""];
26->28 [style = solid, label="requests"];
15->28 [style = bold, label=""];
34->16 [style = bold, label=""];
8->9 [style = dotted, label="true"];
6->30 [style = bold, label=""];
17->25 [style = solid, label="hits"];
41->48 [style = solid, label="i"];
49->43 [style = dotted, label="true"];
18->2 [style = dotted, label="true"];
52->11 [style = bold, label=""];
29->36 [style = dashed, label="0"];
2->19 [style = bold, label=""];
16->11 [style = bold, label=""];
31->16 [style = bold, label=""];
43->48 [style = bold, label=""];
23->4 [style = bold, label=""];
47->46 [style = bold, label=""];
13->30 [style = bold, label=""];
18->2 [style = bold, label=""];
7->3 [style = bold, label=""];
44->43 [style = bold, label=""];
8->1 [style = dotted, label="true"];
6->30 [style = solid, label="i"];
50->40 [style = bold, label=""];
21->32 [style = bold, label=""];
37->18 [style = bold, label=""];
35->36 [style = bold, label=""];
32->13 [style = bold, label=""];
11->23 [style = bold, label=""];
20->37 [style = solid, label="table"];
24->9 [style = solid, label="i"];
}
