digraph {
14 [style = filled, label = "createDefinitions.getValue()@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "createDefinitions.getValue()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "result.setContainsNotExistClause(null != ctx.notExistClause())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "result.getColumnDefinitions().add((ColumnDefinitionSegment)each)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "each instanceof ConstraintDefinitionSegment@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return result@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "result.getConstraintDefinitions().add((ConstraintDefinitionSegment)each)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "result.setTable((SimpleTableSegment)visit(ctx.tableName()))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "createDefinitions.getValue()@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "null != ctx.createDefinitionClause()@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "visitCreateTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "visitCreateTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "result.setNotExisted(null != ctx.tableNotExistClause())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "final CreateTableContext ctx@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "OracleCreateTableStatement result = new OracleCreateTableStatement()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "CreateDefinitionSegment each@@@7@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "visitCreateTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "each instanceof ColumnDefinitionSegment@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "CollectionValue<CreateDefinitionSegment> createDefinitions = (CollectionValue<CreateDefinitionSegment>)visit(ctx.createDefinitionClause())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "PostgreSQLCreateTableStatement result = new PostgreSQLCreateTableStatement()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->7 [style = dotted, label="true"];
4->9 [style = bold, label=""];
5->10 [style = bold, label=""];
8->19 [style = dashed, label="0"];
1->4 [style = bold, label=""];
18->7 [style = dotted, label="true"];
16->8 [style = bold, label=""];
4->10 [style = dotted, label="true"];
19->12 [style = solid, label="result"];
1->15 [style = dashed, label="0"];
4->0 [style = dotted, label="true"];
18->19 [style = bold, label=""];
10->3 [style = bold, label=""];
8->6 [style = bold, label=""];
9->10 [style = bold, label=""];
3->12 [style = bold, label=""];
4->14 [style = dotted, label="true"];
2->10 [style = bold, label=""];
19->6 [style = bold, label=""];
6->15 [style = bold, label=""];
2->12 [style = bold, label=""];
4->13 [style = dotted, label="true"];
6->1 [style = bold, label=""];
3->10 [style = bold, label=""];
6->4 [style = bold, label=""];
16->7 [style = dotted, label="true"];
3->5 [style = bold, label=""];
10->3 [style = dotted, label="false"];
3->5 [style = dotted, label="true"];
5->12 [style = bold, label=""];
10->2 [style = dotted, label="true"];
8->12 [style = solid, label="result"];
15->4 [style = bold, label=""];
4->12 [style = bold, label=""];
11->8 [style = bold, label=""];
10->2 [style = bold, label=""];
4->9 [style = dotted, label="true"];
4->17 [style = dotted, label="true"];
}
