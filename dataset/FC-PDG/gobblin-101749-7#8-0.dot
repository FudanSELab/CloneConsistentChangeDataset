digraph {
44 [style = filled, label = "gmce.setOperationType(OperationType.change_property)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "Assert.assertEquals(table.properties().get(\"gmce.high.watermark.GobblinMetadataChangeEvent_test-1\"),\"45\")@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(table.properties().get(\"offset.range.testTopic-1\"),\"0-3000\")@@@31@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "gmce.setNewFiles(Lists.newArrayList(DataFile.newBuilder().setFilePath(hourlyDataFile_2.toString()).setFileFormat(\"avro\").setFileMetrics(DataMetrics.newBuilder().setRecordCount(10L).build()).build()))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(table.properties().get(\"gmce.high.watermark.GobblinMetadataChangeEvent_test-1\"),\"20\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(table.currentSnapshot().allManifests().size(),1)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(table.properties().get(\"gmce.low.watermark.GobblinMetadataChangeEvent_test-1\"),\"20\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "gobblinMCEWriter.writeEnvelope(new RecordEnvelope<>(genericGmce_2000_3000,new KafkaStreamingExtractor.KafkaWatermark(new KafkaPartition.Builder().withTopicName(\"GobblinMetadataChangeEvent_test\").withId(1).build(),new LongWatermark(30L))))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "GenericRecord genericGmce_1000_2000 = GenericData.get().deepCopy(gmce.getSchema(),gmce)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "gobblinMCEWriter.flush()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertEquals(table.currentSnapshot().allManifests().size(),2)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "table = catalog.loadTable(catalog.listTables(Namespace.of(dbName)).get(0))@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "table = catalog.loadTable(catalog.listTables(Namespace.of(dbName)).get(0))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "gmce.setNewFiles(Lists.newArrayList(dailyFile))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Assert.assertEquals(table.location(),new File(tmpDir,\"data/tracking/testIcebergTable/_iceberg_metadata/\").getAbsolutePath() + \"/\" + dbName)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(table.properties().get(\"offset.range.testTopic-1\"),\"0-2000\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "Assert.assertEquals(table.properties().get(\"gmce.low.watermark.GobblinMetadataChangeEvent_test-1\"),\"30\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertEquals(catalog.listTables(Namespace.of(dbName)).size(),0)@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "gmce.setTopicPartitionOffsetsRange(ImmutableMap.builder().put(\"testTopic-1\",\"1000-2000\").build())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "gobblinMCEWriter.flush()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "gmce.setOldFilePrefixes(null)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(catalog.listTables(Namespace.of(dbName)).size(),1)@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "gobblinMCEWriterWithAcceptClusters.writeEnvelope(new RecordEnvelope<>(genericGmce,new KafkaStreamingExtractor.KafkaWatermark(new KafkaPartition.Builder().withTopicName(\"GobblinMetadataChangeEvent_test\").withId(1).build(),new LongWatermark(10L))))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "Assert.assertEquals(table.currentSnapshot().allManifests().size(),3)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "gobblinMCEWriter.flush()@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "table = catalog.loadTable(catalog.listTables(Namespace.of(dbName)).get(0))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "gmce.setTopicPartitionOffsetsRange(ImmutableMap.builder().put(\"testTopic-1\",\"2000-3000\").build())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "Assert.assertEquals(table.properties().get(\"offset.range.testTopic-1\"),\"0-4000\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testWriteAddFileGMCE['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "gobblinMCEWriter.writeEnvelope(new RecordEnvelope<>(genericGmce_1000_2000,new KafkaStreamingExtractor.KafkaWatermark(new KafkaPartition.Builder().withTopicName(\"GobblinMetadataChangeEvent_test\").withId(1).build(),new LongWatermark(20L))))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "Table table = catalog.loadTable(catalog.listTables(Namespace.of(dbName)).get(0))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "gmce.setTopicPartitionOffsetsRange(ImmutableMap.builder().put(\"testTopic-1\",\"2000-4000\").build())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "gobblinMCEWriter.writeEnvelope(new RecordEnvelope<>(genericGmce,new KafkaStreamingExtractor.KafkaWatermark(new KafkaPartition.Builder().withTopicName(\"GobblinMetadataChangeEvent_test\").withId(1).build(),new LongWatermark(10L))))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "Table table = catalog.loadTable(catalog.listTables(Namespace.of(dbName)).get(0))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "testChangeProperty['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Assert.assertEquals(table.properties().get(\"gmce.high.watermark.GobblinMetadataChangeEvent_test-1\"),\"40\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Assert.assertEquals(table.properties().get(\"gmce.low.watermark.GobblinMetadataChangeEvent_test-1\"),\"40\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "gobblinMCEWriter.flush()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertEquals(catalog.listTables(Namespace.of(dbName)).size(),0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "gobblinMCEWriter.flush()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(table.properties().get(\"offset.range.testTopic-1\"),\"0-3000\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(table.properties().get(\"gmce.high.watermark.GobblinMetadataChangeEvent_test-1\"),\"30\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "table = catalog.loadTable(catalog.listTables(Namespace.of(dbName)).get(0))@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "gobblinMCEWriter.writeEnvelope(new RecordEnvelope<>(genericGmce,new KafkaStreamingExtractor.KafkaWatermark(new KafkaPartition.Builder().withTopicName(\"GobblinMetadataChangeEvent_test\").withId(1).build(),new LongWatermark(30L))))@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "Assert.assertEquals(table.currentSnapshot().allManifests().size(),3)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertFalse(table.properties().containsKey(\"offset.range.testTopic-1\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "GenericRecord genericGmce = GenericData.get().deepCopy(gmce.getSchema(),gmce)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "table = catalog.loadTable(catalog.listTables(Namespace.of(dbName)).get(0))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "gmce.setTopicPartitionOffsetsRange(ImmutableMap.builder().put(\"testTopic-1\",\"3000-4000\").build())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "DataFile dailyFile = DataFile.newBuilder().setFilePath(dailyDataFile.toString()).setFileFormat(\"avro\").setFileMetrics(DataMetrics.newBuilder().setRecordCount(0L).build()).build()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "table = catalog.loadTable(catalog.listTables(Namespace.of(dbName)).get(0))@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "Assert.assertEquals(table.properties().get(\"offset.range.testTopic-1\"),\"0-3000\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "GenericRecord genericGmce_2000_3000 = GenericData.get().deepCopy(gmce.getSchema(),gmce)@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "gobblinMCEWriter.writeEnvelope(new RecordEnvelope<>(gmce,new KafkaStreamingExtractor.KafkaWatermark(new KafkaPartition.Builder().withTopicName(\"GobblinMetadataChangeEvent_test\").withId(1).build(),new LongWatermark(45L))))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Assert.assertEquals(table.currentSnapshot().allManifests().size(),2)@@@35@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "Assert.assertEquals(table.properties().get(\"offset.range.testTopic-1\"),\"0-3000\")@@@34@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "testWriteAddFileGMCE['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "gobblinMCEWriterWithAcceptClusters.writeEnvelope(new RecordEnvelope<>(gmce,new KafkaStreamingExtractor.KafkaWatermark(new KafkaPartition.Builder().withTopicName(\"GobblinMetadataChangeEvent_test\").withId(1).build(),new LongWatermark(10L))))@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(table.properties().get(\"gmce.low.watermark.GobblinMetadataChangeEvent_test-1\"),\"9\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39->37 [style = bold, label=""];
54->51 [style = bold, label=""];
21->50 [style = dashed, label="0"];
49->45 [style = bold, label=""];
15->23 [style = bold, label=""];
27->38 [style = dashed, label="0"];
38->20 [style = bold, label=""];
44->56 [style = bold, label=""];
34->36 [style = solid, label="genericGmce_2000_3000"];
24->2 [style = bold, label=""];
21->6 [style = bold, label=""];
47->48 [style = bold, label=""];
40->38 [style = solid, label="genericGmce"];
40->32 [style = solid, label="genericGmce"];
30->35 [style = dashed, label="0"];
33->4 [style = bold, label=""];
18->26 [style = bold, label=""];
14->34 [style = bold, label=""];
14->28 [style = bold, label=""];
30->9 [style = bold, label=""];
23->3 [style = bold, label=""];
20->31 [style = bold, label=""];
7->20 [style = bold, label=""];
5->14 [style = bold, label=""];
6->53 [style = dashed, label="0"];
32->30 [style = bold, label=""];
25->7 [style = bold, label=""];
26->4 [style = bold, label=""];
42->40 [style = bold, label=""];
35->24 [style = bold, label=""];
3->18 [style = bold, label=""];
40->35 [style = solid, label="genericGmce"];
36->21 [style = bold, label=""];
56->58 [style = bold, label=""];
28->2 [style = bold, label=""];
48->52 [style = bold, label=""];
13->24 [style = dashed, label="0"];
12->10 [style = bold, label=""];
58->47 [style = bold, label=""];
30->35 [style = bold, label=""];
29->19 [style = bold, label=""];
27->11 [style = bold, label=""];
22->27 [style = bold, label=""];
16->1 [style = bold, label=""];
51->50 [style = bold, label=""];
46->54 [style = bold, label=""];
2->21 [style = bold, label=""];
7->52 [style = dashed, label="0"];
20->57 [style = dashed, label="0"];
6->13 [style = bold, label=""];
3->41 [style = bold, label=""];
10->0 [style = bold, label=""];
34->36 [style = bold, label=""];
24->17 [style = bold, label=""];
53->24 [style = bold, label=""];
17->15 [style = bold, label=""];
1->12 [style = bold, label=""];
40->32 [style = bold, label=""];
55->43 [style = bold, label=""];
57->49 [style = bold, label=""];
13->22 [style = bold, label=""];
41->33 [style = bold, label=""];
31->39 [style = bold, label=""];
52->57 [style = bold, label=""];
25->38 [style = bold, label=""];
41->33 [style = solid, label="genericGmce_1000_2000"];
55->43 [style = solid, label="dailyFile"];
43->44 [style = bold, label=""];
8->29 [style = bold, label=""];
9->24 [style = bold, label=""];
50->53 [style = bold, label=""];
4->16 [style = bold, label=""];
11->25 [style = bold, label=""];
2->55 [style = bold, label=""];
0->5 [style = bold, label=""];
19->30 [style = bold, label=""];
}
