digraph {
0 [style = filled, label = "final RandomAccessReader reader = RandomAccessReader.open(treeFile)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final TokenTree tokenTree = new TokenTree(new MappedBuffer(reader))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "builder.write(writer)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "SortedMap<Long,LongSet> tokenMap@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "final Iterator<Token> tokenIterator = tokenTree.iterator(KEY_CONVERTER)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "builder.finish()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Token treeNext = tokenIterator.next()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final File treeFile = File.createTempFile(\"token-tree-iterate-test1\",\"tt\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "SortedMap<Long,KeyOffsets> tokenMap@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "Map.Entry<Long,KeyOffsets> listNext = listIterator.next()@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "Assert.assertEquals(listNext.getKey(),treeNext.get())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Map.Entry<Long,LongSet> listNext = listIterator.next()@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "buildSerializeAndIterate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertFalse(\"token iterator not finished\",tokenIterator.hasNext())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(convert(listNext.getValue()),convert(treeNext))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "reader.close()@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "treeFile.deleteOnExit()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "tokenIterator.hasNext() && listIterator.hasNext()@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "TokenTreeBuilder builder@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "buildSerializeAndIterate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "buildTree['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final File treeFile = File.createTempFile(\"token-tree-\",\"db\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "return new TokenTree(new MappedBuffer(reader))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final Iterator<Map.Entry<Long,LongSet>> listIterator = tokenMap.entrySet().iterator()@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "writer.sync()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertFalse(\"list iterator not finished\",listIterator.hasNext())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final Iterator<Map.Entry<Long,KeyOffsets>> listIterator = tokenMap.entrySet().iterator()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "TokenTreeBuilder builder@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "final Iterator<Token> tokenIterator = tokenTree.iterator(KeyConverter.instance)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "TokenTreeBuilder builder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10->18 [style = bold, label=""];
17->25 [style = bold, label=""];
18->3 [style = bold, label=""];
17->5 [style = bold, label=""];
27->18 [style = bold, label=""];
19->25 [style = dotted, label="true"];
3->26 [style = dashed, label="0"];
21->19 [style = bold, label=""];
23->22 [style = dotted, label="true"];
9->24 [style = dashed, label="0"];
0->6 [style = bold, label=""];
19->17 [style = dotted, label="true"];
0->6 [style = solid, label="reader"];
0->29 [style = solid, label="reader"];
18->26 [style = bold, label=""];
4->19 [style = bold, label=""];
3->11 [style = bold, label=""];
3->0 [style = solid, label="treeFile"];
6->24 [style = bold, label=""];
7->0 [style = bold, label=""];
0->29 [style = bold, label=""];
26->0 [style = solid, label="treeFile"];
19->17 [style = bold, label=""];
5->25 [style = dashed, label="0"];
25->16 [style = bold, label=""];
17->4 [style = solid, label="treeNext"];
26->11 [style = bold, label=""];
8->7 [style = bold, label=""];
5->16 [style = bold, label=""];
27->28 [style = dotted, label="true"];
23->20 [style = dotted, label="true"];
13->19 [style = bold, label=""];
6->29 [style = dashed, label="0"];
13->21 [style = dashed, label="0"];
19->14 [style = bold, label=""];
24->21 [style = bold, label=""];
10->2 [style = dotted, label="true"];
19->4 [style = dotted, label="true"];
2->28 [style = dashed, label="0"];
19->16 [style = dotted, label="true"];
19->5 [style = dotted, label="true"];
11->8 [style = bold, label=""];
14->15 [style = bold, label=""];
15->12 [style = bold, label=""];
10->1 [style = dotted, label="true"];
6->9 [style = bold, label=""];
16->4 [style = bold, label=""];
2->22 [style = dashed, label="0"];
23->18 [style = bold, label=""];
9->13 [style = bold, label=""];
}
