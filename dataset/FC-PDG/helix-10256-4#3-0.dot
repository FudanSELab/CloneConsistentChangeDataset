digraph {
26 [style = filled, label = "_gSetupTool.rebalanceStorageCluster(CLUSTER_NAME,dbName,1)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "_participants(0(.getStateMachineEngine().registerStateModelFactory(\"OnlineOffline\",new TestOnlineOfflineStateModelFactory(customizedPoolSize,2000),\"TestFactory\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertNotNull(executor)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "ThreadPoolExecutor executor = (ThreadPoolExecutor)(helixExecutor._batchMessageExecutorService)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testBatchMessageThreadPoolSize['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int customizedPoolSize = 5@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "IdealState idealState = new FullAutoModeISBuilder(dbName).setStateModel(\"OnlineOffline\").setStateModelFactoryName(\"TestFactory\").setNumPartitions(10).setNumReplica(1).build()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "HelixTaskExecutor helixExecutor = svc.getExecutor()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "i < _participants.length@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Thread.sleep(2000L)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "int i = 1@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "_gSetupTool.getClusterManagementTool().addResource(CLUSTER_NAME,dbName,idealState)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "verify['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "_participants(i(.syncStop()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "String dbName = \"TestDBABatch\" + i@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "idealState.setBatchMessageMode(true)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertNotNull(executor)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "i++@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "_setupTool.rebalanceStorageCluster(CLUSTER_NAME,dbName,1)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "DefaultMessagingService svc = (DefaultMessagingService)(_participants(0(.getMessagingService())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int numberOfDbs = 10@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int i = 0@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "_setupTool.getClusterManagementTool().addResource(CLUSTER_NAME,dbName,idealState)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "Thread.sleep(2000L)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "DefaultMessagingService svc = (DefaultMessagingService)(_participants(0(.getMessagingService())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertTrue(verifier.verify())@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ThreadPoolExecutor executor = (ThreadPoolExecutor)(helixExecutor._batchMessageExecutorService)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertTrue(executor.getPoolSize() >= numberOfDbs)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "HelixTaskExecutor helixExecutor = svc.getExecutor()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i < numberOfDbs@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "i++@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "BestPossibleExternalViewVerifier verifier = new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkAddr(ZK_ADDR).build()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertTrue(executor.getPoolSize() > 0)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "testBatchMessageThreadPoolSize['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2->20 [style = dotted, label="true"];
5->3 [style = bold, label=""];
10->18 [style = bold, label=""];
21->12 [style = dotted, label="true"];
3->2 [style = solid, label="i"];
0->16 [style = bold, label=""];
20->23 [style = solid, label="dbName"];
2->20 [style = bold, label=""];
30->33 [style = bold, label=""];
7->0 [style = solid, label="executor"];
16->8 [style = bold, label=""];
9->2 [style = bold, label=""];
6->23 [style = bold, label=""];
21->15 [style = bold, label=""];
4->19 [style = bold, label=""];
30->33 [style = solid, label="executor"];
9->2 [style = solid, label="i"];
20->25 [style = solid, label="dbName"];
19->13 [style = solid, label="customizedPoolSize"];
26->9 [style = bold, label=""];
10->25 [style = solid, label="idealState"];
2->23 [style = dotted, label="true"];
7->0 [style = bold, label=""];
17->14 [style = solid, label="i"];
20->26 [style = solid, label="dbName"];
23->26 [style = dashed, label="0"];
2->18 [style = dotted, label="true"];
17->21 [style = solid, label="i"];
15->5 [style = bold, label=""];
28->32 [style = bold, label=""];
20->10 [style = bold, label=""];
21->12 [style = bold, label=""];
33->29 [style = bold, label=""];
2->25 [style = dotted, label="true"];
10->6 [style = solid, label="idealState"];
13->17 [style = bold, label=""];
3->9 [style = solid, label="i"];
2->9 [style = dotted, label="true"];
19->13 [style = bold, label=""];
3->2 [style = bold, label=""];
6->25 [style = dashed, label="0"];
18->6 [style = bold, label=""];
2->6 [style = dotted, label="true"];
1->24 [style = bold, label=""];
25->26 [style = bold, label=""];
31->30 [style = bold, label=""];
12->14 [style = bold, label=""];
3->20 [style = solid, label="i"];
18->25 [style = bold, label=""];
14->21 [style = solid, label="i"];
21->14 [style = dotted, label="true"];
16->29 [style = dashed, label="0"];
2->26 [style = dotted, label="true"];
9->20 [style = solid, label="i"];
27->19 [style = bold, label=""];
22->1 [style = bold, label=""];
5->16 [style = solid, label="numberOfDbs"];
2->22 [style = bold, label=""];
5->2 [style = solid, label="numberOfDbs"];
20->6 [style = solid, label="dbName"];
24->7 [style = bold, label=""];
23->9 [style = bold, label=""];
8->11 [style = bold, label=""];
17->21 [style = bold, label=""];
32->31 [style = bold, label=""];
14->21 [style = bold, label=""];
2->10 [style = dotted, label="true"];
}
