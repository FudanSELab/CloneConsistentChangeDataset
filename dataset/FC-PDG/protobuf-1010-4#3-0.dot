digraph {
7 [style = filled, label = "int reps@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ByteArrayOutputStream output = new ByteArrayOutputStream()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "benchmarkMessageType.getDefaultInstance().getParserForType().parseFrom(inputStreamList.get((int)(counter % inputStreamList.size())),extensions)@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "deserializeFromMemoryStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i++@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int j = 0@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "sampleMessageList.get((int)(counter % sampleMessageList.size())).writeTo(output)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "counter++@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "serializeToMemoryStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "deserializeFromMemoryStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "inputStreamList.get((int)(counter % inputStreamList.size())).reset()@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "j < inputStreamList.size()@@@10@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "int i = 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "int reps@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "benchmarkMessageType.getDefaultInstance().getParserForType().parseFrom(inputStreamList.get(j),extensions)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "i < reps@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "inputStreamList.size() == 0@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "sampleMessageList.size() == 0@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "inputStreamList.get(j).reset()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "j++@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "return@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->8 [style = bold, label=""];
4->3 [style = bold, label=""];
15->13 [style = bold, label=""];
0->5 [style = dotted, label="true"];
8->3 [style = solid, label="i"];
16->8 [style = bold, label=""];
9->2 [style = bold, label=""];
10->15 [style = solid, label="j"];
7->17 [style = dashed, label="0"];
10->12 [style = solid, label="j"];
20->17 [style = dotted, label="true"];
18->19 [style = solid, label="output"];
3->10 [style = dotted, label="true"];
8->3 [style = bold, label=""];
12->15 [style = bold, label=""];
0->16 [style = dashed, label="0"];
18->19 [style = bold, label=""];
12->15 [style = dotted, label="true"];
3->4 [style = dotted, label="true"];
3->6 [style = bold, label=""];
11->12 [style = bold, label=""];
4->3 [style = solid, label="i"];
1->0 [style = bold, label=""];
19->2 [style = bold, label=""];
3->9 [style = dotted, label="true"];
3->6 [style = dotted, label="true"];
2->4 [style = bold, label=""];
13->11 [style = bold, label=""];
11->12 [style = solid, label="j"];
17->3 [style = solid, label="reps"];
12->11 [style = dotted, label="true"];
1->7 [style = dotted, label="true"];
3->18 [style = bold, label=""];
9->19 [style = dashed, label="0"];
3->10 [style = bold, label=""];
12->13 [style = dotted, label="true"];
3->19 [style = dotted, label="true"];
20->16 [style = bold, label=""];
14->0 [style = bold, label=""];
12->4 [style = bold, label=""];
7->3 [style = solid, label="reps"];
2->6 [style = solid, label="counter"];
3->12 [style = dotted, label="true"];
10->12 [style = bold, label=""];
3->18 [style = dotted, label="true"];
14->7 [style = dotted, label="true"];
16->5 [style = dotted, label="true"];
0->8 [style = bold, label=""];
16->5 [style = bold, label=""];
9->12 [style = dashed, label="0"];
6->9 [style = bold, label=""];
10->11 [style = solid, label="j"];
11->15 [style = solid, label="j"];
8->4 [style = solid, label="i"];
3->2 [style = dotted, label="true"];
0->5 [style = bold, label=""];
}
