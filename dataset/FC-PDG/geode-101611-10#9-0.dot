digraph {
19 [style = filled, label = "assertEquals(0,tempQueue.size())@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(1,stats.getEventSecondaryQueueSize())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertEquals(0,tempQueue.size())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "BlockingQueue<GatewaySenderEventImpl> tempQueue = createTempQueueAndAddEvent(processor,event)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(1,tempQueue.size())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "validateDestroyFromBucketQueueAndTempQueueInUninitializedBucketRegionQueue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "ParallelGatewaySenderEventProcessor processor = ParallelGatewaySenderHelper.createParallelGatewaySenderEventProcessor(this.sender)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(0,stats.getEventSecondaryQueueSize())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertFalse(this.bucketRegionQueue.isInitialized())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(0,this.bucketRegionQueue.size())@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(1,stats.getSecondaryEventQueueSize())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertEquals(0,stats.getSecondaryEventQueueSize())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "when(this.queueRegion.getKeyInfo(KEY,null,null)).thenReturn(new KeyInfo(KEY,null,null))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "validateDestroyFromBucketQueueAndTempQueueInUninitializedBucketRegionQueue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "createAndProcessParallelQueueRemovalMessage()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(1,tempQueue.size())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(1,this.bucketRegionQueue.size())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "createAndProcessParallelQueueRemovalMessage()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "this.bucketRegionQueueHelper.cleanUpDestroyedTokensAndMarkGIIComplete()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "BlockingQueue<GatewaySenderEventImpl> tempQueue = createTempQueueAndAddEvent(processor,mock())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "GatewaySenderEventImpl event = this.bucketRegionQueueHelper.addEvent(KEY)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(0,this.bucketRegionQueue.size())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "validateDestroyFromTempQueueInUninitializedBucketRegionQueue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
5->10 [style = bold, label=""];
5->8 [style = bold, label=""];
8->10 [style = bold, label=""];
1->4 [style = bold, label=""];
22->19 [style = bold, label=""];
17->6 [style = bold, label=""];
11->1 [style = bold, label=""];
2->6 [style = bold, label=""];
1->15 [style = dashed, label="0"];
10->4 [style = solid, label="processor"];
10->21 [style = bold, label=""];
2->17 [style = dashed, label="0"];
13->11 [style = bold, label=""];
11->15 [style = bold, label=""];
20->22 [style = bold, label=""];
21->20 [style = bold, label=""];
13->21 [style = dashed, label="0"];
14->0 [style = bold, label=""];
10->13 [style = bold, label=""];
3->2 [style = bold, label=""];
18->5 [style = bold, label=""];
15->4 [style = bold, label=""];
12->14 [style = bold, label=""];
9->5 [style = bold, label=""];
4->12 [style = bold, label=""];
16->5 [style = bold, label=""];
3->17 [style = bold, label=""];
13->4 [style = solid, label="event"];
6->7 [style = bold, label=""];
10->21 [style = solid, label="processor"];
}
