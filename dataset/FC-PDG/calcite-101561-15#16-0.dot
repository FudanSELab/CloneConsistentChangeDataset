digraph {
7 [style = filled, label = "final String expectedSnowflake = expectedPostgresql@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final String expectedPostgresql = \"SELECT SUBSTRING(\"brand_name\" FROM 2 FOR 3)\" + \"FROM \"foodmart\".\"product\"\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testSubstring['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "testSubstringWithFor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final String expectedPresto = \"SELECT SUBSTR(\"brand_name\", 2, 3)\" + \"FROM \"foodmart\".\"product\"\"@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final String expectedOracle = \"SELECT SUBSTR(\"brand_name\", 2)\" + \"FROM \"foodmart\".\"product\"\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final String expectedRedshift = expectedPostgresql@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final String query = \"select substring(\"brand_name\" from 2) \" + \"from \"product\"\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "sql(query).withClickHouse().ok(expectedClickHouse).withMssql().throws_(\"MSSQL SUBSTRING requires FROM and FOR arguments\").withMysql().ok(expectedMysql).withOracle().ok(expectedOracle).withPostgresql().ok(expectedPostgresql).withPresto().ok(expectedPresto).withRedshift().ok(expectedRedshift).withSnowflake().ok(expectedSnowflake)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "final String expectedMssql = \"SELECT SUBSTRING((brand_name(, 2, 3)\" + \"FROM (foodmart(.(product(\"@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final String expectedPostgresql = \"SELECT SUBSTRING(\"brand_name\" FROM 2)\" + \"FROM \"foodmart\".\"product\"\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final String expectedMysql = \"SELECT SUBSTRING(`brand_name` FROM 2)\" + \"FROM `foodmart`.`product`\"@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "sql(query).withClickHouse().ok(expectedClickHouse).withOracle().ok(expectedOracle).withPostgresql().ok(expectedPostgresql).withPresto().ok(expectedPresto).withSnowflake().ok(expectedSnowflake).withRedshift().ok(expectedRedshift).withMysql().ok(expectedMysql).withMssql().ok(expectedMssql)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final String expectedClickHouse = \"SELECT substring(`brand_name`, 2, 3)\" + \"FROM `foodmart`.`product`\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testSubstring['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final String expectedOracle = \"SELECT SUBSTR(\"brand_name\", 2, 3)\" + \"FROM \"foodmart\".\"product\"\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final String expectedPresto = \"SELECT SUBSTR(\"brand_name\", 2)\" + \"FROM \"foodmart\".\"product\"\"@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final String expectedMysql = \"SELECT SUBSTRING(`brand_name` FROM 2 FOR 3)\" + \"FROM `foodmart`.`product`\"@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final String expectedClickHouse = \"SELECT substring(`brand_name`, 2)\" + \"FROM `foodmart`.`product`\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final String query = \"select substring(\"brand_name\" from 2 for 3) \" + \"from \"product\"\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "sql(query).withClickHouse().ok(expectedClickHouse).withOracle().ok(expectedOracle).withPostgresql().ok(expectedPostgresql).withPresto().ok(expectedPresto).withSnowflake().ok(expectedSnowflake).withRedshift().ok(expectedRedshift).withMysql().ok(expectedMysql).withMssql().throws_(\"MSSQL SUBSTRING requires FROM and FOR arguments\")@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5->12 [style = dashed, label="0"];
20->13 [style = bold, label=""];
17->15 [style = solid, label="expectedMssql"];
9->0 [style = bold, label=""];
0->6 [style = bold, label=""];
8->18 [style = bold, label=""];
1->3 [style = bold, label=""];
18->17 [style = bold, label=""];
2->7 [style = solid, label="expectedPostgresql"];
1->18 [style = dashed, label="0"];
4->2 [style = bold, label=""];
16->19 [style = bold, label=""];
7->8 [style = bold, label=""];
7->10 [style = solid, label="expectedSnowflake"];
13->16 [style = bold, label=""];
12->7 [style = bold, label=""];
14->8 [style = solid, label="expectedPostgresql"];
2->8 [style = solid, label="expectedPostgresql"];
8->1 [style = bold, label=""];
6->4 [style = bold, label=""];
11->0 [style = bold, label=""];
6->16 [style = dashed, label="0"];
19->14 [style = bold, label=""];
2->14 [style = dashed, label="0"];
14->7 [style = solid, label="expectedPostgresql"];
14->12 [style = bold, label=""];
0->13 [style = dashed, label="0"];
17->15 [style = bold, label=""];
5->7 [style = bold, label=""];
4->19 [style = dashed, label="0"];
3->10 [style = dashed, label="0"];
1->10 [style = bold, label=""];
2->5 [style = bold, label=""];
}
