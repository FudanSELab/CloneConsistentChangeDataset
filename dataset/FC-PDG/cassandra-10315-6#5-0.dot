digraph {
32 [style = filled, label = "spyPrepare.interceptMessageOut(3).get(1,TimeUnit.SECONDS)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "Assert.assertFalse(repairSubmitted.get())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "sessionResult.get(1,TimeUnit.SECONDS)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "MockMessagingSpy sendFailSessionExpectedSpy = createFailSessionSpy(Lists.newArrayList(PARTICIPANT1,PARTICIPANT2,PARTICIPANT3))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Assert.assertFalse(hasFailures.get())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "UUID uuid = registerSession(cfs,true,true)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "CoordinatorSession coordinator = ActiveRepairService.instance.consistent.coordinated.registerSession(uuid,PARTICIPANTS,false)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "spyFinalize.interceptNoMsg(100,TimeUnit.MILLISECONDS)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(ConsistentSession.State.FAILED,coordinator.getState())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "spyPrepare.interceptNoMsg(100,TimeUnit.MILLISECONDS)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "sendFailSessionExpectedSpy.interceptMessageOut(3).get(1,TimeUnit.SECONDS)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ExecutionException e@@@21@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "Assert.assertEquals(ConsistentSession.State.FINALIZED,coordinator.getState())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "AtomicBoolean repairSubmitted = new AtomicBoolean(false)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "spyCommit.interceptMessageOut(3).get(1,TimeUnit.SECONDS)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertFalse(repairSubmitted.get())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Supplier<ListenableFuture<List<RepairSessionResult>>> sessionSupplier = null@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Assert.assertFalse(ActiveRepairService.instance.consistent.local.isSessionInProgress(uuid))@@@36@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ListenableFuture<Boolean> sessionResult = coordinator.execute(sessionSupplier,proposeFailed)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "CountDownLatch prepareLatch = createLatch()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "Assert.assertTrue(sessionResult.get())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "CountDownLatch finalizeLatch = createLatch()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "Assert.assertFalse(sessionResult.isDone())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testMockedMessagingPrepareFailure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "SettableFuture<List<RepairSessionResult>> repairFuture = SettableFuture.create()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "AtomicBoolean repairSubmitted = new AtomicBoolean(false)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "MockMessagingSpy spyPrepare = createPrepareSpy(Collections.emptySet(),Collections.emptySet(),prepareLatch)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "prepareLatch.countDown()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "CountDownLatch prepareLatch@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "AtomicBoolean hasFailures = new AtomicBoolean(false)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Assert.assertFalse(hasFailures.get())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "Assert.assertFalse(sessionResult.isDone())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "testMockedMessagingHappyPath['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertFalse(ActiveRepairService.instance.consistent.local.isSessionInProgress(uuid))@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "ListenableFuture<Boolean> sessionResult = coordinator.execute(sessionSupplier,hasFailures)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "SettableFuture<List<RepairSessionResult>> repairFuture = SettableFuture.create()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(proposeFailed.get())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "AtomicBoolean proposeFailed = new AtomicBoolean(false)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "UUID uuid = registerSession(cfs,true,true)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "repairFuture.set(Lists.newArrayList(createResult(coordinator),createResult(coordinator),createResult(coordinator)))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testMockedMessagingPrepareFailure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "{}@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertFalse(proposeFailed.get())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "CoordinatorSession coordinator = ActiveRepairService.instance.consistent.coordinated.registerSession(uuid,PARTICIPANTS,false)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "spyCommit.interceptNoMsg(100,TimeUnit.MILLISECONDS)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "finalizeLatch.countDown()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "spyFinalize.interceptMessageOut(3).get(1,TimeUnit.SECONDS)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertFalse(repairSubmitted.get())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "fail(\"Completed session without failure after prepare failed\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertFalse(hasFailures.get())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "prepareLatch.countDown()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "MockMessagingSpy spyFinalize = createFinalizeSpy(Collections.emptySet(),Collections.emptySet(),finalizeLatch)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "MockMessagingSpy spyCommit = createCommitSpy()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17->8 [style = bold, label=""];
49->42 [style = bold, label=""];
34->29 [style = bold, label=""];
51->26 [style = solid, label="prepareLatch"];
16->0 [style = bold, label=""];
4->14 [style = bold, label=""];
40->49 [style = bold, label=""];
23->5 [style = bold, label=""];
35->24 [style = solid, label="coordinator"];
35->44 [style = bold, label=""];
29->30 [style = bold, label=""];
30->43 [style = bold, label=""];
3->37 [style = dashed, label="0"];
47->28 [style = bold, label=""];
30->37 [style = solid, label="hasFailures"];
1->3 [style = bold, label=""];
12->32 [style = bold, label=""];
42->47 [style = bold, label=""];
31->38 [style = bold, label=""];
29->37 [style = solid, label="sessionSupplier"];
43->37 [style = bold, label=""];
13->40 [style = dashed, label="0"];
27->16 [style = bold, label=""];
11->19 [style = bold, label=""];
0->3 [style = solid, label="proposeFailed"];
2->10 [style = bold, label=""];
12->9 [style = bold, label=""];
14->46 [style = dashed, label="0"];
48->27 [style = bold, label=""];
16->35 [style = solid, label="uuid"];
21->45 [style = dashed, label="0"];
28->41 [style = bold, label=""];
33->26 [style = bold, label=""];
20->5 [style = bold, label=""];
19->16 [style = bold, label=""];
6->49 [style = dashed, label="0"];
33->48 [style = solid, label="finalizeLatch"];
5->2 [style = bold, label=""];
8->50 [style = dashed, label="0"];
45->25 [style = bold, label=""];
36->24 [style = bold, label=""];
23->18 [style = dotted, label="true"];
32->50 [style = bold, label=""];
24->31 [style = bold, label=""];
25->12 [style = bold, label=""];
0->1 [style = bold, label=""];
22->12 [style = bold, label=""];
50->36 [style = bold, label=""];
0->30 [style = dashed, label="0"];
44->34 [style = bold, label=""];
12->14 [style = bold, label=""];
16->3 [style = solid, label="sessionSupplier"];
9->14 [style = bold, label=""];
20->18 [style = dotted, label="true"];
7->15 [style = bold, label=""];
3->21 [style = bold, label=""];
3->17 [style = bold, label=""];
37->45 [style = bold, label=""];
38->46 [style = bold, label=""];
8->4 [style = bold, label=""];
14->13 [style = bold, label=""];
13->6 [style = bold, label=""];
6->7 [style = bold, label=""];
16->35 [style = bold, label=""];
46->40 [style = bold, label=""];
26->48 [style = bold, label=""];
41->39 [style = bold, label=""];
52->51 [style = bold, label=""];
21->17 [style = bold, label=""];
2->15 [style = solid, label="uuid"];
51->33 [style = bold, label=""];
2->10 [style = solid, label="uuid"];
16->39 [style = solid, label="uuid"];
10->11 [style = bold, label=""];
}
