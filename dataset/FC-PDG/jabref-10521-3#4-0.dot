digraph {
71 [style = filled, label = "assertEquals(Optional.of(\"Publisher\"),entry.getField(\"publisher\"))@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "entry = entries.get(1)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "Assert.assertEquals(Optional.of(\"Best of JabRef\"),entry.getField(FieldName.JOURNAL))@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(5,entries.size())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "BibEntry entry = entries.get(0)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertEquals(Optional.of(\"Test\"),entry.getField(\"address\"))@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
60 [style = filled, label = "assertEquals(Optional.of(\"28\"),entry.getField(\"volume\"))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "Assert.assertEquals(\"inproceedings\",entry.getType())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "Assert.assertEquals(\"book\",entry.getType())@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "testImportEntries1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertEquals(Optional.of(\"103--106\"),entry.getField(\"pages\"))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "assertEquals(\"book\",entry.getType())@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "assertEquals(Optional.of(\"28\"),entry.getField(\"volume\"))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "Assert.assertEquals(Optional.of(\"2015\"),entry.getField(\"year\"))@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
66 [style = filled, label = "assertEquals(Optional.of(\"Max\"),entry.getField(\"author\"))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
77 [style = filled, label = "assertEquals(Optional.of(\"Max\"),entry.getField(\"editor\"))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Assert.assertEquals(Optional.of(\"Einleitung\"),entry.getField(\"chaptertitle\"))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(Optional.of(\"58\"),entry.getField(\"pages\"))@@@43@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(Optional.of(\"Test\"),entry.getField(\"title\"))@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "Assert.assertEquals(Optional.of(\"Very Long Title\"),entry.getField(\"journal\"))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
64 [style = filled, label = "testImportEntries1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
79 [style = filled, label = "assertEquals(Optional.of(\"103--106\"),entry.getField(\"pages\"))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "Assert.assertEquals(Optional.of(\"Very Long Title\"),entry.getField(\"journal\"))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "Assert.assertEquals(Optional.of(\"2\"),entry.getField(\"issue\"))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
81 [style = filled, label = "assertEquals(Optional.of(\"Editor\"),entry.getField(\"editor\"))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
86 [style = filled, label = "worker.cleanup(entry)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "assertEquals(Optional.empty(),entry.getField(\"title\"))@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Assert.assertEquals(Optional.of(\"103--106\"),entry.getField(\"pages\"))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "assertEquals(Optional.of(\"2\"),entry.getField(\"issue\"))@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Assert.assertEquals(Optional.of(\"Very Long Title\"),entry.getField(\"booktitle\"))@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
83 [style = filled, label = "cleanupMovesJournaltitleToJournal['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "assertEquals(Optional.of(\"Einleitung\"),entry.getField(\"chaptertitle\"))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "Assert.assertEquals(\"article\",entry.getType())@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "entry = entries.get(2)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(Optional.of(\"103--106\"),entry.getField(\"pages\"))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "Assert.assertEquals(Optional.of(\"Publisher\"),entry.getField(\"publisher\"))@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
69 [style = filled, label = "assertEquals(Optional.of(\"Test\"),entry.getField(\"address\"))@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "Assert.assertEquals(Optional.of(\"28\"),entry.getField(\"volume\"))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
80 [style = filled, label = "assertEquals(Optional.of(\"2015\"),entry.getField(\"year\"))@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "assertEquals(\"inproceedings\",entry.getType())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
84 [style = filled, label = "Assert.assertEquals(Optional.empty(),entry.getField(FieldName.JOURNALTITLE))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "assertEquals(\"misc\",entry.getType())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "Assert.assertEquals(Optional.of(\"2014\"),entry.getField(\"year\"))@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(Optional.of(\"Max\"),entry.getField(\"author\"))@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
61 [style = filled, label = "assertEquals(Optional.of(\"Max\"),entry.getField(\"author\"))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Assert.assertEquals(Optional.of(\"Address\"),entry.getField(\"address\"))@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(Optional.of(\"TestPublisher\"),entry.getField(\"publisher\"))@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
67 [style = filled, label = "assertEquals(Optional.of(\"2014\"),entry.getField(\"year\"))@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "assertEquals(Optional.of(\"Test\"),entry.getField(\"title\"))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "Assert.assertEquals(Optional.of(\"2\"),entry.getField(\"issue\"))@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(Optional.of(\"Mustermann and Musterfrau\"),entry.getField(\"author\"))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "Assert.assertEquals(\"misc\",entry.getType())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
73 [style = filled, label = "assertEquals(\"incollection\",entry.getType())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "List<BibEntry> entries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(Optional.empty(),entry.getField(\"title\"))@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
58 [style = filled, label = "assertEquals(Optional.of(\"2\"),entry.getField(\"issue\"))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
78 [style = filled, label = "assertEquals(Optional.of(\"Very Long Title\"),entry.getField(\"journal\"))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "Assert.assertEquals(Optional.of(\"Musterbuch\"),entry.getField(\"title\"))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "assertEquals(Optional.of(\"Musterbuch\"),entry.getField(\"title\"))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "entry = entries.get(3)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertEquals(Optional.of(\"Address\"),entry.getField(\"address\"))@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "Assert.assertEquals(Optional.of(\"Max the Editor\"),entry.getField(\"title\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "assertEquals(Optional.of(\"58\"),entry.getField(\"pages\"))@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
76 [style = filled, label = "assertEquals(Optional.of(\"Short abstract\"),entry.getField(\"abstract\"))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "assertEquals(Optional.of(\"Very Long Title\"),entry.getField(\"journal\"))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "Assert.assertEquals(Optional.of(\"Max\"),entry.getField(\"author\"))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(\"incollection\",entry.getType())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
68 [style = filled, label = "assertEquals(Optional.of(\"April\"),entry.getField(\"month\"))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "Assert.assertEquals(Optional.of(\"Short abstract\"),entry.getField(\"abstract\"))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
85 [style = filled, label = "BibEntry entry = new BibEntry().withField(\"journaltitle\",\"Best of JabRef\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "assertEquals(Optional.of(\"Mustermann and Musterfrau\"),entry.getField(\"author\"))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "Assert.assertEquals(Optional.of(\"103--106\"),entry.getField(\"pages\"))@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
65 [style = filled, label = "assertEquals(Optional.of(\"TestPublisher\"),entry.getField(\"publisher\"))@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
82 [style = filled, label = "assertEquals(Optional.of(\"2015\"),entry.getField(\"year\"))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Assert.assertEquals(5,entries.size())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(Optional.of(\"April\"),entry.getField(\"month\"))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(Optional.of(\"Max\"),entry.getField(\"editor\"))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(Optional.of(\"2015\"),entry.getField(\"year\"))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
63 [style = filled, label = "assertEquals(Optional.of(\"2015\"),entry.getField(\"year\"))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Path file = Paths.get(.getResource(\"OvidImporterTest1.txt\").toURI())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(Optional.of(\"Editor\"),entry.getField(\"editor\"))@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(Optional.of(\"103--106\"),entry.getField(\"pages\"))@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
75 [style = filled, label = "assertEquals(Optional.of(\"Very Long Title\"),entry.getField(\"booktitle\"))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "entry = entries.get(4)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertEquals(\"article\",entry.getType())@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "Assert.assertEquals(Optional.of(\"2015\"),entry.getField(\"year\"))@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "Assert.assertEquals(Optional.of(\"28\"),entry.getField(\"volume\"))@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "assertEquals(Optional.of(\"Max the Editor\"),entry.getField(\"title\"))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2->35 [style = bold, label=""];
34->20 [style = bold, label=""];
0->13 [style = bold, label=""];
29->30 [style = bold, label=""];
78->60 [style = bold, label=""];
20->26 [style = bold, label=""];
27->28 [style = bold, label=""];
17->71 [style = dashed, label="0"];
26->40 [style = bold, label=""];
59->71 [style = bold, label=""];
53->11 [style = bold, label=""];
85->86 [style = bold, label=""];
10->41 [style = bold, label=""];
3->4 [style = bold, label=""];
0->82 [style = dashed, label="0"];
29->52 [style = dashed, label="0"];
1->59 [style = dashed, label="0"];
74->67 [style = bold, label=""];
52->68 [style = bold, label=""];
44->23 [style = bold, label=""];
31->56 [style = dashed, label="0"];
45->25 [style = bold, label=""];
8->84 [style = dashed, label="0"];
62->65 [style = bold, label=""];
73->61 [style = bold, label=""];
47->51 [style = bold, label=""];
66->80 [style = bold, label=""];
16->42 [style = bold, label=""];
70->57 [style = bold, label=""];
83->85 [style = bold, label=""];
13->22 [style = bold, label=""];
9->24 [style = bold, label=""];
5->37 [style = bold, label=""];
31->14 [style = bold, label=""];
43->16 [style = bold, label=""];
19->34 [style = bold, label=""];
28->5 [style = bold, label=""];
36->9 [style = bold, label=""];
11->56 [style = bold, label=""];
55->59 [style = bold, label=""];
30->68 [style = dashed, label="0"];
2->74 [style = bold, label=""];
22->73 [style = bold, label=""];
40->51 [style = dashed, label="0"];
26->47 [style = dashed, label="0"];
14->38 [style = bold, label=""];
20->48 [style = dashed, label="0"];
41->46 [style = dashed, label="0"];
46->78 [style = bold, label=""];
35->21 [style = bold, label=""];
1->17 [style = bold, label=""];
38->32 [style = bold, label=""];
69->62 [style = bold, label=""];
34->61 [style = dashed, label="0"];
61->48 [style = bold, label=""];
21->67 [style = dashed, label="0"];
76->49 [style = bold, label=""];
50->77 [style = bold, label=""];
7->57 [style = dashed, label="0"];
17->2 [style = bold, label=""];
13->79 [style = dashed, label="0"];
39->7 [style = bold, label=""];
57->76 [style = bold, label=""];
79->22 [style = bold, label=""];
5->72 [style = dashed, label="0"];
63->53 [style = bold, label=""];
41->43 [style = bold, label=""];
38->80 [style = dashed, label="0"];
30->44 [style = bold, label=""];
15->33 [style = bold, label=""];
40->29 [style = bold, label=""];
72->37 [style = bold, label=""];
75->55 [style = bold, label=""];
15->75 [style = dashed, label="0"];
80->81 [style = bold, label=""];
25->39 [style = bold, label=""];
25->70 [style = bold, label=""];
67->54 [style = bold, label=""];
22->19 [style = bold, label=""];
14->66 [style = dashed, label="0"];
33->55 [style = dashed, label="0"];
68->63 [style = bold, label=""];
12->36 [style = bold, label=""];
51->52 [style = bold, label=""];
56->66 [style = bold, label=""];
28->49 [style = dashed, label="0"];
36->69 [style = dashed, label="0"];
42->0 [style = bold, label=""];
21->12 [style = bold, label=""];
60->58 [style = bold, label=""];
11->31 [style = bold, label=""];
86->84 [style = bold, label=""];
10->77 [style = dashed, label="0"];
42->58 [style = dashed, label="0"];
12->54 [style = dashed, label="0"];
18->10 [style = bold, label=""];
81->75 [style = bold, label=""];
9->62 [style = dashed, label="0"];
16->60 [style = dashed, label="0"];
23->11 [style = bold, label=""];
64->4 [style = bold, label=""];
24->65 [style = dashed, label="0"];
19->73 [style = dashed, label="0"];
35->74 [style = dashed, label="0"];
23->53 [style = dashed, label="0"];
39->70 [style = dashed, label="0"];
4->6 [style = bold, label=""];
71->2 [style = bold, label=""];
54->69 [style = bold, label=""];
44->63 [style = dashed, label="0"];
33->1 [style = bold, label=""];
77->46 [style = bold, label=""];
18->50 [style = dashed, label="0"];
43->78 [style = dashed, label="0"];
84->87 [style = bold, label=""];
48->47 [style = bold, label=""];
6->8 [style = bold, label=""];
82->79 [style = bold, label=""];
32->15 [style = bold, label=""];
37->18 [style = bold, label=""];
7->27 [style = bold, label=""];
8->45 [style = dashed, label="0"];
85->86 [style = solid, label="entry"];
32->81 [style = dashed, label="0"];
6->45 [style = bold, label=""];
58->82 [style = bold, label=""];
8->25 [style = bold, label=""];
27->76 [style = dashed, label="0"];
37->50 [style = bold, label=""];
49->72 [style = bold, label=""];
}
