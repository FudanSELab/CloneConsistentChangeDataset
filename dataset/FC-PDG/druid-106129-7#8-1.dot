digraph {
9 [style = filled, label = "List<JoinableClause> joinableClauses = ImmutableList.of(new JoinableClause(FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX,LookupJoinable.wrap(countryIsoCodeToNameLookup),JoinType.INNER,JoinConditionAnalysis.forExpression(StringUtils.format(\"\"%sk\" == virtual\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX),FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX,ExprMacroTable.nil())))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "JoinFilterPreAnalysis joinFilterPreAnalysis = makeDefaultConfigPreAnalysis(null,joinableClauses,virtualColumns)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "test_makeCursors_factToCountryUsingVirtualColumn['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "List<JoinableClause> joinableClauses = ImmutableList.of(new JoinableClause(FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX,new IndexedTableJoinable(countriesTable),JoinType.INNER,JoinConditionAnalysis.forExpression(StringUtils.format(\"\"%scountryIsoCode\" == virtual\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX),FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX,ExprMacroTable.nil())))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "VirtualColumns virtualColumns = VirtualColumns.create(Collections.singletonList(new ExpressionVirtualColumn(\"virtual\",\"concat(substring(countryIsoCode, 0, 1),'L')\",ValueType.STRING,ExprMacroTable.nil())))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "JoinTestHelper.verifyCursors(new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,joinFilterPreAnalysisGroup).makeCursors(null,Intervals.ETERNITY,virtualColumns,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",\"virtual\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"k\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"v\"),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8eb3bc,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8eb3c4,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8eb3cc,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8eb3d4))@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "JoinTestHelper.verifyCursors(new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,joinFilterPreAnalysisGroup).makeCursors(null,Intervals.ETERNITY,virtualColumns,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",\"virtual\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryIsoCode\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryName\"),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8eb2b1,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8eb2b9,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8eb2c1,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8eb2c9))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "JoinFilterPreAnalysisGroup joinFilterPreAnalysisGroup = makeDefaultConfigPreAnalysisGroup(null,joinableClauses,virtualColumns)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "JoinTestHelper.verifyCursors(new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,joinFilterPreAnalysis).makeCursors(null,Intervals.ETERNITY,virtualColumns,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",\"virtual\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryIsoCode\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryName\"),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8eb336,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8eb33e,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8eb346,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8eb34e))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "test_makeCursors_factToCountryUsingVirtualColumn['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "test_makeCursors_factToCountryUsingVirtualColumnUsingLookup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4->6 [style = solid, label="virtualColumns"];
1->4 [style = bold, label=""];
4->2 [style = solid, label="virtualColumns"];
3->6 [style = dashed, label="0"];
7->1 [style = bold, label=""];
9->4 [style = bold, label=""];
2->3 [style = bold, label=""];
1->9 [style = dashed, label="0"];
4->2 [style = bold, label=""];
9->2 [style = solid, label="joinableClauses"];
4->5 [style = solid, label="virtualColumns"];
2->5 [style = dashed, label="0"];
4->3 [style = solid, label="virtualColumns"];
4->8 [style = solid, label="virtualColumns"];
5->6 [style = bold, label=""];
0->1 [style = bold, label=""];
1->2 [style = solid, label="joinableClauses"];
3->8 [style = dashed, label="0"];
10->9 [style = bold, label=""];
1->5 [style = solid, label="joinableClauses"];
4->5 [style = bold, label=""];
2->8 [style = bold, label=""];
}
