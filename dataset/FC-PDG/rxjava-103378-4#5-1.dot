digraph {
39 [style = filled, label = "SizeAndTimeBoundReplayBuffer<Integer> buf = new SizeAndTimeBoundReplayBuffer<Integer>(2,2000,TimeUnit.MILLISECONDS,test,false)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Assert.assertFalse(buf.hasError())@@@30@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "values.clear()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertFalse(buf.hasError())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "timedAndSizedTruncation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "buf.error(new TestException())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "TestScheduler test = new TestScheduler()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "SizeAndTimeBoundReplayBuffer<Integer> buf = new SizeAndTimeBoundReplayBuffer<Integer>(2,2000,TimeUnit.MILLISECONDS,test,true)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "values.clear()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "test.advanceTimeBy(2,TimeUnit.SECONDS)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(Arrays.asList(3,4),values)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertFalse(buf.hasCompleted())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "test.advanceTimeBy(1,TimeUnit.SECONDS)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertFalse(buf.hasError())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "buf.collect(values)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "buf.collect(values)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "buf.collect(values)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "test.advanceTimeBy(2,TimeUnit.SECONDS)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertTrue(buf.hasCompleted())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "buf.collect(values)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertFalse(buf.hasCompleted())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(1,buf.size)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertTrue(buf.hasError())@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "SizeAndTimeBoundReplayBuffer<Integer> buf = new SizeAndTimeBoundReplayBuffer<>(2,2000,TimeUnit.MILLISECONDS,test,true)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "buf.next(5)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertFalse(buf.hasCompleted())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "timedAndSizedTruncationError['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "buf.next(2)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "buf.complete()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "List<Integer> values = new ArrayList<>()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "Assert.assertEquals(Arrays.asList(2),values)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "List<Integer> values = new ArrayList<Integer>()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "buf.next(4)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "test.advanceTimeBy(1,TimeUnit.SECONDS)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertTrue(values.isEmpty())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(Arrays.asList(5),values)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "buf.next(1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "buf.next(3)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "timedAndSizedTruncationError['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "values.clear()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35->11 [style = solid, label="values"];
37->0 [style = bold, label=""];
18->24 [style = bold, label=""];
14->25 [style = bold, label=""];
8->15 [style = bold, label=""];
23->30 [style = bold, label=""];
10->31 [style = bold, label=""];
21->6 [style = bold, label=""];
35->6 [style = solid, label="values"];
0->19 [style = bold, label=""];
35->25 [style = solid, label="values"];
24->26 [style = solid, label="test"];
9->4 [style = bold, label=""];
24->39 [style = solid, label="test"];
35->28 [style = solid, label="values"];
24->39 [style = bold, label=""];
12->20 [style = bold, label=""];
27->1 [style = solid, label="values"];
20->32 [style = bold, label=""];
38->27 [style = bold, label=""];
27->13 [style = solid, label="values"];
19->10 [style = bold, label=""];
30->9 [style = bold, label=""];
26->33 [style = dashed, label="0"];
33->12 [style = bold, label=""];
35->21 [style = solid, label="values"];
32->13 [style = solid, label="values"];
16->22 [style = bold, label=""];
17->31 [style = dashed, label="0"];
32->2 [style = bold, label=""];
27->19 [style = solid, label="values"];
9->37 [style = bold, label=""];
1->23 [style = bold, label=""];
4->0 [style = bold, label=""];
20->27 [style = bold, label=""];
29->28 [style = bold, label=""];
5->21 [style = bold, label=""];
24->33 [style = bold, label=""];
24->26 [style = bold, label=""];
26->39 [style = dashed, label="0"];
26->12 [style = bold, label=""];
34->24 [style = bold, label=""];
32->15 [style = solid, label="values"];
36->24 [style = bold, label=""];
27->16 [style = solid, label="values"];
32->22 [style = solid, label="values"];
27->22 [style = solid, label="values"];
15->1 [style = bold, label=""];
6->16 [style = bold, label=""];
25->11 [style = bold, label=""];
13->7 [style = bold, label=""];
39->35 [style = bold, label=""];
32->7 [style = solid, label="values"];
11->13 [style = bold, label=""];
28->8 [style = bold, label=""];
27->32 [style = dashed, label="0"];
35->37 [style = solid, label="values"];
3->17 [style = bold, label=""];
32->1 [style = solid, label="values"];
3->10 [style = dashed, label="0"];
32->19 [style = solid, label="values"];
35->8 [style = solid, label="values"];
35->38 [style = bold, label=""];
31->3 [style = bold, label=""];
24->33 [style = solid, label="test"];
32->16 [style = solid, label="values"];
27->15 [style = solid, label="values"];
22->14 [style = bold, label=""];
23->9 [style = bold, label=""];
27->2 [style = bold, label=""];
27->7 [style = solid, label="values"];
2->5 [style = bold, label=""];
7->29 [style = bold, label=""];
}
