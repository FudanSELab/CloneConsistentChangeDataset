digraph {
11 [style = filled, label = "multiHavingErrors(zk,opList,expectedResultCodes,expectedErr,useAsync)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "expectedResultCodes.add(KeeperException.Code.BADARGUMENTS.intValue())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testBlankPath['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "boolean useAsync@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "expectedResultCodes.add(KeeperException.Code.RUNTIMEINCONSISTENCY.intValue())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testBlankPath['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "expectedResultCodes.add(KeeperException.Code.RUNTIMEINCONSISTENCY.intValue())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String expectedErr = \"Path cannot be null\"@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int createModeFlag = 6789@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "List<Op> opList = Arrays.asList(Op.create(\"/multi0\",new byte((((,Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT),Op.create(\"/multi1\",new byte((((,Ids.OPEN_ACL_UNSAFE,createModeFlag),Op.create(\"/multi2\",new byte((((,Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "multiHavingErrors(zk,opList,expectedResultCodes,expectedErr)@@@10@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expectedResultCodes.add(KeeperException.Code.BADARGUMENTS.intValue())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "List<Op> opList = Arrays.asList(Op.delete(\"/multi0\",-1),Op.delete(null,100),Op.delete(\"/multi2\",5),Op.delete(\"\",-1))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testInvalidCreateModeFlag['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "String expectedErr = KeeperException.Code.BADARGUMENTS.name()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "List<Integer> expectedResultCodes = new ArrayList<Integer>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->8 [style = bold, label=""];
10->11 [style = solid, label="useAsync"];
2->6 [style = bold, label=""];
14->4 [style = solid, label="opList"];
12->14 [style = solid, label="createModeFlag"];
0->11 [style = bold, label=""];
1->11 [style = solid, label="expectedResultCodes"];
0->4 [style = solid, label="opList"];
7->3 [style = bold, label=""];
3->0 [style = bold, label=""];
3->11 [style = solid, label="expectedErr"];
13->1 [style = bold, label=""];
5->1 [style = bold, label=""];
8->2 [style = bold, label=""];
0->4 [style = bold, label=""];
15->4 [style = bold, label=""];
12->14 [style = bold, label=""];
15->4 [style = solid, label="expectedErr"];
14->15 [style = bold, label=""];
0->11 [style = solid, label="opList"];
4->11 [style = dashed, label="0"];
6->7 [style = bold, label=""];
9->1 [style = bold, label=""];
9->10 [style = dotted, label="true"];
1->4 [style = solid, label="expectedResultCodes"];
3->4 [style = solid, label="expectedErr"];
6->12 [style = bold, label=""];
}
