digraph {
46 [style = filled, label = "assertStream(x.getStream(\"dir/dir/a.txt\",JAPANESE)).asString().contains(\"(cp:/files/test2/ja/dir/dir/a.txt(\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertStream(x.getStream(\"/dir/a.txt/\",JAPAN)).asString().contains(\"(home:/files/test2/ja/JP/dir/a.txt(\")@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "assertStream(stream(x,\"/a.txt/\",JAPANESE)).asString().contains(\"(home:/files/test2/ja/a.txt(\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "assertStream(x.getStream(\"/dir/dir/a.txt/\",JAPANESE)).asString().contains(\"(cp:/files/test2/ja/dir/dir/a.txt(\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertStream(x.getStream(\"/dir/dir/a.txt/\",JAPAN)).asString().contains(\"(cp:/files/test2/ja/JP/dir/dir/a.txt(\")@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "FileFinder x = FileFinder.create().cp(,\"/files/test2\",false).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "b04_fileSystem_localized_hierarchical['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertStream(x.getStream(\"dir/dir/a.txt\",JAPAN)).asString().contains(\"(cp:/files/test2/ja/JP/dir/dir/a.txt(\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertStream(stream(x,\"dir/a.txt\",JAPANESE)).asString().contains(\"(home:/files/test2/ja/dir/a.txt(\")@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertStream(x.getStream(\"a.txt\",JAPANESE)).asString().contains(\"(home:/files/test2/ja/a.txt(\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "assertStream(x.getStream(\"/a.txt/\",JAPAN)).asString().contains(\"(cp:/files/test2/ja/JP/a.txt(\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertStream(x.getStream(\"dir/a.txt\",null)).asString().contains(\"(cp:/files/test2/dir/a.txt(\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertStream(stream(x,\"a.txt\",JAPAN)).asString().contains(\"(home:/files/test2/ja/JP/a.txt(\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "assertStream(stream(x,\"/dir/a.txt/\",JAPAN)).asString().contains(\"(home:/files/test2/ja/JP/dir/a.txt(\")@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertStream(stream(x,\"/dir/a.txt/\",null)).asString().contains(\"(home:/files/test2/dir/a.txt(\")@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertStream(x.getStream(\"/dir/a.txt/\",JAPANESE)).asString().contains(\"(home:/files/test2/ja/dir/a.txt(\")@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assertStream(x.getStream(\"/dir/dir/a.txt/\",null)).asString().contains(\"(home:/files/test2/dir/dir/a.txt(\")@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertStream(x.getStream(\"dir/a.txt\",null)).asString().contains(\"(home:/files/test2/dir/a.txt(\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertStream(x.getStream(\"/dir/a.txt/\",null)).asString().contains(\"(home:/files/test2/dir/a.txt(\")@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertStream(x.getStream(\"dir/a.txt\",JAPANESE)).asString().contains(\"(home:/files/test2/ja/dir/a.txt(\")@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "assertStream(stream(x,\"dir/a.txt\",null)).asString().contains(\"(home:/files/test2/dir/a.txt(\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "assertStream(x.getStream(\"dir/a.txt\",JAPAN)).asString().contains(\"(cp:/files/test2/ja/JP/dir/a.txt(\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertStream(stream(x,\"a.txt\",null)).asString().contains(\"(home:/files/test2/a.txt(\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "FileFinder x = FileFinder.create().dir(\"files/test2\").build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertStream(stream(x,\"a.txt\",JAPANESE)).asString().contains(\"(home:/files/test2/ja/a.txt(\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "assertStream(x.getStream(\"/a.txt/\",null)).asString().contains(\"(cp:/files/test2/a.txt(\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertStream(stream(x,\"/dir/dir/a.txt/\",JAPANESE)).asString().contains(\"(home:/files/test2/ja/dir/dir/a.txt(\")@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "assertStream(x.getStream(\"/dir/a.txt/\",JAPAN)).asString().contains(\"(cp:/files/test2/ja/JP/dir/a.txt(\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertStream(x.getStream(\"/dir/dir/a.txt/\",JAPAN)).asString().contains(\"(home:/files/test2/ja/JP/dir/dir/a.txt(\")@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "assertStream(stream(x,\"dir/a.txt\",JAPAN)).asString().contains(\"(home:/files/test2/ja/JP/dir/a.txt(\")@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "assertStream(stream(x,\"dir/dir/a.txt\",JAPANESE)).asString().contains(\"(home:/files/test2/ja/dir/dir/a.txt(\")@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "assertStream(stream(x,\"/dir/dir/a.txt/\",JAPAN)).asString().contains(\"(home:/files/test2/ja/JP/dir/dir/a.txt(\")@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "assertStream(stream(x,\"/dir/a.txt/\",JAPANESE)).asString().contains(\"(home:/files/test2/ja/dir/a.txt(\")@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertStream(x.getStream(\"/a.txt/\",null)).asString().contains(\"(home:/files/test2/a.txt(\")@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "assertStream(x.getStream(\"/dir/a.txt/\",null)).asString().contains(\"(cp:/files/test2/dir/a.txt(\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertStream(x.getStream(\"dir/dir/a.txt\",JAPAN)).asString().contains(\"(home:/files/test2/ja/JP/dir/dir/a.txt(\")@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "assertStream(stream(x,\"dir/dir/a.txt\",null)).asString().contains(\"(home:/files/test2/dir/dir/a.txt(\")@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertStream(stream(x,\"/a.txt/\",JAPAN)).asString().contains(\"(home:/files/test2/ja/JP/a.txt(\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "assertStream(x.getStream(\"dir/a.txt\",JAPANESE)).asString().contains(\"(cp:/files/test2/ja/dir/a.txt(\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertStream(x.getStream(\"dir/a.txt\",JAPAN)).asString().contains(\"(home:/files/test2/ja/JP/dir/a.txt(\")@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "assertStream(x.getStream(\"a.txt\",JAPANESE)).asString().contains(\"(cp:/files/test2/ja/a.txt(\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "assertStream(x.getStream(\"/dir/dir/a.txt/\",null)).asString().contains(\"(cp:/files/test2/dir/dir/a.txt(\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertStream(x.getStream(\"a.txt\",null)).asString().contains(\"(home:/files/test2/a.txt(\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
55 [style = filled, label = "assertStream(x.getStream(\"/dir/a.txt/\",JAPANESE)).asString().contains(\"(cp:/files/test2/ja/dir/a.txt(\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "c04_classpathRoot_localized_hierarchical['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertStream(stream(x,\"/a.txt/\",null)).asString().contains(\"(home:/files/test2/a.txt(\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertStream(x.getStream(\"/a.txt/\",JAPANESE)).asString().contains(\"(home:/files/test2/ja/a.txt(\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "assertStream(stream(x,\"/dir/dir/a.txt/\",null)).asString().contains(\"(home:/files/test2/dir/dir/a.txt(\")@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "assertStream(x.getStream(\"/a.txt/\",JAPANESE)).asString().contains(\"(cp:/files/test2/ja/a.txt(\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertStream(x.getStream(\"dir/dir/a.txt\",JAPANESE)).asString().contains(\"(home:/files/test2/ja/dir/dir/a.txt(\")@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "assertStream(stream(x,\"dir/dir/a.txt\",JAPAN)).asString().contains(\"(home:/files/test2/ja/JP/dir/dir/a.txt(\")@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "assertStream(x.getStream(\"dir/dir/a.txt\",null)).asString().contains(\"(cp:/files/test2/dir/dir/a.txt(\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertStream(x.getStream(\"a.txt\",null)).asString().contains(\"(cp:/files/test2/a.txt(\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "b04_fileSystem_localized_hierarchical['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertStream(x.getStream(\"dir/dir/a.txt\",null)).asString().contains(\"(home:/files/test2/dir/dir/a.txt(\")@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "assertStream(x.getStream(\"a.txt\",JAPAN)).asString().contains(\"(cp:/files/test2/ja/JP/a.txt(\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertStream(x.getStream(\"/dir/dir/a.txt/\",JAPANESE)).asString().contains(\"(home:/files/test2/ja/dir/dir/a.txt(\")@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertStream(x.getStream(\"/a.txt/\",JAPAN)).asString().contains(\"(home:/files/test2/ja/JP/a.txt(\")@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "assertStream(x.getStream(\"a.txt\",JAPAN)).asString().contains(\"(home:/files/test2/ja/JP/a.txt(\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12->38 [style = dashed, label="0"];
11->53 [style = dashed, label="0"];
16->27 [style = dashed, label="0"];
22->37 [style = bold, label=""];
8->6 [style = bold, label=""];
25->14 [style = bold, label=""];
57->58 [style = bold, label=""];
36->33 [style = bold, label=""];
7->42 [style = dashed, label="0"];
44->46 [style = bold, label=""];
21->31 [style = bold, label=""];
1->49 [style = dashed, label="0"];
17->14 [style = bold, label=""];
48->43 [style = bold, label=""];
9->21 [style = dashed, label="0"];
39->49 [style = bold, label=""];
15->31 [style = dashed, label="0"];
0->34 [style = dashed, label="0"];
10->20 [style = dashed, label="0"];
9->41 [style = dashed, label="0"];
35->38 [style = bold, label=""];
18->29 [style = dashed, label="0"];
0->3 [style = bold, label=""];
45->41 [style = bold, label=""];
24->28 [style = bold, label=""];
16->58 [style = dashed, label="0"];
28->36 [style = bold, label=""];
3->39 [style = dashed, label="0"];
30->27 [style = bold, label=""];
4->18 [style = bold, label=""];
11->12 [style = bold, label=""];
10->7 [style = bold, label=""];
13->16 [style = bold, label=""];
50->39 [style = bold, label=""];
6->33 [style = dashed, label="0"];
4->55 [style = dashed, label="0"];
19->13 [style = bold, label=""];
6->45 [style = dashed, label="0"];
7->2 [style = bold, label=""];
19->46 [style = dashed, label="0"];
2->28 [style = dashed, label="0"];
13->57 [style = dashed, label="0"];
0->50 [style = dashed, label="0"];
49->54 [style = bold, label=""];
26->20 [style = bold, label=""];
8->40 [style = dashed, label="0"];
3->1 [style = bold, label=""];
1->26 [style = dashed, label="0"];
31->32 [style = bold, label=""];
37->30 [style = bold, label=""];
42->52 [style = bold, label=""];
8->36 [style = dashed, label="0"];
27->35 [style = bold, label=""];
54->42 [style = bold, label=""];
3->23 [style = dashed, label="0"];
5->19 [style = bold, label=""];
58->53 [style = bold, label=""];
52->40 [style = bold, label=""];
34->23 [style = bold, label=""];
41->47 [style = bold, label=""];
46->57 [style = bold, label=""];
5->22 [style = dashed, label="0"];
5->44 [style = dashed, label="0"];
18->56 [style = dashed, label="0"];
16->11 [style = bold, label=""];
43->50 [style = bold, label=""];
53->51 [style = bold, label=""];
12->51 [style = dashed, label="0"];
15->47 [style = dashed, label="0"];
23->26 [style = bold, label=""];
14->34 [style = bold, label=""];
2->52 [style = dashed, label="0"];
55->56 [style = bold, label=""];
32->29 [style = bold, label=""];
4->32 [style = dashed, label="0"];
10->54 [style = dashed, label="0"];
14->43 [style = dashed, label="0"];
47->55 [style = bold, label=""];
14->0 [style = bold, label=""];
7->24 [style = dashed, label="0"];
9->15 [style = bold, label=""];
18->5 [style = bold, label=""];
15->4 [style = bold, label=""];
40->45 [style = bold, label=""];
29->22 [style = bold, label=""];
6->9 [style = bold, label=""];
33->21 [style = bold, label=""];
20->24 [style = bold, label=""];
1->10 [style = bold, label=""];
19->37 [style = dashed, label="0"];
56->44 [style = bold, label=""];
13->30 [style = dashed, label="0"];
11->35 [style = dashed, label="0"];
2->8 [style = bold, label=""];
}
