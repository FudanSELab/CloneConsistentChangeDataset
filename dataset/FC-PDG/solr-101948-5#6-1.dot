digraph {
29 [style = filled, label = "PlacementRequest request@@@2@@@['1', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "computePlacement['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "attributeFetcher.requestNodeMetric(NodeMetricImpl.NUM_CORES)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "PlacementPlanFactory placementPlanFactory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "AttributeFetcher attributeFetcher@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "return placementContext.getPlacementPlanFactory().createPlacementPlan(request,replicaPlacements)@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "AttributeFetcher attributeFetcher = placementContext.getAttributeFetcher()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "int coreCount = e.getKey()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "computePlacement['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "nodesByCores.put(attrValues.getNodeMetric(node,NodeMetricImpl.NUM_CORES).get(),node)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "attributeFetcher.fetchFrom(nodes)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Iterator<Map.Entry<Integer,Node>> treeIterator = nodesByCores.entries().iterator()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "return placementPlanFactory.createPlacementPlan(request,replicaPlacements)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "ArrayList<Map.Entry<Integer,Node>> nodeEntriesToAssign = new ArrayList<>(totalReplicasPerShard)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "throw new PlacementException(\"Cluster size too small for number of replicas per shard\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "return placementPlanFactory.createPlacementPlan(request,replicaPlacements)@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "placeForReplicaType(request.getCollection(),nodesToAssign,placementPlanFactory,replicaPlacements,shardName,request,rt)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "ArrayList<Node> nodesToAssign = new ArrayList<>(cluster.getLiveNodes())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "nodesByCores.put(coreCount + 1,node)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Collections.shuffle(nodesToAssign,replicaPlacementRandom)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "placeReplicas(request.getCollection(),nodeEntriesToAssign,placementContext.getPlacementPlanFactory(),replicaPlacements,shardName,request,replicaType)@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "computePlacement['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "nodeEntriesToAssign.add(treeIterator.next())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "totalReplicasPerShard += request.getCountReplicasToCreate(rt)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "nodesByCores.remove(coreCount,node)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "AttributeValues attrValues = attributeFetcher.fetchAttributes()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Node node = e.getValue()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Set<Node> nodes = request.getTargetNodes()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int i = 0@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "placeReplicas(request.getCollection(),nodeEntriesToAssign,placementPlanFactory,replicaPlacements,shardName,request,replicaType)@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "placementContext.getCluster().getLiveNodes().size() < totalReplicasPerShard@@@7@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "PlacementRequest request@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "cluster.getLiveNodes().size() < totalReplicasPerShard@@@7@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "AttributeFetcher attributeFetcher@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "attrValues.getNodeMetric(node,NodeMetricImpl.NUM_CORES).isEmpty()@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Set<ReplicaPlacement> replicaPlacements = new HashSet<>(totalReplicasPerShard * request.getShardNames().size())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "i++@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Cluster cluster@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "int totalReplicasPerShard = 0@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "PlacementRequest request@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "PlacementContext placementContext@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "throw new PlacementException(\"Can't get number of cores in \" + node)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "PlacementPlanFactory placementPlanFactory@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "TreeMultimap<Integer,Node> nodesByCores = TreeMultimap.create(Comparator.naturalOrder(),Ordering.arbitrary())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "i < totalReplicasPerShard@@@27@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17->25 [style = bold, label=""];
10->34 [style = dashed, label="0"];
39->24 [style = bold, label=""];
38->41 [style = bold, label=""];
22->26 [style = solid, label="coreCount"];
3->28 [style = solid, label="totalReplicasPerShard"];
0->15 [style = bold, label=""];
19->24 [style = bold, label=""];
23->28 [style = bold, label=""];
34->2 [style = bold, label=""];
32->30 [style = dotted, label="true"];
21->16 [style = bold, label=""];
9->5 [style = bold, label=""];
2->41 [style = dashed, label="0"];
13->22 [style = bold, label=""];
22->13 [style = solid, label="coreCount"];
3->0 [style = solid, label="totalReplicasPerShard"];
13->34 [style = bold, label=""];
36->4 [style = bold, label=""];
29->33 [style = dashed, label="0"];
5->11 [style = solid, label="i"];
2->9 [style = bold, label=""];
39->43 [style = dotted, label="true"];
26->13 [style = bold, label=""];
3->0 [style = bold, label=""];
39->29 [style = dotted, label="true"];
41->42 [style = solid, label="nodesToAssign"];
6->4 [style = bold, label=""];
25->11 [style = solid, label="i"];
20->27 [style = solid, label="request"];
19->29 [style = dotted, label="true"];
38->37 [style = bold, label=""];
39->44 [style = dotted, label="true"];
31->15 [style = dotted, label="true"];
28->34 [style = solid, label="replicaPlacements"];
43->38 [style = solid, label="placementPlanFactory"];
11->17 [style = bold, label=""];
39->40 [style = dotted, label="true"];
10->2 [style = bold, label=""];
15->12 [style = bold, label=""];
5->25 [style = solid, label="i"];
5->11 [style = bold, label=""];
34->35 [style = bold, label=""];
21->16 [style = dotted, label="true"];
30->34 [style = solid, label="request"];
24->3 [style = bold, label=""];
42->38 [style = bold, label=""];
2->34 [style = solid, label="nodeEntriesToAssign"];
21->23 [style = bold, label=""];
13->10 [style = bold, label=""];
30->35 [style = solid, label="request"];
28->37 [style = solid, label="replicaPlacements"];
3->31 [style = solid, label="totalReplicasPerShard"];
0->12 [style = bold, label=""];
28->10 [style = solid, label="replicaPlacements"];
11->17 [style = dotted, label="true"];
16->23 [style = bold, label=""];
31->12 [style = bold, label=""];
19->8 [style = dotted, label="true"];
4->7 [style = bold, label=""];
32->33 [style = dotted, label="true"];
28->41 [style = bold, label=""];
3->11 [style = solid, label="totalReplicasPerShard"];
41->38 [style = solid, label="nodesToAssign"];
15->28 [style = bold, label=""];
6->7 [style = solid, label="nodes"];
11->22 [style = bold, label=""];
7->18 [style = bold, label=""];
22->1 [style = bold, label=""];
18->21 [style = bold, label=""];
3->2 [style = solid, label="totalReplicasPerShard"];
27->35 [style = dashed, label="0"];
19->14 [style = dotted, label="true"];
29->38 [style = solid, label="request"];
3->31 [style = bold, label=""];
10->27 [style = bold, label=""];
28->27 [style = solid, label="replicaPlacements"];
0->15 [style = dotted, label="true"];
20->10 [style = solid, label="request"];
19->20 [style = dotted, label="true"];
1->26 [style = bold, label=""];
14->10 [style = solid, label="placementPlanFactory"];
12->6 [style = bold, label=""];
31->15 [style = bold, label=""];
6->36 [style = bold, label=""];
1->26 [style = solid, label="node"];
11->38 [style = dashed, label="0"];
28->2 [style = bold, label=""];
11->25 [style = dotted, label="true"];
29->37 [style = solid, label="request"];
23->21 [style = bold, label=""];
25->11 [style = bold, label=""];
0->31 [style = dashed, label="0"];
1->13 [style = solid, label="node"];
28->35 [style = solid, label="replicaPlacements"];
32->24 [style = bold, label=""];
0->28 [style = bold, label=""];
28->38 [style = solid, label="replicaPlacements"];
41->42 [style = bold, label=""];
2->10 [style = solid, label="nodeEntriesToAssign"];
}
