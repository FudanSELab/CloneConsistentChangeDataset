digraph {
17 [style = filled, label = "props.put(TableProperties.WRITE_NEW_DATA_LOCATION,tableLocation)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "int i = 0@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "i < 100@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Dataset<Row> df = spark.createDataFrame(records,)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Dataset<Row> resultDF = spark.read().format(\"iceberg\").load(tableLocation)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "expectedRecords.addAll(records)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List<ThreeColumnRecord> expectedRecords = Lists.newArrayList()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "List<String> result = actions.removeOrphanFiles().olderThan(System.currentTimeMillis()).execute()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<ThreeColumnRecord> actualRecords = resultDF.as(Encoders.bean()).collectAsList()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "expectedRecords.addAll(records)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Table table = TABLES.create(SCHEMA,SPEC,props,tableLocation)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "List<ThreeColumnRecord> actualRecords = resultDF.as(Encoders.bean()).collectAsList()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Dataset<Row> resultDF = spark.read().format(\"iceberg\").load(tableLocation)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertEquals(\"Rows must match\",records,actualRecords)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "i++@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Table table = TABLES.create(SCHEMA,SPEC,Maps.newHashMap(),tableLocation)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Actions actions = Actions.forTable(table)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "List<ThreeColumnRecord> records = Lists.newArrayList()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Thread.sleep(1000)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "df.select(\"c1\",\"c2\",\"c3\").write().format(\"iceberg\").mode(\"append\").save(tableLocation)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "records.add(new ThreeColumnRecord(i,String.valueOf(i),String.valueOf(i)))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "df.select(\"c1\",\"c2\",\"c3\").write().format(\"iceberg\").mode(\"append\").save(tableLocation)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "props.put(TableProperties.WRITE_FOLDER_STORAGE_LOCATION,tableLocation)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "Assert.assertTrue(\"Should not delete any files\",result.isEmpty())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Dataset<Row> df = spark.createDataFrame(records,)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<ThreeColumnRecord> records = Lists.newArrayList(new ThreeColumnRecord(1,\"A\",\"A\"))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testManyTopLevelPartitions['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "props.put(TableProperties.METADATA_PREVIOUS_VERSIONS_MAX,\"1\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testRemoveUnreachableMetadataVersionFiles['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testRemoveUnreachableMetadataVersionFiles['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "Actions actions = Actions.forTable(table)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(\"Rows must match\",expectedRecords,actualRecords)@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Map<String,String> props = Maps.newHashMap()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->6 [style = solid, label="records"];
32->1 [style = solid, label="table"];
30->24 [style = bold, label=""];
4->0 [style = solid, label="expectedRecords"];
23->24 [style = solid, label="i"];
31->22 [style = bold, label=""];
26->32 [style = bold, label=""];
29->25 [style = solid, label="records"];
11->14 [style = bold, label=""];
19->31 [style = bold, label=""];
8->16 [style = solid, label="table"];
1->31 [style = dashed, label="0"];
27->30 [style = bold, label=""];
18->15 [style = bold, label=""];
2->18 [style = bold, label=""];
24->30 [style = dotted, label="true"];
22->28 [style = bold, label=""];
23->27 [style = solid, label="i"];
12->16 [style = bold, label=""];
4->2 [style = bold, label=""];
20->3 [style = bold, label=""];
29->23 [style = bold, label=""];
23->30 [style = solid, label="i"];
7->2 [style = solid, label="records"];
30->27 [style = solid, label="i"];
12->9 [style = bold, label=""];
28->25 [style = solid, label="actualRecords"];
24->27 [style = dotted, label="true"];
15->5 [style = bold, label=""];
8->7 [style = bold, label=""];
5->0 [style = solid, label="actualRecords"];
24->14 [style = bold, label=""];
13->32 [style = dashed, label="0"];
32->29 [style = bold, label=""];
13->17 [style = bold, label=""];
23->24 [style = bold, label=""];
0->25 [style = dashed, label="0"];
17->20 [style = dashed, label="0"];
5->0 [style = bold, label=""];
10->13 [style = bold, label=""];
3->8 [style = bold, label=""];
6->11 [style = bold, label=""];
14->12 [style = bold, label=""];
7->6 [style = bold, label=""];
13->8 [style = solid, label="props"];
17->3 [style = bold, label=""];
28->25 [style = bold, label=""];
19->4 [style = bold, label=""];
9->1 [style = bold, label=""];
1->19 [style = bold, label=""];
29->14 [style = solid, label="records"];
30->24 [style = solid, label="i"];
24->27 [style = bold, label=""];
16->9 [style = bold, label=""];
21->13 [style = bold, label=""];
13->20 [style = bold, label=""];
7->18 [style = solid, label="records"];
}
