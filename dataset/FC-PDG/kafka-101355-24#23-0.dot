digraph {
0 [style = filled, label = "store.put(2,\"two\")@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4),segments.segmentName(5),segments.segmentName(6)),segmentDirs(baseDir))@@@74@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 2))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "store.put(8,\"eight\")@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "File baseDir = Files.createTempDirectory(\"test\").toFile()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(Utils.mkList(\"one\"),toList(store.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "assertEquals(Utils.mkList(\"seven\"),toList(store.fetch(7,startTime + incr * 7 - windowSize,startTime + incr * 7 + windowSize)))@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "store.put(0,\"zero\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(Utils.mkList(\"eight\"),toList(store.fetch(8,startTime + incr * 8 - windowSize,startTime + incr * 8 + windowSize)))@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3),segments.segmentName(4)),segmentDirs(baseDir))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "context.setRecordContext(createRecordContext(startTime))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final Segments segments = new Segments(windowName,retentionPeriod,numSegments)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(Utils.mkList(\"seven\"),toList(store.fetch(7,startTime + incr * 7 - windowSize,startTime + incr * 7 + windowSize)))@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 6))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "RecordCollector recordCollector = new RecordCollectorImpl(producer,\"RocksDBWindowStoreTest-TestRolling\"){@Override public void send(ProducerRecord<K1,V1> record,Serializer<K1> keySerializer,Serializer<V1> valueSerializer){changeLog.add(new KeyValue<>(keySerializer.serialize(record.topic(),record.key()),valueSerializer.serialize(record.topic(),record.value())))}}@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "{Utils.delete(baseDir)}@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "testRestore['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
94 [style = filled, label = "assertEquals(Utils.mkList(\"eight\"),toList(store.fetch(8,startTime + incr * 8 - windowSize,startTime + incr * 8 + windowSize)))@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
99 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(store.fetch(6,startTime + incr * 6 - windowSize,startTime + incr * 6 + windowSize)))@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "store.put(3,\"three\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "long incr = segmentSize / 2@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "{Utils.delete(baseDir2)}@@@74@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "{Utils.delete(baseDir)}@@@80@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(store.fetch(6,startTime + incr * 6 - windowSize,startTime + incr * 6 + windowSize)))@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "store.put(1,\"one\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3),segments.segmentName(4)),segmentDirs(baseDir))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(store.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@66@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "MockProcessorContext context = new MockProcessorContext(baseDir,byteArraySerde,byteArraySerde,recordCollector,cache)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "File baseDir2 = Files.createTempDirectory(\"test\").toFile()@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(0,startTime - windowSize,startTime + windowSize)))@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(0,startTime - windowSize,startTime + windowSize)))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "store.flush()@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "{store.close()}@@@76@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "MockProcessorContext context = new MockProcessorContext(null,baseDir,byteArraySerde,byteArraySerde,recordCollector,cache)@@@54@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 3))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2)),segmentDirs(baseDir))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
92 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(store.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
100 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 8))@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(store.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "assertEquals(Utils.mkList(\"seven\"),toList(store.fetch(7,startTime + incr * 7 - windowSize,startTime + incr * 7 + windowSize)))@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 5))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(store.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "store.put(5,\"five\")@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(3),segments.segmentName(4),segments.segmentName(5)),segmentDirs(baseDir))@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "MockProcessorContext context = new MockProcessorContext(null,baseDir,byteArraySerde,byteArraySerde,recordCollector,cache)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "final List<KeyValue<byte((,byte((>> changeLog = new ArrayList<>()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Producer<byte((,byte((> producer = new MockProducer<>(true,byteArraySerde.serializer(),byteArraySerde.serializer())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 7))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(store.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "Producer<byte((,byte((> producer = new MockProducer<>(true,byteArraySerde.serializer(),byteArraySerde.serializer())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "store.flush()@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "long incr = segmentSize / 2@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "{store.close()}@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "RecordCollector recordCollector = new RecordCollectorImpl(producer,\"RocksDBWindowStoreTest-TestRestoreII\"){@Override public void send(ProducerRecord<K1,V1> record,Serializer<K1> keySerializer,Serializer<V1> valueSerializer){changeLog.add(new KeyValue<>(keySerializer.serialize(record.topic(),record.key()),valueSerializer.serialize(record.topic(),record.value())))}}@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "assertEquals(Utils.mkList(\"zero\"),toList(store.fetch(0,startTime - windowSize,startTime + windowSize)))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(store.fetch(6,startTime + incr * 6 - windowSize,startTime + incr * 6 + windowSize)))@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(0,startTime - windowSize,startTime + windowSize)))@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "context.restore(windowName,changeLog)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "WindowStore<Integer,String> store = createWindowStore(context,false,true)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "testRestore['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "store.put(4,\"four\")@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "long startTime = segmentSize * 2@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4L),segments.segmentName(5L),segments.segmentName(6L)),segmentDirs(baseDir))@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "testRolling['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "store.put(7,\"seven\")@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
98 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4),segments.segmentName(5),segments.segmentName(6)),segmentDirs(baseDir))@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3)),segmentDirs(baseDir))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
97 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(store.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(store.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "WindowStore<Integer,String> store = createWindowStore(context,false,true)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "MockProcessorContext context = new MockProcessorContext(baseDir,byteArraySerde,byteArraySerde,recordCollector,cache)@@@54@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@65@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(store.fetch(6,startTime + incr * 6 - windowSize,startTime + incr * 6 + windowSize)))@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(3),segments.segmentName(4),segments.segmentName(5)),segmentDirs(baseDir))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(store.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "store.flush()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final List<KeyValue<byte((,byte((>> changeLog = new ArrayList<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "{store.close()}@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "RecordCollector recordCollector = new RecordCollectorImpl(producer,\"RocksDBWindowStoreTest-TestRestore\"){@Override public void send(ProducerRecord<K1,V1> record,Serializer<K1> keySerializer,Serializer<V1> valueSerializer){changeLog.add(new KeyValue<>(keySerializer.serialize(record.topic(),record.key()),valueSerializer.serialize(record.topic(),record.value())))}}@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "long startTime = segmentSize * 2@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(0,startTime - windowSize,startTime + windowSize)))@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "store.put(6,\"six\")@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(store.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(store.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(store.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(store.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Producer<byte((,byte((> producer = new MockProducer<>(true,byteArraySerde.serializer(),byteArraySerde.serializer())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 4))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(store.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2)),segmentDirs(baseDir))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63->61 [style = solid, label="baseDir"];
70->80 [style = bold, label=""];
68->96 [style = bold, label=""];
12->36 [style = solid, label="incr"];
4->28 [style = solid, label="startTime"];
70->97 [style = solid, label="incr"];
4->88 [style = solid, label="startTime"];
4->47 [style = solid, label="startTime"];
99->55 [style = bold, label=""];
12->27 [style = solid, label="incr"];
17->46 [style = solid, label="startTime"];
63->52 [style = solid, label="baseDir"];
98->87 [style = bold, label=""];
29->34 [style = bold, label=""];
69->78 [style = bold, label=""];
70->82 [style = solid, label="incr"];
17->5 [style = solid, label="startTime"];
70->35 [style = solid, label="incr"];
25->44 [style = bold, label=""];
70->33 [style = solid, label="incr"];
12->26 [style = solid, label="incr"];
70->55 [style = solid, label="incr"];
1->68 [style = bold, label=""];
93->63 [style = bold, label=""];
30->11 [style = bold, label=""];
1->33 [style = bold, label=""];
70->26 [style = solid, label="incr"];
17->34 [style = solid, label="startTime"];
4->85 [style = solid, label="startTime"];
17->48 [style = solid, label="startTime"];
12->46 [style = solid, label="incr"];
17->35 [style = solid, label="startTime"];
70->74 [style = solid, label="incr"];
49->13 [style = bold, label=""];
70->44 [style = solid, label="incr"];
17->26 [style = solid, label="startTime"];
12->25 [style = solid, label="incr"];
11->54 [style = dashed, label="0"];
4->55 [style = solid, label="startTime"];
70->62 [style = solid, label="incr"];
19->15 [style = bold, label=""];
41->39 [style = solid, label="baseDir"];
70->86 [style = solid, label="incr"];
63->31 [style = solid, label="baseDir"];
31->84 [style = bold, label=""];
63->54 [style = solid, label="baseDir"];
82->92 [style = bold, label=""];
4->34 [style = solid, label="startTime"];
24->10 [style = bold, label=""];
78->89 [style = bold, label=""];
86->56 [style = bold, label=""];
76->34 [style = bold, label=""];
4->94 [style = solid, label="startTime"];
70->19 [style = solid, label="incr"];
14->30 [style = bold, label=""];
91->28 [style = bold, label=""];
90->74 [style = bold, label=""];
70->34 [style = solid, label="incr"];
67->33 [style = bold, label=""];
97->62 [style = bold, label=""];
26->1 [style = bold, label=""];
36->31 [style = bold, label=""];
34->47 [style = bold, label=""];
4->19 [style = bold, label=""];
23->6 [style = solid, label="producer"];
4->33 [style = solid, label="startTime"];
70->69 [style = solid, label="incr"];
6->50 [style = solid, label="recordCollector"];
11->37 [style = bold, label=""];
92->99 [style = bold, label=""];
71->52 [style = bold, label=""];
41->11 [style = solid, label="baseDir"];
54->81 [style = bold, label=""];
4->80 [style = solid, label="startTime"];
29->66 [style = bold, label=""];
70->1 [style = solid, label="incr"];
63->95 [style = solid, label="baseDir"];
70->100 [style = solid, label="incr"];
70->58 [style = solid, label="incr"];
56->97 [style = bold, label=""];
70->59 [style = solid, label="incr"];
72->20 [style = bold, label=""];
57->53 [style = solid, label="recordCollector"];
4->100 [style = solid, label="startTime"];
13->16 [style = bold, label=""];
15->35 [style = bold, label=""];
18->16 [style = solid, label="changeLog"];
58->79 [style = bold, label=""];
33->29 [style = bold, label=""];
12->41 [style = bold, label=""];
39->22 [style = bold, label=""];
70->28 [style = solid, label="incr"];
94->77 [style = bold, label=""];
50->4 [style = solid, label="context"];
22->38 [style = bold, label=""];
6->57 [style = dashed, label="0"];
35->0 [style = bold, label=""];
41->20 [style = solid, label="baseDir"];
47->25 [style = bold, label=""];
4->86 [style = solid, label="startTime"];
12->33 [style = solid, label="incr"];
3->9 [style = solid, label="recordCollector"];
12->28 [style = solid, label="incr"];
85->88 [style = bold, label=""];
12->8 [style = solid, label="incr"];
44->32 [style = bold, label=""];
70->99 [style = solid, label="incr"];
51->18 [style = bold, label=""];
12->10 [style = solid, label="incr"];
4->64 [style = solid, label="startTime"];
46->14 [style = bold, label=""];
63->53 [style = solid, label="baseDir"];
37->45 [style = bold, label=""];
41->9 [style = solid, label="baseDir"];
95->19 [style = bold, label=""];
4->58 [style = solid, label="startTime"];
63->91 [style = solid, label="baseDir"];
57->53 [style = bold, label=""];
63->60 [style = solid, label="baseDir"];
63->90 [style = solid, label="baseDir"];
4->69 [style = solid, label="startTime"];
87->25 [style = bold, label=""];
17->19 [style = solid, label="startTime"];
17->27 [style = solid, label="startTime"];
17->8 [style = solid, label="startTime"];
17->25 [style = solid, label="startTime"];
9->13 [style = solid, label="context"];
63->89 [style = solid, label="baseDir"];
4->68 [style = solid, label="startTime"];
63->65 [style = bold, label=""];
47->86 [style = bold, label=""];
10->43 [style = bold, label=""];
70->29 [style = solid, label="incr"];
17->10 [style = solid, label="startTime"];
17->2 [style = solid, label="startTime"];
16->24 [style = bold, label=""];
55->71 [style = bold, label=""];
53->72 [style = solid, label="context"];
65->41 [style = bold, label=""];
4->56 [style = solid, label="startTime"];
70->92 [style = solid, label="incr"];
70->94 [style = solid, label="incr"];
4->25 [style = solid, label="startTime"];
50->4 [style = bold, label=""];
43->2 [style = bold, label=""];
100->75 [style = bold, label=""];
4->92 [style = solid, label="startTime"];
4->83 [style = solid, label="startTime"];
4->35 [style = solid, label="startTime"];
12->14 [style = solid, label="incr"];
77->54 [style = bold, label=""];
17->43 [style = solid, label="startTime"];
49->13 [style = solid, label="context"];
38->3 [style = bold, label=""];
63->98 [style = solid, label="baseDir"];
4->29 [style = solid, label="startTime"];
6->20 [style = bold, label=""];
3->9 [style = bold, label=""];
83->100 [style = bold, label=""];
31->26 [style = bold, label=""];
17->12 [style = bold, label=""];
17->33 [style = solid, label="startTime"];
96->59 [style = bold, label=""];
4->84 [style = solid, label="startTime"];
21->39 [style = bold, label=""];
40->36 [style = bold, label=""];
62->83 [style = bold, label=""];
4->62 [style = solid, label="startTime"];
66->82 [style = bold, label=""];
23->6 [style = bold, label=""];
12->2 [style = solid, label="incr"];
53->72 [style = bold, label=""];
17->28 [style = solid, label="startTime"];
41->49 [style = solid, label="baseDir"];
4->87 [style = solid, label="startTime"];
12->35 [style = solid, label="incr"];
4->1 [style = solid, label="startTime"];
59->69 [style = bold, label=""];
84->26 [style = bold, label=""];
3->49 [style = solid, label="recordCollector"];
64->58 [style = bold, label=""];
4->19 [style = solid, label="startTime"];
2->5 [style = bold, label=""];
41->50 [style = solid, label="baseDir"];
4->99 [style = solid, label="startTime"];
70->96 [style = solid, label="incr"];
4->70 [style = bold, label=""];
4->76 [style = solid, label="startTime"];
12->5 [style = solid, label="incr"];
42->18 [style = bold, label=""];
15->60 [style = bold, label=""];
20->4 [style = solid, label="context"];
32->21 [style = bold, label=""];
4->97 [style = solid, label="startTime"];
4->74 [style = solid, label="startTime"];
70->79 [style = solid, label="incr"];
89->67 [style = bold, label=""];
6->20 [style = solid, label="recordCollector"];
52->76 [style = bold, label=""];
70->47 [style = solid, label="incr"];
70->25 [style = solid, label="incr"];
70->83 [style = solid, label="incr"];
12->48 [style = solid, label="incr"];
70->85 [style = solid, label="incr"];
28->7 [style = bold, label=""];
17->14 [style = solid, label="startTime"];
18->17 [style = bold, label=""];
12->34 [style = solid, label="incr"];
74->36 [style = bold, label=""];
4->79 [style = solid, label="startTime"];
17->24 [style = solid, label="startTime"];
22->45 [style = solid, label="baseDir2"];
48->8 [style = bold, label=""];
9->49 [style = dashed, label="0"];
4->96 [style = solid, label="startTime"];
80->73 [style = bold, label=""];
41->57 [style = bold, label=""];
70->88 [style = solid, label="incr"];
79->85 [style = bold, label=""];
70->66 [style = solid, label="incr"];
20->4 [style = bold, label=""];
70->64 [style = solid, label="incr"];
12->43 [style = solid, label="incr"];
0->91 [style = bold, label=""];
20->50 [style = dashed, label="0"];
4->26 [style = solid, label="startTime"];
60->35 [style = bold, label=""];
8->46 [style = bold, label=""];
88->94 [style = bold, label=""];
4->59 [style = solid, label="startTime"];
4->67 [style = solid, label="startTime"];
6->50 [style = bold, label=""];
44->64 [style = bold, label=""];
17->36 [style = solid, label="startTime"];
7->27 [style = bold, label=""];
5->48 [style = bold, label=""];
73->95 [style = bold, label=""];
75->98 [style = bold, label=""];
81->61 [style = bold, label=""];
38->3 [style = solid, label="producer"];
4->44 [style = solid, label="startTime"];
27->40 [style = bold, label=""];
3->49 [style = bold, label=""];
4->82 [style = solid, label="startTime"];
7->90 [style = bold, label=""];
41->23 [style = bold, label=""];
70->56 [style = solid, label="incr"];
41->57 [style = solid, label="producer"];
4->66 [style = solid, label="startTime"];
0->28 [style = bold, label=""];
70->68 [style = solid, label="incr"];
9->13 [style = bold, label=""];
}
