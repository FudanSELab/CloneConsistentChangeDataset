digraph {
11 [style = filled, label = "final int value = 123@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "val adapter = jsonValueEncoder.asAdapter(mockObjectSpec,representation,null)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "whenReprIsBoolean['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "whenReprIsInteger['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "allowingObjectSpecHas(,mockEncodableFacet)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final boolean value = true@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "context.checking(new Expectations(){})@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "representation = new JsonRepresentation(IntNode.valueOf(value))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final Class<?> correspondingClass@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "representation = new JsonRepresentation(BooleanNode.valueOf(value))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "allowingObjectSpecCorrespondingClassAndSpecIdIs(correspondingClass)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "whenReprIsBoolean['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertSame(mockObjectSpec,adapter.getSpecification())@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final Class<?> correspondingClass@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4->3 [style = bold, label=""];
13->12 [style = dotted, label="true"];
0->2 [style = bold, label=""];
11->10 [style = solid, label="value"];
12->1 [style = solid, label="correspondingClass"];
8->12 [style = dashed, label="0"];
0->11 [style = dashed, label="0"];
8->1 [style = solid, label="correspondingClass"];
1->0 [style = bold, label=""];
7->4 [style = bold, label=""];
10->7 [style = bold, label=""];
2->10 [style = dashed, label="0"];
1->11 [style = bold, label=""];
9->6 [style = bold, label=""];
9->8 [style = dotted, label="true"];
6->1 [style = bold, label=""];
10->4 [style = solid, label="representation"];
2->4 [style = solid, label="representation"];
5->6 [style = bold, label=""];
0->2 [style = solid, label="value"];
11->10 [style = bold, label=""];
2->7 [style = bold, label=""];
13->6 [style = bold, label=""];
5->8 [style = dotted, label="true"];
}
