digraph {
8 [style = filled, label = "return new Stats(SparkSchemaUtil.estimateSize(SparkSchemaUtil.convert(projectedSchema),totalRecords),totalRecords)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "long numRows = 0L@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "long totalRecords = PropertyUtil.propertyAsLong(table.currentSnapshot().summary(),SnapshotSummary.TOTAL_RECORDS_PROP,Long.MAX_VALUE)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "estimateStatistics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "long sizeInBytes = 0L@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "numRows += file.file().recordCount()@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "long sizeInBytes = 0L@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "long numRows = 0L@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "sizeInBytes += file.length()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "return new Stats(SparkSchemaUtil.estimateSize(lazyType(),totalRecords),totalRecords)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Schema projectedSchema = expectedSchema != null? expectedSchema: table.schema()@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "estimateStatistics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "sizeInBytes += file.length()@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "return new Stats(sizeInBytes,numRows)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "numRows += file.file().recordCount()@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return new Stats(sizeInBytes,numRows)@@@20@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "table.currentSnapshot() == null@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return new Stats(0L,0L)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "!table.spec().isUnpartitioned() && filterExpressions.isEmpty()@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "return new Stats(sizeInBytes,numRows)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "return new Stats(SparkSchemaUtil.estimateSize(readSchema(),totalRecords),totalRecords)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "long numRows = 0L@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "long sizeInBytes = SparkSchemaUtil.estimateSize(readSchema(),numRows)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "!table.spec().isUnpartitioned() && filterExpression() == Expressions.alwaysTrue()@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "LOG.debug(\"using table metadata to estimate table statistics\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "numRows += file.file().recordCount()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "estimateStatistics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4->5 [style = dotted, label="true"];
5->10 [style = bold, label=""];
1->4 [style = bold, label=""];
0->9 [style = bold, label=""];
10->20 [style = bold, label=""];
22->10 [style = dotted, label="true"];
22->19 [style = dotted, label="true"];
7->1 [style = bold, label=""];
9->0 [style = bold, label=""];
4->17 [style = bold, label=""];
22->19 [style = bold, label=""];
0->6 [style = bold, label=""];
4->10 [style = dotted, label="true"];
26->23 [style = solid, label="numRows"];
4->8 [style = dotted, label="true"];
4->11 [style = dotted, label="true"];
19->10 [style = bold, label=""];
4->2 [style = bold, label=""];
7->4 [style = bold, label=""];
16->17 [style = bold, label=""];
13->15 [style = solid, label="sizeInBytes"];
4->22 [style = dashed, label="0"];
12->9 [style = bold, label=""];
20->25 [style = bold, label=""];
0->6 [style = solid, label="numRows"];
2->12 [style = bold, label=""];
14->7 [style = bold, label=""];
26->21 [style = bold, label=""];
1->22 [style = bold, label=""];
7->22 [style = bold, label=""];
21->26 [style = bold, label=""];
10->16 [style = bold, label=""];
8->2 [style = bold, label=""];
3->7 [style = bold, label=""];
22->20 [style = bold, label=""];
18->15 [style = solid, label="numRows"];
26->23 [style = bold, label=""];
10->8 [style = solid, label="totalRecords"];
9->6 [style = solid, label="sizeInBytes"];
18->13 [style = bold, label=""];
10->16 [style = solid, label="totalRecords"];
11->8 [style = bold, label=""];
19->10 [style = solid, label="totalRecords"];
4->16 [style = dotted, label="true"];
13->15 [style = bold, label=""];
11->8 [style = solid, label="projectedSchema"];
21->23 [style = solid, label="sizeInBytes"];
7->1 [style = dotted, label="true"];
24->7 [style = bold, label=""];
18->13 [style = solid, label="numRows"];
4->5 [style = bold, label=""];
17->18 [style = bold, label=""];
25->21 [style = bold, label=""];
10->11 [style = bold, label=""];
}
