digraph {
12 [style = filled, label = "c.get().header(ifModifiedSince(null)).run().assertBody().isEmpty()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "c.get().header(ifModifiedSince((String)null)).run().assertBody().is(\"\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "c.get().header(ifModifiedSince(null)).run().assertBody().is(VALUE)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "c.get().header(ifModifiedSince(null)).run().assertBody().is(VALUE)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "c.get().header(noTrace(null)).run().assertBody().isEmpty()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "RestClient c = client().build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "a01_basic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "c.get().header(noTrace((String)null)).run().assertBody().isEmpty()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "a01_basic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "c.get().header(noTrace(new StringBuilder(VALUE))).run().assertBody().is(VALUE)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "c.get().header(ifModifiedSince(VALUE)).run().assertBody().is(VALUE)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "c.get().header(ifModifiedSince(VALUE)).run().assertBody().is(VALUE)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "c.get().header(ifModifiedSince(PARSED)).run().assertBody().is(VALUE)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "c.get().header(noTrace(VALUE)).run().assertBody().is(VALUE)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "c.get().header(ifModifiedSince((Supplier<ZonedDateTime>)null)).run().assertBody().is(\"\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "c.get().header(ifModifiedSince(new StringBuilder(VALUE))).run().assertBody().is(VALUE)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "c.get().header(new NoTrace(VALUE)).run().assertBody().is(VALUE)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "c.get().header(noTrace((Object)null)).run().assertBody().isEmpty()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "c.get().header(noTrace(null)).run().assertBody().is(VALUE)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "c.get().header(ifModifiedSince((Object)null)).run().assertBody().is(\"\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "c.get().header(ifModifiedSince((String)null)).run().assertBody().is(\"\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "c.get().header(noTrace((Supplier<?>)null)).run().assertBody().isEmpty()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "c.get().header(noTrace(VALUE)).run().assertBody().is(VALUE)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "a01_basic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "c.get().header(ifModifiedSince((Supplier<?>)null)).run().assertBody().is(\"\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "c.get().header(ifModifiedSince(null)).run().assertBody().isEmpty()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "c.get().header(new IfModifiedSince(VALUE)).run().assertBody().is(VALUE)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14->16 [style = bold, label=""];
4->9 [style = bold, label=""];
5->10 [style = bold, label=""];
3->17 [style = dashed, label="0"];
24->19 [style = bold, label=""];
3->1 [style = bold, label=""];
25->22 [style = bold, label=""];
11->14 [style = bold, label=""];
2->3 [style = bold, label=""];
5->26 [style = bold, label=""];
7->4 [style = bold, label=""];
13->11 [style = bold, label=""];
9->23 [style = dashed, label="0"];
15->5 [style = bold, label=""];
8->7 [style = bold, label=""];
19->25 [style = bold, label=""];
26->21 [style = bold, label=""];
17->24 [style = bold, label=""];
1->6 [style = bold, label=""];
10->26 [style = dashed, label="0"];
9->14 [style = dashed, label="0"];
5->6 [style = bold, label=""];
20->23 [style = bold, label=""];
22->20 [style = bold, label=""];
2->21 [style = dashed, label="0"];
4->20 [style = dashed, label="0"];
1->24 [style = dashed, label="0"];
18->5 [style = bold, label=""];
6->8 [style = bold, label=""];
6->19 [style = dashed, label="0"];
7->13 [style = dashed, label="0"];
8->25 [style = dashed, label="0"];
10->2 [style = bold, label=""];
4->11 [style = dashed, label="0"];
16->12 [style = bold, label=""];
21->17 [style = bold, label=""];
7->22 [style = dashed, label="0"];
8->13 [style = bold, label=""];
0->5 [style = bold, label=""];
}
