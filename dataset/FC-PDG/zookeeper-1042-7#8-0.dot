digraph {
1 [style = filled, label = "zk.create(\"/foo/bar\",new byte((((,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.CONTAINER)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "containerManager.checkContainers()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertNull(zk.exists(\"/foo/bar\",false),\"Container should have been deleted\")@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "zk.delete(\"/foo/bar/one\",-1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertNotNull(\"Container should have not been deleted\",zk.exists(\"/foo\",false))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "containerManager.checkContainers()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "zk.create(\"/foo/bar/one\",new byte((((,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertNull(zk.exists(\"/foo\",false),\"Container should have been deleted\")@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "ContainerManager containerManager = new ContainerManager(serverFactory.getZooKeeperServer().getZKDatabase(),serverFactory.getZooKeeperServer().firstProcessor,1,100){@Override protected Collection<String> getCandidates(){return Collections.singletonList(\"/foo\")}}@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "containerManager.checkContainers()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(completedContainerDeletions.tryAcquire(1,TimeUnit.SECONDS))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testCascadingDeletion['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "testFalseEmpty['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testCascadingDeletion['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "zk.create(\"/foo\",new byte((((,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.CONTAINER)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "zk.create(\"/foo/bar\",new byte((((,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ContainerManager containerManager = new ContainerManager(serverFactory.getZooKeeperServer().getZKDatabase(),serverFactory.getZooKeeperServer().firstProcessor,1,100)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertNull(\"Container should have been deleted\",zk.exists(\"/foo\",false))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertTrue(completedContainerDeletions.tryAcquire(1,TimeUnit.SECONDS))@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->5 [style = bold, label=""];
2->6 [style = bold, label=""];
18->15 [style = bold, label=""];
15->6 [style = bold, label=""];
1->18 [style = dashed, label="0"];
5->18 [style = bold, label=""];
7->4 [style = bold, label=""];
9->10 [style = bold, label=""];
9->16 [style = bold, label=""];
1->11 [style = bold, label=""];
5->1 [style = bold, label=""];
8->2 [style = bold, label=""];
3->7 [style = bold, label=""];
11->3 [style = bold, label=""];
2->16 [style = dashed, label="0"];
12->14 [style = bold, label=""];
13->5 [style = bold, label=""];
4->8 [style = bold, label=""];
9->12 [style = dashed, label="0"];
6->9 [style = bold, label=""];
10->14 [style = dashed, label="0"];
0->5 [style = bold, label=""];
6->12 [style = bold, label=""];
}
