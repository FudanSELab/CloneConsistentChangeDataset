digraph {
12 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"rows\",Integer.toString(-1)))@@@43@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "sb.append(\",\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "return expression@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"bucketSizeLimit\",Integer.toString(bucketSizeLimit)))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "{StringBuilder builder = new StringBuilder()for (Bucket bucket : buckets){if (0 != builder.length()) {builder.append(\",\")}builder.append(bucket.toString())}expression.addParameter(new StreamExpressionNamedParameter(\"buckets\",builder.toString()))}@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"offset\",Integer.toString(offset)))@@@48@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "StreamFactory factory@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "{StringBuilder builder = new StringBuilder()for (FieldComparator sort : bucketSorts){if (0 != builder.length()) {builder.append(\",\")}builder.append(sort.toExpression(factory))}expression.addParameter(new StreamExpressionNamedParameter(\"bucketSorts\",builder.toString()))}@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return expression@@@60@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "bucketSizeLimit == Integer.MAX_VALUE@@@34@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"rows\",Integer.toString(rows)))@@@46@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "fieldMappings.entrySet()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "rows == Integer.MAX_VALUE@@@42@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "sb.append(mapping.getKey())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "sb.length() > 0@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "toExpression['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"bucketSizeLimit\",Integer.toString(-1)))@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "StreamExpression expression = new StreamExpression(factory.getFunctionName(getClass()))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "serializeBucketSizeLimit@@@33@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "sb.append(mapping.getValue())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),val))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expression.addParameter(collection)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\",zkHost))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"overfetch\",Integer.toString(-1)))@@@50@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "StreamExpression expression = new StreamExpression(factory.getFunctionName(this.getClass()))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"aliases\",sb.toString()))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "null != fieldMappings && 0 != fieldMappings.size()@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\",zkHost))@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "StringBuilder sb = new StringBuilder()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Entry<String,String> mapping@@@13@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"overfetch\",Integer.toString(overfetch)))@@@53@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "overfetch == Integer.MAX_VALUE@@@49@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"method\",this.method))@@@57@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "toExpression['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "toExpression['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "method != null@@@56@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "StreamFactory factory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),val.replace(\"\"\",\"\\\"\")))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "expression.addParameter(metric.toExpression(factory))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "sb.append(\"=\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28->31 [style = bold, label=""];
38->25 [style = bold, label=""];
2->3 [style = dotted, label="true"];
10->35 [style = dashed, label="0"];
8->0 [style = bold, label=""];
20->21 [style = dotted, label="true"];
28->39 [style = dotted, label="true"];
6->26 [style = dashed, label="0"];
0->7 [style = bold, label=""];
30->33 [style = dotted, label="true"];
8->37 [style = dashed, label="0"];
29->35 [style = bold, label=""];
15->23 [style = dotted, label="false"];
20->4 [style = bold, label=""];
15->23 [style = bold, label=""];
28->32 [style = bold, label=""];
3->27 [style = dashed, label="0"];
19->22 [style = bold, label=""];
14->12 [style = bold, label=""];
11->18 [style = bold, label=""];
2->10 [style = bold, label=""];
15->11 [style = dotted, label="true"];
14->19 [style = bold, label=""];
22->15 [style = bold, label=""];
6->8 [style = bold, label=""];
5->26 [style = bold, label=""];
13->22 [style = dotted, label="false"];
14->12 [style = dotted, label="true"];
28->34 [style = dotted, label="true"];
28->30 [style = dotted, label="true"];
12->22 [style = bold, label=""];
38->30 [style = bold, label=""];
28->38 [style = dotted, label="true"];
7->13 [style = bold, label=""];
24->38 [style = bold, label=""];
3->7 [style = solid, label="factory"];
20->21 [style = bold, label=""];
35->5 [style = bold, label=""];
18->16 [style = dotted, label="true"];
30->33 [style = bold, label=""];
18->9 [style = bold, label=""];
39->24 [style = bold, label=""];
13->15 [style = dotted, label="false"];
14->19 [style = dotted, label="false"];
33->39 [style = bold, label=""];
15->11 [style = bold, label=""];
28->25 [style = dotted, label="true"];
7->4 [style = bold, label=""];
21->18 [style = bold, label=""];
29->27 [style = dotted, label="true"];
4->9 [style = bold, label=""];
37->28 [style = bold, label=""];
13->20 [style = dotted, label="true"];
18->16 [style = bold, label=""];
28->24 [style = dotted, label="true"];
23->18 [style = bold, label=""];
25->31 [style = bold, label=""];
32->30 [style = bold, label=""];
10->1 [style = solid, label="expression"];
3->0 [style = solid, label="factory"];
13->20 [style = bold, label=""];
35->31 [style = solid, label="expression"];
28->32 [style = dotted, label="true"];
13->14 [style = bold, label=""];
26->37 [style = bold, label=""];
17->3 [style = dotted, label="true"];
28->36 [style = dotted, label="true"];
9->1 [style = bold, label=""];
20->4 [style = dotted, label="false"];
10->5 [style = bold, label=""];
17->10 [style = bold, label=""];
13->14 [style = dotted, label="false"];
5->6 [style = bold, label=""];
4->18 [style = bold, label=""];
16->9 [style = bold, label=""];
30->39 [style = bold, label=""];
}
