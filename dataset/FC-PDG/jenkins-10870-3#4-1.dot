digraph {
10 [style = filled, label = "File source = new File(root,\"source\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(zipPath.exists())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "zip_NoFollowLinks_FilePathVF['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "zipPath.unzip(unzipPath)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "FilePath unzipPath = new FilePath(new File(tmp.getRoot(),\"unzip\"))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "VirtualFile sourcePath = VirtualFile.forFilePath(new FilePath(source))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "zip_NoFollowLinks_FilePathVF['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertFalse(zipPath.isDirectory())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(unzipPath.isDirectory())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "zip_NoFollowLinks_FileVF['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertTrue(unzipPath.exists())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertFalse(unzipPath.child(\"a\").child(\"aa\").child(\"aaa\").exists())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertFalse(unzipPath.child(\"b\").child(\"_a\").exists())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertFalse(unzipPath.child(\"b\").child(\"_aatxt\").exists())@@@24@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "File zipFile = new File(tmp.getRoot(),\"output.zip\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertFalse(unzipPath.child(\"a\").child(\"_b\").exists())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(unzipPath.child(\"a\").child(\"ab\").child(\"ab.txt\").exists())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "sourcePath.zip(outputStream,\"**\",null,true,true)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(unzipPath.child(\"b\").child(\"ba\").child(\"ba.txt\").exists())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "VirtualFile sourcePath = VirtualFile.forFile(source)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "prepareFileStructureForIsDescendant(source)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "FilePath zipPath = new FilePath(zipFile)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "sourcePath.zip(outputStream,\"**\",null,true,true,\"\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "File root = tmp.getRoot()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(unzipPath.child(\"a\").child(\"aa\").child(\"aa.txt\").exists())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
16->11 [style = bold, label=""];
12->5 [style = bold, label=""];
0->13 [style = bold, label=""];
10->15 [style = solid, label="source"];
10->7 [style = solid, label="source"];
15->21 [style = bold, label=""];
15->24 [style = dashed, label="0"];
18->12 [style = bold, label=""];
17->11 [style = solid, label="zipFile"];
1->0 [style = bold, label=""];
11->19 [style = bold, label=""];
15->16 [style = bold, label=""];
10->7 [style = bold, label=""];
16->21 [style = dashed, label="0"];
20->18 [style = bold, label=""];
3->10 [style = bold, label=""];
5->1 [style = bold, label=""];
24->16 [style = bold, label=""];
7->24 [style = bold, label=""];
8->20 [style = bold, label=""];
21->11 [style = bold, label=""];
10->24 [style = solid, label="source"];
8->20 [style = solid, label="unzipPath"];
9->14 [style = bold, label=""];
17->3 [style = bold, label=""];
22->17 [style = bold, label=""];
7->15 [style = bold, label=""];
4->8 [style = bold, label=""];
23->17 [style = bold, label=""];
19->4 [style = bold, label=""];
13->9 [style = bold, label=""];
3->10 [style = solid, label="root"];
14->6 [style = bold, label=""];
}
