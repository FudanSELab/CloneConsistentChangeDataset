digraph {
54 [style = filled, label = "final NicIpAliasVO alias@@@13@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "final NicVO domrGuestNic = nicDao.findByInstanceIdAndIpAddressAndVmtype(_router.getId(),nicDao.getIpAddress(_nic.getNetworkId(),_router.getId()),VirtualMachine.Type.DomainRouter)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "nicIpAliasDao.persist(_nicAlias)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "NetUtils.sameSubnet(alias.getIp4Address(),_nic.getIPv4Address(),_nic.getIPv4Netmask())@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "return visitor.visit(this)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "final List<NicIpAliasVO> aliasIps = nicIpAliasDao.listByNetworkIdAndState(domrGuestNic.getNetworkId(),NicIpAlias.State.active)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final List<Long> vlanDbIdList = new ArrayList<Long>()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "PublicIp routerPublicIP = null@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final NicIpAliasVO ipAliasVO = nicIpAliasDao.findByInstanceIdAndNetworkId(_network.getId(),_router.getId())@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "final NetworkTopologyVisitor visitor@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "_nicVo = nicDao.findById(_nic.getId())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "userVmDao.loadDetails(_userVM)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "podDao.findById(vm.getPodIdToDeployIn())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "final VirtualRouter router@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "accept['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "final InsufficientAddressCapacityException e@@@44@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "_userVM = userVmDao.findById(_profile.getId())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final VlanVO vlan@@@31@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final List<VlanVO> vlanList = vlanDao.listVlansByNetworkIdAndGateway(_network.getId(),_nic.getIPv4Gateway())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "UserVmDao userVmDao = visitor.getVirtualNetworkApplianceFactory().getUserVmDao()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "IpAddressManager ipAddrMgr = visitor.getVirtualNetworkApplianceFactory().getIpAddrMgr()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "final UserVmVO vm = userVmDao.findById(_profile.getId())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ipInVmsubnet == false@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "_router = router@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "aliasIps@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "aliasIps@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "_nicAlias = new NicIpAliasVO(domrGuestNic.getId(),_routerAliasIp,_router.getId(),CallContext.current().getCallingAccountId(),_network.getDomainId(),_nic.getNetworkId(),_nic.getIPv4Gateway(),_nic.getIPv4Netmask())@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "userVmDao.loadDetails(vm)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "VlanDao vlanDao = visitor.getVirtualNetworkApplianceFactory().getVlanDao()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "ipInVmsubnet = true@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "final NicIpAliasDao nicIpAliasDao = visitor.getVirtualNetworkApplianceFactory().getNicIpAliasDao()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "final NetworkTopologyVisitor visitor@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "final PublicIp routerPublicIPFinal = routerPublicIP@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "return true@@@69@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "throw new CloudRuntimeException(\"failed to configure ip alias on the router as a part of dhcp config\")@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "routerPublicIP = ipAddrMgr.assignPublicIpAddressFromVlans(_router.getDataCenterId(),null,caller,Vlan.VlanType.DirectAttached,vlanDbIdList,_nic.getNetworkId(),null,false)@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "s_logger.info(e.getMessage())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "return true@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Transaction.execute(new TransactionCallbackNoReturn(){@Override public void doInTransactionWithoutResult(final TransactionStatus status){nicIpAliasDao.expunge(ipAliasVO.getId())IPAddressDao ipAddressDao = visitor.getVirtualNetworkApplianceFactory().getIpAddressDao()ipAddressDao.unassignIpAddress(routerPublicIPFinal.getId())}})@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "_nicAlias.setAliasCount(routerPublicIP.getIpMacAddress())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "accept['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "_routerAliasIp = routerPublicIP.getAddress().addr()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final VirtualRouter router@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "HostPodDao podDao = visitor.getVirtualNetworkApplianceFactory().getPodDao()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "DataCenterDao dcDao = visitor.getVirtualNetworkApplianceFactory().getDcDao()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final VlanVO vlan@@@31@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "dc.getNetworkType() == NetworkType.Basic@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "_network.getTrafficType() == TrafficType.Guest && _network.getGuestType() == GuestType.Shared@@@24@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "result == false@@@53@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final boolean result = visitor.visit(this)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "!NetUtils.sameSubnet(domrGuestNic.getIPv4Address(),_nic.getIPv4Address(),_nic.getIPv4Netmask())@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "accept['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "NicDao nicDao = visitor.getVirtualNetworkApplianceFactory().getNicDao()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final Account caller = CallContext.current().getCallingAccount()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "boolean ipInVmsubnet = false@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "routerPublicIP = ipAddrMgr.assignPublicIpAddressFromVlans(_router.getDataCenterId(),vm.getPodIdToDeployIn(),caller,Vlan.VlanType.DirectAttached,vlanDbIdList,_nic.getNetworkId(),null,false)@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "vlanDbIdList.add(vlan.getId())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "routerPublicIP = ipAddrMgr.assignPublicIpAddressFromVlans(_router.getDataCenterId(),null,caller,Vlan.VlanType.DirectAttached,vlanDbIdList,_nic.getNetworkId(),null,_nic.getIPv4Gateway(),false)@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "vlanList@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "s_logger.info(\"unable to configure dhcp for this VM.\")@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "return false@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final DataCenter dc = dcDao.findById(_router.getDataCenterId())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "routerPublicIP = ipAddrMgr.assignPublicIpAddressFromVlans(_router.getDataCenterId(),vm.getPodIdToDeployIn(),caller,Vlan.VlanType.DirectAttached,vlanDbIdList,_nic.getNetworkId(),null,_nic.getIPv4Gateway(),false)@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21->12 [style = dotted, label="true"];
10->44 [style = dotted, label="true"];
14->25 [style = bold, label=""];
0->5 [style = dotted, label="true"];
4->55 [style = solid, label="vlanDbIdList"];
48->32 [style = solid, label="routerPublicIP"];
46->13 [style = bold, label=""];
2->22 [style = dotted, label="true"];
32->12 [style = bold, label=""];
24->32 [style = bold, label=""];
5->45 [style = solid, label="_nicAlias"];
53->52 [style = dotted, label="true"];
21->27 [style = dotted, label="true"];
2->23 [style = dotted, label="true"];
31->21 [style = bold, label=""];
21->24 [style = bold, label=""];
57->58 [style = bold, label=""];
41->11 [style = bold, label=""];
40->20 [style = bold, label=""];
25->29 [style = bold, label=""];
45->31 [style = bold, label=""];
25->29 [style = dotted, label="true"];
25->35 [style = bold, label=""];
25->56 [style = dotted, label="false"];
36->56 [style = solid, label="caller"];
27->49 [style = bold, label=""];
35->32 [style = solid, label="routerPublicIP"];
3->18 [style = bold, label=""];
0->31 [style = dotted, label="true"];
37->5 [style = bold, label=""];
2->25 [style = dotted, label="true"];
2->23 [style = bold, label=""];
41->62 [style = dashed, label="0"];
49->39 [style = bold, label=""];
0->21 [style = dotted, label="true"];
21->24 [style = dotted, label="true"];
36->35 [style = solid, label="caller"];
50->48 [style = dotted, label="true"];
50->1 [style = dotted, label="true"];
30->0 [style = solid, label="ipInVmsubnet"];
50->26 [style = dotted, label="true"];
44->46 [style = solid, label="router"];
62->60 [style = solid, label="_userVM"];
2->20 [style = dotted, label="true"];
10->6 [style = dotted, label="true"];
0->45 [style = dotted, label="true"];
59->61 [style = dotted, label="true"];
34->48 [style = bold, label=""];
26->17 [style = bold, label=""];
0->43 [style = dotted, label="true"];
59->44 [style = dotted, label="true"];
47->28 [style = bold, label=""];
25->55 [style = bold, label=""];
62->60 [style = bold, label=""];
18->15 [style = bold, label=""];
6->46 [style = solid, label="router"];
35->56 [style = dashed, label="0"];
21->32 [style = dotted, label="true"];
36->29 [style = solid, label="caller"];
50->39 [style = bold, label=""];
43->45 [style = bold, label=""];
38->57 [style = bold, label=""];
1->0 [style = solid, label="ipInVmsubnet"];
55->32 [style = solid, label="routerPublicIP"];
4->56 [style = solid, label="vlanDbIdList"];
3->18 [style = dotted, label="true"];
50->34 [style = dotted, label="true"];
25->55 [style = dotted, label="true"];
59->46 [style = bold, label=""];
50->49 [style = dotted, label="true"];
36->40 [style = bold, label=""];
56->32 [style = solid, label="routerPublicIP"];
31->21 [style = solid, label="result"];
35->42 [style = bold, label=""];
50->54 [style = dotted, label="true"];
13->62 [style = bold, label=""];
42->5 [style = solid, label="_routerAliasIp"];
11->60 [style = dashed, label="0"];
3->37 [style = dotted, label="true"];
4->33 [style = bold, label=""];
60->38 [style = bold, label=""];
55->42 [style = bold, label=""];
48->26 [style = bold, label=""];
13->41 [style = bold, label=""];
53->46 [style = bold, label=""];
1->34 [style = bold, label=""];
17->0 [style = bold, label=""];
2->9 [style = dotted, label="true"];
2->42 [style = dotted, label="true"];
0->49 [style = bold, label=""];
50->28 [style = dotted, label="true"];
29->42 [style = bold, label=""];
53->44 [style = dotted, label="true"];
3->15 [style = dotted, label="true"];
2->4 [style = dotted, label="true"];
8->50 [style = bold, label=""];
21->49 [style = bold, label=""];
2->14 [style = dotted, label="true"];
38->8 [style = bold, label=""];
2->36 [style = dotted, label="true"];
34->30 [style = dotted, label="true"];
15->37 [style = bold, label=""];
12->27 [style = bold, label=""];
2->5 [style = bold, label=""];
9->36 [style = bold, label=""];
50->19 [style = dotted, label="true"];
33->14 [style = bold, label=""];
11->38 [style = bold, label=""];
25->35 [style = dotted, label="false"];
25->56 [style = bold, label=""];
0->2 [style = bold, label=""];
10->46 [style = bold, label=""];
2->40 [style = dotted, label="true"];
28->1 [style = bold, label=""];
29->55 [style = dashed, label="0"];
29->32 [style = solid, label="routerPublicIP"];
50->47 [style = dotted, label="true"];
34->30 [style = bold, label=""];
56->42 [style = bold, label=""];
20->4 [style = bold, label=""];
50->17 [style = dotted, label="true"];
5->43 [style = bold, label=""];
50->16 [style = dotted, label="true"];
50->0 [style = dotted, label="true"];
2->33 [style = dotted, label="true"];
41->11 [style = solid, label="vm"];
50->47 [style = bold, label=""];
2->7 [style = dotted, label="true"];
36->55 [style = solid, label="caller"];
4->35 [style = solid, label="vlanDbIdList"];
30->48 [style = bold, label=""];
42->5 [style = bold, label=""];
0->2 [style = dotted, label="true"];
23->9 [style = bold, label=""];
4->29 [style = solid, label="vlanDbIdList"];
2->51 [style = dotted, label="true"];
}
