digraph {
34 [style = filled, label = "vm.getType() == VirtualMachine.Type.User@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "return false@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "implement['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "return true@@@23@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "s_logger.warn(\"Unable to find Enabled VPC by id \" + vpcId)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final ReservationContext context@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "final ReservationContext context@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "network.isRollingRestart()@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "vpc.setRollingRestart(true)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "final List<DomainRouterVO> routers = routerDeploymentDefinition.deployVirtualRouter()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "s_logger.trace(\"Network \" + network + \" is not associated with any VPC\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final NicProfile nic@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final DeployDestination dest@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "vpcId == null@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final NetworkOffering offering@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "prepare['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final Network network@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "implement['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "final Network network@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final Network network@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return false@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "configureGuestNetwork(network,routers)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "params.put(VirtualMachineProfile.Param.RollingRestart,true)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final ReservationContext context@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "params.put(VirtualMachineProfile.Param.ReProgramGuestNetworks,true)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "routers == null || routers.size() == 0@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "throw new ResourceUnavailableException(\"Can't find at least one running router!\",,network.getDataCenterId())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final RouterDeploymentDefinition routerDeploymentDefinition = routerDeploymentDefinitionBuilder.create().setGuestNetwork(network).setVpc(vpc).setDeployDestination(dest).setAccountOwner(_accountMgr.getAccount(vpc.getAccountId())).setParams(params).build()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "vpc == null@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final Map<VirtualMachineProfile.Param,Object> params = new HashMap<VirtualMachineProfile.Param,Object>(1)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final Vpc vpc = _vpcMgr.getActiveVpc(vpcId)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final NetworkOffering offering@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final DeployDestination dest@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "final VirtualMachineProfile vm@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final Long vpcId = network.getVpcId()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->7 [style = dotted, label="true"];
34->9 [style = dotted, label="true"];
12->7 [style = bold, label=""];
8->4 [style = solid, label="network"];
18->5 [style = solid, label="network"];
33->5 [style = solid, label="network"];
13->15 [style = bold, label=""];
11->4 [style = bold, label=""];
7->24 [style = bold, label=""];
13->1 [style = dotted, label="true"];
26->25 [style = dotted, label="true"];
7->9 [style = bold, label=""];
31->28 [style = dotted, label="true"];
5->1 [style = bold, label=""];
31->33 [style = dotted, label="true"];
9->2 [style = bold, label=""];
2->4 [style = solid, label="routers"];
26->0 [style = bold, label=""];
8->5 [style = solid, label="network"];
19->22 [style = bold, label=""];
3->8 [style = dotted, label="true"];
4->17 [style = bold, label=""];
2->10 [style = bold, label=""];
10->11 [style = bold, label=""];
14->19 [style = bold, label=""];
26->18 [style = dotted, label="true"];
34->4 [style = dotted, label="true"];
0->13 [style = bold, label=""];
22->9 [style = bold, label=""];
34->17 [style = bold, label=""];
15->14 [style = solid, label="vpc"];
34->19 [style = dotted, label="true"];
26->23 [style = dotted, label="true"];
0->15 [style = solid, label="vpcId"];
12->9 [style = bold, label=""];
20->21 [style = bold, label=""];
14->21 [style = dotted, label="true"];
21->19 [style = bold, label=""];
34->2 [style = dotted, label="true"];
34->10 [style = dotted, label="true"];
15->14 [style = bold, label=""];
10->4 [style = bold, label=""];
3->18 [style = dotted, label="true"];
3->0 [style = bold, label=""];
3->6 [style = dotted, label="true"];
31->30 [style = dotted, label="true"];
33->4 [style = solid, label="network"];
1->15 [style = bold, label=""];
14->34 [style = bold, label=""];
31->29 [style = dotted, label="true"];
14->20 [style = dotted, label="true"];
24->9 [style = bold, label=""];
21->34 [style = bold, label=""];
31->32 [style = dotted, label="true"];
18->33 [style = dashed, label="0"];
13->5 [style = dotted, label="true"];
0->13 [style = solid, label="vpcId"];
0->20 [style = solid, label="vpcId"];
22->12 [style = bold, label=""];
10->11 [style = dotted, label="true"];
2->10 [style = solid, label="routers"];
34->19 [style = bold, label=""];
3->16 [style = dotted, label="true"];
26->27 [style = dotted, label="true"];
18->4 [style = solid, label="network"];
34->22 [style = dotted, label="true"];
13->5 [style = bold, label=""];
14->20 [style = bold, label=""];
31->0 [style = bold, label=""];
12->24 [style = dotted, label="true"];
}
