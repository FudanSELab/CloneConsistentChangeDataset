digraph {
5 [style = filled, label = "Assert.assertEquals(stat.getCtime(),stat.getMtime())@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "validateCreateStat['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getPzxid())@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String name@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(0,stat.getNumChildren())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "String name@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(stat.getCzxid(),stat.getPzxid())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertEquals(0,stat.getCversion())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertEquals(name.length(),stat.getDataLength())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertEquals(0,stat.getAversion())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertEquals(0,stat.getVersion())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "validateCreateStat['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Stat stat@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "Assert.assertEquals(0,stat.getVersion())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(0,stat.getEphemeralOwner())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Assert.assertEquals(0,stat.getCversion())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "validateCreateStat['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(0,stat.getNumChildren())@@@11@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(0,stat.getAversion())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(stat.getCzxid(),stat.getMzxid())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getMzxid())@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(0,stat.getEphemeralOwner())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(stat.getCtime(),stat.getMtime())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "Stat stat@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertEquals(name.length(),stat.getDataLength())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
16->18 [style = bold, label=""];
7->1 [style = bold, label=""];
20->17 [style = bold, label=""];
9->11 [style = bold, label=""];
22->19 [style = bold, label=""];
6->20 [style = dashed, label="0"];
24->4 [style = dotted, label="true"];
1->19 [style = dashed, label="0"];
18->12 [style = bold, label=""];
10->13 [style = dashed, label="0"];
7->0 [style = dotted, label="true"];
5->18 [style = dashed, label="0"];
10->6 [style = bold, label=""];
19->16 [style = bold, label=""];
3->10 [style = bold, label=""];
12->13 [style = bold, label=""];
9->14 [style = dashed, label="0"];
24->23 [style = dotted, label="true"];
3->12 [style = dashed, label="0"];
17->14 [style = bold, label=""];
2->16 [style = dashed, label="0"];
7->4 [style = dotted, label="true"];
6->8 [style = bold, label=""];
8->9 [style = bold, label=""];
8->17 [style = dashed, label="0"];
1->2 [style = bold, label=""];
24->1 [style = bold, label=""];
22->4 [style = dotted, label="true"];
22->15 [style = dotted, label="true"];
14->21 [style = bold, label=""];
2->5 [style = bold, label=""];
13->20 [style = bold, label=""];
11->21 [style = dashed, label="0"];
}
