digraph {
5 [style = filled, label = "assertThat(token.toString()).isEqualTo(accessToken)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "this.request.addHeader(\"Authorization\",\"Bearer \" + accessToken)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ArgumentCaptor<Token> tokenArgumentCaptor = ArgumentCaptor.forClass()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "preHandleSuccessfulWithFullAccess['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertThat(response.getStatus()).isEqualTo(HttpStatus.OK)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "preHandleSuccessfulWithRestrictedAccess['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "SecurityResponse response = this.interceptor.preHandle(this.request,EndpointId.of(\"test\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(this.request.getAttribute(\"cloudFoundryAccessLevel\")).isEqualTo(AccessLevel.FULL)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(this.request.getAttribute(\"cloudFoundryAccessLevel\")).isEqualTo(AccessLevel.RESTRICTED)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "String accessToken = mockAccessToken()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "SecurityResponse response = this.interceptor.preHandle(this.request,EndpointId.of(\"info\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "preHandleSuccessfulWithFullAccess['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "given(this.securityService.getAccessLevel(accessToken,\"my-app-id\")).willReturn(AccessLevel.FULL)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "verify(this.tokenValidator).validate(tokenArgumentCaptor.capture())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Token token = tokenArgumentCaptor.getValue()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "given(this.securityService.getAccessLevel(accessToken,\"my-app-id\")).willReturn(AccessLevel.RESTRICTED)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8->10 [style = bold, label=""];
15->7 [style = bold, label=""];
8->5 [style = solid, label="accessToken"];
9->4 [style = bold, label=""];
12->15 [style = bold, label=""];
0->15 [style = dashed, label="0"];
10->3 [style = bold, label=""];
1->13 [style = bold, label=""];
3->0 [style = bold, label=""];
0->7 [style = bold, label=""];
7->9 [style = bold, label=""];
5->1 [style = bold, label=""];
1->6 [style = bold, label=""];
3->12 [style = dashed, label="0"];
8->10 [style = solid, label="accessToken"];
6->13 [style = dashed, label="0"];
10->12 [style = bold, label=""];
11->8 [style = bold, label=""];
14->8 [style = bold, label=""];
4->5 [style = bold, label=""];
2->8 [style = bold, label=""];
}
