digraph {
4 [style = filled, label = "assertTrue(expressionString.contains(\"runInterval=1000\"))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(expressionString.contains(\"checkpointEvery=1000\"))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(expressionString.contains(\"q=\"*:*\"\"))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "stream = new TopicStream(StreamExpressionParser.parse(\"topic(collection2, collection1, q=*:*, fl=\"id,a_s,a_i,a_f\", id=\"blah\", checkpointEvery=1000)\"),factory)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testDaemonStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "TopicStream stream@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "DaemonStream stream@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "assertTrue(expressionString.contains(\"topic(collection2,collection1\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(expressionString.contains(\"queueSize=100\"))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testTopicStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "String expressionString@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "stream = new DaemonStream(StreamExpressionParser.parse(\"daemon(search(collection1, q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc, a_i asc\"), id=\"blah\", runInterval=\"1000\", queueSize=\"100\")\"),factory)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "expressionString = stream.toExpression(factory).toString()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(expressionString.contains(\"fl=\"id,a_s,a_i,a_f\"\"))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(expressionString.contains(\"id=blah\"))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(expressionString.contains(\"daemon(search(collection1,\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(expressionString.contains(\"sort=\"a_f asc, a_i asc\"\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testDaemonStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
6->17 [style = bold, label=""];
5->8 [style = bold, label=""];
0->9 [style = bold, label=""];
5->14 [style = dashed, label="0"];
8->15 [style = bold, label=""];
2->6 [style = bold, label=""];
8->6 [style = bold, label=""];
15->6 [style = bold, label=""];
11->17 [style = dashed, label="0"];
7->4 [style = bold, label=""];
9->10 [style = bold, label=""];
10->7 [style = bold, label=""];
2->15 [style = dashed, label="0"];
3->10 [style = bold, label=""];
11->0 [style = bold, label=""];
17->0 [style = bold, label=""];
8->2 [style = bold, label=""];
10->13 [style = bold, label=""];
12->8 [style = bold, label=""];
6->11 [style = bold, label=""];
7->13 [style = dashed, label="0"];
9->3 [style = bold, label=""];
16->14 [style = bold, label=""];
14->8 [style = bold, label=""];
}
