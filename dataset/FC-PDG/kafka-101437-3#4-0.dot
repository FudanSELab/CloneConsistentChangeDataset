digraph {
14 [style = filled, label = "int i = 0@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "int i = 0@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final MockProcessorSupplier<Integer,String> processor@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "checkJoinedValues(getter,kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "doTestJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "driver.process(topic2,expectedKeys(i(,null)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final KTableValueGetter<Integer,String> getter = getterSupplier.get()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "processor.checkAndClearProcessResult()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "driver.flushState()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "final MockProcessorSupplier<Integer,String> processor@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+YY0\",\"1:XX1+YY1\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "driver.flushState()@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "doTestJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "final StreamsBuilder builder@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "driver.process(topic1,null,\"SomeVal\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "driver.process(topic2,null,\"AnotherVal\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "i < 2@@@47@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int i = 0@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(streamTopic,tableTopic)),copartitionGroups.iterator().next())@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "i++@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "driver.process(topic1,null,\"XX\" + 1)@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "final KTable<Integer,String> joined@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "getter.init(driver.context())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+YY0\"),kv(1,\"XX1+YY1\"),kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "driver.setTime(0L)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "driver.flushState()@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "driver.flushState()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "processor.checkAndClearProcessResult(\"2:XX2+YY2\",\"3:XX3+YY3\")@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "shouldRequireCopartitionedStreams['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final KTableValueGetterSupplier<Integer,String> getterSupplier = ((KTableImpl<Integer,String,String>)joined).valueGetterSupplier()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "processor.checkAndClearProcessResult(\"0:null\",\"1:null\")@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final KTable<Integer,String> joined@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "driver.flushState()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "i < 2@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "i++@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "checkJoinedValues(getter,kv(0,null),kv(1,null))@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "driver.flushState()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "final int(( expectedKeys@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+Y0\"),kv(1,\"XX1+Y1\"))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i < 2@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "i++@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "driver.process(topic2,expectedKey,\"YY\" + expectedKey)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "checkJoinedValues(getter,kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@61@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "driver.setUp(builder,stateDir,Serdes.Integer(),Serdes.String())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+Y0\",\"1:XX1+Y1\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "final int(( expectedKeys@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "final Collection<Set<String>> copartitionGroups = StreamsBuilderTest.getCopartitionedGroups(builder)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "driver.flushState()@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->10 [style = bold, label=""];
20->37 [style = bold, label=""];
14->32 [style = bold, label=""];
14->32 [style = solid, label="i"];
28->0 [style = solid, label="i"];
21->39 [style = bold, label=""];
12->23 [style = bold, label=""];
53->54 [style = dotted, label="true"];
16->13 [style = solid, label="getter"];
0->15 [style = bold, label=""];
55->27 [style = solid, label="builder"];
16->6 [style = bold, label=""];
5->38 [style = dotted, label="true"];
16->1 [style = solid, label="getter"];
33->9 [style = bold, label=""];
53->48 [style = dotted, label="true"];
45->26 [style = bold, label=""];
38->8 [style = solid, label="expectedKeys"];
38->15 [style = solid, label="expectedKeys"];
16->33 [style = solid, label="getter"];
9->34 [style = bold, label=""];
5->48 [style = dotted, label="true"];
28->0 [style = bold, label=""];
54->15 [style = solid, label="expectedKeys"];
48->27 [style = solid, label="builder"];
40->11 [style = bold, label=""];
35->40 [style = bold, label=""];
16->39 [style = solid, label="getter"];
17->10 [style = solid, label="i"];
18->2 [style = solid, label="i"];
54->8 [style = solid, label="expectedKeys"];
46->22 [style = bold, label=""];
41->44 [style = bold, label=""];
13->31 [style = bold, label=""];
26->4 [style = bold, label=""];
52->0 [style = solid, label="i"];
7->46 [style = bold, label=""];
16->40 [style = solid, label="getter"];
18->32 [style = bold, label=""];
5->51 [style = bold, label=""];
3->17 [style = solid, label="i"];
53->51 [style = bold, label=""];
6->14 [style = bold, label=""];
32->2 [style = bold, label=""];
57->51 [style = bold, label=""];
10->8 [style = dotted, label="true"];
50->35 [style = bold, label=""];
28->52 [style = solid, label="i"];
0->15 [style = dotted, label="true"];
3->10 [style = solid, label="i"];
14->2 [style = solid, label="i"];
36->12 [style = bold, label=""];
47->13 [style = bold, label=""];
16->42 [style = solid, label="getter"];
34->21 [style = bold, label=""];
52->0 [style = bold, label=""];
11->25 [style = bold, label=""];
14->18 [style = solid, label="i"];
43->49 [style = bold, label=""];
32->2 [style = dotted, label="true"];
0->52 [style = dotted, label="true"];
3->8 [style = solid, label="i"];
10->8 [style = bold, label=""];
44->20 [style = bold, label=""];
17->8 [style = solid, label="i"];
1->45 [style = bold, label=""];
49->19 [style = bold, label=""];
0->43 [style = bold, label=""];
53->56 [style = dotted, label="true"];
24->16 [style = bold, label=""];
4->33 [style = bold, label=""];
32->18 [style = dotted, label="true"];
7->58 [style = bold, label=""];
37->1 [style = bold, label=""];
48->51 [style = solid, label="builder"];
54->2 [style = solid, label="expectedKeys"];
38->2 [style = solid, label="expectedKeys"];
28->15 [style = solid, label="i"];
15->52 [style = bold, label=""];
46->58 [style = dashed, label="0"];
18->32 [style = solid, label="i"];
22->27 [style = bold, label=""];
55->51 [style = solid, label="builder"];
8->17 [style = bold, label=""];
32->36 [style = bold, label=""];
10->50 [style = bold, label=""];
51->7 [style = bold, label=""];
27->24 [style = bold, label=""];
5->30 [style = dotted, label="true"];
31->42 [style = bold, label=""];
2->18 [style = bold, label=""];
53->55 [style = dotted, label="true"];
16->41 [style = solid, label="getter"];
25->47 [style = bold, label=""];
52->15 [style = solid, label="i"];
19->41 [style = bold, label=""];
39->3 [style = bold, label=""];
23->28 [style = bold, label=""];
10->17 [style = dotted, label="true"];
5->29 [style = dotted, label="true"];
17->10 [style = bold, label=""];
}
