digraph {
0 [style = filled, label = "objectCastingTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(new Long(20),casted.getObject())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "val.setValue(1234L).setExists(true)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "val.setValue(1234).setExists(true)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(new Integer(20),casted.getObject())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "val.setValue(20).setExists(true)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "val.setValue(20L).setExists(true)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "objectCastingTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertTrue(val instanceof AnalyticsValue)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "objectCastingTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertTrue(casted.exists())@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "TestIntValue val = new TestIntValue()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(1234L,casted.getObject())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertTrue(casted.exists())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(new Long(1234),casted.getObject())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertEquals(new Integer(1234),casted.getObject())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "AnalyticsValue casted = (AnalyticsValue)val@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(20L,casted.getObject())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "TestLongValue val = new TestLongValue()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
16->15 [style = bold, label=""];
6->3 [style = solid, label="val"];
5->8 [style = bold, label=""];
5->12 [style = dashed, label="0"];
4->17 [style = dashed, label="0"];
15->1 [style = solid, label="val"];
0->6 [style = bold, label=""];
1->3 [style = bold, label=""];
9->7 [style = bold, label=""];
5->18 [style = dashed, label="0"];
3->4 [style = bold, label=""];
10->6 [style = bold, label=""];
2->12 [style = bold, label=""];
7->14 [style = bold, label=""];
6->1 [style = bold, label=""];
15->3 [style = solid, label="val"];
2->14 [style = dashed, label="0"];
6->15 [style = dashed, label="0"];
7->2 [style = bold, label=""];
12->8 [style = bold, label=""];
13->7 [style = bold, label=""];
9->13 [style = dashed, label="0"];
9->11 [style = dashed, label="0"];
3->17 [style = bold, label=""];
14->18 [style = bold, label=""];
17->13 [style = bold, label=""];
18->8 [style = bold, label=""];
4->11 [style = bold, label=""];
11->7 [style = bold, label=""];
2->5 [style = bold, label=""];
15->1 [style = bold, label=""];
6->1 [style = solid, label="val"];
}
