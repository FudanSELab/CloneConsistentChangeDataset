digraph {
2 [style = filled, label = "rewriteManifests.deleteManifest(firstSnapshotManifest)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(1,firstSnapshotManifests.size())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "validateManifestEntries(manifests.get(1),ids(firstSnapshot.snapshotId()),files(FILE_B),statuses(ManifestEntry.Status.EXISTING))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ManifestFile secondNewManifest = writeManifest(\"manifest-file-2.avro\",manifestEntry(ManifestEntry.Status.EXISTING,firstSnapshot.snapshotId(),FILE_B))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Snapshot snapshot = table.currentSnapshot()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "table.newFastAppend().appendFile(FILE_C).appendFile(FILE_D).commit()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Assert.assertEquals(3,manifests.size())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "rewriteManifests.addManifest(firstNewManifest)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "validateManifestEntries(manifests.get(0),ids(firstSnapshot.snapshotId()),files(FILE_A),statuses(ManifestEntry.Status.EXISTING))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ManifestFile firstSnapshotManifest = firstSnapshotManifests.get(0)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "RewriteManifests rewriteManifests = table.rewriteManifests()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "List<ManifestFile> manifests = snapshot.manifests()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "validateSummary(snapshot,1,1,2,0)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "AssertHelpers.assertThrows(\"Should reject commit\",,\"Manifest is missing\",null)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testBasicManifestReplacement['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Snapshot secondSnapshot = table.currentSnapshot()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "List<ManifestFile> firstSnapshotManifests = firstSnapshot.manifests()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "table.newDelete().deleteFile(FILE_A).commit()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ManifestFile firstNewManifest = writeManifest(\"manifest-file-1.avro\",manifestEntry(ManifestEntry.Status.EXISTING,firstSnapshot.snapshotId(),FILE_A))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "List<ManifestFile> firstSnapshotManifests = firstSnapshot.allManifests()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "rewriteManifests.addManifest(secondNewManifest)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "table.newFastAppend().appendFile(FILE_A).appendFile(FILE_B).commit()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Snapshot firstSnapshot = table.currentSnapshot()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "rewriteManifests.commit()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "validateManifestEntries(manifests.get(2),ids(secondSnapshot.snapshotId(),secondSnapshot.snapshotId()),files(FILE_C,FILE_D),statuses(ManifestEntry.Status.ADDED,ManifestEntry.Status.ADDED))@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testManifestReplacementConcurrentConflictingDelete['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "Assert.assertNull(\"Table should be empty\",table.currentSnapshot())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testManifestReplacementConcurrentConflictingDelete['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26->22 [style = bold, label=""];
6->12 [style = solid, label="firstNewManifest"];
15->1 [style = bold, label=""];
11->2 [style = solid, label="firstSnapshotManifest"];
20->6 [style = bold, label=""];
24->18 [style = bold, label=""];
22->24 [style = bold, label=""];
13->25 [style = bold, label=""];
4->5 [style = bold, label=""];
25->26 [style = bold, label=""];
10->13 [style = solid, label="secondNewManifest"];
17->14 [style = bold, label=""];
11->6 [style = bold, label=""];
3->25 [style = dashed, label="0"];
0->1 [style = bold, label=""];
12->13 [style = bold, label=""];
1->11 [style = bold, label=""];
6->10 [style = bold, label=""];
19->27 [style = bold, label=""];
10->7 [style = bold, label=""];
5->0 [style = bold, label=""];
18->19 [style = bold, label=""];
23->20 [style = bold, label=""];
16->14 [style = bold, label=""];
11->23 [style = bold, label=""];
3->8 [style = bold, label=""];
27->21 [style = bold, label=""];
9->14 [style = bold, label=""];
13->3 [style = bold, label=""];
0->15 [style = dashed, label="0"];
14->4 [style = bold, label=""];
2->12 [style = bold, label=""];
5->15 [style = bold, label=""];
26->18 [style = solid, label="snapshot"];
7->2 [style = bold, label=""];
}
