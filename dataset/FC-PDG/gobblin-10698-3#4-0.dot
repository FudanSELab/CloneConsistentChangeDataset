digraph {
7 [style = filled, label = "TypeInfo outputSchema = recordMap.lastEntry().getValue().getTypeInfo()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "writeJsonResourceRecordsAsBinary['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "Path targetPath@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "writeJsonResourceRecordsAsBinary['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Path targetPath@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "TreeMap<String,OrcRowIterator> recordMap = readAllRecordsInJsonResource(baseResource,null)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "writeAsOrcBinary(entry.getValue(),outputSchema,new Path(targetPath,removeExtension(entry.getKey())))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "TreeMap<String,RecordIterator> recordMap = readAllRecordsInJsonResource(baseResource,schema)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "@Nullable TypeInfo schema@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "@Nullable FileSystem fs@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "TreeMap<String,OrcRowIterator> recordMap = readAllRecordsInJsonResource(baseResource,schema)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "String baseResource@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "writeAsAvroBinary(entry.getValue(),entry.getValue().getSchema(),fs,new Path(targetPath,removeExtension(entry.getKey()) + \".avro\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "@Nullable Schema schema@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String baseResource@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "Path targetPath@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "@Nullable FileSystem fs@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return outputSchema@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "writeJsonResourceRecordsAsBinary['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "@Nullable TypeInfo schema@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Schema outputSchema = recordMap.lastEntry().getValue().getSchema()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "FileSystem fs@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
16->3 [style = bold, label=""];
20->17 [style = dotted, label="true"];
8->2 [style = dotted, label="true"];
9->11 [style = dotted, label="true"];
7->3 [style = solid, label="outputSchema"];
0->16 [style = dashed, label="0"];
20->14 [style = dotted, label="true"];
7->0 [style = bold, label=""];
5->6 [style = solid, label="baseResource"];
8->6 [style = bold, label=""];
20->21 [style = dotted, label="true"];
7->0 [style = solid, label="outputSchema"];
15->19 [style = bold, label=""];
8->4 [style = dotted, label="true"];
12->7 [style = bold, label=""];
19->16 [style = bold, label=""];
6->12 [style = dashed, label="0"];
8->1 [style = dotted, label="true"];
10->12 [style = solid, label="baseResource"];
14->16 [style = solid, label="fs"];
11->12 [style = solid, label="schema"];
19->3 [style = solid, label="outputSchema"];
8->5 [style = dotted, label="true"];
6->15 [style = dashed, label="0"];
7->19 [style = dashed, label="0"];
13->0 [style = solid, label="targetPath"];
9->13 [style = dotted, label="true"];
20->18 [style = dotted, label="true"];
5->21 [style = dashed, label="0"];
4->0 [style = solid, label="targetPath"];
18->15 [style = solid, label="baseResource"];
9->12 [style = bold, label=""];
6->7 [style = bold, label=""];
9->10 [style = dotted, label="true"];
20->15 [style = bold, label=""];
21->15 [style = solid, label="schema"];
17->16 [style = solid, label="targetPath"];
9->5 [style = dotted, label="true"];
}
