digraph {
5 [style = filled, label = "task.initializeIfNeeded()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "shouldAlwaysSuspendRestoringTasks['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "EasyMock.replay(stateManager)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(task.state(),equalTo(RESTORING))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(task.state(),equalTo(SUSPENDED))@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "EasyMock.expect(stateManager.changelogOffsets()).andReturn(Collections.emptyMap()).anyTimes()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "shouldAlwaysSuspendRestoringTasks['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "task.suspend()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "task = createStatefulTask(createConfig(false,\"100\"),true)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "shouldAlwaysSuspendCreatedTasks['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(task.state(),equalTo(CREATED))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(task.state(),equalTo(SUSPENDED))@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5->2 [style = bold, label=""];
0->9 [style = bold, label=""];
10->3 [style = bold, label=""];
11->4 [style = bold, label=""];
0->5 [style = bold, label=""];
7->8 [style = bold, label=""];
2->4 [style = bold, label=""];
9->11 [style = bold, label=""];
3->0 [style = bold, label=""];
6->3 [style = bold, label=""];
8->3 [style = bold, label=""];
4->1 [style = bold, label=""];
}
