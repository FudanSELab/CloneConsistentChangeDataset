digraph {
8 [style = filled, label = "EasyMock.reset(indexerMetadataStorageCoordinator)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "EasyMock.expect(taskStorage.getActiveTasksByDatasource(DATASOURCE)).andReturn(ImmutableList.of()).anyTimes()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "EasyMock.expect(taskRunner.getRunningTasks()).andReturn(Collections.emptyList()).anyTimes()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "EasyMock.expect(taskRunner.getRunningTasks()).andReturn(Collections.EMPTY_LIST).anyTimes()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "testResetNoDataSourceMetadata['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "supervisor.start()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "EasyMock.replay(indexerMetadataStorageCoordinator)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "verifyAll()@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "EasyMock.expect(taskMaster.getTaskRunner()).andReturn(Optional.of(taskRunner)).anyTimes()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "verifyAll()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "EasyMock.expect(taskRunner.getRunningTasks()).andReturn(Collections.emptyList()).anyTimes()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "supervisor.resetInternal(resetMetadata)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "supervisor = getTestableSupervisor(1,1,true,\"PT1H\",null,null)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testResetNoDataSourceMetadata['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "KafkaDataSourceMetadata resetMetadata = new KafkaDataSourceMetadata(new SeekableStreamStartSequenceNumbers<>(topic,ImmutableMap.of(1,1000L,2,1000L),ImmutableSet.of()))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "supervisor.runInternal()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "taskRunner.registerListener(EasyMock.anyObject(),EasyMock.anyObject())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "KinesisDataSourceMetadata resetMetadata = new KinesisDataSourceMetadata(new SeekableStreamStartSequenceNumbers<>(STREAM,ImmutableMap.of(SHARD_ID0,KinesisSequenceNumber.NO_END_SEQUENCE_NUMBER),ImmutableSet.of()))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testResetNoDataSourceMetadata['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "EasyMock.expect(taskMaster.getTaskQueue()).andReturn(Optional.of(taskQueue)).anyTimes()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "replayAll()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "EasyMock.expect(indexerMetadataStorageCoordinator.retrieveDataSourceMetadata(DATASOURCE)).andReturn(null)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "EasyMock.expect(supervisorRecordSupplier.getPartitionIds(EasyMock.anyObject())).andReturn(Collections.emptySet()).anyTimes()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16->0 [style = bold, label=""];
10->14 [style = bold, label=""];
7->13 [style = solid, label="resetMetadata"];
15->18 [style = dashed, label="0"];
12->15 [style = bold, label=""];
7->20 [style = dashed, label="0"];
0->11 [style = bold, label=""];
11->12 [style = bold, label=""];
15->19 [style = dashed, label="0"];
7->8 [style = bold, label=""];
4->7 [style = bold, label=""];
1->9 [style = bold, label=""];
20->13 [style = solid, label="resetMetadata"];
3->10 [style = bold, label=""];
19->1 [style = bold, label=""];
20->8 [style = bold, label=""];
17->0 [style = bold, label=""];
22->0 [style = bold, label=""];
8->2 [style = bold, label=""];
18->1 [style = bold, label=""];
21->22 [style = bold, label=""];
5->13 [style = bold, label=""];
12->18 [style = bold, label=""];
4->20 [style = bold, label=""];
9->3 [style = bold, label=""];
13->6 [style = bold, label=""];
12->19 [style = bold, label=""];
2->5 [style = bold, label=""];
14->4 [style = bold, label=""];
15->1 [style = bold, label=""];
}
