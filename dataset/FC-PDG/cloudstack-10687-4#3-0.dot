digraph {
7 [style = filled, label = "StoragePoolType(( storagePoolTypes = StoragePoolType.values()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "StoragePoolVO sourceStoragePool = Mockito.spy(new StoragePoolVO())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "shouldMigrateVolumeTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Mockito.doReturn(storagePoolTypes(i().when(sourceStoragePool).getPoolType()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "StoragePoolVO destStoragePool = new StoragePoolVO()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "HostVO destHost = new HostVO(\"guid\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertTrue(result)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "storagePoolTypes(i( == StoragePoolType.Filesystem@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "boolean result = storageSystemDataMotionStrategy.shouldMigrateVolume(sourceStoragePool,destHost,destStoragePool)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "boolean result = strategy.shouldMigrateVolume(sourceStoragePool,destHost,destStoragePool)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Assert.assertTrue(result)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i < storagePoolTypes.length@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "boolean result = kvmNonManagedStorageDataMotionStrategy.shouldMigrateVolume(sourceStoragePool,destHost,destStoragePool)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "shouldMigrateVolumeTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertFalse(result)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "shouldMigrateVolumeTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13->10 [style = bold, label=""];
5->14 [style = dotted, label="true"];
15->13 [style = bold, label=""];
10->5 [style = solid, label="i"];
8->14 [style = solid, label="destStoragePool"];
4->6 [style = bold, label=""];
16->10 [style = bold, label=""];
9->5 [style = solid, label="i"];
5->10 [style = dotted, label="true"];
2->3 [style = bold, label=""];
5->1 [style = dotted, label="true"];
14->16 [style = solid, label="result"];
8->2 [style = solid, label="destStoragePool"];
5->3 [style = dotted, label="true"];
15->16 [style = dotted, label="true"];
15->16 [style = bold, label=""];
5->15 [style = dotted, label="true"];
9->15 [style = solid, label="i"];
9->10 [style = solid, label="i"];
4->2 [style = solid, label="sourceStoragePool"];
8->7 [style = bold, label=""];
1->11 [style = bold, label=""];
4->14 [style = solid, label="sourceStoragePool"];
7->9 [style = bold, label=""];
3->10 [style = bold, label=""];
5->1 [style = bold, label=""];
5->11 [style = dotted, label="true"];
10->5 [style = bold, label=""];
11->3 [style = solid, label="result"];
2->14 [style = dashed, label="0"];
12->4 [style = bold, label=""];
6->11 [style = solid, label="destHost"];
11->3 [style = bold, label=""];
0->4 [style = bold, label=""];
10->15 [style = solid, label="i"];
6->14 [style = solid, label="destHost"];
6->8 [style = bold, label=""];
9->5 [style = bold, label=""];
2->11 [style = dashed, label="0"];
15->13 [style = dotted, label="false"];
1->14 [style = bold, label=""];
1->2 [style = bold, label=""];
14->15 [style = bold, label=""];
7->15 [style = solid, label="storagePoolTypes"];
14->13 [style = solid, label="result"];
8->11 [style = solid, label="destStoragePool"];
2->3 [style = solid, label="result"];
17->4 [style = bold, label=""];
5->2 [style = dotted, label="true"];
4->11 [style = solid, label="sourceStoragePool"];
6->2 [style = solid, label="destHost"];
}
