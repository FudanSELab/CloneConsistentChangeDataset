digraph {
21 [style = filled, label = "String index = \"writing-documents\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Elasticsearch7DynamicSinkFactory sinkFactory = new Elasticsearch7DynamicSinkFactory()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "String myType = \"MyType\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Map<String,Object> response = client.get(new GetRequest(index,myType,\"1_2012-12-12T12:12:12\")).actionGet().getSource()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "SinkFunctionProvider sinkRuntimeProvider = (SinkFunctionProvider)sinkFactory.createDynamicTableSink(context().withSchema(schema).withOption(ElasticsearchOptions.INDEX_OPTION.key(),index).withOption(ElasticsearchOptions.DOCUMENT_TYPE_OPTION.key(),myType).withOption(ElasticsearchOptions.HOSTS_OPTION.key(),\"http://127.0.0.1:9200\").withOption(ElasticsearchOptions.FLUSH_ON_CHECKPOINT_OPTION.key(),\"false\").build()).getSinkRuntimeProvider(new MockContext())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "testWritingDocuments['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "StreamExecutionEnvironment environment = StreamExecutionEnvironment.getExecutionEnvironment()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expectedMap.put(\"g\",\"2012-12-12T12:12:12Z\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "expectedMap.put(\"d\",12.12d)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "SinkFunction<RowData> sinkFunction = sinkRuntimeProvider.createSinkFunction()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Map<Object,Object> expectedMap = new HashMap<>()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Map<Object,Object> expectedMap = new HashMap<>()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "expectedMap.put(\"b\",\"00:00:12Z\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expectedMap.put(\"c\",\"ABCDE\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "SinkFunction<RowData> sinkFunction = sinkRuntimeProvider.createSinkFunction()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testWritingDocuments['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "expectedMap.put(\"f\",\"2003-10-20\")@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Elasticsearch6DynamicSinkFactory sinkFactory = new Elasticsearch6DynamicSinkFactory()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertThat(response,equalTo(expectedMap))@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "expectedMap.put(\"a\",1)@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "expectedMap.put(\"e\",2)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "expectedMap.put(\"b\",\"00:00:12\")@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Client client = elasticsearchResource.getClient()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "rowData.setRowKind(RowKind.UPDATE_AFTER)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "GenericRowData rowData = GenericRowData.of(1L,12345,StringData.fromString(\"ABCDE\"),12.12f,(byte)2,12345,TimestampData.fromLocalDateTime(LocalDateTime.parse(\"2012-12-12T12:12:12\")))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "SinkFunctionProvider sinkRuntimeProvider = (SinkFunctionProvider)sinkFactory.createDynamicTableSink(context().withSchema(schema).withOption(ElasticsearchOptions.INDEX_OPTION.key(),index).withOption(ElasticsearchOptions.HOSTS_OPTION.key(),\"http://127.0.0.1:9200\").withOption(ElasticsearchOptions.FLUSH_ON_CHECKPOINT_OPTION.key(),\"false\").build()).getSinkRuntimeProvider(new MockContext())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "expectedMap.put(\"g\",\"2012-12-12 12:12:12\")@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "environment.fromElements(rowData).addSink(sinkFunction)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "TableSchema schema = TableSchema.builder().field(\"a\",DataTypes.BIGINT().notNull()).field(\"b\",DataTypes.TIME()).field(\"c\",DataTypes.STRING().notNull()).field(\"d\",DataTypes.FLOAT()).field(\"e\",DataTypes.TINYINT().notNull()).field(\"f\",DataTypes.DATE()).field(\"g\",DataTypes.TIMESTAMP().notNull()).primaryKey(\"a\",\"g\").build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testWritingDocuments['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "environment.execute()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->15 [style = bold, label=""];
28->27 [style = solid, label="response"];
0->13 [style = bold, label=""];
3->1 [style = bold, label=""];
11->14 [style = bold, label=""];
7->10 [style = bold, label=""];
18->22 [style = dashed, label="0"];
2->6 [style = bold, label=""];
10->19 [style = bold, label=""];
26->29 [style = bold, label=""];
30->26 [style = bold, label=""];
29->0 [style = bold, label=""];
4->18 [style = bold, label=""];
21->30 [style = bold, label=""];
9->7 [style = bold, label=""];
25->6 [style = bold, label=""];
0->14 [style = solid, label="sinkFunction"];
19->27 [style = solid, label="expectedMap"];
13->11 [style = bold, label=""];
22->5 [style = bold, label=""];
7->5 [style = solid, label="response"];
1->17 [style = bold, label=""];
3->23 [style = dashed, label="0"];
15->11 [style = solid, label="sinkFunction"];
17->12 [style = bold, label=""];
21->20 [style = bold, label=""];
20->16 [style = bold, label=""];
7->28 [style = bold, label=""];
12->4 [style = bold, label=""];
7->28 [style = dashed, label="0"];
18->5 [style = bold, label=""];
15->0 [style = bold, label=""];
19->23 [style = bold, label=""];
6->8 [style = bold, label=""];
28->19 [style = bold, label=""];
23->1 [style = bold, label=""];
8->21 [style = bold, label=""];
14->9 [style = bold, label=""];
5->27 [style = bold, label=""];
24->6 [style = bold, label=""];
19->3 [style = bold, label=""];
4->22 [style = bold, label=""];
10->5 [style = solid, label="expectedMap"];
}
