digraph {
28 [style = filled, label = "!cursor.isDone()@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final List<String> values = new ArrayList<>()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "i++@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final DimFilter filter@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final int(( rowVector = selector.getRowVector()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final String selectColumn@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "selectColumnValuesMatchingFilterUsingVectorizedPostFiltering['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final SingleValueDimensionVectorSelector selector = cursor.getColumnSelectorFactory().makeSingleValueDimensionSelector(new DefaultDimensionSpec(selectColumn,selectColumn))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "selectColumnValuesMatchingFilterUsingVectorCursor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final List<String> values = new ArrayList<>()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final int(( rowVector = selector.getRowVector()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "i++@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "int i = 0@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "i < cursor.getCurrentVectorSize()@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "!cursor.isDone()@@@37@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "cursor.advance()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "int i = 0@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "i < cursor.getCurrentVectorSize()@@@40@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final String selectColumn@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "return values@@@46@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final SingleValueDimensionVectorSelector selector = cursor.getColumnSelectorFactory().makeSingleValueDimensionSelector(new DefaultDimensionSpec(selectColumn,selectColumn))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "selectColumnValuesMatchingFilterUsingVectorizedPostFiltering['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "final Filter postFilteringFilter = new Filter(){@Override public T getBitmapResult(BitmapIndexSelector selector,BitmapResultFactory<T> bitmapResultFactory){throw new UnsupportedOperationException()}@Override public ValueMatcher makeMatcher(ColumnSelectorFactory factory){return theFilter.makeMatcher(factory)}@Override public boolean supportsBitmapIndex(BitmapIndexSelector selector){return false}@Override public boolean shouldUseBitmapIndex(BitmapIndexSelector selector){return false}@Override public VectorValueMatcher makeVectorMatcher(VectorColumnSelectorFactory factory){return theFilter.makeVectorMatcher(factory)}@Override public boolean canVectorizeMatcher(ColumnInspector inspector){return theFilter.canVectorizeMatcher(inspector)}@Override public Set<String> getRequiredColumns(){return null}@Override public boolean supportsSelectivityEstimation(ColumnSelector columnSelector,BitmapIndexSelector indexSelector){return false}@Override public double estimateSelectivity(BitmapIndexSelector indexSelector){return 1.0}}@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final DimFilter filter@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final DimFilter filter@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "return values@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "cursor.advance()@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Filter theFilter = makeFilter(filter)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "values.add(selector.lookupName(rowVector(i())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "values.add(selector.lookupName(rowVector(i())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->10 [style = dotted, label="true"];
29->21 [style = bold, label=""];
19->20 [style = solid, label="selectColumn"];
25->29 [style = bold, label=""];
23->25 [style = bold, label=""];
5->11 [style = dotted, label="true"];
8->9 [style = bold, label=""];
25->18 [style = solid, label="i"];
13->12 [style = solid, label="i"];
1->12 [style = bold, label=""];
27->17 [style = dotted, label="true"];
10->13 [style = solid, label="i"];
28->23 [style = bold, label=""];
5->4 [style = dotted, label="true"];
18->29 [style = solid, label="i"];
27->19 [style = dotted, label="true"];
4->6 [style = solid, label="filter"];
1->14 [style = bold, label=""];
27->20 [style = bold, label=""];
16->15 [style = dotted, label="true"];
11->19 [style = dashed, label="0"];
8->3 [style = bold, label=""];
2->8 [style = bold, label=""];
12->13 [style = bold, label=""];
9->12 [style = solid, label="rowVector"];
10->1 [style = bold, label=""];
25->22 [style = solid, label="i"];
29->18 [style = dotted, label="true"];
28->24 [style = bold, label=""];
28->25 [style = dotted, label="true"];
15->6 [style = solid, label="filter"];
1->13 [style = dotted, label="true"];
7->0 [style = bold, label=""];
25->29 [style = solid, label="i"];
1->12 [style = dotted, label="true"];
14->8 [style = bold, label=""];
16->6 [style = bold, label=""];
22->18 [style = bold, label=""];
26->28 [style = bold, label=""];
2->3 [style = solid, label="values"];
16->11 [style = dotted, label="true"];
13->1 [style = bold, label=""];
29->22 [style = bold, label=""];
8->14 [style = dotted, label="true"];
28->23 [style = dotted, label="true"];
9->10 [style = bold, label=""];
11->0 [style = solid, label="selectColumn"];
26->24 [style = solid, label="values"];
29->22 [style = dotted, label="true"];
0->2 [style = bold, label=""];
6->7 [style = bold, label=""];
10->1 [style = solid, label="i"];
18->22 [style = solid, label="i"];
13->1 [style = solid, label="i"];
20->26 [style = bold, label=""];
8->1 [style = dotted, label="true"];
28->29 [style = dotted, label="true"];
10->12 [style = solid, label="i"];
28->21 [style = dotted, label="true"];
18->29 [style = bold, label=""];
21->28 [style = bold, label=""];
5->6 [style = bold, label=""];
23->22 [style = solid, label="rowVector"];
8->9 [style = dotted, label="true"];
}
