digraph {
11 [style = filled, label = "list.add(or(ImmutableList.of(h,t)))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "incrementAndCheck()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "tailCnfs@@@29@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "RexNode h@@@28@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final RexNode tail = or(Util.skip(operands))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "incrementAndCheck()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "operands = ((RexCall)arg).getOperands()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "headCnfs@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "return toDnf(or(Lists.transform(flattenAnd(operands),ADD_NOT)))@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "tailCnfs@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "RexNode node@@@8@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
57 [style = filled, label = "final List<RexNode> list = Lists.newArrayList()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "operands = flattenOr(((RexCall)rex).getOperands())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "RexNode t@@@14@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final List<RexNode> tailCnfs = RelOptUtil.conjunctions(tailCnf)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "toCnf2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "final RexNode headCnf = toCnf2(head)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "RexNode t@@@29@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "operands = flattenAnd(((RexCall)rex).getOperands())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final RexNode arg = ((RexCall)rex).getOperands().get(0)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "operands = flattenOr(((RexCall)rex).getOperands())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "final List<RexNode> cnfOperands = new ArrayList<>()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "cnf.getKind()@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "operands = ((RexCall)arg).getOperands()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "final RexNode tail = and(Util.skip(operands))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "incrementAndCheck()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "return rex@@@45@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "operands = flattenAnd(((RexCall)rex).getOperands())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "return and(cnfOperands)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "return toDnf(((RexCall)arg).getOperands().get(0))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "rex.getKind()@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return toCnf2(((RexCall)arg).getOperands().get(0))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "incrementAndCheck()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "return toCnf2(or(Lists.transform(flattenAnd(operands),ADD_NOT)))@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "incrementAndCheck()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "RexNode cnf = toCnf2(node)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "return or(toDnfs(operands))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "return toCnf2(or(Lists.transform(flattenAnd(operands),null)))@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
68 [style = filled, label = "headDnfs@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "toDnf['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "incrementAndCheck()@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "RexNode rex@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "cnfOperands.addAll(((RexCall)cnf).getOperands())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "RexNode h@@@13@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "toCnf2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "return rex@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "final RexNode tailDnf = toDnf(tail)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "final List<RexNode> list = new ArrayList<>()@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
66 [style = filled, label = "return rex@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "operands@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "return toCnf2(and(Lists.transform(flattenOr(operands),ADD_NOT)))@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "final RexNode tailCnf = toCnf2(tail)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "RexNode h@@@28@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final List<RexNode> headCnfs = RelOptUtil.conjunctions(headCnf)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "return toDnf(and(Lists.transform(flattenOr(operands),ADD_NOT)))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "final List<RexNode> cnfOperands = Lists.newArrayList()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
53 [style = filled, label = "final RexNode headDnf = toDnf(head)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "final RexNode head = operands.get(0)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final List<RexNode> operands@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "arg.getKind()@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "RexNode rex@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "final List<RexNode> headDnfs = RelOptUtil.disjunctions(headDnf)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "operands = ((RexCall)arg).getOperands()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "final RexNode arg = ((RexCall)rex).getOperands().get(0)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "cnfOperands.add(cnf)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "arg.getKind()@@@22@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "list.add(and(ImmutableList.of(h,t)))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "RexNode node@@@8@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return and(list)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "operands = ((RexCall)arg).getOperands()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "final List<RexNode> tailDnfs = RelOptUtil.disjunctions(tailDnf)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "return rex@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "return or(list)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "tailDnfs@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "return toCnf2(and(Lists.transform(flattenOr(operands),null)))@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16->0 [style = bold, label=""];
13->56 [style = dashed, label="0"];
0->5 [style = dotted, label="true"];
74->66 [style = solid, label="rex"];
0->19 [style = dotted, label="true"];
17->47 [style = solid, label="operands"];
62->54 [style = bold, label=""];
57->56 [style = solid, label="list"];
60->53 [style = bold, label=""];
56->67 [style = bold, label=""];
63->56 [style = bold, label=""];
0->64 [style = dotted, label="true"];
26->40 [style = bold, label=""];
62->55 [style = bold, label=""];
5->12 [style = dotted, label="true"];
2->66 [style = dashed, label="0"];
62->71 [style = dotted, label="true"];
33->25 [style = solid, label="rex"];
36->11 [style = bold, label=""];
33->74 [style = dashed, label="0"];
28->14 [style = bold, label=""];
71->72 [style = solid, label="operands"];
5->34 [style = bold, label=""];
21->2 [style = bold, label=""];
65->51 [style = bold, label=""];
0->52 [style = bold, label=""];
7->9 [style = bold, label=""];
0->31 [style = dotted, label="true"];
32->49 [style = solid, label="operands"];
69->74 [style = dotted, label="true"];
7->73 [style = dashed, label="0"];
52->60 [style = bold, label=""];
69->16 [style = bold, label=""];
5->38 [style = dotted, label="true"];
52->59 [style = solid, label="operands"];
65->51 [style = solid, label="tailDnf"];
57->63 [style = bold, label=""];
28->46 [style = dashed, label="0"];
0->68 [style = dotted, label="true"];
0->24 [style = dotted, label="true"];
11->13 [style = bold, label=""];
0->52 [style = dotted, label="true"];
3->39 [style = bold, label=""];
23->17 [style = bold, label=""];
23->15 [style = dotted, label="true"];
0->3 [style = dotted, label="true"];
67->64 [style = solid, label="operands"];
23->17 [style = dotted, label="true"];
2->25 [style = bold, label=""];
0->11 [style = dotted, label="true"];
20->58 [style = dashed, label="0"];
0->67 [style = dotted, label="true"];
0->7 [style = dotted, label="true"];
8->55 [style = dashed, label="0"];
0->3 [style = bold, label=""];
0->46 [style = dotted, label="true"];
9->59 [style = dashed, label="0"];
0->45 [style = dotted, label="true"];
0->44 [style = dotted, label="true"];
0->56 [style = dotted, label="true"];
67->64 [style = bold, label=""];
0->10 [style = dotted, label="true"];
0->43 [style = dotted, label="true"];
0->19 [style = bold, label=""];
0->58 [style = bold, label=""];
32->49 [style = bold, label=""];
29->62 [style = bold, label=""];
23->21 [style = dotted, label="true"];
41->61 [style = dashed, label="0"];
5->6 [style = dotted, label="true"];
48->33 [style = dotted, label="true"];
0->29 [style = bold, label=""];
0->42 [style = dotted, label="true"];
12->35 [style = bold, label=""];
0->60 [style = dotted, label="true"];
23->8 [style = bold, label=""];
0->70 [style = dotted, label="true"];
27->22 [style = bold, label=""];
23->2 [style = dotted, label="true"];
21->36 [style = dashed, label="0"];
45->11 [style = bold, label=""];
0->57 [style = dotted, label="true"];
8->17 [style = bold, label=""];
73->59 [style = bold, label=""];
6->38 [style = bold, label=""];
0->39 [style = dotted, label="true"];
5->6 [style = bold, label=""];
74->58 [style = solid, label="rex"];
5->34 [style = dotted, label="true"];
0->50 [style = dotted, label="true"];
48->16 [style = bold, label=""];
0->37 [style = dotted, label="true"];
12->14 [style = bold, label=""];
17->15 [style = bold, label=""];
27->65 [style = dashed, label="0"];
46->14 [style = bold, label=""];
0->20 [style = bold, label=""];
45->13 [style = solid, label="list"];
0->14 [style = dotted, label="true"];
0->51 [style = dotted, label="true"];
0->26 [style = dotted, label="true"];
38->35 [style = bold, label=""];
0->41 [style = dotted, label="true"];
15->72 [style = dashed, label="0"];
36->13 [style = solid, label="list"];
36->66 [style = bold, label=""];
0->53 [style = dotted, label="true"];
9->27 [style = solid, label="tail"];
40->29 [style = bold, label=""];
36->45 [style = dashed, label="0"];
39->46 [style = bold, label=""];
62->66 [style = dotted, label="true"];
22->45 [style = bold, label=""];
28->35 [style = solid, label="cnfOperands"];
62->55 [style = dotted, label="true"];
0->58 [style = dotted, label="true"];
18->33 [style = dotted, label="true"];
37->7 [style = solid, label="headCnf"];
55->71 [style = bold, label=""];
62->36 [style = dotted, label="true"];
0->4 [style = dotted, label="true"];
59->65 [style = bold, label=""];
64->29 [style = bold, label=""];
23->32 [style = bold, label=""];
0->59 [style = dotted, label="true"];
37->53 [style = dashed, label="0"];
29->37 [style = bold, label=""];
27->22 [style = solid, label="tailCnf"];
62->66 [style = bold, label=""];
0->30 [style = dotted, label="true"];
37->7 [style = bold, label=""];
71->72 [style = bold, label=""];
9->27 [style = bold, label=""];
66->58 [style = bold, label=""];
23->32 [style = dotted, label="true"];
25->20 [style = bold, label=""];
13->19 [style = bold, label=""];
47->32 [style = bold, label=""];
17->15 [style = solid, label="operands"];
54->36 [style = bold, label=""];
49->2 [style = bold, label=""];
0->23 [style = dotted, label="true"];
23->2 [style = bold, label=""];
51->57 [style = bold, label=""];
0->9 [style = dotted, label="true"];
14->12 [style = solid, label="cnf"];
35->26 [style = bold, label=""];
23->25 [style = dotted, label="true"];
0->1 [style = dotted, label="true"];
14->5 [style = bold, label=""];
18->16 [style = bold, label=""];
3->52 [style = dashed, label="0"];
0->40 [style = dotted, label="true"];
0->28 [style = dotted, label="true"];
54->36 [style = solid, label="operands"];
40->9 [style = solid, label="operands"];
23->47 [style = dotted, label="true"];
32->21 [style = bold, label=""];
0->26 [style = bold, label=""];
0->13 [style = dotted, label="true"];
23->8 [style = dotted, label="true"];
0->65 [style = dotted, label="true"];
60->53 [style = solid, label="head"];
17->47 [style = bold, label=""];
15->47 [style = dashed, label="0"];
29->37 [style = solid, label="head"];
0->35 [style = dotted, label="true"];
0->20 [style = dotted, label="true"];
72->54 [style = bold, label=""];
53->73 [style = bold, label=""];
31->70 [style = dashed, label="0"];
0->61 [style = dotted, label="true"];
0->67 [style = bold, label=""];
34->12 [style = bold, label=""];
32->21 [style = solid, label="operands"];
11->63 [style = dashed, label="0"];
39->28 [style = bold, label=""];
53->73 [style = solid, label="headDnf"];
0->22 [style = dotted, label="true"];
0->36 [style = dotted, label="true"];
23->49 [style = dotted, label="true"];
0->29 [style = dotted, label="true"];
62->71 [style = bold, label=""];
0->62 [style = dotted, label="true"];
62->72 [style = dotted, label="true"];
19->23 [style = bold, label=""];
22->36 [style = bold, label=""];
62->54 [style = dotted, label="true"];
0->73 [style = dotted, label="true"];
21->49 [style = dashed, label="0"];
33->24 [style = solid, label="rex"];
0->27 [style = dotted, label="true"];
20->24 [style = bold, label=""];
15->32 [style = bold, label=""];
0->63 [style = dotted, label="true"];
59->65 [style = solid, label="tail"];
22->51 [style = dashed, label="0"];
46->35 [style = solid, label="cnfOperands"];
}
