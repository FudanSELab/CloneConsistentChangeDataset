digraph {
2 [style = filled, label = "boolean allParquetFileScanTasks = tasks().stream().allMatch(null)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "enableBatchRead['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "boolean atLeastOneColumn = lazySchema().columns().size() > 0@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "boolean onlyPrimitives = expectedSchema.columns().stream().allMatch(null)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "boolean hasNoDeleteFiles = tasks().stream().noneMatch(null)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "return readUsingBatch@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "return new ReaderFactory(readUsingBatch? batchSize: 0)@@@9@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "boolean allParquetFileScanTasks = tasks().stream().allMatch(null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "return new ReaderFactory(readUsingBatch? batchSize: 0)@@@8@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "boolean readUsingBatch = batchReadsEnabled && (allOrcFileScanTasks || (allParquetFileScanTasks && atLeastOneColumn && onlyPrimitives))@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "boolean readUsingBatch = batchReadsEnabled && hasNoDeleteFiles && (allOrcFileScanTasks || (allParquetFileScanTasks && atLeastOneColumn && onlyPrimitives))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "boolean onlyPrimitives = lazySchema().columns().stream().allMatch(null)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "readUsingBatch == null@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "createReaderFactory['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "this.readUsingBatch = batchReadsEnabled && (allOrcFileScanTasks || (allParquetFileScanTasks && atLeastOneColumn && onlyPrimitives))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "boolean allOrcFileScanTasks = tasks().stream().allMatch(null)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "createReaderFactory['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2->12 [style = solid, label="allParquetFileScanTasks"];
0->3 [style = bold, label=""];
8->10 [style = solid, label="readUsingBatch"];
8->10 [style = bold, label=""];
0->16 [style = bold, label=""];
13->16 [style = dotted, label="true"];
15->13 [style = bold, label=""];
0->12 [style = solid, label="allOrcFileScanTasks"];
7->1 [style = bold, label=""];
16->11 [style = bold, label=""];
5->12 [style = dashed, label="0"];
12->14 [style = solid, label="readUsingBatch"];
13->12 [style = dotted, label="true"];
3->8 [style = solid, label="onlyPrimitives"];
0->16 [style = dashed, label="0"];
11->12 [style = bold, label=""];
0->8 [style = solid, label="atLeastOneColumn"];
9->8 [style = bold, label=""];
9->8 [style = solid, label="hasNoDeleteFiles"];
3->9 [style = bold, label=""];
13->2 [style = dotted, label="true"];
6->1 [style = bold, label=""];
11->12 [style = solid, label="onlyPrimitives"];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
2->5 [style = solid, label="allOrcFileScanTasks"];
2->8 [style = solid, label="allOrcFileScanTasks"];
13->0 [style = dotted, label="true"];
1->8 [style = solid, label="allParquetFileScanTasks"];
5->4 [style = bold, label=""];
0->5 [style = solid, label="atLeastOneColumn"];
5->4 [style = solid, label="readUsingBatch"];
12->14 [style = bold, label=""];
3->5 [style = solid, label="onlyPrimitives"];
13->11 [style = dotted, label="true"];
1->2 [style = bold, label=""];
16->12 [style = solid, label="atLeastOneColumn"];
13->14 [style = bold, label=""];
3->11 [style = dashed, label="0"];
1->5 [style = solid, label="allParquetFileScanTasks"];
13->2 [style = bold, label=""];
}
