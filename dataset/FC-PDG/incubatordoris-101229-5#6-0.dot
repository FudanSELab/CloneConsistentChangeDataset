digraph {
46 [style = filled, label = "super(id,\"CROSS JOIN\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "this.innerRef = innerRef@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "HashJoinNode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "List<Expr> eqJoinConjuncts@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "PlanNode inner@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "this.joinOp.isInnerJoin() || this.joinOp.isLeftSemiJoin()@@@20@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "PlanNodeId id@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "children.add(inner)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Preconditions.checkArgument(otherJoinConjuncts != null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "nullableTupleIds.addAll(inner.getNullableTupleIds())@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "nullableTupleIds.addAll(outer.getTupleIds())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "PlanNodeId id@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "nullableTupleIds.addAll(inner.getTupleIds())@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "PlanNode inner@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "nullableTupleIds.addAll(outer.getTupleIds())@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "this.eqJoinConjuncts.add((BinaryPredicate)eqJoinPredicate)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "tblRefIds.addAll(outer.getTblRefIds())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "joinOp.equals(JoinOperator.LEFT_OUTER_JOIN)@@@26@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "TableRef innerRef@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "tupleIds.addAll(inner.getTupleIds())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "joinOp.equals(JoinOperator.FULL_OUTER_JOIN)@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "nullableTupleIds.addAll(inner.getNullableTupleIds())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "TableRef innerRef@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "this.otherJoinConjuncts = otherJoinConjuncts@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "this.isPushDown = true@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "PlanNodeId id@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "List<Expr> otherJoinConjuncts@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "PlanNode inner@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Preconditions.checkArgument(eqJoinPredicate instanceof BinaryPredicate)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "nullableTupleIds.addAll(inner.getTupleIds())@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "List<Expr> otherJoinConjuncts@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "HashJoinNode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "tupleIds.addAll(outer.getTupleIds())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "CrossJoinNode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "children.add(outer)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "nullableTupleIds.addAll(outer.getNullableTupleIds())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "List<Expr> eqJoinConjuncts@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "TableRef innerRef@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "this.distrMode = DistributionMode.NONE@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "this.joinOp = innerRef.getJoinOp()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "joinOp.equals(JoinOperator.RIGHT_OUTER_JOIN)@@@29@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "PlanNode outer@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "super(id,\"HASH JOIN\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "tblRefIds.addAll(inner.getTblRefIds())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Preconditions.checkArgument(eqJoinConjuncts != null && !eqJoinConjuncts.isEmpty())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "innerRef_ = innerRef@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "PlanNode outer@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
46->44 [style = bold, label=""];
0->3 [style = bold, label=""];
18->23 [style = dotted, label="false"];
11->28 [style = bold, label=""];
5->8 [style = bold, label=""];
10->18 [style = bold, label=""];
35->15 [style = solid, label="otherJoinConjuncts"];
44->42 [style = bold, label=""];
27->1 [style = bold, label=""];
36->22 [style = solid, label="inner"];
31->6 [style = solid, label="id"];
43->20 [style = solid, label="outer"];
28->10 [style = bold, label=""];
18->23 [style = bold, label=""];
30->14 [style = solid, label="eqJoinConjuncts"];
17->6 [style = bold, label=""];
37->4 [style = solid, label="outer"];
21->15 [style = bold, label=""];
33->6 [style = bold, label=""];
33->34 [style = dotted, label="true"];
20->0 [style = bold, label=""];
19->15 [style = solid, label="otherJoinConjuncts"];
1->27 [style = bold, label=""];
31->43 [style = dashed, label="0"];
18->12 [style = bold, label=""];
31->4 [style = solid, label="outer"];
38->0 [style = solid, label="innerRef"];
39->4 [style = solid, label="inner"];
32->7 [style = bold, label=""];
22->28 [style = bold, label=""];
23->2 [style = dotted, label="true"];
45->41 [style = dotted, label="true"];
26->11 [style = bold, label=""];
10->29 [style = dotted, label="true"];
20->4 [style = bold, label=""];
3->27 [style = bold, label=""];
33->36 [style = dotted, label="true"];
6->14 [style = bold, label=""];
17->31 [style = dotted, label="true"];
6->46 [style = dashed, label="0"];
45->40 [style = dotted, label="true"];
24->26 [style = bold, label=""];
7->5 [style = bold, label=""];
18->12 [style = dotted, label="true"];
33->35 [style = dotted, label="true"];
13->0 [style = solid, label="innerRef"];
8->20 [style = bold, label=""];
17->25 [style = dotted, label="true"];
17->30 [style = dotted, label="true"];
10->29 [style = bold, label=""];
24->26 [style = dotted, label="true"];
1->21 [style = bold, label=""];
24->11 [style = bold, label=""];
17->9 [style = dotted, label="true"];
35->32 [style = solid, label="otherJoinConjuncts"];
41->44 [style = solid, label="innerRef"];
19->32 [style = solid, label="otherJoinConjuncts"];
15->4 [style = bold, label=""];
17->19 [style = dotted, label="true"];
45->39 [style = dotted, label="true"];
34->14 [style = solid, label="eqJoinConjuncts"];
40->46 [style = solid, label="id"];
42->7 [style = bold, label=""];
23->2 [style = bold, label=""];
45->46 [style = bold, label=""];
22->24 [style = bold, label=""];
33->38 [style = dotted, label="true"];
33->37 [style = dotted, label="true"];
14->32 [style = bold, label=""];
17->13 [style = dotted, label="true"];
10->16 [style = dotted, label="true"];
29->16 [style = bold, label=""];
4->22 [style = bold, label=""];
22->11 [style = bold, label=""];
25->6 [style = solid, label="id"];
9->22 [style = solid, label="inner"];
45->43 [style = dotted, label="true"];
10->18 [style = dotted, label="false"];
33->31 [style = dotted, label="true"];
}
