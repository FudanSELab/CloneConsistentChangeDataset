digraph {
2 [style = filled, label = "Assert.assertFalse(\"Should not read: id range above upper bound (79 is not > 79)\",shouldRead)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertFalse(\"Should not read: id range below lower bound (5 < 30)\",shouldRead)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,greaterThan(\"id\",INT_MAX_VALUE)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,lessThan(\"id\",79)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testIntegerGt['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,lessThan(\"id\",30)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertFalse(\"Should not read: id range below lower bound (30 is not < 30)\",shouldRead)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,greaterThan(\"id\",INT_MAX_VALUE + 6)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,greaterThan(\"id\",INT_MAX_VALUE - 4)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,greaterThan(\"id\",INT_MAX_VALUE - 1)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Assert.assertTrue(\"Should read: may possible ids\",shouldRead)@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,lessThan(\"id\",5)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testIntegerLt['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,greaterThan(\"id\",79)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,greaterThan(\"id\",78)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,greaterThan(\"id\",75)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "Assert.assertFalse(\"Should not read: id range above upper bound (85 < 79)\",shouldRead)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testIntegerGt['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,greaterThan(\"id\",85)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,lessThan(\"id\",31)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertTrue(\"Should read: one possible id\",shouldRead)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
16->3 [style = bold, label=""];
0->5 [style = solid, label="shouldRead"];
5->12 [style = dashed, label="0"];
7->18 [style = dashed, label="0"];
6->1 [style = solid, label="shouldRead"];
4->6 [style = bold, label=""];
13->12 [style = solid, label="shouldRead"];
0->19 [style = dashed, label="0"];
19->15 [style = solid, label="shouldRead"];
0->2 [style = bold, label=""];
9->8 [style = solid, label="shouldRead"];
18->8 [style = solid, label="shouldRead"];
13->2 [style = solid, label="shouldRead"];
1->0 [style = bold, label=""];
6->0 [style = solid, label="shouldRead"];
19->16 [style = solid, label="shouldRead"];
6->14 [style = dashed, label="0"];
7->8 [style = bold, label=""];
9->8 [style = bold, label=""];
15->16 [style = bold, label=""];
1->13 [style = bold, label=""];
14->19 [style = solid, label="shouldRead"];
2->12 [style = bold, label=""];
6->10 [style = dashed, label="0"];
10->13 [style = solid, label="shouldRead"];
16->3 [style = solid, label="shouldRead"];
3->18 [style = bold, label=""];
1->20 [style = dashed, label="0"];
3->9 [style = bold, label=""];
2->15 [style = dashed, label="0"];
6->1 [style = bold, label=""];
5->16 [style = dashed, label="0"];
5->3 [style = solid, label="shouldRead"];
3->7 [style = bold, label=""];
17->14 [style = bold, label=""];
16->18 [style = solid, label="shouldRead"];
11->10 [style = bold, label=""];
7->9 [style = dashed, label="0"];
0->13 [style = dashed, label="0"];
0->2 [style = solid, label="shouldRead"];
14->20 [style = solid, label="shouldRead"];
12->9 [style = solid, label="shouldRead"];
12->3 [style = bold, label=""];
18->8 [style = bold, label=""];
19->15 [style = bold, label=""];
20->19 [style = bold, label=""];
10->1 [style = solid, label="shouldRead"];
12->3 [style = solid, label="shouldRead"];
10->1 [style = bold, label=""];
5->7 [style = solid, label="shouldRead"];
7->8 [style = solid, label="shouldRead"];
14->20 [style = bold, label=""];
2->5 [style = bold, label=""];
13->2 [style = bold, label=""];
}
