digraph {
14 [style = filled, label = "Long valueCount = valueCounts.get(id)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "colStats != null && !colStats.isEmpty()@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "T upper = max(colStats,id)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return ROWS_MIGHT_MATCH@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Literal<T> lit@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "return ROWS_CANNOT_MATCH@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "return ROWS_MIGHT_MATCH@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "schema.findType(id) instanceof Type.NestedType@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Integer id = ref.fieldId()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "Literal<T> lit@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "!colStats.hasNonNullValue()@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "valueCount == null@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "return ROWS_MIGHT_MATCH@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "gt['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "gt['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "colStats != null && valueCount - colStats.getNumNulls() == 0@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Statistics<?> colStats = stats.get(id)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return ROWS_CANNOT_MATCH@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "hasNonNullButNoMinMax(colStats,valueCount)@@@10@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "return ROWS_MIGHT_MATCH@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "return ROWS_CANNOT_MATCH@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int cmp = lit.comparator().compare(upper,lit.value())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "notNull['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "return ROWS_CANNOT_MATCH@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "cmp <= 0@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17->19 [style = dotted, label="true"];
1->25 [style = dashed, label="0"];
21->14 [style = bold, label=""];
1->8 [style = dotted, label="true"];
8->9 [style = bold, label=""];
11->21 [style = bold, label=""];
1->15 [style = dotted, label="true"];
6->8 [style = solid, label="cmp"];
1->12 [style = bold, label=""];
12->15 [style = bold, label=""];
5->1 [style = bold, label=""];
12->2 [style = bold, label=""];
17->19 [style = bold, label=""];
25->26 [style = bold, label=""];
9->3 [style = bold, label=""];
21->24 [style = dotted, label="true"];
5->25 [style = solid, label="colStats"];
5->17 [style = solid, label="colStats"];
0->13 [style = dotted, label="true"];
17->12 [style = bold, label=""];
14->17 [style = solid, label="valueCount"];
21->24 [style = bold, label=""];
10->7 [style = dotted, label="true"];
1->6 [style = dotted, label="true"];
1->17 [style = dotted, label="true"];
12->2 [style = dotted, label="true"];
6->8 [style = bold, label=""];
0->11 [style = bold, label=""];
11->14 [style = bold, label=""];
15->6 [style = bold, label=""];
25->22 [style = dotted, label="true"];
8->3 [style = bold, label=""];
20->23 [style = dotted, label="true"];
18->13 [style = dotted, label="true"];
11->15 [style = solid, label="id"];
13->23 [style = dashed, label="0"];
18->16 [style = dotted, label="true"];
10->7 [style = bold, label=""];
1->3 [style = bold, label=""];
15->6 [style = solid, label="upper"];
11->21 [style = solid, label="id"];
22->26 [style = bold, label=""];
5->25 [style = bold, label=""];
11->14 [style = solid, label="id"];
5->1 [style = solid, label="colStats"];
11->5 [style = solid, label="id"];
1->17 [style = bold, label=""];
1->12 [style = dotted, label="true"];
7->5 [style = bold, label=""];
5->15 [style = solid, label="colStats"];
14->10 [style = solid, label="valueCount"];
0->4 [style = dotted, label="true"];
24->14 [style = bold, label=""];
14->25 [style = solid, label="valueCount"];
14->10 [style = bold, label=""];
19->12 [style = bold, label=""];
25->22 [style = bold, label=""];
2->15 [style = bold, label=""];
10->5 [style = bold, label=""];
18->11 [style = bold, label=""];
20->11 [style = bold, label=""];
8->9 [style = dotted, label="true"];
}
