digraph {
35 [style = filled, label = "assertTrue(sug.getToken().length() > 0)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(\"samsung\",sug.getAlternatives().get(0))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "client.commit(true,true)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "assertEquals(\"samsung\",response.getFirstSuggestion(\"samsang\"))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "SolrQuery query = new SolrQuery(\"*:*\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "client.commit(true,true)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "SpellCheckResponse response = request.process(server).getSpellCheckResponse()@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "getSolrServer()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "SpellCheckResponse.Suggestion sug = response.getSuggestion(\"samsang\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "List<SpellCheckResponse.Suggestion> sugs = response.getSuggestions()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "query.set(CommonParams.QT,\"/spell\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testSpellCheckResponse_Extended['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "SolrInputDocument doc = new SolrInputDocument()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(\"samsung\",response.getFirstSuggestion(\"samsang\"))@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertTrue(sug.getEndOffset() > 0)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "query.set(\"spellcheck\",true)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "server.commit(true,true)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "client.deleteByQuery(\"*:*\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "server.add(doc)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(\"samsung\",sugs.get(0).getAlternatives().get(0))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "doc.setField(\"id\",\"111\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testSpellCheckResponse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "query.set(SpellingParams.SPELLCHECK_Q,\"samsang\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "getSolrClient()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "server.commit(true,true)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertTrue(sug.getNumFound() > 0)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "client.add(doc)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "SpellCheckResponse response = request.process(client).getSpellCheckResponse()@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "testSpellCheckResponse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "server.deleteByQuery(\"*:*\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "QueryRequest request = new QueryRequest(query)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "response.getSuggestions().get(0).getAlternatives().get(0)@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(sug.getAlternatives().size(),sug.getAlternativeFrequencies().size())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(sugs.get(0).getAlternatives().size(),sugs.get(0).getAlternativeFrequencies().size())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "query.set(SpellingParams.SPELLCHECK_EXTENDED_RESULTS,true)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "doc.setField(field,\"Samsung\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->8 [style = bold, label=""];
15->10 [style = bold, label=""];
27->32 [style = bold, label=""];
32->23 [style = bold, label=""];
30->33 [style = bold, label=""];
21->19 [style = bold, label=""];
20->9 [style = bold, label=""];
18->11 [style = bold, label=""];
8->6 [style = bold, label=""];
6->0 [style = bold, label=""];
11->16 [style = solid, label="doc"];
4->2 [style = bold, label=""];
4->22 [style = dashed, label="0"];
6->17 [style = dashed, label="0"];
13->19 [style = dashed, label="0"];
0->27 [style = dashed, label="0"];
15->16 [style = bold, label=""];
1->9 [style = bold, label=""];
24->30 [style = bold, label=""];
35->25 [style = bold, label=""];
1->20 [style = dashed, label="0"];
8->17 [style = bold, label=""];
34->28 [style = bold, label=""];
6->27 [style = bold, label=""];
28->35 [style = bold, label=""];
3->5 [style = bold, label=""];
22->18 [style = bold, label=""];
23->24 [style = bold, label=""];
17->0 [style = bold, label=""];
5->31 [style = bold, label=""];
25->26 [style = bold, label=""];
2->18 [style = dashed, label="0"];
7->15 [style = bold, label=""];
12->3 [style = bold, label=""];
9->12 [style = bold, label=""];
11->10 [style = solid, label="doc"];
14->13 [style = bold, label=""];
9->8 [style = solid, label="query"];
10->16 [style = dashed, label="0"];
10->1 [style = bold, label=""];
16->20 [style = bold, label=""];
19->22 [style = bold, label=""];
31->8 [style = bold, label=""];
33->34 [style = bold, label=""];
2->11 [style = bold, label=""];
11->7 [style = bold, label=""];
13->4 [style = bold, label=""];
29->13 [style = bold, label=""];
}
