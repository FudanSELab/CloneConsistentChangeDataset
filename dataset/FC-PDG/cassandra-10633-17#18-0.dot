digraph {
5 [style = filled, label = "ColumnFamilyStore cfs = MockSchema.newCFS(null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "tracker.addSSTables(copyOf(readers))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "List<SSTableReader> readers = ImmutableList.of(MockSchema.sstable(0,17,cfs),MockSchema.sstable(1,121,cfs),MockSchema.sstable(2,9,cfs))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "DatabaseDescriptor.setIncrementalBackupsEnabled(false)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(17 + 121 + 9,cfs.metric.liveDiskSpaceUsed.getCount())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertTrue(reader.isKeyCacheEnabled())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testAddInitialSSTables['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "Tracker tracker = cfs.getTracker()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "MockListener listener = new MockListener(false)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Tracker tracker = cfs.getTracker()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "boolean backups = DatabaseDescriptor.isIncrementalBackupsEnabled()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "DatabaseDescriptor.setIncrementalBackupsEnabled(backups)@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertEquals(1,listener.senders.size())@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "Assert.assertEquals(1,listener.senders.size())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testAddSSTables['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertEquals(tracker,listener.senders.get(0))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "ColumnFamilyStore cfs = MockSchema.newCFS(null)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "tracker.subscribe(listener)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "tracker.subscribe(listener)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertEquals(3,tracker.view.get().sstables.size())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testAddInitialSSTables['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertTrue(listener.received.get(0) instanceof SSTableAddedNotification)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "MockListener listener = new MockListener(false)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Assert.assertTrue(reader.isKeyCacheEnabled())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(1,listener.received.size())@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Assert.assertTrue(listener.received.get(0) instanceof InitialSSTableAddedNotification)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5->2 [style = bold, label=""];
12->0 [style = bold, label=""];
21->14 [style = bold, label=""];
0->4 [style = bold, label=""];
14->3 [style = bold, label=""];
4->16 [style = bold, label=""];
11->8 [style = solid, label="listener"];
2->11 [style = bold, label=""];
3->19 [style = solid, label="readers"];
7->25 [style = solid, label="tracker"];
24->15 [style = bold, label=""];
18->25 [style = bold, label=""];
7->19 [style = dashed, label="0"];
8->6 [style = bold, label=""];
7->21 [style = bold, label=""];
15->6 [style = bold, label=""];
10->12 [style = bold, label=""];
7->3 [style = bold, label=""];
5->6 [style = solid, label="cfs"];
21->14 [style = solid, label="listener"];
11->8 [style = bold, label=""];
3->0 [style = bold, label=""];
3->9 [style = bold, label=""];
3->19 [style = bold, label=""];
19->4 [style = bold, label=""];
20->24 [style = bold, label=""];
2->6 [style = bold, label=""];
6->7 [style = solid, label="readers"];
16->17 [style = bold, label=""];
22->23 [style = bold, label=""];
6->7 [style = bold, label=""];
25->22 [style = bold, label=""];
6->3 [style = solid, label="cfs"];
13->5 [style = bold, label=""];
24->23 [style = solid, label="backups"];
9->10 [style = bold, label=""];
1->5 [style = bold, label=""];
17->18 [style = bold, label=""];
}
