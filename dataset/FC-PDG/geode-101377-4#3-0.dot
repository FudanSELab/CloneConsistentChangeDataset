digraph {
10 [style = filled, label = "verify(internalRegion,never()).basicPutPart3(any(),any(),anyBoolean(),anyLong(),anyBoolean(),anyBoolean(),anyBoolean(),any(),anyBoolean())@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "when(focusedRegionMap.getEntry(event)).thenReturn(mock())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "when(event.getOperation()).thenReturn(Operation.CREATE)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "verify(internalRegion,never()).basicPutPart2(any(),any(),anyBoolean(),anyLong(),anyBoolean())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "verify(event,never()).putNewEntry(any(),any())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "when(focusedRegionMap.putEntryIfAbsent(event.getKey(),createdRegionEntry)).thenReturn(mock())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "ifNew = true@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "verify(event,never()).putExistingEntry(any(),any(),anyBoolean(),any())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "verify(event,never()).putExistingEntry(any(),any(),anyBoolean(),any())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ifOld = true@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "updateOnEmptyMapReturnsNull['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(result).isNull()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "verify(internalRegion,never()).basicPutPart3(any(),any(),anyBoolean(),anyLong(),anyBoolean(),anyBoolean(),anyBoolean(),any(),anyBoolean())@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "createOnEntryReturnedFromPutIfAbsentDoesNothing['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "when(focusedRegionMap.putEntryIfAbsent(event.getKey(),regionEntry)).thenReturn(mock())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "RegionEntry result = doPut()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "createOnEntryReturnedFromPutIfAbsentDoesNothing['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "verify(internalRegion,never()).basicPutPart2(any(),any(),anyBoolean(),anyLong(),anyBoolean())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
11->8 [style = bold, label=""];
16->14 [style = bold, label=""];
3->6 [style = bold, label=""];
14->15 [style = bold, label=""];
1->2 [style = bold, label=""];
7->0 [style = bold, label=""];
15->17 [style = bold, label=""];
2->11 [style = dashed, label="0"];
8->4 [style = bold, label=""];
6->9 [style = bold, label=""];
9->10 [style = bold, label=""];
1->11 [style = bold, label=""];
12->0 [style = bold, label=""];
4->5 [style = bold, label=""];
0->1 [style = bold, label=""];
13->16 [style = bold, label=""];
17->4 [style = bold, label=""];
2->8 [style = bold, label=""];
0->16 [style = dashed, label="0"];
}
