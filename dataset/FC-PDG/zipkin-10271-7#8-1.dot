digraph {
1 [style = filled, label = "List<Span> trace = asList(Span.newBuilder().traceId(\"10\").id(\"10\").name(\"send\").timestamp((TODAY + 50L) * 1000L).duration(1).kind(Kind.PRODUCER).localEndpoint(FRONTEND).remoteEndpoint(KAFKA).build(),Span.newBuilder().traceId(\"10\").parentId(\"10\").id(\"11\").name(\"receive\").timestamp((TODAY + 100) * 1000L).duration(1).kind(Kind.CONSUMER).remoteEndpoint(KAFKA).localEndpoint(BACKEND).build())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Endpoint kafka = Endpoint.newBuilder().serviceName(\"kafka\").ip(\"172.17.0.4\").build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "instrumentedProducerAndConsumer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "processDependencies(trace)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(store().getDependencies(TRACE_ENDTS,DAY).execute()).containsOnly(DependencyLink.newBuilder().parent(\"kafka\").child(\"backend\").callCount(1).build())@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "processDependencies(trace)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "oneway_noClient['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "instrumentedProducerAndConsumer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<Span> trace = asList(Span.newBuilder().traceId(\"10\").id(\"10\").name(\"receive\").timestamp(TODAY * 1000).kind(Kind.SERVER).localEndpoint(BACKEND).remoteEndpoint(kafka).build(),Span.newBuilder().traceId(\"10\").parentId(\"10\").id(\"11\").name(\"process\").timestamp((TODAY + 25) * 1000L).duration(325L * 1000L).localEndpoint(BACKEND).build())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3->8 [style = dashed, label="0"];
7->3 [style = bold, label=""];
1->2 [style = bold, label=""];
4->1 [style = bold, label=""];
5->6 [style = bold, label=""];
6->7 [style = bold, label=""];
0->1 [style = bold, label=""];
3->8 [style = bold, label=""];
7->3 [style = solid, label="trace"];
1->2 [style = solid, label="trace"];
2->3 [style = bold, label=""];
}
