digraph {
13 [style = filled, label = "buildRule.executeTarget(\"filtercontainsregex\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "buildRule.executeTarget(\"containsregex\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertContains(\"hello world\",contents)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "buildRule.executeTarget(\"hasregex\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testContainsRegex['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertContains(\"World here\",contents)@@@9@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(contents,containsString(\"World here\"))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertThat(contents,containsString(\"hello world\"))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertThat(contents,not(containsString(\"this is the moon\")))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "String contents = getFileString(buildRule.getProject().getProperty(\"output\") + \"/filtercontainsregex\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testFilterContainsRegex['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assumeTrue(\"Regex not present\",getFileString(buildRule.getProject().getProperty(\"output\") + \"/replaceregexp\").contains(\"bye world\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertNotContains(\"this is the moon\",contents)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testContainsRegex['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "String contents = getFileString(buildRule.getProject().getProperty(\"output\") + \"/containsregex\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->0 [style = solid, label="contents"];
11->1 [style = bold, label=""];
2->6 [style = bold, label=""];
12->0 [style = solid, label="contents"];
1->3 [style = bold, label=""];
6->0 [style = bold, label=""];
9->10 [style = bold, label=""];
7->2 [style = solid, label="contents"];
3->4 [style = bold, label=""];
7->9 [style = solid, label="contents"];
7->8 [style = solid, label="contents"];
4->7 [style = bold, label=""];
14->1 [style = bold, label=""];
6->10 [style = dashed, label="0"];
12->2 [style = solid, label="contents"];
7->9 [style = bold, label=""];
5->1 [style = bold, label=""];
7->6 [style = solid, label="contents"];
12->2 [style = bold, label=""];
13->12 [style = bold, label=""];
10->8 [style = bold, label=""];
2->9 [style = dashed, label="0"];
7->2 [style = bold, label=""];
12->6 [style = solid, label="contents"];
3->13 [style = bold, label=""];
7->12 [style = dashed, label="0"];
0->8 [style = dashed, label="0"];
7->10 [style = solid, label="contents"];
4->13 [style = dashed, label="0"];
}
