digraph {
2 [style = filled, label = "i++@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "checkJoinNWay['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int i = 1@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "RelTraitSet traitSet = convert.getTraitSet().replace(EnumerableConvention.INSTANCE)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "RelNode convert = planner.rel(validate).project()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "SqlNode validate = planner.validate(parse)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "buf.append(\"join \"depts\" as d\").append(i)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "checkHeuristic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Planner planner = getPlanner(null,Programs.heuristicJoinOrder(Programs.RULE_SET,false,6))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int n@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(toString(transform),containsString(\"EnumerableMergeJoin(condition=(=($0, $5)(, joinType=(inner()\"))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "RelNode transform = planner.transform(0,traitSet,convert)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "SqlNode parse = planner.parse(sql)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "String sql@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "RelTraitSet traitSet = convert.getTraitSet().replace(EnumerableConvention.INSTANCE)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final StringBuilder buf = new StringBuilder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "i < n@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Planner planner = getPlanner(null,Programs.heuristicJoinOrder(Programs.RULE_SET,false,0))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "RelNode convert = planner.rel(validate).rel@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(toString(transform),containsString(\"EnumerableHashJoin(condition=(=($0, $5)(, joinType=(inner()\"))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "buf.append(\"select * from \"depts\" as d0\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(toString(transform),containsString(expected))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "checkJoinNWay['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "SqlNode validate = planner.validate(parse)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "String expected@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "SqlNode parse = planner.parse(buf.toString())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "RelNode transform = planner.transform(0,traitSet,convert)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "buf.append(\"on d\").append(i).append(\".\"deptno\" = d\").append(i - 1).append(\".\"deptno\"\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
4->9 [style = bold, label=""];
3->11 [style = dotted, label="true"];
3->7 [style = dotted, label="true"];
7->11 [style = bold, label=""];
25->22 [style = solid, label="traitSet"];
1->16 [style = solid, label="transform"];
10->15 [style = bold, label=""];
15->14 [style = bold, label=""];
23->27 [style = bold, label=""];
5->3 [style = solid, label="i"];
25->22 [style = bold, label=""];
3->2 [style = dotted, label="true"];
5->2 [style = solid, label="i"];
2->3 [style = bold, label=""];
0->12 [style = bold, label=""];
17->9 [style = bold, label=""];
8->20 [style = dashed, label="0"];
4->8 [style = dotted, label="true"];
5->7 [style = solid, label="i"];
22->18 [style = solid, label="transform"];
26->19 [style = dotted, label="true"];
26->20 [style = dotted, label="true"];
1->13 [style = solid, label="transform"];
0->27 [style = dashed, label="0"];
26->24 [style = bold, label=""];
12->1 [style = bold, label=""];
1->13 [style = bold, label=""];
2->3 [style = solid, label="i"];
11->2 [style = bold, label=""];
9->6 [style = bold, label=""];
23->27 [style = solid, label="validate"];
3->10 [style = bold, label=""];
17->8 [style = dotted, label="true"];
6->5 [style = bold, label=""];
22->18 [style = bold, label=""];
14->0 [style = bold, label=""];
12->1 [style = solid, label="traitSet"];
3->7 [style = bold, label=""];
24->21 [style = bold, label=""];
1->16 [style = bold, label=""];
21->23 [style = solid, label="parse"];
19->21 [style = solid, label="sql"];
20->18 [style = solid, label="expected"];
13->18 [style = dashed, label="0"];
0->1 [style = solid, label="convert"];
8->3 [style = solid, label="n"];
27->25 [style = bold, label=""];
27->22 [style = solid, label="convert"];
15->14 [style = solid, label="parse"];
13->16 [style = dashed, label="0"];
21->23 [style = bold, label=""];
2->7 [style = solid, label="i"];
}
