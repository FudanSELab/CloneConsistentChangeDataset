digraph {
6 [style = filled, label = "client.close()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "getClusterRegister(providerB).registerRemote(instanceB)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(address,addressB)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "validateServiceInstance(addressB,addressA,remoteInstancesOfB)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "unregisterRemoteOfCluster['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "getClusterRegister(providerA).registerRemote(instanceA)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Address addressA = new Address(\"127.0.0.4\",1000,true)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ModuleProvider providerB = createProvider(namespace)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "remoteInstancesOfB = queryRemoteNodes(providerB,1,120)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "RemoteInstance instanceB = new RemoteInstance(addressB)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "validateServiceInstance(addressA,addressB,remoteInstancesOfA)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "List<RemoteInstance> remoteInstancesOfA = queryRemoteNodes(providerA,2)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(1,remoteInstancesOfB.size())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "ServiceDiscovery<RemoteInstance> discoveryA = Whitebox.getInternalState(register,\"serviceDiscovery\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Address addressB = new Address(\"127.0.0.5\",1000,true)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertTrue(addressB.isSelf())@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "unregisterRemoteOfCluster['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "ClusterRegister register = getClusterRegister(providerA)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "remoteInstancesOfB = queryRemoteNodes(providerB,1,120)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Address address = remoteInstancesOfB.get(0).getAddress()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "ModuleProvider providerA = createProvider(namespace)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "RemoteInstance instanceA = new RemoteInstance(addressA)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<RemoteInstance> remoteInstancesOfB = queryRemoteNodes(providerB,2)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final String serviceName = \"unregister_remote_cluster\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "unregisterRemoteOfCluster['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "EtcdClient client = Whitebox.getInternalState(providerA,\"client\")@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "final String namespace = \"unregister_remote_cluster\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ModuleProvider providerA = createProvider(serviceName)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "discoveryA.close()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Client client = Whitebox.getInternalState(getClusterRegister(providerA),\"client\")@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "ModuleProvider providerB = createProvider(serviceName)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->25 [style = bold, label=""];
10->18 [style = bold, label=""];
6->3 [style = bold, label=""];
20->18 [style = solid, label="addressB"];
27->23 [style = solid, label="namespace"];
20->13 [style = solid, label="addressB"];
2->20 [style = bold, label=""];
2->4 [style = solid, label="addressA"];
2->7 [style = solid, label="addressA"];
20->4 [style = solid, label="addressB"];
21->6 [style = bold, label=""];
23->15 [style = solid, label="providerB"];
11->19 [style = solid, label="providerA"];
16->6 [style = bold, label=""];
30->27 [style = bold, label=""];
4->21 [style = bold, label=""];
11->29 [style = dashed, label="0"];
8->14 [style = bold, label=""];
10->0 [style = solid, label="instanceA"];
28->26 [style = bold, label=""];
3->15 [style = bold, label=""];
29->23 [style = bold, label=""];
26->24 [style = bold, label=""];
14->27 [style = dashed, label="0"];
16->21 [style = dashed, label="0"];
17->5 [style = solid, label="providerB"];
17->3 [style = solid, label="providerB"];
18->1 [style = solid, label="instanceB"];
9->12 [style = solid, label="address"];
19->7 [style = solid, label="remoteInstancesOfA"];
4->28 [style = bold, label=""];
20->10 [style = bold, label=""];
14->11 [style = solid, label="serviceName"];
29->19 [style = solid, label="providerA"];
23->5 [style = solid, label="providerB"];
11->21 [style = solid, label="providerA"];
12->13 [style = bold, label=""];
2->10 [style = solid, label="addressA"];
7->5 [style = bold, label=""];
20->7 [style = solid, label="addressB"];
17->2 [style = bold, label=""];
15->9 [style = bold, label=""];
11->16 [style = solid, label="providerA"];
0->1 [style = bold, label=""];
14->17 [style = solid, label="serviceName"];
5->4 [style = bold, label=""];
28->26 [style = solid, label="register"];
11->17 [style = bold, label=""];
29->28 [style = solid, label="providerA"];
9->12 [style = bold, label=""];
27->29 [style = solid, label="namespace"];
5->4 [style = solid, label="remoteInstancesOfB"];
12->13 [style = solid, label="address"];
27->29 [style = bold, label=""];
1->19 [style = bold, label=""];
22->14 [style = bold, label=""];
23->2 [style = bold, label=""];
17->23 [style = dashed, label="0"];
14->11 [style = bold, label=""];
19->7 [style = bold, label=""];
18->0 [style = bold, label=""];
4->16 [style = bold, label=""];
20->12 [style = solid, label="addressB"];
24->15 [style = bold, label=""];
}
