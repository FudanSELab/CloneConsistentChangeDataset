digraph {
33 [style = filled, label = "assertThat(resultList.get(0).getType(),equalTo(\"pipeline\"))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "SimulateProcessorResult expectedResult = new SimulateProcessorResult(actualProcessor.getTag(),actualProcessor.getDescription(),ingestDocument)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(resultList.get(3).getFailure(),nullValue())@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertThat(resultList.get(3).getIngestDocument(),equalTo(expectedResult.getIngestDocument()))@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "trackingProcessor.execute(ingestDocument,null)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertNotEquals(resultList.get(0).getIngestDocument().getSourceAndMetadata().get(key1),resultList.get(1).getIngestDocument().getSourceAndMetadata().get(key1))@@@30@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertThat(resultList.size(),equalTo(3))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "String key2 = randomAlphaOfLength(10)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertThat(resultList.get(3).getProcessorTag(),nullValue())@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "assertThat(resultList.get(2).getProcessorTag(),nullValue())@@@40@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "PipelineProcessor pipelineProcessor = factory.create(Collections.emptyMap(),null,null,pipelineConfig)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String key1 = randomAlphaOfLength(10)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "CompoundProcessor actualProcessor = new CompoundProcessor(pipelineProcessor)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertTrue(resultList.get(0).getIngestDocument().hasField(key1))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String pipelineId = \"pipeline1\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertNull(resultList.get(2).getConditionalWithResult())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Map<String,Object> pipelineConfig = new HashMap<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertThat(resultList.get(2).getFailure(),nullValue())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "PipelineProcessor.Factory factory = new PipelineProcessor.Factory(ingestService)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expectedResult.getIngestDocument().getIngestMetadata().put(\"pipeline\",pipelineId)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(resultList.get(1).getProcessorTag(),nullValue())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "SimulateProcessorResult expectedResult = new SimulateProcessorResult(actualProcessor.getTag(),actualProcessor.getDescription(),ingestDocument)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "SimulateProcessorResult expectedResult = new SimulateProcessorResult(actualProcessor.getType(),actualProcessor.getTag(),actualProcessor.getDescription(),ingestDocument,null)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "CompoundProcessor trackingProcessor = decorate(actualProcessor,null,resultList)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "verify(ingestService,Mockito.atLeast(1)).getPipeline(pipelineId)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertThat(resultList.size(),equalTo(4))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "testActualPipelineProcessorRepeatedInvocation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "assertNotEquals(resultList.get(1).getIngestDocument().getSourceAndMetadata().get(key1),resultList.get(3).getIngestDocument().getSourceAndMetadata().get(key1))@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "PipelineProcessor pipelineProcessor = factory.create(Collections.emptyMap(),null,null,pipelineConfig)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "String key3 = randomAlphaOfLength(10)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "trackingProcessor.execute(ingestDocument,null)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertFalse(resultList.get(1).getIngestDocument().hasField(key3))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "expectedResult.getIngestDocument().getIngestMetadata().put(\"pipeline\",pipelineId)@@@29@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(resultList.get(1).getIngestDocument(),not(equalTo(expectedResult.getIngestDocument())))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertThat(resultList.get(0).getFailure(),nullValue())@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "assertThat(resultList.get(2).getType(),equalTo(\"pipeline\"))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "Pipeline pipeline = new Pipeline(pipelineId,null,null,new CompoundProcessor(new TestProcessor(null)))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "pipelineConfig.put(\"name\",pipelineId)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertTrue(resultList.get(1).getIngestDocument().hasField(key1))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "testActualPipelineProcessor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(resultList.get(0).getProcessorTag(),nullValue())@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "Pipeline pipeline = new Pipeline(pipelineId,null,null,new CompoundProcessor(new TestProcessor(null),new TestProcessor(null),new TestProcessor(null)))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "IngestService ingestService = createIngestService()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(resultList.get(0).getIngestDocument(),not(equalTo(expectedResult.getIngestDocument())))@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "when(ingestService.getPipeline(pipelineId)).thenReturn(pipeline)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "when(ingestService.getPipeline(pipelineId)).thenReturn(pipeline)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertNull(resultList.get(0).getConditionalWithResult())@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "assertFalse(resultList.get(0).getIngestDocument().hasField(key2))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertTrue(resultList.get(1).getIngestDocument().hasField(key2))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "CompoundProcessor trackingProcessor = decorate(actualProcessor,null,resultList)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertThat(resultList.get(2).getIngestDocument(),equalTo(expectedResult.getIngestDocument()))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(resultList.get(1).getIngestDocument(),equalTo(expectedResult.getIngestDocument()))@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "assertThat(resultList.get(1).getFailure(),nullValue())@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "testActualPipelineProcessorRepeatedInvocation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertFalse(resultList.get(0).getIngestDocument().hasField(key3))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21->10 [style = bold, label=""];
42->41 [style = bold, label=""];
6->43 [style = bold, label=""];
38->52 [style = bold, label=""];
2->6 [style = bold, label=""];
41->39 [style = solid, label="key3"];
24->34 [style = bold, label=""];
6->38 [style = dashed, label="0"];
53->54 [style = bold, label=""];
19->13 [style = solid, label="pipeline"];
30->28 [style = bold, label=""];
41->49 [style = solid, label="key3"];
3->6 [style = solid, label="pipelineId"];
40->53 [style = solid, label="pipelineProcessor"];
2->24 [style = bold, label=""];
3->51 [style = solid, label="pipelineId"];
32->3 [style = bold, label=""];
35->31 [style = bold, label=""];
16->40 [style = bold, label=""];
9->2 [style = bold, label=""];
5->26 [style = dashed, label="0"];
3->2 [style = solid, label="pipelineId"];
18->11 [style = bold, label=""];
34->33 [style = bold, label=""];
4->25 [style = solid, label="key1"];
3->19 [style = solid, label="pipelineId"];
5->39 [style = dashed, label="0"];
3->22 [style = solid, label="pipelineId"];
44->49 [style = bold, label=""];
51->16 [style = bold, label=""];
8->40 [style = solid, label="pipelineConfig"];
13->16 [style = bold, label=""];
8->22 [style = bold, label=""];
11->49 [style = dashed, label="0"];
2->43 [style = dashed, label="0"];
26->27 [style = bold, label=""];
28->35 [style = bold, label=""];
19->13 [style = bold, label=""];
22->20 [style = bold, label=""];
10->0 [style = bold, label=""];
42->44 [style = solid, label="key2"];
5->7 [style = bold, label=""];
11->17 [style = bold, label=""];
4->52 [style = solid, label="key1"];
52->36 [style = bold, label=""];
1->19 [style = bold, label=""];
11->30 [style = bold, label=""];
15->20 [style = solid, label="ingestService"];
39->37 [style = bold, label=""];
27->18 [style = bold, label=""];
31->25 [style = bold, label=""];
40->53 [style = bold, label=""];
23->5 [style = bold, label=""];
4->17 [style = solid, label="key1"];
42->36 [style = solid, label="key2"];
50->48 [style = bold, label=""];
45->2 [style = bold, label=""];
36->39 [style = bold, label=""];
23->33 [style = dashed, label="0"];
49->50 [style = bold, label=""];
33->26 [style = bold, label=""];
14->52 [style = dashed, label="0"];
18->44 [style = dashed, label="0"];
53->54 [style = solid, label="actualProcessor"];
43->38 [style = bold, label=""];
14->23 [style = bold, label=""];
0->29 [style = dashed, label="0"];
37->44 [style = bold, label=""];
7->18 [style = bold, label=""];
4->37 [style = solid, label="key1"];
4->1 [style = bold, label=""];
12->3 [style = bold, label=""];
15->8 [style = bold, label=""];
51->16 [style = solid, label="pipeline"];
1->16 [style = solid, label="pipelineProcessor"];
46->3 [style = bold, label=""];
54->45 [style = bold, label=""];
0->9 [style = bold, label=""];
16->21 [style = solid, label="actualProcessor"];
14->34 [style = dashed, label="0"];
29->9 [style = bold, label=""];
4->42 [style = bold, label=""];
3->15 [style = bold, label=""];
8->1 [style = solid, label="pipelineConfig"];
20->4 [style = bold, label=""];
6->14 [style = bold, label=""];
23->36 [style = dashed, label="0"];
10->29 [style = bold, label=""];
41->51 [style = bold, label=""];
16->21 [style = bold, label=""];
48->47 [style = bold, label=""];
3->43 [style = solid, label="pipelineId"];
6->24 [style = dashed, label="0"];
7->37 [style = dashed, label="0"];
3->9 [style = solid, label="pipelineId"];
}
