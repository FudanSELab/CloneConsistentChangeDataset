digraph {
2 [style = filled, label = "TestSSLEngine testEngine = new TestSSLEngine()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "appData.put(appBytes)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "wrapFails['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertThatThrownBy(null).isInstanceOf().hasMessageContaining(\"Error decrypting data\")@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "wrapFails['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "wrappedData.flip()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Arrays.fill(netBytes,(byte)0x1F)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ByteBuffer appData = ByteBuffer.allocate(nioSslEngine.myNetData.capacity() + 100)@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "byte(( netBytes = new byte((((@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "TestSSLEngine testEngine = new TestSSLEngine()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "byte(( appBytes = new byte((((@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "spyNioSslEngine.engine = testEngine@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ByteBuffer wrappedData = ByteBuffer.allocate(nioSslEngine.peerAppData.capacity())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "unwrapWithDecryptionError['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Arrays.fill(appBytes,(byte)0x1F)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "byte(( appBytes = new byte((((@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ByteBuffer appData = ByteBuffer.allocate(outputSharing.getBuffer().capacity() + 100)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "testEngine.addReturnResult(new SSLEngineResult(CLOSED,FINISHED,0,0))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "wrappedData.put(netBytes)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "spyNioSslEngine.engine = testEngine@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThatThrownBy(null).isInstanceOf().hasMessageContaining(\"Error encrypting data\")@@@12@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
7->13 [style = bold, label=""];
14->16 [style = bold, label=""];
4->18 [style = dashed, label="0"];
9->16 [style = dashed, label="0"];
5->14 [style = dashed, label="0"];
7->1 [style = bold, label=""];
5->9 [style = bold, label=""];
15->14 [style = bold, label=""];
9->3 [style = solid, label="appBytes"];
5->9 [style = solid, label="appBytes"];
0->15 [style = dashed, label="0"];
3->6 [style = bold, label=""];
2->18 [style = bold, label=""];
6->17 [style = dashed, label="0"];
19->17 [style = bold, label=""];
9->6 [style = solid, label="appBytes"];
16->19 [style = bold, label=""];
2->4 [style = bold, label=""];
4->7 [style = bold, label=""];
3->19 [style = dashed, label="0"];
6->2 [style = bold, label=""];
1->13 [style = dashed, label="0"];
8->0 [style = bold, label=""];
14->19 [style = solid, label="netBytes"];
17->2 [style = bold, label=""];
11->10 [style = bold, label=""];
4->1 [style = solid, label="testEngine"];
5->3 [style = solid, label="appBytes"];
1->12 [style = bold, label=""];
9->3 [style = bold, label=""];
10->9 [style = bold, label=""];
14->16 [style = solid, label="netBytes"];
18->7 [style = bold, label=""];
2->7 [style = solid, label="testEngine"];
20->15 [style = bold, label=""];
0->5 [style = bold, label=""];
}
