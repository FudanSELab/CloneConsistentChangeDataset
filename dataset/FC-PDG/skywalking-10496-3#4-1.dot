digraph {
22 [style = filled, label = "testNotifyWithEndpointCatalog['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "assertEquals(DefaultScopeDefine.ENDPOINT_CATALOG_NAME,metaInAlarm.getScope())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "ServiceInventory serviceInventory = mock()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "verify(rule).in(metaCaptor.capture(),any())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "String metricsName = \"service-instance-metrics\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "when(serviceInstanceInventoryCache.get(anyInt())).thenReturn(instanceInventory)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "when(endpointInventory.getName()).thenReturn(endpointInventoryName)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "EndpointInventory endpointInventory = mock()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(mockId,metaInAlarm.getId0())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "ServiceInstanceInventory instanceInventory = mock()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertTrue(metaInAlarm instanceof ServiceInstanceMetaInAlarm)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "when(metadata.getMetricsName()).thenReturn(metricsName)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(instanceInventoryName,metaInAlarm.getName())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertTrue(metaInAlarm instanceof EndpointMetaInAlarm)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "when(DefaultScopeDefine.inServiceInstanceCatalog(0)).thenReturn(true)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "String endpointInventoryName = \"endpoint-inventory-name\"@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String serviceInventoryName = \"service-inventory-name\"@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "prepareNotify()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(DefaultScopeDefine.ENDPOINT,metaInAlarm.getScopeId())@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(mockId,metaInAlarm.getId0())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "when(serviceInventory.getName()).thenReturn(serviceInventoryName)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "when(endpointInventoryCache.get(anyInt())).thenReturn(endpointInventory)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(DefaultScopeDefine.SERVICE_INSTANCE,metaInAlarm.getScopeId())@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(metricsName,metaInAlarm.getMetricsName())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(metricsName,metaInAlarm.getMetricsName())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String metricsName = \"endpoint-metrics\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "when(DefaultScopeDefine.inEndpointCatalog(0)).thenReturn(true)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(endpointInventoryName + \" in \" + serviceInventoryName,metaInAlarm.getName())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testNotifyWithEndpointCatalog['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "ArgumentCaptor<MetaInAlarm> metaCaptor = ArgumentCaptor.forClass()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "when(serviceInventoryCache.get(anyInt())).thenReturn(serviceInventory)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "when(instanceInventory.getName()).thenReturn(instanceInventoryName)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "MetaInAlarm metaInAlarm = metaCaptor.getValue()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "String instanceInventoryName = \"instance-inventory-name\"@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "notifyHandler.notify(metrics)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "testNotifyWithServiceInstanceCatalog['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11->16 [style = bold, label=""];
34->29 [style = bold, label=""];
16->2 [style = solid, label="serviceInventory"];
1->4 [style = bold, label=""];
28->33 [style = solid, label="instanceInventoryName"];
4->24 [style = bold, label=""];
28->19 [style = solid, label="instanceInventoryName"];
9->0 [style = bold, label=""];
17->1 [style = bold, label=""];
23->5 [style = bold, label=""];
16->8 [style = bold, label=""];
25->13 [style = bold, label=""];
19->20 [style = bold, label=""];
2->3 [style = bold, label=""];
1->4 [style = solid, label="metricsName"];
0->3 [style = solid, label="endpointInventory"];
19->20 [style = solid, label="metaInAlarm"];
10->33 [style = dashed, label="0"];
6->19 [style = bold, label=""];
17->32 [style = bold, label=""];
1->32 [style = dashed, label="0"];
33->27 [style = bold, label=""];
4->7 [style = bold, label=""];
24->30 [style = bold, label=""];
20->13 [style = dashed, label="0"];
35->25 [style = bold, label=""];
20->21 [style = bold, label=""];
7->9 [style = bold, label=""];
21->5 [style = bold, label=""];
15->17 [style = bold, label=""];
0->10 [style = bold, label=""];
32->4 [style = solid, label="metricsName"];
30->28 [style = bold, label=""];
27->34 [style = bold, label=""];
1->5 [style = solid, label="metricsName"];
28->33 [style = bold, label=""];
8->2 [style = bold, label=""];
5->12 [style = bold, label=""];
18->6 [style = bold, label=""];
7->24 [style = dashed, label="0"];
19->26 [style = bold, label=""];
12->14 [style = bold, label=""];
11->8 [style = solid, label="serviceInventoryName"];
3->13 [style = bold, label=""];
22->17 [style = bold, label=""];
30->27 [style = solid, label="instanceInventory"];
9->10 [style = solid, label="endpointInventoryName"];
14->19 [style = dashed, label="0"];
32->4 [style = bold, label=""];
9->12 [style = solid, label="endpointInventoryName"];
29->35 [style = bold, label=""];
31->17 [style = bold, label=""];
21->23 [style = bold, label=""];
11->12 [style = solid, label="serviceInventoryName"];
25->13 [style = solid, label="metaInAlarm"];
32->18 [style = solid, label="metricsName"];
13->18 [style = bold, label=""];
10->11 [style = bold, label=""];
}
