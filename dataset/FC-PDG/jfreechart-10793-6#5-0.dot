digraph {
0 [style = filled, label = "assertTrue(d1 != d2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "double(((( starts = new double((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@24517d@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "DefaultKeyedValueDataset d1 = new DefaultKeyedValueDataset(\"Test\",new Double(45.5))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "double(((( ends = new double((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@245186@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "DefaultKeyedValueDataset d1 = new DefaultKeyedValueDataset(\"Test\",45.5)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "DefaultIntervalCategoryDataset d1 = new DefaultIntervalCategoryDataset(new Comparable((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@245191,new Comparable((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@245196,DataUtils.createNumberArray2D(starts),DataUtils.createNumberArray2D(ends))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "d2.setStartValue(0,\"Category 1\",new Double(0.99))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertTrue(d1.equals(d2))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertTrue(d1 != d2)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "double(( starts_S1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@245155@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "d1.setStartValue(0,\"Category 1\",new Double(0.99))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "double(( starts_S2 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@24515f@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertTrue(d1.equals(d2))@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "double(( ends_S2 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@245173@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(d1.equals(d2))@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "DefaultIntervalCategoryDataset d2 = null@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "d2 = (DefaultIntervalCategoryDataset)d1.clone()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "DefaultKeyedValueDataset d2 = (DefaultKeyedValueDataset)d1.clone()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertFalse(d1.equals(d2))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "double(( ends_S1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@245169@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
2->5 [style = solid, label="d2"];
23->17 [style = solid, label="d2"];
12->11 [style = bold, label=""];
4->0 [style = solid, label="d1"];
15->10 [style = solid, label="d1"];
9->15 [style = solid, label="ends"];
4->2 [style = bold, label=""];
16->17 [style = bold, label=""];
15->19 [style = bold, label=""];
11->24 [style = bold, label=""];
12->9 [style = solid, label="ends_S1"];
4->6 [style = dashed, label="0"];
3->4 [style = bold, label=""];
21->18 [style = bold, label=""];
23->10 [style = solid, label="d2"];
6->2 [style = bold, label=""];
23->8 [style = solid, label="d2"];
23->14 [style = solid, label="d2"];
6->0 [style = solid, label="d1"];
20->8 [style = bold, label=""];
2->0 [style = bold, label=""];
18->22 [style = bold, label=""];
10->16 [style = bold, label=""];
9->15 [style = bold, label=""];
0->1 [style = bold, label=""];
22->12 [style = bold, label=""];
19->23 [style = bold, label=""];
7->6 [style = bold, label=""];
23->10 [style = bold, label=""];
22->24 [style = solid, label="starts_S2"];
2->0 [style = solid, label="d2"];
24->15 [style = solid, label="starts"];
18->24 [style = solid, label="starts_S1"];
13->14 [style = bold, label=""];
24->9 [style = bold, label=""];
8->13 [style = bold, label=""];
11->9 [style = solid, label="ends_S2"];
17->20 [style = bold, label=""];
}
