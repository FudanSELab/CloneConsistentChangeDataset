digraph {
70 [style = filled, label = "ContextPropertiesBuilder cpb@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "cpb.setIfNotEmpty(REST_produces,stringList(a.produces()))@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "apply['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "b.setIfNotEmpty(REST_consumes,stringList(a.consumes()))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "cpb.prependTo(RESTOP_path,v.substring(i).trim())@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "stringStream(a.defaultRequestHeaders()).map(null).forEach(null)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "stringStream(a.defaultRequestAttributes()).map(null).forEach(null)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "stringStream(a.path()).forEach(null)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "b.setIfNotEmpty(REST_maxInput,string(a.maxInput()))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "i == -1@@@31@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "stringStream(a.defaultFormData()).map(null).forEach(null)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "cpb.setIfNotEmpty(RESTOP_debug,string(a.debug()))@@@28@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "cpb.appendToIfNotEmpty(REST_defaultRequestHeaders,contentType(string(a.defaultContentType())))@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "stringStream(a.defaultResponseHeaders()).map(null).forEach(null)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "cpb.setIfNotEmpty(RESTOP_debug,string(a.debug()))@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "stringStream(a.defaultRequestHeaders()).map(null).forEach(null)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "b.setIfNotEmpty(RESTOP_debug,string(a.debug()))@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "cpb.set(RESTOP_httpMethod,v.substring(0,i).trim())@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "cpb.appendToIfNotEmpty(REST_defaultRequestHeaders,accept(string(a.defaultAccept())))@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "b.prependTo(REST_guards,reverse(a.guards()))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "cpb.set(REST_serializers,merge(ConverterUtils.toType(cpb.peek(REST_serializers),),a.serializers()))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "b.setIfNotEmpty(REST_produces,stringList(a.produces()))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "b.set(REST_serializers,merge(ConverterUtils.toType(b.peek(REST_serializers),),a.serializers()))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "cpb.setIfNotEmpty(REST_consumes,stringList(a.consumes()))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "cdStream(a.rolesDeclared()).forEach(null)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "b.prependTo(RESTOP_path,v.substring(i).trim())@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "apply['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "AnnotationInfo<RestPut> ai@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "cpb.setIfNotEmpty(RESTOP_clientVersion,a.clientVersion())@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "cpb.setIfNotEmpty(RESTOP_httpMethod,\"put\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "v != null@@@29@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "stringStream(a.defaultFormData()).map(null).forEach(null)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "VarResolverSession vr@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "b.prependTo(RESTOP_matchers,a.matchers())@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "cdStream(a.rolesDeclared()).forEach(null)@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "cpb.addToIfNotEmpty(REST_roleGuard,string(a.roleGuard()))@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "stringStream(a.defaultResponseHeaders()).map(null).forEach(null)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "cpb.set(REST_encoders,merge(ConverterUtils.toType(cpb.peek(REST_encoders),),a.encoders()))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "int i = v.indexOf(' ')@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "RestPut a = ai.getAnnotation()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "cpb.setIfNotEmpty(REST_defaultCharset,string(a.defaultCharset()))@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "cpb.prependTo(REST_guards,reverse(a.guards()))@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "RestOp a = ai.getAnnotation()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "cpb.set(REST_serializers,merge(ConverterUtils.toType(cpb.peek(REST_serializers),),a.serializers()))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "b.set(RESTOP_httpMethod,v.substring(0,i).trim())@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "stringStream(a.path()).forEach(null)@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "VarResolverSession vr@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "b.addToIfNotEmpty(REST_roleGuard,string(a.roleGuard()))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "b.set(REST_encoders,merge(ConverterUtils.toType(b.peek(REST_encoders),),a.encoders()))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "b.setIfNotEmpty(RESTOP_clientVersion,a.clientVersion())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "cpb.setIf(a.contextClass() != ,RESTOP_contextClass,a.contextClass())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "ContextPropertiesBuilder b@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
65 [style = filled, label = "b.setIfNotEmpty(RESTOP_httpMethod,string(a.method()))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "b.appendToIfNotEmpty(REST_defaultRequestHeaders,accept(string(a.defaultAccept())))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "cpb.set(RESTOP_httpMethod,v)@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
57 [style = filled, label = "b.prependTo(REST_converters,a.converters())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "cpb.setIfNotEmpty(REST_maxInput,string(a.maxInput()))@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "cpb.setIfNotEmpty(RESTOP_path,a.value())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "cpb.prependTo(RESTOP_matchers,a.matchers())@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "b.setIfNotEmpty(REST_defaultCharset,string(a.defaultCharset()))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "AnnotationInfo<RestOp> ai@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "AnnotationInfo<RestOp> ai@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "cpb.prependTo(REST_converters,a.converters())@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "b.setIf(a.contextClass() != ,RESTOP_contextClass,a.contextClass())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "ContextPropertiesBuilder cpb@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "cpb.set(REST_parsers,merge(ConverterUtils.toType(cpb.peek(REST_parsers),),a.parsers()))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "apply['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "stringStream(a.defaultQuery()).map(null).forEach(null)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "stringStream(a.defaultRequestAttributes()).map(null).forEach(null)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "stringStream(a.defaultQuery()).map(null).forEach(null)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "b.set(REST_parsers,merge(ConverterUtils.toType(b.peek(REST_parsers),),a.parsers()))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "b.appendToIfNotEmpty(REST_defaultRequestHeaders,contentType(string(a.defaultContentType())))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "b.set(RESTOP_httpMethod,v)@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17->25 [style = bold, label=""];
25->1 [style = bold, label=""];
56->64 [style = bold, label=""];
24->25 [style = dotted, label="true"];
24->17 [style = dotted, label="true"];
10->38 [style = dashed, label="0"];
34->2 [style = dotted, label="true"];
34->9 [style = dotted, label="true"];
25->43 [style = bold, label=""];
21->30 [style = bold, label=""];
25->29 [style = bold, label=""];
25->29 [style = dotted, label="true"];
25->1 [style = dotted, label="false"];
38->42 [style = bold, label=""];
45->48 [style = bold, label=""];
27->63 [style = dashed, label="0"];
33->49 [style = dashed, label="0"];
1->13 [style = bold, label=""];
15->29 [style = solid, label="v"];
65->51 [style = bold, label=""];
37->53 [style = bold, label=""];
15->24 [style = solid, label="v"];
63->55 [style = bold, label=""];
71->67 [style = bold, label=""];
8->54 [style = dashed, label="0"];
34->26 [style = bold, label=""];
6->50 [style = dashed, label="0"];
50->62 [style = bold, label=""];
24->17 [style = bold, label=""];
57->38 [style = bold, label=""];
40->26 [style = bold, label=""];
49->56 [style = bold, label=""];
9->60 [style = dashed, label="0"];
4->58 [style = dashed, label="0"];
32->11 [style = bold, label=""];
43->44 [style = bold, label=""];
19->62 [style = dashed, label="0"];
19->3 [style = bold, label=""];
12->22 [style = bold, label=""];
22->41 [style = dashed, label="0"];
28->57 [style = dashed, label="0"];
48->37 [style = bold, label=""];
10->31 [style = bold, label=""];
14->61 [style = dashed, label="0"];
1->43 [style = dashed, label="0"];
17->25 [style = solid, label="i"];
20->14 [style = bold, label=""];
34->7 [style = dotted, label="true"];
72->20 [style = bold, label=""];
40->52 [style = dotted, label="true"];
36->58 [style = bold, label=""];
23->35 [style = bold, label=""];
20->55 [style = dashed, label="0"];
13->44 [style = dashed, label="0"];
30->45 [style = dashed, label="0"];
26->27 [style = bold, label=""];
12->59 [style = dashed, label="0"];
31->33 [style = bold, label=""];
26->67 [style = dashed, label="0"];
18->37 [style = dashed, label="0"];
11->8 [style = bold, label=""];
9->70 [style = dashed, label="0"];
27->20 [style = bold, label=""];
14->6 [style = bold, label=""];
4->23 [style = bold, label=""];
21->46 [style = dashed, label="0"];
25->39 [style = bold, label=""];
35->15 [style = bold, label=""];
15->39 [style = solid, label="v"];
11->64 [style = dashed, label="0"];
23->15 [style = bold, label=""];
22->28 [style = bold, label=""];
31->42 [style = dashed, label="0"];
25->39 [style = dotted, label="true"];
71->68 [style = dotted, label="true"];
67->72 [style = bold, label=""];
16->53 [style = dashed, label="0"];
55->61 [style = bold, label=""];
71->69 [style = dotted, label="true"];
54->36 [style = bold, label=""];
26->63 [style = bold, label=""];
5->4 [style = bold, label=""];
3->21 [style = bold, label=""];
0->18 [style = bold, label=""];
33->32 [style = bold, label=""];
30->0 [style = bold, label=""];
62->47 [style = bold, label=""];
58->65 [style = bold, label=""];
18->16 [style = bold, label=""];
28->10 [style = bold, label=""];
29->39 [style = dashed, label="0"];
25->44 [style = dotted, label="false"];
40->60 [style = dotted, label="true"];
47->46 [style = bold, label=""];
5->66 [style = bold, label=""];
6->19 [style = bold, label=""];
64->54 [style = bold, label=""];
66->4 [style = bold, label=""];
5->36 [style = dashed, label="0"];
41->57 [style = bold, label=""];
35->51 [style = dashed, label="0"];
25->43 [style = dotted, label="false"];
25->13 [style = dotted, label="false"];
23->65 [style = dashed, label="0"];
71->70 [style = dotted, label="true"];
0->48 [style = dashed, label="0"];
53->59 [style = bold, label=""];
8->5 [style = bold, label=""];
32->56 [style = dashed, label="0"];
15->24 [style = bold, label=""];
61->50 [style = bold, label=""];
46->45 [style = bold, label=""];
42->49 [style = bold, label=""];
51->15 [style = bold, label=""];
16->12 [style = bold, label=""];
59->41 [style = bold, label=""];
3->47 [style = dashed, label="0"];
}
