digraph {
4 [style = filled, label = "overrideConnectableObservable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "overrideConnectableObservable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Observable.just(1).publish().autoConnect().test().assertResult(1)@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "RxJavaPlugins.setOnConnectableObservableAssembly(new Function<ConnectableObservable,ConnectableObservable>(){@Override public ConnectableObservable apply(ConnectableObservable co){return new ConnectableObservable(){@Override public void connect(Consumer connection){}@Override public void reset(){}@SuppressWarnings(\"unchecked\") @Override protected void subscribeActual(Observer observer){observer.onSubscribe(Disposable.empty())observer.onNext(10)observer.onComplete()}}}})@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "RxJavaPlugins.setOnConnectableFlowableAssembly(new Function<ConnectableFlowable,ConnectableFlowable>(){@Override public ConnectableFlowable apply(ConnectableFlowable co){return new ConnectableFlowable(){@Override public void connect(Consumer connection){}@Override public void reset(){}@SuppressWarnings(\"unchecked\") @Override protected void subscribeActual(Subscriber subscriber){subscriber.onSubscribe(new ScalarSubscription(subscriber,10))}}}})@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "{RxJavaPlugins.reset()}@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Flowable.just(1).publish().autoConnect().test().assertResult(10)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Flowable.just(1).publish().autoConnect().test().assertResult(1)@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Observable.just(1).publish().autoConnect().test().assertResult(10)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "{RxJavaPlugins.reset()}@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "overrideConnectableFlowable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7->6 [style = bold, label=""];
5->0 [style = bold, label=""];
0->7 [style = dashed, label="0"];
3->6 [style = dashed, label="0"];
0->3 [style = bold, label=""];
1->10 [style = dashed, label="0"];
2->1 [style = bold, label=""];
6->8 [style = bold, label=""];
8->10 [style = bold, label=""];
3->2 [style = bold, label=""];
4->0 [style = bold, label=""];
9->7 [style = bold, label=""];
}
