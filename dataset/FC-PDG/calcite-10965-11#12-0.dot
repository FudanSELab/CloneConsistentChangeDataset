digraph {
7 [style = filled, label = "builder.addRuleClass()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final String sql = \"select\" + \" count(*) over(partition by empno order by sal) as count1,\" + \" count(*) over(partition by deptno order by sal) as count2,\" + \" sum(deptno) over(partition by empno order by sal) as sum1,\" + \" sum(deptno) over(partition by deptno order by sal) as sum2\" + \"from emp\"@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "sql(sql).withPre(preProgram).with(hepPlanner).check()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "hepPlanner.addRule(CoreRules.PROJECT_TO_LOGICAL_PROJECT_AND_WINDOW)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testProjectToWindowRuleForMultipleWindows['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "HepProgram preProgram = new HepProgramBuilder().build()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "HepProgramBuilder builder = new HepProgramBuilder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final String sql = \"select count(*) over (w), count(*) over w\" + \"from emp\" + \"window w as (partition by empno order by empno)\"@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testProjectToWindowRuleForMultipleWindows['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "HepPlanner hepPlanner = new HepPlanner(builder.build())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "sql(sql).with(hepPlanner).check()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "testWindowInParenthesis['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "sql(sql).with(hepPlanner).check()@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
3->9 [style = bold, label=""];
2->11 [style = dashed, label="0"];
1->4 [style = bold, label=""];
5->11 [style = bold, label=""];
12->10 [style = bold, label=""];
6->0 [style = bold, label=""];
7->1 [style = bold, label=""];
3->2 [style = bold, label=""];
2->9 [style = dashed, label="0"];
4->5 [style = bold, label=""];
10->7 [style = bold, label=""];
8->7 [style = bold, label=""];
0->7 [style = bold, label=""];
}
