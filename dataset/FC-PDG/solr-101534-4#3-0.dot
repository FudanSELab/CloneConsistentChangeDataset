digraph {
47 [style = filled, label = "func.streamObjects(null)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertFalse(values3.hasNext())@@@52@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "func.streamObjects(null)@@@49@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "val.setValues()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertFalse(values1.hasNext())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Iterator<Object> values2 = Arrays.asList(new Date(12312),new Long(213123L),new Date(12312)).iterator()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "fill.setValue(new Boolean(false)).setExists(true)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "TestAnalyticsValue remover = new TestAnalyticsValue()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "multiValueObjectTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "val.setValues(\"asdfs\",new Date(12312),new Long(213123L),new Date(12312))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "func.streamObjects(null)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "remover.setValue(new Date(12312)).setExists(true)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "TestAnalyticsValueStream val = new TestAnalyticsValueStream()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "val.setValues(new Date(3),\"3\",3F)@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "val.setValues(\"asdfs\",new Date(12312),new Long(213123L),new Date(12312))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "val.setValues()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "TestAnalyticsValue fill = new TestAnalyticsValue()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "AnalyticsValueStream func = ReplaceFunction.creatorFunction.apply(new AnalyticsValueStream((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@f8e9cc)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "remover.setValue(new Date(4)).setExists(true)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "fill.setExists(false)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "TestAnalyticsValue comp = new TestAnalyticsValue()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "func.streamObjects(null)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertFalse(values1.hasNext())@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "func.streamObjects(null)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "val.setValues(\"asdfs\",new Date(12312),new Long(213123L),new Date(12312))@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "Iterator<Object> values3 = Arrays.asList(new Date(3),\"3\",3F).iterator()@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "val.setValues(\"asdfs\",new Date(12312),new Long(213123L),new Date(12312))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "comp.setValue(new Date(12312)).setExists(true)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "comp.setExists(false)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "fill.setValue(\"won't show up\").setExists(true)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "val.setValues(\"asdfs\",new Date(12312),213123L,new Date(12312))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "comp.setValue(\"asdfs\").setExists(true)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Iterator<Object> values2 = Arrays.asList(\"asdfs\",new Date(12312),213123L,new Date(12312)).iterator()@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "val.setValues(\"asdfs\",new Date(12312),new Long(213123L),new Date(12312))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "fill.setValue(\"won't show up\").setExists(true)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertFalse(values3.hasNext())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "func.streamObjects(null)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "multiValueObjectTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "remover.setExists(false)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "val.setValues()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "fill.setExists(false)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "func.streamObjects(null)@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "val.setValues(new Date(3),\"3\",new Float(3F))@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "Iterator<Object> values3 = Arrays.asList(\"asdfs\",new Boolean(false),new Long(213123L),new Boolean(false)).iterator()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "func.streamObjects(null)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "remover.setValue(\"doesn't matter\").setExists(true)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "multiValueObjectTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "comp.setExists(false)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "assertFalse(values2.hasNext())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "val.setValues()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "remover.setValue(new Date(4)).setExists(true)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Iterator<Object> values1 = Arrays.asList(\"asdfs\",213123L).iterator()@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "Iterator<Object> values1 = Arrays.asList(\"asdfs\",new Date(12312),new Long(213123L),new Date(12312)).iterator()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "comp.setValue(\"doesn't matter\").setExists(true)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "val.setValues(\"asdfs\",new Date(12312),213123L,new Date(12312))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "AnalyticsValueStream func = RemoveFunction.creatorFunction.apply(new AnalyticsValueStream((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@f8e8ee)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Iterator<Object> values1 = Arrays.asList(\"asdfs\",new Long(213123L)).iterator()@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "Iterator<Object> values2 = Arrays.asList(\"asdfs\",new Date(12312),new Long(213123L),new Date(12312)).iterator()@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "Iterator<Object> values3 = Arrays.asList(new Date(3),\"3\",new Float(3F)).iterator()@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18->3 [style = bold, label=""];
56->52 [style = bold, label=""];
19->55 [style = bold, label=""];
20->9 [style = bold, label=""];
10->24 [style = bold, label=""];
7->35 [style = bold, label=""];
55->51 [style = bold, label=""];
32->6 [style = bold, label=""];
28->14 [style = bold, label=""];
6->29 [style = bold, label=""];
21->2 [style = bold, label=""];
10->41 [style = dashed, label="0"];
45->22 [style = bold, label=""];
15->20 [style = bold, label=""];
51->47 [style = bold, label=""];
23->12 [style = bold, label=""];
19->28 [style = bold, label=""];
33->7 [style = bold, label=""];
50->19 [style = bold, label=""];
3->11 [style = bold, label=""];
26->14 [style = bold, label=""];
2->18 [style = bold, label=""];
31->4 [style = bold, label=""];
6->53 [style = dashed, label="0"];
57->45 [style = bold, label=""];
25->7 [style = bold, label=""];
42->40 [style = bold, label=""];
46->41 [style = bold, label=""];
4->0 [style = bold, label=""];
8->17 [style = bold, label=""];
5->32 [style = dashed, label="0"];
27->46 [style = dashed, label="0"];
5->6 [style = bold, label=""];
10->34 [style = bold, label=""];
13->31 [style = dashed, label="0"];
40->3 [style = bold, label=""];
19->26 [style = bold, label=""];
30->10 [style = bold, label=""];
58->46 [style = bold, label=""];
11->8 [style = bold, label=""];
27->30 [style = dashed, label="0"];
53->43 [style = bold, label=""];
24->34 [style = dashed, label="0"];
52->15 [style = bold, label=""];
44->54 [style = bold, label=""];
49->37 [style = bold, label=""];
16->27 [style = bold, label=""];
22->16 [style = bold, label=""];
35->42 [style = bold, label=""];
38->16 [style = bold, label=""];
26->28 [style = dashed, label="0"];
39->53 [style = bold, label=""];
42->40 [style = solid, label="fill"];
7->2 [style = solid, label="val"];
6->1 [style = bold, label=""];
3->44 [style = bold, label=""];
43->38 [style = bold, label=""];
27->10 [style = bold, label=""];
16->30 [style = bold, label=""];
14->31 [style = bold, label=""];
15->48 [style = bold, label=""];
22->39 [style = bold, label=""];
7->40 [style = solid, label="val"];
34->23 [style = bold, label=""];
17->55 [style = dashed, label="0"];
21->35 [style = dashed, label="0"];
14->13 [style = bold, label=""];
0->32 [style = bold, label=""];
16->58 [style = bold, label=""];
0->5 [style = bold, label=""];
37->57 [style = bold, label=""];
24->23 [style = bold, label=""];
21->2 [style = solid, label="remover"];
12->15 [style = bold, label=""];
1->29 [style = dashed, label="0"];
3->44 [style = dashed, label="0"];
41->56 [style = bold, label=""];
17->19 [style = bold, label=""];
1->22 [style = bold, label=""];
54->50 [style = bold, label=""];
4->49 [style = bold, label=""];
36->7 [style = bold, label=""];
35->40 [style = solid, label="comp"];
7->21 [style = bold, label=""];
14->49 [style = dashed, label="0"];
29->22 [style = bold, label=""];
13->4 [style = bold, label=""];
47->4 [style = bold, label=""];
}
