digraph {
33 [style = filled, label = "indexAbstraction.getIndices()@@@87@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "List<String> expressions = Arrays.asList(indexExpressions)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "expression.equals(Metadata.ALL)@@@43@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "indexExpressions(0(.equals(Metadata.ALL)@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "failNoIndices@@@57@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "indexAbstraction.getIndices().size() > 1 && !options.allowAliasesToMultipleIndices()@@@84@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "return concreteIndices.toArray(new Index(((()@@@108@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "IndicesOptions options@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "int i = 0@@@86@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "return false@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "throw aliasesNotSupportedException(expression)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "concreteIndices.add(writeIndex.getIndex())@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "expressions = expressionResolver.resolve(context,expressions)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "shouldTrackConcreteIndex(context,options,index)@@@93@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "IndexAbstraction indexAbstraction = metadata.getIndicesLookup().get(expression)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "return true@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "String indexExpressions@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "excludedDataStreams@@@102@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "IndexNotFoundException infe@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final Set<Index> concreteIndices = new HashSet<>(expressions.size())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "infe = new IndexNotFoundException(\"no indices exist\",(String)null)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "indexExpressions.length == 1@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "aliasOrIndexExists['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "indexAbstraction == null@@@40@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "String expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "concreteIndices['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "IndexNotFoundException infe@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Metadata metadata = context.getState().metadata()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "addIndex(writeIndex,context)@@@79@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "return false@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "infe = new IndexNotFoundException((String)null)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "excludedDataStreams = true@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "addIndex(writeIndex,context)@@@73@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "IndexMetadata index@@@92@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
61 [style = filled, label = "infe.setResources(\"index_expression\",indexExpressions)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "Context context@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.ALIAS && context.isResolveToWriteIndex()@@@68@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "throw new IllegalArgumentException(\"no write index is defined for alias (\" + indexAbstraction.getName() + \"(.\" + \" The write index may be explicitly disabled using is_write_index=false or the alias points to multiple\" + \" indices without one being designated as a write index\")@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "Metadata metadata@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "indexAbstraction.getIndices()@@@87@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "Context context@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "infe = new IndexNotFoundException((String)null)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "indexAbstraction.getIndices()@@@92@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.ALIAS && context.getOptions().ignoreAliases()@@@56@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "infe = new IndexNotFoundException(expression)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "IndexMetadata writeIndex = indexAbstraction.getWriteIndex()@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.DATA_STREAM && context.includeDataStreams() == false@@@64@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "!options.allowNoIndices()@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final boolean failNoIndices = indexExpressions.length == 1? !options.allowNoIndices(): !options.ignoreUnavailable()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "concreteIndices['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "infe = new IndexNotFoundException(\"no indices exist\",expression)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "return Index.EMPTY_ARRAY@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "IndexAbstraction indexAbstraction = metadata.getIndicesLookup().get(expression)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "indexExpressions == null || indexExpressions.length == 0@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "concreteIndices.add(writeIndex.getIndex())@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "throw infe@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "throw new IllegalArgumentException(indexAbstraction.getType().getDisplayName() + \" (\" + expression + \"( has more than one index associated with it \" + Arrays.toString(indexNames) + \", can't execute a single index op\")@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "indexAbstraction.getIndices()@@@92@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "throw infe@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "String(( indexNames = new String((((@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "infe.setResources(\"index_expression\",indexExpressions)@@@101@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "failNoIndices@@@41@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.ALIAS && options.ignoreAliases()@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "IndexNotFoundException infe = new IndexNotFoundException((String)null)@@@100@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String indexExpressions@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "indexNames(i++( = indexMetadata.getIndex().getName()@@@88@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "indexAbstraction == null@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "infe.addMetadata(EXCLUDED_DATA_STREAMS_KEY,\"true\")@@@103@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "writeIndex == null@@@70@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "IndexMetadata writeIndex = indexAbstraction.getWriteIndex()@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "infe.setResources(\"index_expression\",expression)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "concreteIndices.add(index.getIndex())@@@94@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "options.allowNoIndices() == false && concreteIndices.isEmpty()@@@99@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "IndicesOptions options = context.getOptions()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "expressions.isEmpty()@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "boolean excludedDataStreams = false@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "IndexMetadata indexMetadata@@@87@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
66 [style = filled, label = "checkSystemIndexAccess(context,metadata,concreteIndices,indexExpressions)@@@107@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "indexExpressions = new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13a28c1@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "return false@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.DATA_STREAM && context.includeDataStreams() == false@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.DATA_STREAM && context.isResolveToWriteIndex()@@@77@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "throw infe@@@105@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38->26 [style = bold, label=""];
59->56 [style = bold, label=""];
58->22 [style = bold, label=""];
67->28 [style = solid, label="context"];
18->56 [style = bold, label=""];
2->4 [style = bold, label=""];
46->32 [style = solid, label="expressions"];
50->28 [style = bold, label=""];
56->10 [style = dotted, label="true"];
15->1 [style = dotted, label="true"];
19->48 [style = dotted, label="true"];
60->10 [style = solid, label="indexExpressions"];
19->7 [style = dotted, label="false"];
43->12 [style = bold, label=""];
54->56 [style = bold, label=""];
14->61 [style = solid, label="indexExpressions"];
64->60 [style = bold, label=""];
12->81 [style = dashed, label="0"];
7->44 [style = dotted, label="true"];
51->21 [style = bold, label=""];
53->43 [style = bold, label=""];
29->22 [style = solid, label="failNoIndices"];
14->10 [style = solid, label="indexExpressions"];
41->51 [style = bold, label=""];
48->56 [style = bold, label=""];
28->43 [style = bold, label=""];
42->2 [style = bold, label=""];
21->43 [style = bold, label=""];
82->74 [style = bold, label=""];
57->38 [style = bold, label=""];
28->56 [style = bold, label=""];
27->55 [style = bold, label=""];
3->25 [style = bold, label=""];
1->61 [style = solid, label="indexExpressions"];
3->62 [style = solid, label="infe"];
67->48 [style = solid, label="context"];
17->8 [style = bold, label=""];
19->39 [style = dotted, label="false"];
60->61 [style = solid, label="indexExpressions"];
47->20 [style = bold, label=""];
54->62 [style = dotted, label="true"];
7->48 [style = bold, label=""];
19->7 [style = bold, label=""];
74->75 [style = bold, label=""];
7->23 [style = dotted, label="true"];
12->58 [style = dotted, label="false"];
11->5 [style = dotted, label="true"];
14->64 [style = solid, label="indexExpressions"];
56->57 [style = dotted, label="true"];
19->69 [style = dotted, label="false"];
36->45 [style = bold, label=""];
55->19 [style = dotted, label="false"];
27->59 [style = dotted, label="true"];
62->55 [style = bold, label=""];
7->30 [style = bold, label=""];
36->41 [style = dotted, label="true"];
54->0 [style = bold, label=""];
42->2 [style = dotted, label="true"];
54->25 [style = dotted, label="true"];
57->52 [style = bold, label=""];
36->45 [style = dotted, label="false"];
6->42 [style = bold, label=""];
60->66 [style = solid, label="indexExpressions"];
28->35 [style = dotted, label="true"];
38->66 [style = bold, label=""];
8->41 [style = solid, label="infe"];
13->31 [style = bold, label=""];
34->51 [style = bold, label=""];
5->41 [style = solid, label="infe"];
59->43 [style = bold, label=""];
59->57 [style = solid, label="excludedDataStreams"];
7->47 [style = dotted, label="true"];
56->38 [style = dotted, label="true"];
1->46 [style = solid, label="indexExpressions"];
67->32 [style = solid, label="context"];
6->4 [style = solid, label="writeIndex"];
75->72 [style = bold, label=""];
21->66 [style = solid, label="concreteIndices"];
13->3 [style = dotted, label="false"];
19->50 [style = bold, label=""];
80->71 [style = solid, label="expression"];
4->56 [style = bold, label=""];
64->24 [style = bold, label=""];
58->27 [style = dotted, label="false"];
22->56 [style = bold, label=""];
27->59 [style = bold, label=""];
55->6 [style = bold, label=""];
22->43 [style = bold, label=""];
58->27 [style = bold, label=""];
18->43 [style = bold, label=""];
5->61 [style = bold, label=""];
17->11 [style = bold, label=""];
12->54 [style = bold, label=""];
1->64 [style = solid, label="indexExpressions"];
51->57 [style = solid, label="excludedDataStreams"];
17->11 [style = dotted, label="true"];
7->33 [style = dotted, label="true"];
32->34 [style = bold, label=""];
11->37 [style = bold, label=""];
48->43 [style = bold, label=""];
63->10 [style = bold, label=""];
79->70 [style = bold, label=""];
19->50 [style = dotted, label="true"];
66->26 [style = bold, label=""];
7->30 [style = dotted, label="true"];
56->63 [style = dotted, label="true"];
31->25 [style = bold, label=""];
50->28 [style = solid, label="writeIndex"];
48->53 [style = bold, label=""];
8->61 [style = bold, label=""];
76->78 [style = dotted, label="true"];
76->73 [style = dotted, label="true"];
42->4 [style = bold, label=""];
37->61 [style = bold, label=""];
35->43 [style = bold, label=""];
43->12 [style = solid, label="indexAbstraction"];
57->52 [style = dotted, label="true"];
10->57 [style = bold, label=""];
22->16 [style = bold, label=""];
4->18 [style = dotted, label="true"];
34->36 [style = bold, label=""];
67->66 [style = solid, label="context"];
68->14 [style = dotted, label="true"];
12->58 [style = bold, label=""];
36->49 [style = bold, label=""];
63->38 [style = solid, label="infe"];
81->79 [style = dotted, label="true"];
70->82 [style = bold, label=""];
58->22 [style = dotted, label="true"];
70->74 [style = bold, label=""];
12->54 [style = dotted, label="true"];
53->48 [style = bold, label=""];
76->77 [style = dotted, label="true"];
44->47 [style = bold, label=""];
54->0 [style = dotted, label="true"];
76->71 [style = bold, label=""];
24->9 [style = bold, label=""];
13->3 [style = bold, label=""];
49->17 [style = bold, label=""];
55->6 [style = dotted, label="true"];
9->29 [style = bold, label=""];
60->24 [style = bold, label=""];
36->49 [style = dotted, label="true"];
15->14 [style = dotted, label="true"];
81->70 [style = bold, label=""];
56->26 [style = bold, label=""];
48->53 [style = dotted, label="true"];
11->5 [style = bold, label=""];
34->36 [style = dotted, label="true"];
29->54 [style = solid, label="failNoIndices"];
4->18 [style = bold, label=""];
17->8 [style = dotted, label="false"];
24->66 [style = solid, label="metadata"];
29->46 [style = bold, label=""];
67->4 [style = solid, label="context"];
11->37 [style = dotted, label="false"];
25->62 [style = bold, label=""];
16->55 [style = bold, label=""];
28->35 [style = bold, label=""];
13->31 [style = dotted, label="true"];
54->13 [style = dotted, label="true"];
35->56 [style = bold, label=""];
22->16 [style = dotted, label="true"];
6->42 [style = solid, label="writeIndex"];
14->48 [style = solid, label="context"];
15->64 [style = bold, label=""];
61->41 [style = bold, label=""];
46->32 [style = bold, label=""];
20->48 [style = bold, label=""];
53->56 [style = bold, label=""];
55->4 [style = dotted, label="true"];
14->4 [style = solid, label="context"];
70->82 [style = dotted, label="true"];
68->64 [style = bold, label=""];
1->10 [style = solid, label="indexExpressions"];
31->62 [style = solid, label="infe"];
47->20 [style = solid, label="indexNames"];
19->40 [style = dotted, label="false"];
64->60 [style = dotted, label="true"];
0->13 [style = bold, label=""];
52->38 [style = bold, label=""];
36->17 [style = dotted, label="true"];
56->66 [style = bold, label=""];
55->42 [style = dotted, label="true"];
71->81 [style = solid, label="indexAbstraction"];
14->32 [style = solid, label="context"];
60->46 [style = solid, label="indexExpressions"];
7->65 [style = dotted, label="true"];
9->48 [style = solid, label="options"];
45->51 [style = bold, label=""];
14->28 [style = solid, label="context"];
74->75 [style = dotted, label="true"];
14->46 [style = solid, label="indexExpressions"];
36->61 [style = dotted, label="true"];
76->80 [style = dotted, label="true"];
81->79 [style = bold, label=""];
54->43 [style = bold, label=""];
4->43 [style = bold, label=""];
14->80 [style = dashed, label="0"];
14->66 [style = solid, label="indexExpressions"];
68->67 [style = dotted, label="true"];
56->63 [style = bold, label=""];
71->81 [style = bold, label=""];
74->72 [style = bold, label=""];
30->44 [style = bold, label=""];
7->20 [style = dotted, label="true"];
55->19 [style = bold, label=""];
19->28 [style = dotted, label="true"];
37->41 [style = solid, label="infe"];
}
